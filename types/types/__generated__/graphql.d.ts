import type { GraphQLClient, RequestOptions } from 'graphql-request';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]: Maybe<T[SubKey]>;
};
export type MakeEmpty<T extends {
    [key: string]: unknown;
}, K extends keyof T> = {
    [_ in K]?: never;
};
export type Incremental<T> = T | {
    [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never;
};
type GraphQLClientRequestHeaders = RequestOptions['requestHeaders'];
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
    ID: {
        input: string;
        output: string;
    };
    String: {
        input: string;
        output: string;
    };
    Boolean: {
        input: boolean;
        output: boolean;
    };
    Int: {
        input: number;
        output: number;
    };
    Float: {
        input: number;
        output: number;
    };
    Base64Clob: {
        input: any;
        output: any;
    };
    Clob: {
        input: any;
        output: any;
    };
    Date: {
        input: any;
        output: any;
    };
    Datetime: {
        input: any;
        output: any;
    };
    DomainName: {
        input: any;
        output: any;
    };
    EmailAddress: {
        input: any;
        output: any;
    };
    EpochTimestamp: {
        input: any;
        output: any;
    };
    Geopoint: {
        input: any;
        output: any;
    };
    HtmlHexColor: {
        input: any;
        output: any;
    };
    HttpsUrl: {
        input: any;
        output: any;
    };
    IP: {
        input: any;
        output: any;
    };
    Int64Bit: {
        input: any;
        output: any;
    };
    IpRange: {
        input: any;
        output: any;
    };
    Latitude: {
        input: any;
        output: any;
    };
    Longitude: {
        input: any;
        output: any;
    };
    MacAddress: {
        input: any;
        output: any;
    };
    Numeric: {
        input: any;
        output: any;
    };
    Port: {
        input: any;
        output: any;
    };
    SubnetScalar: {
        input: any;
        output: any;
    };
    Text: {
        input: any;
        output: any;
    };
    Time: {
        input: any;
        output: any;
    };
    URL: {
        input: any;
        output: any;
    };
};
/** An access log history on an entity. */
export type AccessLog = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AccessLog';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** The date and time that this entity was accessed. */
    access_datetime: Scalars['Datetime']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The entity that this `AccessLog` entry was generated for. */
    accessloggable?: Maybe<AccessloggableInterface>;
    /** The ID of the entity that this access log belongs to. */
    accessloggable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The entity that this access log belongs to. */
    accessloggable_type?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity that this access log belongs to. */
    entity_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The entity that this access log belongs to. */
    entity_name?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of the user that accessed this entity. */
    user_id: Scalars['Int64Bit']['output'];
};
/** An access log history on an entity. */
export type AccessLogAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An access log history on an entity. */
export type AccessLogAccessloggableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An access log history on an entity. */
export type AccessLogLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An access log history on an entity. */
export type AccessLogNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An access log history on an entity. */
export type AccessLogUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `AccessLogConnection` type. */
export type AccessLogConnection = {
    __typename: 'AccessLogConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccessLog>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that has `AccessLog` entries associated with it. */
export type AccessloggableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A customer account. */
export type Account = AccessloggableInterface & AddressableInterface & ContactableInterface & CustomfielddataableInterface & EmailableInterface & FileableInterface & IpassignmentableInterface & IpassignmenthistoryableInterface & JobbableInterface & LoggableInterface & NoteableInterface & RecentitemableInterface & SearchableInterface & TaskableInterface & TicketableInterface & {
    __typename: 'Account';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Parameters that define the billing settings for an `Account`. */
    account_billing_parameter?: Maybe<AccountBillingParameter>;
    /** A tracked event that has occurred for an `Account`. */
    account_events: AccountEventConnection;
    /** An account group. */
    account_groups: AccountGroupConnection;
    /** The relationship between an `Account` and a `Service`. */
    account_services: AccountServiceConnection;
    /** The status of an account. */
    account_status?: Maybe<AccountStatus>;
    /** The ID of an AccountStatus. */
    account_status_id: Scalars['Int64Bit']['output'];
    /** The account type. */
    account_type?: Maybe<AccountType>;
    /** The ID of an AccountType. */
    account_type_id: Scalars['Int64Bit']['output'];
    /** The date an account was first activated. */
    activation_date?: Maybe<Scalars['Date']['output']>;
    /** The time an account was first activated. */
    activation_time?: Maybe<Scalars['Time']['output']>;
    /** A geographical address. */
    addresses: AddressConnection;
    /** A bank account. */
    bank_accounts: BankAccountConnection;
    /** A call detail record (CDR). */
    call_detail_records: CallDetailRecordConnection;
    /** A call log. */
    call_logs: CallLogConnection;
    /** A list of `Account`s that this `Account` is a parent of. */
    child_accounts: AccountConnection;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** A contact person. */
    contacts: ContactConnection;
    /** A contract. */
    contracts: ContractConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A credit card. */
    credit_cards: CreditCardConnection;
    /** The application of a `Discount` or `Payment` against an `Invoice`. */
    credits: CreditConnection;
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** A data usage history entry. */
    data_usage_histories: DataUsageHistoryConnection;
    /** The percentage of the data usage cap that this account has consumed this month, taking into account any data usage top offs. */
    data_usage_percentage?: Maybe<Scalars['Int']['output']>;
    /** A data usage top off. */
    data_usage_top_offs: DataUsageTopOffConnection;
    /** A debit. */
    debits: DebitConnection;
    /** A historical record of a direct inward dial (DID) assignment. */
    did_assignment_histories: DidAssignmentHistoryConnection;
    /** A direct inward dial (DID) assignment. */
    did_assignments: DidAssignmentConnection;
    /** The `Account` disconnections log. */
    disconnection_logs: DisconnectionLogConnection;
    /** A discount. */
    discounts: DiscountConnection;
    /** An email. */
    emails: EmailConnection;
    /** A file. */
    files: FileConnection;
    /** A geographical tax zone. */
    geo_tax_zones: GeoTaxZoneConnection;
    /** A geo-point. */
    geopoint?: Maybe<Scalars['Geopoint']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoices: InvoiceConnection;
    /** A historical record of an IP assignment. */
    ip_assignment_histories: IpAssignmentHistoryConnection;
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** Whether or not this account is delinquent. */
    is_delinquent: Scalars['Boolean']['output'];
    /** A job, typically in the field. */
    jobs: JobConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A record of a monthly billing cycle. */
    monthly_billing_completions: MonthlyBillingCompletionConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** The next date this service will bill. If this is null, it will bill on the next account billing date. */
    next_bill_date?: Maybe<Scalars['Date']['output']>;
    /** The next recurring charge amount for an account. This is the sum of data, expiring, recurring, and voice services of an account for this billing cycle, including tax. */
    next_recurring_charge_amount?: Maybe<Scalars['Int']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** The `Account` that is a parent of this `Account`. */
    parent_account?: Maybe<Account>;
    /** The ID of the `Account` that is this `Account`s master. */
    parent_account_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A payment. */
    payments: PaymentConnection;
    /** A RADIUS account. */
    radius_accounts: RadiusAccountConnection;
    /** An `Account` event that is run at a specific time. */
    scheduled_events: ScheduledEventConnection;
    /** A `ServiceableAddressAccountAssignmentHistory` for accounts and addresses. */
    serviceable_address_account_assignment_histories: ServiceableAddressAccountAssignmentHistoryConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A task. */
    tasks: TaskConnection;
    /** A tax exemption. */
    tax_exemptions: TaxExemptionConnection;
    /** An override to the default taxation rate. */
    tax_overrides: TaxOverrideConnection;
    /** A ticket. */
    tickets: TicketConnection;
    /** A MAC address that is not recorded in the inventory system. */
    uninventoried_mac_addresses: UninventoriedMacAddressConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The data cap `TriggeredMessages` sent to this `Account` for the current billing cycle. */
    usage_triggered_messages: TriggeredMessageConnection;
};
/** A customer account. */
export type AccountAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountAccount_Billing_ParameterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    grace_until?: InputMaybe<Scalars['Date']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountAccount_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['String']['input']>;
    event?: InputMaybe<AccountUpdateEvent>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountAccount_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountAccount_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountAccount_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountAccount_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A customer account. */
export type AccountBank_AccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    bank_account_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    bank_account_type?: InputMaybe<BankAccountType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_account_number?: InputMaybe<Scalars['String']['input']>;
    name_on_account?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    routing_number?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountCall_Detail_RecordsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Float']['input']>;
    charge_rate?: InputMaybe<Scalars['Float']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    direction?: InputMaybe<CallDetailRecordDirection>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    length_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    matched_prefix?: InputMaybe<Scalars['String']['input']>;
    monthly_billing_completion_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    originating_number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix_type?: InputMaybe<CallDetailRecordPrefixType>;
    receiving_number?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    started_at?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountCall_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subject?: InputMaybe<Scalars['String']['input']>;
    time_in_seconds?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountChild_AccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A customer account. */
export type AccountContactsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A customer account. */
export type AccountContractsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_message?: InputMaybe<Scalars['Text']['input']>;
    expiration_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    handwritten_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    unique_link_key?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountCredit_CardsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credit_card_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    credit_card_type?: InputMaybe<CreditCardType>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    expiration_month?: InputMaybe<Scalars['Int']['input']>;
    expiration_year?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_number?: InputMaybe<Scalars['String']['input']>;
    name_on_card?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountCreditsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creditable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    creditable_type?: InputMaybe<CreditableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A customer account. */
export type AccountData_Usage_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billable_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    billable_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_time?: InputMaybe<Scalars['Datetime']['input']>;
    free_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    free_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_cap_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_available_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_remainder_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_unconsumed_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_used_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Datetime']['input']>;
    top_off_total_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountData_Usage_Top_OffsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_history_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountDebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountDid_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountDid_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountDisconnection_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnected_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnected_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    serviceable_address_reference_record?: InputMaybe<Scalars['Text']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountDiscountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountGeo_Tax_ZonesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
    zip_partial_match?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A customer account. */
export type AccountInvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountIp_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    ipassignmenthistoryable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmenthistoryable_type?: InputMaybe<IpassignmenthistoryableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    unique_identifier?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountJobsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completed_successfully?: InputMaybe<Scalars['Boolean']['input']>;
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_type?: InputMaybe<JobbableType>;
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    skips_validation?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountMonthly_Billing_CompletionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountParent_AccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountPaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountRadius_AccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    password?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A customer account. */
export type AccountScheduled_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    datetime?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    event?: InputMaybe<ScheduledEventEvent>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_event_object_id?: InputMaybe<Scalars['String']['input']>;
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountServiceable_Address_Account_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountTax_ExemptionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jurisdictions?: InputMaybe<Array<InputMaybe<TaxJurisdiction>>>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountTax_OverridesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A customer account. */
export type AccountUninventoried_Mac_AddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mac_address?: InputMaybe<Scalars['MacAddress']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A customer account. */
export type AccountUsage_Triggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Parameters that define the billing settings for an `Account`. */
export type AccountBillingParameter = AccessloggableInterface & LoggableInterface & {
    __typename: 'AccountBillingParameter';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** Whether or not to aggregate invoice taxes instead of printing with each charge. */
    aggregate_invoice_taxes: Scalars['Boolean']['output'];
    /** Whether or not to aggregate linked debits on Anchor invoices. */
    aggregate_linked_debits: Scalars['Boolean']['output'];
    /** Determines if delinquency settings on an Anchor default is applied only to the Anchor account or the Linked accounts as well. */
    anchor_delinquency_logic?: Maybe<AnchorDelinquencyLogic>;
    /** If `invoice_day` is not null, this allows you to select whether `auto_pay_days` is calculated from the billing day, or the invoice day. */
    auto_pay_day: BillingParameterDayOption;
    /** The number of days after `auto_pay_day` that auto pay runs for an invoice. */
    auto_pay_days: Scalars['Int']['output'];
    /** The day that billing runs. */
    bill_day?: Maybe<Scalars['Int']['output']>;
    /** Whether the account bill and invoice day are fixed, the account activation day is used as bill day, or the account activation day is used as the invoice day. */
    bill_day_mode: BillDayModeOption;
    /** The type of bill this account receives. */
    bill_mode: BillMode;
    /** Default billing settings that are applied to some accounts on creation. */
    billing_default?: Maybe<BillingDefault>;
    /** The ID of a BillingDefault. */
    billing_default_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** If `switch_status_after_delinquency` is `true`, then this is the number of days of delinquency to allow before the status switch. */
    days_of_delinquency_for_status_switch?: Maybe<Scalars['Int']['output']>;
    /** Determines if the billing parameters apply by account type or for anchor / linked types. */
    default_for: BillingDefaultFor;
    /** The status that an `Account` is moved into after a certain length of delinquency. */
    delinquency_account_status?: Maybe<AccountStatus>;
    /** If `switch_status_after_delinquency` is true, this is the account status that the account will be moved into after `days_of_delinquency_for_status_switch` days of delinquency. */
    delinquency_account_status_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The `AccountStatus` an account is moved back into after no longer being delinquent, if it is currently in the delinquency account status defined on the `AccountBillingParameter`. */
    delinquency_removal_account_status?: Maybe<AccountStatus>;
    /** If `switch_status_after_delinquency` is `true`, then this is the status the account will be moved back into if delinquency is cleared while the account is set to the `delinquency_account_status_id` account status. */
    delinquency_removal_account_status_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The number of days after the invoice date that it is due. */
    due_days: Scalars['Int']['output'];
    /** If `invoice_day` is not null, this allows you to select whether `due_days` is calculated from the billing day, or the invoice day. */
    due_days_day: BillingParameterDayOption;
    /** The number of days after the invoice due date that the invoice is marked delinquent. */
    grace_days: Scalars['Int']['output'];
    /** A temporary override that stops the account becoming delinquent until this date. */
    grace_until?: Maybe<Scalars['Date']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The day that automatic billing invoices are generated for. If this is `null`, then `bill_day` is used. */
    invoice_day?: Maybe<Scalars['Int']['output']>;
    /** Whether or not this account participates in the federal Lifeline program. */
    lifeline: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The number of months to bill at a time. */
    months_to_bill: Scalars['Int']['output'];
    /** Whether this account receives a printed invoice. */
    print_invoice: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether or not this account should be moved into another status after being delinquent for a preset period. */
    switch_status_after_delinquency: Scalars['Boolean']['output'];
    /** Whether or not this account is tax exempt. */
    tax_exempt: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Parameters that define the billing settings for an `Account`. */
export type AccountBillingParameterAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Parameters that define the billing settings for an `Account`. */
export type AccountBillingParameterAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Parameters that define the billing settings for an `Account`. */
export type AccountBillingParameterBilling_DefaultArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Parameters that define the billing settings for an `Account`. */
export type AccountBillingParameterDelinquency_Account_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Parameters that define the billing settings for an `Account`. */
export type AccountBillingParameterDelinquency_Removal_Account_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Parameters that define the billing settings for an `Account`. */
export type AccountBillingParameterLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AccountBillingParameterConnection` type. */
export type AccountBillingParameterConnection = {
    __typename: 'AccountBillingParameterConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountBillingParameter>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Holds information for provisioning service on Calix devices. */
export type AccountCalixServiceDetail = AccessloggableInterface & LoggableInterface & {
    __typename: 'AccountCalixServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The relationship between an `Account` and a `Service`. */
    account_service?: Maybe<AccountService>;
    /** The ID of an AccountService. */
    account_service_id: Scalars['Int64Bit']['output'];
    /** A configuration for a specific Calix SMx endpoint. */
    calix_integration?: Maybe<CalixIntegration>;
    /** Calix Inegartion ID. */
    calix_integration_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Custom JSON. */
    custom_json?: Maybe<Scalars['String']['output']>;
    /** C-VLAN. */
    cvlan?: Maybe<Scalars['Int']['output']>;
    /** Global VLAN. */
    global_vlan?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** ONT Port ID. */
    ont_port_id?: Maybe<Scalars['String']['output']>;
    /** Policy Map. */
    policy_map?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Use Custom JSON. */
    use_custom_json?: Maybe<Scalars['Boolean']['output']>;
    /** VLAN. */
    vlan?: Maybe<Scalars['Int64Bit']['output']>;
};
/** Holds information for provisioning service on Calix devices. */
export type AccountCalixServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Holds information for provisioning service on Calix devices. */
export type AccountCalixServiceDetailAccount_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Holds information for provisioning service on Calix devices. */
export type AccountCalixServiceDetailCalix_IntegrationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alarms_change_device_status?: InputMaybe<Scalars['Boolean']['input']>;
    alarms_create_logs?: InputMaybe<Scalars['Boolean']['input']>;
    alarms_update_ip_assignment?: InputMaybe<Scalars['Boolean']['input']>;
    bounce_ports?: InputMaybe<Scalars['Boolean']['input']>;
    commercial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    commercial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enable_ont_synchronization?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    government_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    government_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    industrial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    industrial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    org_id?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    residential_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    residential_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    senior_citizen_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    senior_citizen_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    smx_credentials?: InputMaybe<Scalars['String']['input']>;
    smx_url?: InputMaybe<Scalars['String']['input']>;
    smx_version?: InputMaybe<CalixIntegrationVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    subscriber_custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Holds information for provisioning service on Calix devices. */
export type AccountCalixServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AccountCalixServiceDetailConnection` type. */
export type AccountCalixServiceDetailConnection = {
    __typename: 'AccountCalixServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountCalixServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `AccountConnection` type. */
export type AccountConnection = {
    __typename: 'AccountConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Account>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A tracked event that has occurred for an `Account`. */
export type AccountEvent = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AccountEvent';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Current data. */
    current?: Maybe<Scalars['String']['output']>;
    /** An event. */
    event: AccountUpdateEvent;
    /** The date and time of an event sent from Mandrill */
    event_datetime: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** Previous data. */
    previous?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A tracked event that has occurred for an `Account`. */
export type AccountEventAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tracked event that has occurred for an `Account`. */
export type AccountEventAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tracked event that has occurred for an `Account`. */
export type AccountEventLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tracked event that has occurred for an `Account`. */
export type AccountEventNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AccountEventConnection` type. */
export type AccountEventConnection = {
    __typename: 'AccountEventConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountEvent>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An account group. */
export type AccountGroup = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AccountGroup';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    accounts: AccountConnection;
    /** An address list defines some criteria by which to group accounts for network policy enforcement. */
    address_lists: AddressListConnection;
    /** An alerting rotation. */
    alerting_rotations: AlertingRotationConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A RADIUS group. */
    radius_groups: RadiusGroupConnection;
    /** A service. */
    services: ServiceConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An account group. */
export type AccountGroupAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An account group. */
export type AccountGroupAccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An account group. */
export type AccountGroupAddress_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An account group. */
export type AccountGroupAlerting_RotationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** An account group. */
export type AccountGroupLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An account group. */
export type AccountGroupNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An account group. */
export type AccountGroupRadius_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An account group. */
export type AccountGroupServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `AccountGroupConnection` type. */
export type AccountGroupConnection = {
    __typename: 'AccountGroupConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountGroup>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountService = AccessloggableInterface & LoggableInterface & {
    __typename: 'AccountService';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** Holds information for provisioning service on Calix devices. */
    account_calix_service_details: AccountCalixServiceDetailConnection;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** A voice service configuration that links a service parameter to an account. */
    account_voice_service_details: AccountVoiceServiceDetailConnection;
    /** If this service was prorated when added, this is the date it was prorated from. */
    addition_prorate_date?: Maybe<Scalars['Date']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The date data usage was last calculated. */
    data_usage_last_calculated_date?: Maybe<Scalars['Date']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Overriding the service name will alter the service name printed on an invoice. */
    name_override?: Maybe<Scalars['String']['output']>;
    /** The next date this service will bill. If this is null, it will bill on the next account billing date. */
    next_bill_date?: Maybe<Scalars['Date']['output']>;
    /** The number of times this particular service has been billed to the customer. This is only used for expiring services. */
    number_of_times_billed?: Maybe<Scalars['Int']['output']>;
    /** A collection of `Service`s. */
    package?: Maybe<Package>;
    /** The ID of a `Package`. */
    package_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: Maybe<Scalars['Int']['output']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: Maybe<Scalars['String']['output']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** The value of a `ServiceMetadata` field, as it relates to a specific `Service` on a specific `Account`. */
    service_metadata_values: ServiceMetadataValueConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A unique ID that describes this unique instance of a `Package` assignment. */
    unique_package_relationship_id?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServiceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServiceAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServiceAccount_Calix_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calix_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_json?: InputMaybe<Scalars['String']['input']>;
    cvlan?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_vlan?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ont_port_id?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_map?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    use_custom_json?: InputMaybe<Scalars['Boolean']['input']>;
    vlan?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServiceAccount_Voice_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServiceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServicePackageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollup_services?: InputMaybe<Scalars['Boolean']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    valid_for_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServiceServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The relationship between an `Account` and a `Service`. */
export type AccountServiceService_Metadata_ValuesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_metadata_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `AccountServiceConnection` type. */
export type AccountServiceConnection = {
    __typename: 'AccountServiceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountService>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Metadata values for the metadata fields on the associated service. */
export type AccountServiceMetadataMutationInput = {
    /** The ID of a ServiceMetadata field. */
    service_metadata_id: Scalars['Int64Bit']['input'];
    /** The contents of a service metadata field. */
    value: Scalars['String']['input'];
};
/** The status of an account. */
export type AccountStatus = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AccountStatus';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    accounts: AccountConnection;
    /** Whether or not this status activates the account. */
    activates_account: Scalars['Boolean']['output'];
    /** An address list defines some criteria by which to group accounts for network policy enforcement. */
    address_lists: AddressListConnection;
    /** Color. */
    color: Scalars['HtmlHexColor']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An icon. */
    icon: Icon;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A RADIUS group. */
    radius_groups: RadiusGroupConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The status of an account. */
export type AccountStatusAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The status of an account. */
export type AccountStatusAccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The status of an account. */
export type AccountStatusAddress_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The status of an account. */
export type AccountStatusLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The status of an account. */
export type AccountStatusNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The status of an account. */
export type AccountStatusRadius_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `AccountStatusConnection` type. */
export type AccountStatusConnection = {
    __typename: 'AccountStatusConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountStatus>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The account type. */
export type AccountType = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AccountType';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    accounts: AccountConnection;
    /** An address list defines some criteria by which to group accounts for network policy enforcement. */
    address_lists: AddressListConnection;
    /** An alerting rotation. */
    alerting_rotations: AlertingRotationConnection;
    /** Color. */
    color: Scalars['HtmlHexColor']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An icon. */
    icon: Icon;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A message that is appended to specific invoices. */
    invoice_message?: Maybe<InvoiceMessage>;
    /** The ID of an `InvoiceMessage`. */
    invoice_message_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A RADIUS group. */
    radius_groups: RadiusGroupConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The type. */
    type: AccountTypeEnum;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The account type. */
export type AccountTypeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The account type. */
export type AccountTypeAccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The account type. */
export type AccountTypeAddress_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The account type. */
export type AccountTypeAlerting_RotationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The account type. */
export type AccountTypeInvoice_MessageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The account type. */
export type AccountTypeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The account type. */
export type AccountTypeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The account type. */
export type AccountTypeRadius_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `AccountTypeConnection` type. */
export type AccountTypeConnection = {
    __typename: 'AccountTypeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountType>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A type of account. */
export declare enum AccountTypeEnum {
    /** A commercial account */
    Commercial = "COMMERCIAL",
    /** A government account */
    Government = "GOVERNMENT",
    /** An industrial account */
    Industrial = "INDUSTRIAL",
    /** A residential account */
    Residential = "RESIDENTIAL",
    /** A senior citizen account */
    SeniorCitizen = "SENIOR_CITIZEN"
}
/** An account update event. */
export declare enum AccountUpdateEvent {
    /** Account activated */
    Activated = "ACTIVATED",
    /** Account groups added */
    GroupsAdded = "GROUPS_ADDED",
    /** Account groups removed */
    GroupsRemoved = "GROUPS_REMOVED",
    /** Account services added */
    ServicesAdded = "SERVICES_ADDED",
    /** Account services removed */
    ServicesRemoved = "SERVICES_REMOVED",
    /** Account services updated */
    ServicesUpdated = "SERVICES_UPDATED",
    /** Account status updated */
    StatusUpdated = "STATUS_UPDATED",
    /** Account type updated */
    TypeUpdated = "TYPE_UPDATED"
}
/** A voice service configuration that links a service parameter to an account. */
export type AccountVoiceServiceDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AccountVoiceServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The relationship between an `Account` and a `Service`. */
    account_service?: Maybe<AccountService>;
    /** The ID of an AccountService. */
    account_service_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: Maybe<Scalars['Int']['output']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: Maybe<Scalars['String']['output']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A configurable attribute for a voice service. */
    voice_service_generic_parameter?: Maybe<VoiceServiceGenericParameter>;
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id: Scalars['Int64Bit']['output'];
};
/** A voice service configuration that links a service parameter to an account. */
export type AccountVoiceServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A voice service configuration that links a service parameter to an account. */
export type AccountVoiceServiceDetailAccount_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A voice service configuration that links a service parameter to an account. */
export type AccountVoiceServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A voice service configuration that links a service parameter to an account. */
export type AccountVoiceServiceDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A voice service configuration that links a service parameter to an account. */
export type AccountVoiceServiceDetailVoice_Service_Generic_ParameterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    proratable?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<VoiceServiceGenericParameterType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AccountVoiceServiceDetailConnection` type. */
export type AccountVoiceServiceDetailConnection = {
    __typename: 'AccountVoiceServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AccountVoiceServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Metadata values for the metadata fields on the associated service. */
export type AccountVoiceServiceDetailMutationInput = {
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: InputMaybe<Scalars['Int']['input']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id: Scalars['Int64Bit']['input'];
};
/** The `AccountingPeriodCloseOption` that is in use. */
export declare enum AccountingPeriodCloseOption {
    /** Close every day at 12AM */
    Daily = "DAILY",
    /** Close every Friday at 12AM */
    Friday = "FRIDAY",
    /** Close every Monday at 12AM */
    Monday = "MONDAY",
    /** Close on the first day of every month at 12AM */
    Monthly = "MONTHLY",
    /** Never close the accounting period automatically */
    Never = "NEVER",
    /** Close every Saturday at 12AM */
    Saturday = "SATURDAY",
    /** Close every Sunday at 12AM */
    Sunday = "SUNDAY",
    /** Close every Thursday at 12AM */
    Thursday = "THURSDAY",
    /** Close every Tuesday at 12AM */
    Tuesday = "TUESDAY",
    /** Close every Wednesday at 12AM */
    Wednesday = "WEDNESDAY"
}
/** An ACH batch file. */
export type AchBatch = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AchBatch';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The batch ID that gets inserted into the ACH file on generation. */
    ach_sequence: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A file. */
    files: FileConnection;
    /** The provider to use when transacting against bank accounts. */
    format: BankAccountProvider;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** This batch includes payments after this date. */
    payments_after: Scalars['Datetime']['output'];
    /** This batch includes payments before this date. */
    payments_before: Scalars['Datetime']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether this is a batch of debits or credits. */
    type: AchBatchType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An ACH batch file. */
export type AchBatchAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An ACH batch file. */
export type AchBatchFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An ACH batch file. */
export type AchBatchLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An ACH batch file. */
export type AchBatchNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AchBatchConnection` type. */
export type AchBatchConnection = {
    __typename: 'AchBatchConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AchBatch>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of ACH batch (credits or debits). */
export declare enum AchBatchType {
    /** Both credits and debits. These are no longer generated, this is a legacy type from Sonar v1.x. */
    Both = "BOTH",
    /** Credits. */
    Credit = "CREDIT",
    /** Debits. */
    Debit = "DEBIT"
}
/** The input object that defines the fields for the addInstanceServiceFunds mutation. */
export type AddInstanceServiceFundsMutationInput = {
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['input'];
    /** The instance service fund type. */
    instance_service_fund_type: InstanceServiceFundType;
};
/** The input object that defines the fields for the addPackageToAccount mutation. */
export type AddPackageToAccountMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** Items specific to a voice service. Includes the quantity, price override, and related configuration parameter of each. */
    account_voice_service_details?: InputMaybe<Array<InputMaybe<AccountVoiceServiceDetailMutationInput>>>;
    /** The ID of a `Package`. */
    package_id: Scalars['Int64Bit']['input'];
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The date to prorate the transaction as of. */
    proration_date?: InputMaybe<Scalars['Date']['input']>;
};
/** The input object that defines the fields for the addServiceToAccount mutation. */
export type AddServiceToAccountMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** Items specific to a voice service. Includes the quantity, price override, and related configuration parameter of each. */
    account_voice_service_details?: InputMaybe<Array<InputMaybe<AccountVoiceServiceDetailMutationInput>>>;
    /** Overriding the service name will alter the service name printed on an invoice. */
    name_override?: InputMaybe<Scalars['String']['input']>;
    /** The next date this service will bill. If this is null, it will bill on the next account billing date. */
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: InputMaybe<Scalars['Int']['input']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The date to prorate the transaction as of. */
    proration_date?: InputMaybe<Scalars['Date']['input']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['input'];
    /** Service metadata allows you to store individualized information about a service, as it relates to a specific account. For example, on a domain renewal service, you could store the domain name as metadata. */
    service_metadata?: InputMaybe<Array<InputMaybe<AccountServiceMetadataMutationInput>>>;
};
/** A geographical address. */
export type Address = AccessloggableInterface & CustomfielddataableInterface & FileableInterface & GenericinventoryitemableInterface & GenericinventoryitemactionloggableInterface & InventoryitemableInterface & LoggableInterface & SearchableInterface & {
    __typename: 'Address';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An address status. */
    address_status?: Maybe<AddressStatus>;
    /** Address status ID. */
    address_status_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The owner of this `Address`. */
    addressable?: Maybe<AddressableInterface>;
    /** The ID of the entity that owns this address. */
    addressable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that owns this address. */
    addressable_type?: Maybe<AddressableType>;
    /** The serviceable address that is a anchor of this linked account. */
    anchor_address?: Maybe<Address>;
    /** The address ID for the Anchor address */
    anchor_address_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Avalara PCode. */
    avalara_pcode?: Maybe<Scalars['String']['output']>;
    /** Default billing settings that are applied to some accounts on creation. */
    billing_default?: Maybe<BillingDefault>;
    /** The ID of a BillingDefault. */
    billing_default_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The year used for calculating fips and census tract information. */
    census_year?: Maybe<Scalars['Int']['output']>;
    /** A city. */
    city?: Maybe<Scalars['String']['output']>;
    /** A two character country code. */
    country?: Maybe<Country>;
    /** A US county. Only used for US addresses. */
    county?: Maybe<UsCounty>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** The `Account` disconnections log. */
    disconnection_logs: DisconnectionLogConnection;
    /** A file. */
    files: FileConnection;
    /** Only used in the USA, this is the census tract information used for calculating things like FCC Form 477. */
    fips?: Maybe<Scalars['String']['output']>;
    /** A log of an action taken against a set of generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** Whether or not this address is an anchor */
    is_anchor: Scalars['Boolean']['output'];
    /** A decimal latitude. */
    latitude?: Maybe<Scalars['Latitude']['output']>;
    /** Address line 1. */
    line1?: Maybe<Scalars['String']['output']>;
    /** Address line 2. */
    line2?: Maybe<Scalars['String']['output']>;
    /** A list of linked addresses that this address is a anchor for. */
    linked_addresses: AddressConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude?: Maybe<Scalars['Longitude']['output']>;
    /** Network site serviceable address list. */
    network_site_serviceable_address_lists: NetworkSiteServiceableAddressListConnection;
    /** Whether or not the address is serviceable, and can be used for new accounts. */
    serviceable: Scalars['Boolean']['output'];
    /** A `ServiceableAddressAccountAssignmentHistory` for accounts and addresses. */
    serviceable_address_account_assignment_histories: ServiceableAddressAccountAssignmentHistoryConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A state, province, or other country subdivision. */
    subdivision?: Maybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: Maybe<Timezone>;
    /** A TowerCoverage submission. */
    towercoverage_submission?: Maybe<TowercoverageSubmission>;
    /** The type. */
    type: AddressType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A ZIP or postal code. */
    zip?: Maybe<Scalars['String']['output']>;
};
/** A geographical address. */
export type AddressAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical address. */
export type AddressAddress_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressAddressableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressAnchor_AddressArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A geographical address. */
export type AddressBilling_DefaultArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A geographical address. */
export type AddressDisconnection_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnected_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnected_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    serviceable_address_reference_record?: InputMaybe<Scalars['Text']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical address. */
export type AddressGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical address. */
export type AddressGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressLinked_AddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A geographical address. */
export type AddressLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical address. */
export type AddressNetwork_Site_Serviceable_Address_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressServiceable_Address_Account_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical address. */
export type AddressTowercoverage_SubmissionArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    full_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    note?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    raw_xml?: InputMaybe<Scalars['Text']['input']>;
    received_at?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    success?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `AddressConnection` type. */
export type AddressConnection = {
    __typename: 'AddressConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Address>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressList = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AddressList';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An account group. */
    account_groups: AccountGroupConnection;
    /** The types of account statuses for accounts that are part of this grouping. */
    account_status: AddressListAccountStatus;
    /** The status of an account. */
    account_statuses: AccountStatusConnection;
    /** The account type. */
    account_types: AccountTypeConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The delinquency state for accounts that are part of this grouping. */
    delinquency: AddressListDelinquency;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A service. */
    services: ServiceConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A usage based billing policy. */
    usage_based_billing_policies: UsageBasedBillingPolicyConnection;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListAccount_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListAccount_StatusesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListAccount_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An address list defines some criteria by which to group accounts for network policy enforcement. */
export type AddressListUsage_Based_Billing_PoliciesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_purchase_of_additional_capacity_during_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    assess_charges_at_end_of_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    cap_in_gigabytes?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Includes accounts with an account status that matches this activation setting in this address list. */
export declare enum AddressListAccountStatus {
    /** All account statuses that activate an account. */
    Active = "ACTIVE",
    /** All account statuses. */
    All = "ALL",
    /** All account statuses that do not activate an account. */
    Inactive = "INACTIVE"
}
/** The connection wrapper around the `AddressListConnection` type. */
export type AddressListConnection = {
    __typename: 'AddressListConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AddressList>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Includes accounts with a delinquency state that matches this in this address list. */
export declare enum AddressListDelinquency {
    /** All accounts, regardless of delinquency. */
    All = "ALL",
    /** Only include accounts which are not delinquent. */
    Current = "CURRENT",
    /** Only include delinquent accounts. */
    Delinquent = "DELINQUENT"
}
/** An address status. */
export type AddressStatus = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AddressStatus';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A geographical address. */
    addresses: AddressConnection;
    /** Color. */
    color: Scalars['HtmlHexColor']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An icon. */
    icon: Icon;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An address status. */
export type AddressStatusAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An address status. */
export type AddressStatusAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** An address status. */
export type AddressStatusLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An address status. */
export type AddressStatusNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AddressStatusConnection` type. */
export type AddressStatusConnection = {
    __typename: 'AddressStatusConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AddressStatus>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of address that this is. */
export declare enum AddressType {
    /** An address where this entity receives mail */
    Mailing = "MAILING",
    /** A physical address where the entity is located */
    Physical = "PHYSICAL"
}
/** An entity that can own an `Address`. */
export type AddressableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The entity that this `Address` is associated with. */
export declare enum AddressableType {
    /** An `Account`. */
    Account = "Account",
    /** A `BankAccount`. */
    BankAccount = "BankAccount",
    /** A `Company`. */
    Company = "Company",
    /** A `CreditCard`. */
    CreditCard = "CreditCard",
    /** An `InventoryLocation`. */
    InventoryLocation = "InventoryLocation",
    /** A `NetworkSite`. */
    NetworkSite = "NetworkSite",
    /** A Towercoverage Submission */
    TowercoverageSubmission = "TowercoverageSubmission",
    /** Vendor */
    Vendor = "Vendor"
}
/** Details about an adjustment `Service`. */
export type AdjustmentServiceDetail = AccessloggableInterface & LoggableInterface & {
    __typename: 'AdjustmentServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount that can be adjusted using this service within the period defined in `adjustment_service_days`. */
    amount?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The period of time in which transactions are tracked to calculate against the total defined in `adjustment_service_amount`. */
    days?: Maybe<Scalars['Int']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A role defines the permission set that a user has. */
    roles: RoleConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Details about an adjustment `Service`. */
export type AdjustmentServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details about an adjustment `Service`. */
export type AdjustmentServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details about an adjustment `Service`. */
export type AdjustmentServiceDetailRolesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    applied_permissions?: InputMaybe<Array<InputMaybe<Permission>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Details about an adjustment `Service`. */
export type AdjustmentServiceDetailServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `AdjustmentServiceDetailConnection` type. */
export type AdjustmentServiceDetailConnection = {
    __typename: 'AdjustmentServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AdjustmentServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Indicates what has been aggregated. */
export declare enum AggregateKey {
    /** The number of accounts with a given account status. */
    AccountStatusCounts = "ACCOUNT_STATUS_COUNTS",
    /** The number of active customers. */
    ActiveCustomerCount = "ACTIVE_CUSTOMER_COUNT",
    /** The average revenue per user. */
    Arpu = "ARPU",
    /** The total current amount due on invoices. */
    BalanceDue = "BALANCE_DUE",
    /** The total debits for the day excluding adjustments. */
    DebitsWithoutAdjustmentsToday = "DEBITS_WITHOUT_ADJUSTMENTS_TODAY",
    /** The total debits from adjustments for the day. */
    DebitAdjustmentsToday = "DEBIT_ADJUSTMENTS_TODAY",
    /** The percentage of active customers who have delinquent accounts. */
    DelinquencyPercentage = "DELINQUENCY_PERCENTAGE",
    /** The number customer accounts that are delinquent. */
    DelinquentCustomerCount = "DELINQUENT_CUSTOMER_COUNT",
    /** The total discounts/credits for the day excluding adjustments. */
    DiscountsWithoutAdjustmentsToday = "DISCOUNTS_WITHOUT_ADJUSTMENTS_TODAY",
    /** The total discounts/credits from adjustments for the day. */
    DiscountAdjustmentsToday = "DISCOUNT_ADJUSTMENTS_TODAY",
    /** The number of inactive customers. */
    InactiveCustomerCount = "INACTIVE_CUSTOMER_COUNT",
    /** The total payments for the day. */
    PaymentsToday = "PAYMENTS_TODAY",
    /** The total current recurring discounts. */
    RecurringDiscounts = "RECURRING_DISCOUNTS",
    /** The total current recurring revenue. */
    RecurringRevenue = "RECURRING_REVENUE"
}
/** types.aggregation */
export type Aggregation = {
    __typename: 'Aggregation';
    /** The AggregationFunction used. */
    aggregation_function: AggregationFunction;
    /** A list of counts, if the aggregation type is `COUNT`. */
    counts?: Maybe<Array<Maybe<AggregationBucketResult>>>;
    /** The field being aggregated. */
    field: Scalars['String']['output'];
    /** The aggregation value, if the aggregation type is anything other than `COUNT`. This is provided as a string to assist with 64bit integer handling in Javascript. */
    value?: Maybe<Scalars['String']['output']>;
};
/** The results of an aggregation. */
export type AggregationBucketResult = {
    __typename: 'AggregationBucketResult';
    /** The quantity of items matching the string in `bucket_value`. */
    count: Scalars['String']['output'];
    /** The results of a sub-aggregation query. */
    sub_aggregator_results?: Maybe<Array<Maybe<Aggregation>>>;
    /** The string that was matched. */
    value: Scalars['String']['output'];
};
/** An aggregation function, used by the `Aggregator`. */
export declare enum AggregationFunction {
    /** Returns the average value across all matching entities */
    Avg = "AVG",
    /** Returns a count of all elements where a field matches a particular value. Only works on string fields. */
    Count = "COUNT",
    /** Returns the maximum value across all matching entities */
    Max = "MAX",
    /** Returns the minimum value across all matching entities */
    Min = "MIN",
    /** Returns the total value across all matching entities */
    Sum = "SUM"
}
/** Provides the ability to return aggregate mathematical data about your results. For example, you can `SUM` all the payment amounts, or `AVG` ICMP response times. */
export type Aggregator = {
    /** An aggregation function, used by the `Aggregator`. */
    aggregation_function: AggregationFunction;
    /** The field you wish to run the aggregation against. */
    field_name: Scalars['String']['input'];
    /** An aggregator that is run based on the results of the parent aggregation. */
    sub_aggregators?: InputMaybe<Array<InputMaybe<Aggregator>>>;
};
/** An alerting rotation. */
export type AlertingRotation = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AlertingRotation';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An account group. */
    account_groups: AccountGroupConnection;
    /** The account type. */
    account_types: AccountTypeConnection;
    /** An alerting rotation day. */
    alerting_rotation_days: AlertingRotationDayConnection;
    /** An `InventoryItem` associated with an `AlertingRotation`. */
    alerting_rotation_inventory_items: AlertingRotationInventoryItemConnection;
    /** Whether to include all account equipment in this rotation. */
    all_accounts: Scalars['Boolean']['output'];
    /** Whether to include all inventory models in this rotation. */
    all_inventory_models: Scalars['Boolean']['output'];
    /** Whether to include all network site equipment in this rotation. */
    all_network_sites: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The number of minutes a device can be in a down state before generating alert. */
    down_time_in_minutes_before_alerting: Scalars['Int']['output'];
    /** The number of minutes a device can remain in a down state before sending a repeat alert. */
    down_time_in_minutes_before_repeat: Scalars['Int']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether this repeats forever or not. */
    infinite_repetitions: Scalars['Boolean']['output'];
    /** A type of item stored in inventory. */
    inventory_models: InventoryModelConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A network site. */
    network_sites: NetworkSiteConnection;
    /** A note. */
    notes: NoteConnection;
    /** The number of times this repeats. */
    repetitions?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start. */
    start: Scalars['Date']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
    /** The number of minutes a device can be in a warning state before generating alert. */
    warning_time_in_minutes_before_alerting: Scalars['Int']['output'];
    /** The number of minutes a device can remain in a warning state before sending a repeat alert. */
    warning_time_in_minutes_before_repeat: Scalars['Int']['output'];
    /** The number of weeks between repetitions. */
    weeks_between_repetitions: Scalars['Int']['output'];
};
/** An alerting rotation. */
export type AlertingRotationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationAccount_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationAccount_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationAlerting_Rotation_DaysArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alerting_rotation_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end_time?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationAlerting_Rotation_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alerting_rotation_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_alerted_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    last_overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    last_status_change_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    next_alert_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationInventory_ModelsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationNetwork_SitesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    height_in_meters?: InputMaybe<Scalars['Float']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An alerting rotation. */
export type AlertingRotationUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `AlertingRotationConnection` type. */
export type AlertingRotationConnection = {
    __typename: 'AlertingRotationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AlertingRotation>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An alerting rotation day. */
export type AlertingRotationDay = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AlertingRotationDay';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An alerting rotation. */
    alerting_rotation?: Maybe<AlertingRotation>;
    /** The alerting rotation ID. */
    alerting_rotation_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A day. */
    day: Day;
    /** The end time for the day. */
    end_time: Scalars['Time']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start time for the day. */
    start_time: Scalars['Time']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An alerting rotation day. */
export type AlertingRotationDayAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An alerting rotation day. */
export type AlertingRotationDayAlerting_RotationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** An alerting rotation day. */
export type AlertingRotationDayLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An alerting rotation day. */
export type AlertingRotationDayNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AlertingRotationDayConnection` type. */
export type AlertingRotationDayConnection = {
    __typename: 'AlertingRotationDayConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AlertingRotationDay>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An `InventoryItem` associated with an `AlertingRotation`. */
export type AlertingRotationInventoryItem = AccessloggableInterface & LoggableInterface & {
    __typename: 'AlertingRotationInventoryItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An alerting rotation. */
    alerting_rotation?: Maybe<AlertingRotation>;
    /** The alerting rotation ID. */
    alerting_rotation_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_item?: Maybe<InventoryItem>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** The date and time that this rotation was last notified of a status change. */
    last_alerted_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** The last monitoring status of an inventory item. */
    last_overall_status?: Maybe<InventoryItemDeviceStatus>;
    /** The date and time that the inventory item status last changed. */
    last_status_change_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** The next date and time to send a status alert for this rotation. */
    next_alert_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An `InventoryItem` associated with an `AlertingRotation`. */
export type AlertingRotationInventoryItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `InventoryItem` associated with an `AlertingRotation`. */
export type AlertingRotationInventoryItemAlerting_RotationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** An `InventoryItem` associated with an `AlertingRotation`. */
export type AlertingRotationInventoryItemInventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `InventoryItem` associated with an `AlertingRotation`. */
export type AlertingRotationInventoryItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AlertingRotationInventoryItemConnection` type. */
export type AlertingRotationInventoryItemConnection = {
    __typename: 'AlertingRotationInventoryItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AlertingRotationInventoryItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the allocateLookerExploreLicenseToUser mutation. */
export type AllocateLookerExploreLicenseToUserMutationInput = {
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the allocateLookerViewLicenseToUser mutation. */
export type AllocateLookerViewLicenseToUserMutationInput = {
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['input'];
};
/** Determines how delinquency on the Anchor is handled. */
export declare enum AnchorDelinquencyLogic {
    /** Anchor Delinquency also applies to Linked */
    All = "ALL",
    /** Linked not affected by Anchor Delinquency */
    AnchorOnly = "ANCHOR_ONLY"
}
/** An application firewall IP address or subnet rule. */
export type ApplicationFirewallRule = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ApplicationFirewallRule';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An application firewall IP address or subnet rule. */
export type ApplicationFirewallRuleAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An application firewall IP address or subnet rule. */
export type ApplicationFirewallRuleLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An application firewall IP address or subnet rule. */
export type ApplicationFirewallRuleNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `ApplicationFirewallRuleConnection` type. */
export type ApplicationFirewallRuleConnection = {
    __typename: 'ApplicationFirewallRuleConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ApplicationFirewallRule>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the applyCreditToInvoice mutation. */
export type ApplyCreditToInvoiceMutationInput = {
    /** The amount to credit on the invoice. */
    amount?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the assignGenericInventoryItems mutation. */
export type AssignGenericInventoryItemsMutationInput = {
    /** The ID of the entity that owns this generic `InventoryItem`. */
    genericinventoryitemable_id: Scalars['Int64Bit']['input'];
    /** The ID of the entity that owns this generic `InventoryItem`. */
    genericinventoryitemable_type: InventoryitemableType;
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
};
/** The input object that defines the fields for the assignInventoryItems mutation. */
export type AssignInventoryItemsMutationInput = {
    /** The ID of a `DeploymentType`. */
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity that this inventory item is assigned to. */
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that this inventory item is assigned to. */
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    /** Setting this value to `true` will set `deployment_type_id` to null. */
    unset_deployment_type_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The details on the individual file to be associated. */
export type AssociateFileMutationInput = {
    /** A description of the file. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The ID of a `File`. */
    file_id: Scalars['Int64Bit']['input'];
    /** An image file may be set to the primary image. This will be used as the displayed image for the object that this file is associated to throughout Sonar. */
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The status of an import. */
export declare enum AsyncImportStatus {
    /** The import has failed. */
    Failed = "FAILED",
    /** The import is running. */
    InProgress = "IN_PROGRESS",
    /** The import is pending. */
    Pending = "PENDING",
    /** The import has successfully completed. */
    Successful = "SUCCESSFUL"
}
/** An authentication provider. */
export type AuthProvider = AccessloggableInterface & LoggableInterface & {
    __typename: 'AuthProvider';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The Auth0 client ID. */
    auth0_client_id?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The type. */
    type: AuthProviderType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An authentication provider. */
export type AuthProviderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An authentication provider. */
export type AuthProviderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `AuthProviderConnection` type. */
export type AuthProviderConnection = {
    __typename: 'AuthProviderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AuthProvider>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of auth provider. */
export declare enum AuthProviderType {
    /** Auth0. */
    Auth0 = "AUTH0"
}
/** types.available_explore */
export type AvailableExplore = {
    __typename: 'AvailableExplore';
    /** The category. */
    category: Scalars['Text']['output'];
    /** The endpoint. */
    endpoint: Scalars['Text']['output'];
    /** A descriptive name. */
    name: Scalars['Text']['output'];
};
/** The connection wrapper around the `AvailableExploresConnection` type. */
export type AvailableExploresConnection = {
    __typename: 'AvailableExploresConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AvailableExplore>>;
};
/** An available report. */
export type AvailableReport = {
    __typename: 'AvailableReport';
    /** The category. */
    category: Scalars['Text']['output'];
    /** The endpoint. */
    endpoint: Scalars['Text']['output'];
    /** Whether or not this is a custom report. */
    is_custom: Scalars['Boolean']['output'];
    /** Whether or not this is a personal report. */
    is_user: Scalars['Boolean']['output'];
    /** A descriptive name. */
    name: Scalars['Text']['output'];
    /** The URL to a thumbnail image. */
    thumbnail_url: Scalars['URL']['output'];
};
/** The connection wrapper around the `AvailableReportsConnection` type. */
export type AvailableReportsConnection = {
    __typename: 'AvailableReportsConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AvailableReport>>;
};
/** A tax category defined by Avalara. */
export type AvalaraTaxCategory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'AvalaraTaxCategory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax exemption. */
    tax_exemptions: TaxExemptionConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['Int']['output'];
};
/** A tax category defined by Avalara. */
export type AvalaraTaxCategoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax category defined by Avalara. */
export type AvalaraTaxCategoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax category defined by Avalara. */
export type AvalaraTaxCategoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax category defined by Avalara. */
export type AvalaraTaxCategoryTax_ExemptionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jurisdictions?: InputMaybe<Array<InputMaybe<TaxJurisdiction>>>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `AvalaraTaxCategoryConnection` type. */
export type AvalaraTaxCategoryConnection = {
    __typename: 'AvalaraTaxCategoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AvalaraTaxCategory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A tax Transaction/Service pair defined by Avalara. */
export type AvalaraTaxDefinition = AccessloggableInterface & LoggableInterface & TaxdefinitionableInterface & {
    __typename: 'AvalaraTaxDefinition';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether or not this entity is archived. */
    archived: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether or not this tax definition is custom. */
    is_custom: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The service name as defined by Avalara. */
    service_name: Scalars['String']['output'];
    /** The relationship between a `Service` and a `TaxDefinition`. */
    service_tax_definitions: ServiceTaxDefinitionConnection;
    /** The service type as defined by Avalara. */
    service_type: Scalars['Int']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The transaction name as defined by Avalara. */
    transaction_name: Scalars['String']['output'];
    /** The transaction type as defined by Avalara. */
    transaction_type: Scalars['Int']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A tax Transaction/Service pair defined by Avalara. */
export type AvalaraTaxDefinitionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax Transaction/Service pair defined by Avalara. */
export type AvalaraTaxDefinitionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax Transaction/Service pair defined by Avalara. */
export type AvalaraTaxDefinitionService_Tax_DefinitionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    discount?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `AvalaraTaxDefinitionConnection` type. */
export type AvalaraTaxDefinitionConnection = {
    __typename: 'AvalaraTaxDefinitionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<AvalaraTaxDefinition>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A bank account. */
export type BankAccount = AccessloggableInterface & AddressableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'BankAccount';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** A geographical address. */
    addresses: AddressConnection;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto: Scalars['Boolean']['output'];
    /** A processor or method of processing bank account payments. */
    bank_account_processor?: Maybe<BankAccountProcessor>;
    /** The ID of a BankProcessor. */
    bank_account_processor_id: Scalars['Int64Bit']['output'];
    /** The type of bank account this is. */
    bank_account_type: BankAccountType;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The profile ID provided by a credit card processing service. */
    customer_profile_id?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A partial account number that can be used for identification. */
    masked_account_number: Scalars['String']['output'];
    /** The name on the account. */
    name_on_account?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A payment. */
    payments: PaymentConnection;
    /** The bank routing number. */
    routing_number?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The tokenized value that represents a credit card, provided by a credit card processing service. */
    token?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A bank account. */
export type BankAccountAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A bank account. */
export type BankAccountAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A bank account. */
export type BankAccountAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A bank account. */
export type BankAccountBank_Account_ProcessorArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<BankAccountProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A bank account. */
export type BankAccountLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A bank account. */
export type BankAccountNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A bank account. */
export type BankAccountPaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `BankAccountConnection` type. */
export type BankAccountConnection = {
    __typename: 'BankAccountConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<BankAccount>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A processor or method of processing bank account payments. */
export type BankAccountProcessor = AccessloggableInterface & LoggableInterface & {
    __typename: 'BankAccountProcessor';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A credential used when processing bank account payments. */
    bank_account_processor_credentials: BankAccountProcessorCredentialConnection;
    /** A bank account. */
    bank_accounts: BankAccountConnection;
    /** A company you do business as. */
    companies: CompanyConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Whether or not this is the primary type of entity. */
    primary: Scalars['Boolean']['output'];
    /** The provider for this processor. */
    provider: BankAccountProvider;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A processor or method of processing bank account payments. */
export type BankAccountProcessorAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A processor or method of processing bank account payments. */
export type BankAccountProcessorBank_Account_Processor_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    bank_account_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<BankAccountProviderCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A processor or method of processing bank account payments. */
export type BankAccountProcessorBank_AccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    bank_account_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    bank_account_type?: InputMaybe<BankAccountType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_account_number?: InputMaybe<Scalars['String']['input']>;
    name_on_account?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    routing_number?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A processor or method of processing bank account payments. */
export type BankAccountProcessorCompaniesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A processor or method of processing bank account payments. */
export type BankAccountProcessorLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `BankAccountProcessorConnection` type. */
export type BankAccountProcessorConnection = {
    __typename: 'BankAccountProcessorConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<BankAccountProcessor>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A credential used when processing bank account payments. */
export type BankAccountProcessorCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'BankAccountProcessorCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A processor or method of processing bank account payments. */
    bank_account_processor?: Maybe<BankAccountProcessor>;
    /** The ID of a BankProcessor. */
    bank_account_processor_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The credential name. */
    credential: BankAccountProviderCredential;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** A credential used when processing bank account payments. */
export type BankAccountProcessorCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credential used when processing bank account payments. */
export type BankAccountProcessorCredentialBank_Account_ProcessorArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<BankAccountProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A credential used when processing bank account payments. */
export type BankAccountProcessorCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credential used when processing bank account payments. */
export type BankAccountProcessorCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `BankAccountProcessorCredentialConnection` type. */
export type BankAccountProcessorCredentialConnection = {
    __typename: 'BankAccountProcessorCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<BankAccountProcessorCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for the bank account processor. */
export type BankAccountProcessorCredentialInput = {
    /** The credential for the bank account provider. */
    credential: BankAccountProviderCredential;
    /** The credential value. */
    value: Scalars['String']['input'];
};
/** A bank account processing provider. */
export declare enum BankAccountProvider {
    /** Authorize.net CIM (https://authorize.net) */
    Authorize = "AUTHORIZE",
    /** Bluepay (https://www.bluepay.com) */
    Bluepay = "BLUEPAY",
    /** BMO Harris 80 byte Canadian ACH format. */
    Bmoharriscanada80Byte = "BMOHARRISCANADA80BYTE",
    /** 1464 byte Canada ACH */
    Canadaach1464Byte = "CANADAACH1464BYTE",
    /** CardConnect (https://cardconnect.com) */
    Cardconnect = "CARDCONNECT",
    /** Canada ACH for Central 1 */
    Central1Ach = "CENTRAL1ACH",
    /** GoCardless (https://gocardless.com) */
    Gocardless = "GOCARDLESS",
    /** IPpay (https://ippay.com) */
    Ippay = "IPPAY",
    /** NACHA ACH */
    Nachaach = "NACHAACH",
    /** ProPay ProtectPay (https://epay.propay.com/protectpay) */
    Propay = "PROPAY",
    /** Canada ACH for Royal Bank of Canada */
    Royalbankofcanadaach = "ROYALBANKOFCANADAACH",
    /** Canada ACH FTP Upload for Royal Bank of Canada */
    Royalbankofcanadaachftp = "ROYALBANKOFCANADAACHFTP",
    /** SonarPay */
    Sonarpay = "SONARPAY"
}
/** Credentials for a bank account provider. */
export declare enum BankAccountProviderCredential {
    /** Authorize.net API login ID */
    AuthorizeApiLoginId = "AUTHORIZE_API_LOGIN_ID",
    /** Authorize.net transaction key */
    AuthorizeTransactionKey = "AUTHORIZE_TRANSACTION_KEY",
    /** Bluepay account ID */
    BluepayAccountId = "BLUEPAY_ACCOUNT_ID",
    /** Bluepay secret key */
    BluepaySecretKey = "BLUEPAY_SECRET_KEY",
    /** Your bank account number. */
    Bmoharriscanada80ByteAccountNumber = "BMOHARRISCANADA80BYTE_ACCOUNT_NUMBER",
    /** Your company name. */
    Bmoharriscanada80ByteCompanyName = "BMOHARRISCANADA80BYTE_COMPANY_NAME",
    /** The destination data center code. */
    Bmoharriscanada80ByteDestinationDataCenterCode = "BMOHARRISCANADA80BYTE_DESTINATION_DATA_CENTER_CODE",
    /** The institution ID. */
    Bmoharriscanada80ByteInstitutionId = "BMOHARRISCANADA80BYTE_INSTITUTION_ID",
    /** The originator ID. */
    Bmoharriscanada80ByteOriginatorId = "BMOHARRISCANADA80BYTE_ORIGINATOR_ID",
    /** Your bank account number. */
    Canadaach1464ByteAccountNumber = "CANADAACH1464BYTE_ACCOUNT_NUMBER",
    /** Your company name. */
    Canadaach1464ByteCompanyName = "CANADAACH1464BYTE_COMPANY_NAME",
    /** The destination data center code. */
    Canadaach1464ByteDestinationDataCenterCode = "CANADAACH1464BYTE_DESTINATION_DATA_CENTER_CODE",
    /** The institution ID. */
    Canadaach1464ByteInstitutionId = "CANADAACH1464BYTE_INSTITUTION_ID",
    /** The originator ID. */
    Canadaach1464ByteOriginatorId = "CANADAACH1464BYTE_ORIGINATOR_ID",
    /** Your CardConnect merchant ID. */
    CardconnectMerchantid = "CARDCONNECT_MERCHANTID",
    /** Your CardConnect password. */
    CardconnectPassword = "CARDCONNECT_PASSWORD",
    /** Your CardConnect username. */
    CardconnectUsername = "CARDCONNECT_USERNAME",
    /** Your bank account number. */
    Central1AchAccountNumber = "CENTRAL1ACH_ACCOUNT_NUMBER",
    /** Your company name. */
    Central1AchCompanyName = "CENTRAL1ACH_COMPANY_NAME",
    /** The destination data center code. */
    Central1AchDestinationDataCenterCode = "CENTRAL1ACH_DESTINATION_DATA_CENTER_CODE",
    /** The institution ID. */
    Central1AchInstitutionId = "CENTRAL1ACH_INSTITUTION_ID",
    /** The originator ID. */
    Central1AchOriginatorId = "CENTRAL1ACH_ORIGINATOR_ID",
    /** GoCardless Access Token */
    GocardlessAccessToken = "GOCARDLESS_ACCESS_TOKEN",
    /** GoCardless Webhook Endpoint Secret */
    GocardlessWebhookEndpointSecret = "GOCARDLESS_WEBHOOK_ENDPOINT_SECRET",
    /** IPpay terminal ID */
    IppayTerminalid = "IPPAY_TERMINALID",
    /** Your bank account number. */
    NachaachAccountNumber = "NACHAACH_ACCOUNT_NUMBER",
    /** The company entry description to use in the batch. */
    NachaachCompanyEntryDescription = "NACHAACH_COMPANY_ENTRY_DESCRIPTION",
    /** The company identification to use in the bank. */
    NachaachCompanyIdentification = "NACHAACH_COMPANY_IDENTIFICATION",
    /** Your company name. */
    NachaachCompanyName = "NACHAACH_COMPANY_NAME",
    /** The immediate destination. */
    NachaachImmediateDestination = "NACHAACH_IMMEDIATE_DESTINATION",
    /** The immediate destination name. */
    NachaachImmediateDestinationName = "NACHAACH_IMMEDIATE_DESTINATION_NAME",
    /** The immediate origin. */
    NachaachImmediateOrigin = "NACHAACH_IMMEDIATE_ORIGIN",
    /** The immediate origin name. */
    NachaachImmediateOriginName = "NACHAACH_IMMEDIATE_ORIGIN_NAME",
    /** Your ProPay account number. */
    PropayAccountNumber = "PROPAY_ACCOUNT_NUMBER",
    /** Your ProPay auth token. */
    PropayAuthToken = "PROPAY_AUTH_TOKEN",
    /** Your ProPay biller account ID. */
    PropayBillerAccountId = "PROPAY_BILLER_ACCOUNT_ID",
    /** Your bank account number. */
    RoyalbankofcanadaachAccountNumber = "ROYALBANKOFCANADAACH_ACCOUNT_NUMBER",
    /** Your company name. */
    RoyalbankofcanadaachCompanyName = "ROYALBANKOFCANADAACH_COMPANY_NAME",
    /** The destination data center code. */
    RoyalbankofcanadaachDestinationDataCenterCode = "ROYALBANKOFCANADAACH_DESTINATION_DATA_CENTER_CODE",
    /** The institution ID. */
    RoyalbankofcanadaachInstitutionId = "ROYALBANKOFCANADAACH_INSTITUTION_ID",
    /** The originator ID. */
    RoyalbankofcanadaachOriginatorId = "ROYALBANKOFCANADAACH_ORIGINATOR_ID",
    /** SonarPay Merchant ID */
    SonarpayMerchantId = "SONARPAY_MERCHANT_ID"
}
/** The type of bank account. */
export declare enum BankAccountType {
    /** A checking account. */
    Checking = "CHECKING",
    /** A savings account. */
    Savings = "SAVINGS"
}
/** The setting which dictates how the bill day and invoice day should be set when activating an account. */
export declare enum BillDayModeOption {
    /** Anniversary Bill Day */
    AnniversaryBillDay = "ANNIVERSARY_BILL_DAY",
    /** Anniversary Invoice Day */
    AnniversaryInvoiceDay = "ANNIVERSARY_INVOICE_DAY",
    /** Fixed bill day */
    Fixed = "FIXED"
}
/** A type of bill. */
export declare enum BillMode {
    /** Invoice */
    Invoice = "INVOICE",
    /** Statement */
    Statement = "STATEMENT"
}
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefault = AccessloggableInterface & LoggableInterface & {
    __typename: 'BillingDefault';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Parameters that define the billing settings for an `Account`. */
    account_billing_parameters: AccountBillingParameterConnection;
    /** The account type. */
    account_type?: Maybe<AccountType>;
    /** The ID of an AccountType. */
    account_type_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A geographical address. */
    addresses: AddressConnection;
    /** Whether or not to aggregate invoice taxes instead of printing with each charge. */
    aggregate_invoice_taxes: Scalars['Boolean']['output'];
    /** Whether or not to aggregate linked debits on Anchor invoices. */
    aggregate_linked_debits: Scalars['Boolean']['output'];
    /** The ID of a BillingDefault acting as an Anchor default. */
    anchor_default_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Determines if delinquency settings on an Anchor default is applied only to the Anchor account or the Linked accounts as well. */
    anchor_delinquency_logic?: Maybe<AnchorDelinquencyLogic>;
    /** If `invoice_day` is not null, this allows you to select whether `auto_pay_days` is calculated from the billing day, or the invoice day. */
    auto_pay_day: BillingParameterDayOption;
    /** The number of days after `auto_pay_day` that auto pay runs for an invoice. */
    auto_pay_days: Scalars['Int']['output'];
    /** The day that billing runs. */
    bill_day?: Maybe<Scalars['Int']['output']>;
    /** Whether the account bill and invoice day are fixed, the account activation day is used as bill day, or the account activation day is used as the invoice day. */
    bill_day_mode: BillDayModeOption;
    /** The type of bill this account receives. */
    bill_mode: BillMode;
    /** Default billing settings that are applied to some accounts on creation. */
    billing_default?: Maybe<BillingDefault>;
    /** The service items and overrides for linked billing defaults. */
    billing_services: BillingServiceConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** If `switch_status_after_delinquency` is `true`, then this is the number of days of delinquency to allow before the status switch. */
    days_of_delinquency_for_status_switch?: Maybe<Scalars['Int']['output']>;
    /** If this is `true`, then this is the default billing default that is used, if there is no more specific billing default option for an account. */
    default: Scalars['Boolean']['output'];
    /** Determines if the billing parameters apply by account type or for anchor / linked types. */
    default_for: BillingDefaultFor;
    /** The status that an `Account` is moved into after a certain length of delinquency. */
    delinquency_account_status?: Maybe<AccountStatus>;
    /** If `switch_status_after_delinquency` is true, this is the account status that the account will be moved into after `days_of_delinquency_for_status_switch` days of delinquency. */
    delinquency_account_status_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The `AccountStatus` an account is moved back into after no longer being delinquent, if it is currently in the delinquency account status defined on the `AccountBillingParameter`. */
    delinquency_removal_account_status?: Maybe<AccountStatus>;
    /** If `switch_status_after_delinquency` is `true`, then this is the status the account will be moved back into if delinquency is cleared while the account is set to the `delinquency_account_status_id` account status. */
    delinquency_removal_account_status_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The number of days after the invoice date that it is due. */
    due_days: Scalars['Int']['output'];
    /** If `invoice_day` is not null, this allows you to select whether `due_days` is calculated from the billing day, or the invoice day. */
    due_days_day: BillingParameterDayOption;
    /** Whether or not to use a fixed bill day, versus anniversary day billing. Use `bill_day_mode` for further customization. */
    fixed_bill_day?: Maybe<Scalars['Boolean']['output']>;
    /** The number of days after the invoice due date that the invoice is marked delinquent. */
    grace_days: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The day that automatic billing invoices are generated for. If this is `null`, then `bill_day` is used. */
    invoice_day?: Maybe<Scalars['Int']['output']>;
    /** Whether or not this account participates in the federal Lifeline program. */
    lifeline: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The number of months to bill at a time. */
    months_to_bill: Scalars['Int']['output'];
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** Whether this account receives a printed invoice. */
    print_invoice: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether or not this account should be moved into another status after being delinquent for a preset period. */
    switch_status_after_delinquency: Scalars['Boolean']['output'];
    /** Whether or not this account is tax exempt. */
    tax_exempt: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultAccount_Billing_ParametersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    grace_until?: InputMaybe<Scalars['Date']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultAccount_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultBilling_DefaultArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultBilling_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_subsidy?: InputMaybe<Scalars['Int']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultDelinquency_Account_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultDelinquency_Removal_Account_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Default billing settings that are applied to some accounts on creation. */
export type BillingDefaultLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `BillingDefaultConnection` type. */
export type BillingDefaultConnection = {
    __typename: 'BillingDefaultConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<BillingDefault>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Defines the application basis for the billing defaults specified. */
export declare enum BillingDefaultFor {
    /** Account type billing default */
    AccountType = "ACCOUNT_TYPE",
    /** Anchor billing default */
    Anchor = "ANCHOR",
    /** Linked billing default */
    Linked = "LINKED"
}
/** The day that the associated parameter runs after. */
export declare enum BillingParameterDayOption {
    /** Billing day */
    BillDay = "BILL_DAY",
    /** Invoice day */
    InvoiceDay = "INVOICE_DAY"
}
/** The service items and overrides for linked billing defaults. */
export type BillingService = AccessloggableInterface & LoggableInterface & {
    __typename: 'BillingService';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount of the service that will be invoiced to the anchor account.  Cannot exceed price provided. */
    anchor_subsidy?: Maybe<Scalars['Int']['output']>;
    /** Default billing settings that are applied to some accounts on creation. */
    billing_default?: Maybe<BillingDefault>;
    /** The ID of a BillingDefault. */
    billing_default_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Overriding the service name will alter the service name printed on an invoice. */
    name_override?: Maybe<Scalars['String']['output']>;
    /** The price per unit of this item. */
    price?: Maybe<Scalars['Int']['output']>;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The service items and overrides for linked billing defaults. */
export type BillingServiceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The service items and overrides for linked billing defaults. */
export type BillingServiceBilling_DefaultArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The service items and overrides for linked billing defaults. */
export type BillingServiceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The service items and overrides for linked billing defaults. */
export type BillingServiceServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `BillingServiceConnection` type. */
export type BillingServiceConnection = {
    __typename: 'BillingServiceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<BillingService>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details for a billing service on a Linked billing default. */
export type BillingServiceMutationInput = {
    /** The amount of the service that will be invoiced to the anchor account.  Cannot exceed price provided. */
    anchor_subsidy?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Overriding the service name will alter the service name printed on an invoice. */
    name_override?: InputMaybe<Scalars['String']['input']>;
    /** The price per unit of this item. */
    price: Scalars['Int64Bit']['input'];
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['input'];
};
/** Billing configuration settings. */
export type BillingSetting = AccessloggableInterface & LoggableInterface & {
    __typename: 'BillingSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The account type. */
    account_types: AccountTypeConnection;
    /** How often the accounting period automatically closes. */
    accounting_period_auto_close: AccountingPeriodCloseOption;
    /** The date that the accounting period was closed. */
    accounting_period_close_date?: Maybe<Scalars['Date']['output']>;
    /** Always round taxes up. */
    always_round_taxes_up: Scalars['Boolean']['output'];
    /** Whether or not to apply a late fee to past due invoices. */
    apply_late_fees: Scalars['Boolean']['output'];
    /** Whether late fees should be applied to child invoices. */
    apply_late_fees_to_child_invoices: Scalars['Boolean']['output'];
    /** The number of times to attempt a bank account automatic payment. */
    autopay_bank_account_attempts: Scalars['Int']['output'];
    /** The number of days between retries for bank account automatic payments. */
    autopay_bank_account_retry_interval_in_days: Scalars['Int']['output'];
    /** The number of times to attempt a credit card automatic payment. */
    autopay_credit_card_attempts: Scalars['Int']['output'];
    /** The number of days between retries for credit card automatic payments. */
    autopay_credit_card_retry_interval_in_days: Scalars['Int']['output'];
    /** Whether the automatic payment process should just run the invoice amount, or the entire amount due on the account. */
    autopay_runs_entire_amount_due: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not the daily billing process is enabled. */
    daily_billing: Scalars['Boolean']['output'];
    /** The number of days after the due date on a delinquent invoice for a late fee to be applied. */
    days_after_invoice_due_for_late_fee_application?: Maybe<Scalars['Int']['output']>;
    /** Whether or not to delete expired credit cards from Sonar. */
    delete_expired_credit_cards: Scalars['Boolean']['output'];
    /** Friday. */
    delinquency_check_day_friday: Scalars['Boolean']['output'];
    /** Monday. */
    delinquency_check_day_monday: Scalars['Boolean']['output'];
    /** Saturday. */
    delinquency_check_day_saturday: Scalars['Boolean']['output'];
    /** Sunday. */
    delinquency_check_day_sunday: Scalars['Boolean']['output'];
    /** Thursday. */
    delinquency_check_day_thursday: Scalars['Boolean']['output'];
    /** Tuesday. */
    delinquency_check_day_tuesday: Scalars['Boolean']['output'];
    /** Wednesday. */
    delinquency_check_day_wednesday: Scalars['Boolean']['output'];
    /** The account status used when moving accounts into the post-delinquency state. */
    disconnect_account_status?: Maybe<AccountStatus>;
    /** The `AccountStatus` for disconnected accounts. */
    disconnect_account_status_id: Scalars['Int64Bit']['output'];
    /** Whether to exclude inactive accounts from late fee application. */
    exclude_inactive_accounts_from_late_fees: Scalars['Boolean']['output'];
    /** Generate an invoice on an account when it is first activated, if there are any uninvoiced debits. */
    generate_invoice_on_initial_activation: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether to invoice and email late fees immediately, or add them to the next invoice. */
    invoice_and_email_late_fees_immediately: Scalars['Boolean']['output'];
    /** The minimum amount an invoice must be past due for a late fee to be applied. */
    late_fee_minimum_delinquency_amount?: Maybe<Scalars['Int']['output']>;
    /** The mode for late fee application. */
    late_fee_mode: LateFeeMode;
    /** If late fees are applied as a percentage, the percentage of the past due balance to apply. */
    late_fee_percentage?: Maybe<Scalars['Float']['output']>;
    /** The service used for late fee application. */
    late_fee_service?: Maybe<Service>;
    /** The ID of a one time `Service` to use for late fee application. */
    late_fee_service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** The minimum account an invoice must be delinquent for before being flagged delinquent. */
    minimum_amount_due_for_delinquency: Scalars['Int']['output'];
    /** The smallest bank account payment amount allowed. */
    minimum_bank_account_payment: Scalars['Int']['output'];
    /** The smallest credit card payment amount allowed. */
    minimum_credit_card_payment: Scalars['Int']['output'];
    /** Printed invoice batch duplex. */
    printed_invoice_batch_duplex: Scalars['Boolean']['output'];
    /** The service ID of a one time `Service` to charge for accounts with `print_invoice` enabled in their `AccountBillingParameter`. */
    printed_invoice_fee_service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The service used for printed invoices. */
    printed_invoice_service?: Maybe<Service>;
    /** Whether or not changing the status from an active to inactive status is prorated by default. */
    prorate_account_status_change: Scalars['Boolean']['output'];
    /** Whether or not changing an account bill day is prorated by default. */
    prorate_billing_day_change: Scalars['Boolean']['output'];
    /** Whether or not service quantity changes are prorated by default. */
    prorate_service_quantity: Scalars['Boolean']['output'];
    /** Whether or not service addition and removal is prorated by default. */
    prorate_services: Scalars['Boolean']['output'];
    /** Whether or not to round prorated transactions to the nearest major unit (e.g. to the nearest dollar, euro, pound, etc.) */
    round_prorated_amounts: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Billing configuration settings. */
export type BillingSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Billing configuration settings. */
export type BillingSettingAccount_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Billing configuration settings. */
export type BillingSettingDisconnect_Account_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Billing configuration settings. */
export type BillingSettingLate_Fee_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Billing configuration settings. */
export type BillingSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Billing configuration settings. */
export type BillingSettingPrinted_Invoice_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Provides credentials for a cable modem provisioner. */
export type CableModemAuthenticationCredentialMutationInput = {
    /** An individual credential to authenticate to a cable modem provisioner. */
    credential: CableModemProvisionerAuthenticationCredential;
    /** The credential value (e.g. username, password, etc.) */
    value: Scalars['String']['input'];
};
/** A cable modem provisioner. */
export type CableModemProvisioner = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CableModemProvisioner';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A cable modem provisioner credential. */
    cable_modem_provisioner_credentials: CableModemProvisionerCredentialConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** Hostname. */
    hostname: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The date and time this device was last synchronized. */
    last_synchronized?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status?: Maybe<ProvisioningDeviceStatus>;
    /** A message describing what caused the current status of this device. */
    status_message?: Maybe<Scalars['String']['output']>;
    /** Whether or not a synchronization request is queued. */
    synchronization_queued: Scalars['Boolean']['output'];
    /** The date/time that synchronization started. */
    synchronization_start?: Maybe<Scalars['Datetime']['output']>;
    /** The type. */
    type: CableModemProvisionerType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A cable modem provisioner. */
export type CableModemProvisionerAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A cable modem provisioner. */
export type CableModemProvisionerCable_Modem_Provisioner_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    cable_modem_provisioner_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<CableModemProvisionerAuthenticationCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A cable modem provisioner. */
export type CableModemProvisionerLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A cable modem provisioner. */
export type CableModemProvisionerNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A cable modem provisioner authentication credential. */
export declare enum CableModemProvisionerAuthenticationCredential {
    /** Incognito DHCP port */
    IncognitoDhcpPort = "INCOGNITO_DHCP_PORT",
    /** Incognito MPS port */
    IncognitoMpsPort = "INCOGNITO_MPS_PORT",
    /** Incognito password */
    IncognitoPassword = "INCOGNITO_PASSWORD",
    /** Incognito username */
    IncognitoUsername = "INCOGNITO_USERNAME"
}
/** The connection wrapper around the `CableModemProvisionerConnection` type. */
export type CableModemProvisionerConnection = {
    __typename: 'CableModemProvisionerConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CableModemProvisioner>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A cable modem provisioner credential. */
export type CableModemProvisionerCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CableModemProvisionerCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A cable modem provisioner. */
    cable_modem_provisioner?: Maybe<CableModemProvisioner>;
    /** The ID of a `CableModemProvisioner`. */
    cable_modem_provisioner_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An individual credential to authenticate to a cable modem provisioner. */
    credential: CableModemProvisionerAuthenticationCredential;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The credential value (e.g. username, password, etc.) */
    value: Scalars['String']['output'];
};
/** A cable modem provisioner credential. */
export type CableModemProvisionerCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A cable modem provisioner credential. */
export type CableModemProvisionerCredentialCable_Modem_ProvisionerArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hostname?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<CableModemProvisionerType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A cable modem provisioner credential. */
export type CableModemProvisionerCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A cable modem provisioner credential. */
export type CableModemProvisionerCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CableModemProvisionerCredentialConnection` type. */
export type CableModemProvisionerCredentialConnection = {
    __typename: 'CableModemProvisionerCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CableModemProvisionerCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of cable modem provisioner. */
export declare enum CableModemProvisionerType {
    /** Incognito */
    Incognito = "INCOGNITO"
}
/** An iCalendar calendar. */
export type CalendarIcal = AccessloggableInterface & LoggableInterface & {
    __typename: 'CalendarIcal';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The url that can be used on remote calendars for integration of Sonar events. */
    url?: Maybe<Scalars['URL']['output']>;
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** An iCalendar calendar. */
export type CalendarIcalAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An iCalendar calendar. */
export type CalendarIcalLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An iCalendar calendar. */
export type CalendarIcalUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `CalendarIcalConnection` type. */
export type CalendarIcalConnection = {
    __typename: 'CalendarIcalConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CalendarIcal>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A configuration for a specific Calix SMx endpoint. */
export type CalixIntegration = AccessloggableInterface & IntegrationconfigurableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CalixIntegration';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Holds information for provisioning service on Calix devices. */
    account_calix_service_details: AccountCalixServiceDetailConnection;
    /** Controls if Sonar updates the ICMP device status from SMx alarms */
    alarms_change_device_status: Scalars['Boolean']['output'];
    /** Controls if Sonar should add SMx device alarms to inventory item logs */
    alarms_create_logs: Scalars['Boolean']['output'];
    /** Controls if Sonar updates the inventory item's soft IP address from SMx DHCP lease alarms. */
    alarms_update_ip_assignment: Scalars['Boolean']['output'];
    /** Disable, pause, then re-enable Calix ONT ports after creating or removing service.  Recommended for deployments using DHCP within SMx. */
    bounce_ports: Scalars['Boolean']['output'];
    /** The Calix policy map name to use when a commercial account becomes delinquent. */
    commercial_delinquency_policy_map?: Maybe<Scalars['String']['output']>;
    /** The Calix service template name to use when a commercial account becomes delinquent. */
    commercial_delinquency_service_template?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Controls whether to turn on synchronization of Calix ONTs and Subscribers, from Sonar Inventory Items and Accounts. */
    enable_ont_synchronization: Scalars['Boolean']['output'];
    /** The Calix policy map name to use when a government account becomes delinquent. */
    government_delinquency_policy_map?: Maybe<Scalars['String']['output']>;
    /** The Calix service template name to use when a government account becomes delinquent. */
    government_delinquency_service_template?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The Calix policy map name to use when an industrial account becomes delinquent. */
    industrial_delinquency_policy_map?: Maybe<Scalars['String']['output']>;
    /** The Calix service template name to use when an industrial account becomes delinquent. */
    industrial_delinquency_service_template?: Maybe<Scalars['String']['output']>;
    /** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
    integration_field_mappings: IntegrationFieldMappingConnection;
    /** An entity which maps a service to a vendor specific service name */
    integration_service_mappings: IntegrationServiceMappingConnection;
    /** The date and time this device was last synchronized. */
    last_synchronized?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** Subscriber organization ID to use for integration */
    org_id: Scalars['String']['output'];
    /** The Calix policy map name to use when a residential account becomes delinquent. */
    residential_delinquency_policy_map?: Maybe<Scalars['String']['output']>;
    /** The Calix service template name to use when a residential account becomes delinquent. */
    residential_delinquency_service_template?: Maybe<Scalars['String']['output']>;
    /** The Calix policy map name to use when a senior citizen account becomes delinquent. */
    senior_citizen_delinquency_policy_map?: Maybe<Scalars['String']['output']>;
    /** The Calix service template name to use when a senior citizen account becomes delinquent. */
    senior_citizen_delinquency_service_template?: Maybe<Scalars['String']['output']>;
    /** The basic auth credentials to use with SMx, username:password */
    smx_credentials: Scalars['String']['output'];
    /** The URL of the SMx server including the SMx API port, eg. mysmx.org:18443 (SMx uses 18443 as the default API port) */
    smx_url: Scalars['String']['output'];
    /** The software version of SMx that will be used in integration */
    smx_version: CalixIntegrationVersion;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status?: Maybe<ProvisioningDeviceStatus>;
    /** A message describing what caused the current status of this device. */
    status_message?: Maybe<Scalars['String']['output']>;
    /** The ID of the account custom field which holds the SMx subscriber ID of the account. */
    subscriber_custom_field_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Whether or not a synchronization request is queued. */
    synchronization_queued: Scalars['Boolean']['output'];
    /** The date/time that synchronization started. */
    synchronization_start?: Maybe<Scalars['Datetime']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A configuration for a specific Calix SMx endpoint. */
export type CalixIntegrationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configuration for a specific Calix SMx endpoint. */
export type CalixIntegrationAccount_Calix_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calix_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_json?: InputMaybe<Scalars['String']['input']>;
    cvlan?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_vlan?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ont_port_id?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_map?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    use_custom_json?: InputMaybe<Scalars['Boolean']['input']>;
    vlan?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configuration for a specific Calix SMx endpoint. */
export type CalixIntegrationIntegration_Field_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integration_field_type?: InputMaybe<IntegrationFieldType>;
    integrationconfigurable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_type?: InputMaybe<Scalars['String']['input']>;
    inventory_model_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A configuration for a specific Calix SMx endpoint. */
export type CalixIntegrationIntegration_Service_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_map?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_template_name?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A configuration for a specific Calix SMx endpoint. */
export type CalixIntegrationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configuration for a specific Calix SMx endpoint. */
export type CalixIntegrationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CalixIntegrationConnection` type. */
export type CalixIntegrationConnection = {
    __typename: 'CalixIntegrationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CalixIntegration>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The version of the SMX endpoint */
export declare enum CalixIntegrationVersion {
    /** Supports SMx versions up to 23.2 */
    V21 = "V21",
    /** Supports SMx versions 23.3 and later */
    V23_3 = "V23_3"
}
/** types.calixProvisioningListType */
export type CalixProvisioningList = {
    __typename: 'CalixProvisioningList';
    /** The value. */
    value?: Maybe<Scalars['String']['output']>;
};
/** The connection wrapper around the `CalixProvisioningList` type. */
export type CalixProvisioningListConnection = {
    __typename: 'CalixProvisioningListConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CalixProvisioningList>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of list to return for  lists of options for Calix provisioning fields. */
export declare enum CalixProvisioningListType {
    /** Global VLANs */
    GlobalVlans = "GLOBAL_VLANS",
    /** Policy Maps */
    PolicyMaps = "POLICY_MAPS",
    /** Calix ONT Ports */
    Ports = "PORTS",
    /** Calix Service Templates */
    ServiceTemplates = "SERVICE_TEMPLATES"
}
/** A call detail record (CDR). */
export type CallDetailRecord = AccessloggableInterface & LoggableInterface & {
    __typename: 'CallDetailRecord';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: Maybe<Scalars['Float']['output']>;
    /** The rate that is charged to a customer. */
    charge_rate?: Maybe<Scalars['Float']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The prefix description for the call detail record having provider rated prefix. */
    description?: Maybe<Scalars['String']['output']>;
    /** The direction of the call. */
    direction?: Maybe<CallDetailRecordDirection>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The total length of the call in seconds. */
    length_in_seconds: Scalars['Int']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The matched prefix of this call record. */
    matched_prefix?: Maybe<Scalars['String']['output']>;
    /** A record of a monthly billing cycle. */
    monthly_billing_completion?: Maybe<MonthlyBillingCompletion>;
    /** The ID of a `MonthlyBillingCompletion`. */
    monthly_billing_completion_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The DID that initiated the call. */
    originating_number?: Maybe<Scalars['String']['output']>;
    /** The prefix type of this call record. */
    prefix_type?: Maybe<CallDetailRecordPrefixType>;
    /** The DID that received the call. */
    receiving_number?: Maybe<Scalars['String']['output']>;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** When the call was started. */
    started_at: Scalars['Datetime']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** A call detail record (CDR). */
export type CallDetailRecordAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A call detail record (CDR). */
export type CallDetailRecordAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A call detail record (CDR). */
export type CallDetailRecordLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A call detail record (CDR). */
export type CallDetailRecordMonthly_Billing_CompletionArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A call detail record (CDR). */
export type CallDetailRecordServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A call detail record (CDR). */
export type CallDetailRecordVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `CallDetailRecordConnection` type. */
export type CallDetailRecordConnection = {
    __typename: 'CallDetailRecordConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CallDetailRecord>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The direction of a call detail record (CDR). */
export declare enum CallDetailRecordDirection {
    /** INBOUND */
    Inbound = "INBOUND",
    /** OUTBOUND */
    Outbound = "OUTBOUND"
}
/** An import of call detail records (CDRs). */
export type CallDetailRecordImport = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'CallDetailRecordImport';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The ID of a call data record (CDR) import. */
    call_data_record_import_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** How many records passed validation checks during import. */
    clean_records?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Any errors encountered for this import. */
    errors?: Maybe<Scalars['Text']['output']>;
    /** How many records did not pass validation checks during import. */
    failed_records?: Maybe<Scalars['Int']['output']>;
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status: AsyncImportStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** An import of call detail records (CDRs). */
export type CallDetailRecordImportAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of call detail records (CDRs). */
export type CallDetailRecordImportFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of call detail records (CDRs). */
export type CallDetailRecordImportLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of call detail records (CDRs). */
export type CallDetailRecordImportNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of call detail records (CDRs). */
export type CallDetailRecordImportNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of call detail records (CDRs). */
export type CallDetailRecordImportVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `CallDetailRecordImportConnection` type. */
export type CallDetailRecordImportConnection = {
    __typename: 'CallDetailRecordImportConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CallDetailRecordImport>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A recipe for importing call detail records (CDRs). */
export type CallDetailRecordImportRecipe = AccessloggableInterface & ImportrecipeableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CallDetailRecordImportRecipe';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How many records passed validation checks during import. */
    clean_records?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Any errors encountered for this import. */
    errors?: Maybe<Scalars['Clob']['output']>;
    /** How many records did not pass validation checks during import. */
    failed_records?: Maybe<Scalars['Int']['output']>;
    /** The identifier of a unique batch at Flatfile. */
    flatfile_batch_identifier?: Maybe<Scalars['String']['output']>;
    /** A hash of the data content of an import. */
    hash?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An import. */
    imports: ImportConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The progress of an import as a percentage. */
    progress?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start date and time for the import. */
    start_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** The status. */
    status: ImportStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** A recipe for importing call detail records (CDRs). */
export type CallDetailRecordImportRecipeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing call detail records (CDRs). */
export type CallDetailRecordImportRecipeImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_type?: InputMaybe<ImportrecipeableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A recipe for importing call detail records (CDRs). */
export type CallDetailRecordImportRecipeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing call detail records (CDRs). */
export type CallDetailRecordImportRecipeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing call detail records (CDRs). */
export type CallDetailRecordImportRecipeUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A recipe for importing call detail records (CDRs). */
export type CallDetailRecordImportRecipeVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `CallDetailRecordImportRecipeConnection` type. */
export type CallDetailRecordImportRecipeConnection = {
    __typename: 'CallDetailRecordImportRecipeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CallDetailRecordImportRecipe>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The prefix type of a call detail record. */
export declare enum CallDetailRecordPrefixType {
    /** LOCAL */
    Local = "LOCAL",
    /** LONG DISTANCE */
    LongDistance = "LONG_DISTANCE",
    /** PROVIDER RATED */
    ProviderRated = "PROVIDER_RATED",
    /** TOLL FREE */
    TollFree = "TOLL_FREE"
}
/** A call log. */
export type CallLog = AccessloggableInterface & FileableInterface & LoggableInterface & {
    __typename: 'CallLog';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The body. */
    body: Scalars['Text']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The subject. */
    subject: Scalars['String']['output'];
    /** The time in seconds. */
    time_in_seconds: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A call log. */
export type CallLogAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A call log. */
export type CallLogAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A call log. */
export type CallLogFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A call log. */
export type CallLogLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A call log. */
export type CallLogUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `CallLogConnection` type. */
export type CallLogConnection = {
    __typename: 'CallLogConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CallLog>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A canned reply. */
export type CannedReply = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CannedReply';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The body. */
    body: Scalars['Text']['output'];
    /** A canned reply category. */
    canned_reply_category?: Maybe<CannedReplyCategory>;
    /** The ID of a `CannedReplyCategory`. */
    canned_reply_category_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A canned reply. */
export type CannedReplyAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A canned reply. */
export type CannedReplyCanned_Reply_CategoryArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A canned reply. */
export type CannedReplyLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A canned reply. */
export type CannedReplyNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A canned reply category. */
export type CannedReplyCategory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CannedReplyCategory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A canned reply. */
    canned_replies: CannedReplyConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A canned reply category. */
export type CannedReplyCategoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A canned reply category. */
export type CannedReplyCategoryCanned_RepliesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    canned_reply_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A canned reply category. */
export type CannedReplyCategoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A canned reply category. */
export type CannedReplyCategoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CannedReplyCategoryConnection` type. */
export type CannedReplyCategoryConnection = {
    __typename: 'CannedReplyCategoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CannedReplyCategory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `CannedReplyConnection` type. */
export type CannedReplyConnection = {
    __typename: 'CannedReplyConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CannedReply>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the checkInToJob mutation. */
export type CheckInToJobMutationInput = {
    /** The date and time that this `Job` was checked into. */
    check_in_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** The ID of a `Job`. */
    job_id: Scalars['Int64Bit']['input'];
    /** The ID of the `User` that created a `JobCheckIn`. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the checkOutOfJob mutation. */
export type CheckOutOfJobMutationInput = {
    /** The date and time that this `Job` was checked out of. */
    check_out_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** The ID of a `Job`. */
    job_id: Scalars['Int64Bit']['input'];
    /** The ID of the `User` that created a `JobCheckIn`. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the claimInventoryItems mutation. */
export type ClaimInventoryItemsMutationInput = {
    /** The ID of an `InventoryItem`. */
    ids: Array<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type Company = AccessloggableInterface & AddressableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Company';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    accounts: AccountConnection;
    /** A geographical address. */
    addresses: AddressConnection;
    /** A processor or method of processing bank account payments. */
    bank_account_processors: BankAccountProcessorConnection;
    /** On an enabled remittance slip, who should checks be made payable to? */
    checks_payable_to?: Maybe<Scalars['String']['output']>;
    /** A department in a company. */
    company_departments: CompanyDepartmentConnection;
    /** A contract template. */
    contract_templates: ContractTemplateConnection;
    /** A two character country code. */
    country: Country;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A company that processes `CreditCard` transactions. */
    credit_card_processors: CreditCardProcessorConnection;
    /** A user defined field. */
    custom_fields: CustomFieldConnection;
    /** The URL to your customer portal. */
    customer_portal_url?: Maybe<Scalars['URL']['output']>;
    /** A debit. */
    debits: DebitConnection;
    /** Whether or not this entity is a default entry. */
    default: Scalars['Boolean']['output'];
    /** A discount. */
    discounts: DiscountConnection;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoices: InvoiceConnection;
    /** The ISP type of this `Company`. */
    isp_type?: Maybe<IspType>;
    /** The type of a `Job`. */
    job_types: JobTypeConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A payment. */
    payments: PaymentConnection;
    /** A telephone number. */
    phone_number?: Maybe<Scalars['Numeric']['output']>;
    /** The primary color to use in Sonar. */
    primary_color: Scalars['HtmlHexColor']['output'];
    /** The secondary color to use in Sonar. */
    secondary_color: Scalars['HtmlHexColor']['output'];
    /** An external reference to a dynamic template at SendGrid. */
    sendgrid_dynamic_template_external_references: SendgridDynamicTemplateExternalReferenceConnection;
    /** A service. */
    services: ServiceConnection;
    /** Whether or not to include a detachable remittance slip on the invoice. */
    show_remittance_slip: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax identification number. Should only be entered if you are required to share some type of tax identification information with your customers. */
    tax_identification?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The address of the company website. */
    website_address?: Maybe<Scalars['URL']['output']>;
};
/** A company you do business as. */
export type CompanyAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type CompanyAccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A company you do business as. */
export type CompanyBank_Account_ProcessorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<BankAccountProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyCompany_DepartmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    department_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['Numeric']['input']>;
    number_formatted?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyContract_TemplatesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyCredit_Card_ProcessorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amex?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dankort?: InputMaybe<Scalars['Boolean']['input']>;
    dinersclub?: InputMaybe<Scalars['Boolean']['input']>;
    discover?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    forbrugsforeningen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jcb?: InputMaybe<Scalars['Boolean']['input']>;
    maestro?: InputMaybe<Scalars['Boolean']['input']>;
    mastercard?: InputMaybe<Scalars['Boolean']['input']>;
    moto_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<CreditCardProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unionpay?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    visa?: InputMaybe<Scalars['Boolean']['input']>;
    visaelectron?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A company you do business as. */
export type CompanyCustom_FieldsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_type?: InputMaybe<CustomfielddataableType>;
    enum_options?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    required?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<CustomFieldType>;
    unique?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyDebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type CompanyDiscountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type CompanyFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type CompanyInvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyJob_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type CompanyNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type CompanyPaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company you do business as. */
export type CompanySendgrid_Dynamic_Template_External_ReferencesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_content_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sendgrid_identifier?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    triggered_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company you do business as. */
export type CompanyServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `CompanyConnection` type. */
export type CompanyConnection = {
    __typename: 'CompanyConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Company>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A department in a company. */
export type CompanyDepartment = AccessloggableInterface & LoggableInterface & {
    __typename: 'CompanyDepartment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** A two character country code for this phone number. */
    country?: Maybe<Country>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A department. */
    department?: Maybe<Department>;
    /** The ID of a department. */
    department_id: Scalars['Int64Bit']['output'];
    /** An email address. */
    email_address?: Maybe<Scalars['EmailAddress']['output']>;
    /** The extension. */
    extension?: Maybe<Scalars['Numeric']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The number. */
    number?: Maybe<Scalars['Numeric']['output']>;
    /** A phone number formatted for human readability. */
    number_formatted?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A department in a company. */
export type CompanyDepartmentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A department in a company. */
export type CompanyDepartmentCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A department in a company. */
export type CompanyDepartmentDepartmentArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A department in a company. */
export type CompanyDepartmentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CompanyDepartmentConnection` type. */
export type CompanyDepartmentConnection = {
    __typename: 'CompanyDepartmentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CompanyDepartment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Department information for a company. */
export type CompanyDepartmentInput = {
    /** A two character country code for this phone number. */
    country?: InputMaybe<Country>;
    /** The ID of a department. */
    department_id: Scalars['Int64Bit']['input'];
    /** An email address. */
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** The extension. */
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    /** The number. */
    number?: InputMaybe<Scalars['Numeric']['input']>;
};
/** The entity that completes or completed this `Task`. */
export type CompletableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of entity that completes a task. */
export declare enum CompletableType {
    /** Custom Field */
    CustomField = "CustomField",
    /** File */
    File = "File"
}
/** The input object that defines the fields for the completeFileTask mutation. */
export type CompleteFileTaskMutationInput = {
    /** The ID of a `File`. */
    file_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the completeJob mutation. */
export type CompleteJobMutationInput = {
    /** Whether or not this `Job` was completed successfully. */
    completed_successfully: Scalars['Boolean']['input'];
    /** The date and time this `Job` was completed. */
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** Any notes entered when this `Job` was completed. */
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    /** The ID of a `Job`. */
    job_id: Scalars['Int64Bit']['input'];
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the completeTask mutation. */
export type CompleteTaskMutationInput = {
    /** Whether or not the task is complete. */
    complete: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the consumeGenericInventoryItems mutation. */
export type ConsumeGenericInventoryItemsMutationInput = {
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
};
/** A contact person. */
export type Contact = AccessloggableInterface & CustomfielddataableInterface & EmailableInterface & LoggableInterface & NoteableInterface & SearchableInterface & SmsableInterface & {
    __typename: 'Contact';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The owner of this `Contact`. */
    contactable?: Maybe<ContactableInterface>;
    /** The ID of the entity that owns this contact. */
    contactable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that owns this contact. */
    contactable_type: ContactableType;
    /** A contract. */
    contracts: ContractConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** An email address. */
    email_address?: Maybe<Scalars['EmailAddress']['output']>;
    /** A categorization of an `Email` by type. */
    email_categories: EmailCategoryConnection;
    /** An email. */
    emails: EmailConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A supported language. */
    language?: Maybe<Language>;
    /** A log entry. */
    logs: LogConnection;
    /** A mass email communication. */
    mass_emails: MassEmailConnection;
    /** A categorization of a message by type. */
    message_categories: MessageCategoryConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A phone number. */
    phone_numbers: PhoneNumberConnection;
    /** Whether or not this is the primary type of entity. */
    primary: Scalars['Boolean']['output'];
    /** The role of the contact, e.g. "CEO" or "Network Engineer". */
    role?: Maybe<Scalars['String']['output']>;
    /** An SMS outbound message. */
    sms_outbound_messages: SmsOutboundMessageConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A username, used for authentication. */
    username?: Maybe<Scalars['String']['output']>;
};
/** A contact person. */
export type ContactAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contact person. */
export type ContactContactableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contact person. */
export type ContactContractsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_message?: InputMaybe<Scalars['Text']['input']>;
    expiration_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    handwritten_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    unique_link_key?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contact person. */
export type ContactCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A contact person. */
export type ContactEmail_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contact person. */
export type ContactEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contact person. */
export type ContactLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contact person. */
export type ContactMass_EmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subject?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contact person. */
export type ContactMessage_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contact person. */
export type ContactNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contact person. */
export type ContactPhone_NumbersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['Numeric']['input']>;
    number_formatted?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_opt_in?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contact person. */
export type ContactSms_Outbound_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    category?: InputMaybe<SmsOutboundCategory>;
    cost_in_hundredths?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    destination_country?: InputMaybe<Scalars['String']['input']>;
    error_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_status_check?: InputMaybe<Scalars['Datetime']['input']>;
    message_text?: InputMaybe<Scalars['String']['input']>;
    mobile_number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider_message_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    segments?: InputMaybe<Scalars['Int']['input']>;
    smsable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    smsable_type?: InputMaybe<SmsableType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SmsOutboundStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `ContactConnection` type. */
export type ContactConnection = {
    __typename: 'ContactConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Contact>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that can own a `Contact`. */
export type ContactableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An entity that can have a `Contact` associated with it. */
export declare enum ContactableType {
    /** Account */
    Account = "Account",
    /** Network Site */
    NetworkSite = "NetworkSite",
    /** Vendor */
    Vendor = "Vendor"
}
/** A contract. */
export type Contract = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Contract';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The body. */
    body: Scalars['Text']['output'];
    /** A contact person. */
    contact?: Maybe<Contact>;
    /** The ID of the contact that owns this. */
    contact_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A contract template. */
    contract_template?: Maybe<ContractTemplate>;
    /** The ID of a `ContractTemplate`. */
    contract_template_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The custom message. */
    custom_message?: Maybe<Scalars['Text']['output']>;
    /** The expiration date. */
    expiration_date?: Maybe<Scalars['Date']['output']>;
    /** The signature on a contract. */
    handwritten_signature?: Maybe<HandwrittenSignature>;
    /** The ID of a `HandwrittenSignature`. */
    handwritten_signature_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The term in months. */
    term_in_months?: Maybe<Scalars['Int']['output']>;
    /** Part of the unique URL used for signing. */
    unique_link_key: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A contract. */
export type ContractAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contract. */
export type ContractAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contract. */
export type ContractContactArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A contract. */
export type ContractContract_TemplateArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contract. */
export type ContractHandwritten_SignatureArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contact_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    contact_name?: InputMaybe<Scalars['String']['input']>;
    contact_role?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signer_ip?: InputMaybe<Scalars['IP']['input']>;
    signer_name?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contract. */
export type ContractLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contract. */
export type ContractNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `ContractConnection` type. */
export type ContractConnection = {
    __typename: 'ContractConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Contract>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A contract template. */
export type ContractTemplate = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ContractTemplate';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The body. */
    body: Scalars['Text']['output'];
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A contract. */
    contracts: ContractConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The type of a `Job`. */
    job_types: JobTypeConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The term in months. */
    term_in_months?: Maybe<Scalars['Int']['output']>;
    /** A ticket group. */
    ticket_group?: Maybe<TicketGroup>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A contract template. */
export type ContractTemplateAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contract template. */
export type ContractTemplateCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A contract template. */
export type ContractTemplateContractsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_message?: InputMaybe<Scalars['Text']['input']>;
    expiration_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    handwritten_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    unique_link_key?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contract template. */
export type ContractTemplateJob_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A contract template. */
export type ContractTemplateLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contract template. */
export type ContractTemplateNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A contract template. */
export type ContractTemplateTicket_GroupArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    private?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `ContractTemplateConnection` type. */
export type ContractTemplateConnection = {
    __typename: 'ContractTemplateConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ContractTemplate>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A Sonar credit card. */
export type CoreCreditCard = AccessloggableInterface & LoggableInterface & {
    __typename: 'CoreCreditCard';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** Whether or not this payment method is enabled for automatic payments. */
    auto: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of a CreditCardProcessor. */
    credit_card_processor_id: Scalars['Int64Bit']['output'];
    /** The type of a credit card (e.g. Visa, Mastercard.) */
    credit_card_type: CreditCardType;
    /** The profile ID provided by a credit card processing service. */
    customer_profile_id?: Maybe<Scalars['String']['output']>;
    /** The month the credit card expires. */
    expiration_month: Scalars['Int']['output'];
    /** The year the credit card expires. */
    expiration_year: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A partial credit card number that can be used for identification. */
    masked_number: Scalars['String']['output'];
    /** The name on the credit card. */
    name_on_card?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The tokenized value that represents a credit card, provided by a credit card processing service. */
    token: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A Sonar credit card. */
export type CoreCreditCardAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A Sonar credit card. */
export type CoreCreditCardLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A Sonar payment. */
export type CorePayment = AccessloggableInterface & LoggableInterface & {
    __typename: 'CorePayment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The amount of the payment, in the smallest currency value. */
    amount: Scalars['Int']['output'];
    /** The amount remaining that can be used. */
    amount_remaining: Scalars['Int']['output'];
    /** The ID of a BankAccount. */
    bank_account_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A token sent to the payment provider during payment creation. */
    creation_token?: Maybe<Scalars['String']['output']>;
    /** The ID of a CreditCard. */
    credit_card_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The deposit slip ID. */
    deposit_slip_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A description of the payment, used for internal reference. */
    description?: Maybe<Scalars['String']['output']>;
    /** The fee for this transaction. */
    fee?: Maybe<Scalars['Int']['output']>;
    /** The fee for this transaction in fractional cents */
    fractional_fee?: Maybe<Scalars['Int']['output']>;
    /** The entire response back from the company that processed the transaction. Not typically human readable. */
    full_processor_response?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The date and time the payment was made. */
    payment_datetime: Scalars['Datetime']['output'];
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: Maybe<Scalars['String']['output']>;
    /** The type of payment (e.g. cash, credit card.) */
    payment_type: PaymentType;
    /** The message returned back from the company that processed the transaction. */
    processor_message?: Maybe<Scalars['String']['output']>;
    /** The status of the payment provided by the payment processor. */
    processor_status?: Maybe<Scalars['String']['output']>;
    /** A payment reference like a check number, or wire transfer confirmation number. */
    reference?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether or not this was successful. */
    successful: Scalars['Boolean']['output'];
    /** The transaction ID from the credit card provider. */
    transaction_id?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A Sonar payment. */
export type CorePaymentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A Sonar payment. */
export type CorePaymentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical country, represented as a two character ISO code. */
export declare enum Country {
    /** Andorra */
    Ad = "AD",
    /** United Arab Emirates */
    Ae = "AE",
    /** Afghanistan */
    Af = "AF",
    /** Antigua and/or Barbuda */
    Ag = "AG",
    /** Anguilla */
    Ai = "AI",
    /** Albania */
    Al = "AL",
    /** Armenia */
    Am = "AM",
    /** Netherlands Antilles */
    An = "AN",
    /** Angola */
    Ao = "AO",
    /** Antarctica */
    Aq = "AQ",
    /** Argentina */
    Ar = "AR",
    /** Austria */
    At = "AT",
    /** Australia */
    Au = "AU",
    /** Aruba */
    Aw = "AW",
    /** Azerbaijan */
    Az = "AZ",
    /** Bosnia and Herzegovina */
    Ba = "BA",
    /** Barbados */
    Bb = "BB",
    /** Bangladesh */
    Bd = "BD",
    /** Belgium */
    Be = "BE",
    /** Burkina Faso */
    Bf = "BF",
    /** Bulgaria */
    Bg = "BG",
    /** Bahrain */
    Bh = "BH",
    /** Burundi */
    Bi = "BI",
    /** Benin */
    Bj = "BJ",
    /** Bermuda */
    Bm = "BM",
    /** Brunei Darussalam */
    Bn = "BN",
    /** Bolivia */
    Bo = "BO",
    /** Brazil */
    Br = "BR",
    /** Bahamas */
    Bs = "BS",
    /** Bhutan */
    Bt = "BT",
    /** Bouvet Island */
    Bv = "BV",
    /** Botswana */
    Bw = "BW",
    /** Belarus */
    By = "BY",
    /** Belize */
    Bz = "BZ",
    /** Canada */
    Ca = "CA",
    /** Cocos (Keeling) Islands */
    Cc = "CC",
    /** Central African Republic */
    Cf = "CF",
    /** Congo */
    Cg = "CG",
    /** Switzerland */
    Ch = "CH",
    /** Ivory Coast */
    Ci = "CI",
    /** Cook Islands */
    Ck = "CK",
    /** Chile */
    Cl = "CL",
    /** Cameroon */
    Cm = "CM",
    /** China */
    Cn = "CN",
    /** Colombia */
    Co = "CO",
    /** Costa Rica */
    Cr = "CR",
    /** Cuba */
    Cu = "CU",
    /** Cape Verde */
    Cv = "CV",
    /** Christmas Island */
    Cx = "CX",
    /** Cyprus */
    Cy = "CY",
    /** Czech Republic */
    Cz = "CZ",
    /** Germany */
    De = "DE",
    /** Djibouti */
    Dj = "DJ",
    /** Denmark */
    Dk = "DK",
    /** Dominica */
    Dm = "DM",
    /** Dominican Republic */
    Do = "DO",
    /** Algeria */
    Dz = "DZ",
    /** Ecuador */
    Ec = "EC",
    /** Estonia */
    Ee = "EE",
    /** Egypt */
    Eg = "EG",
    /** Western Sahara */
    Eh = "EH",
    /** Eritrea */
    Er = "ER",
    /** Spain */
    Es = "ES",
    /** Ethiopia */
    Et = "ET",
    /** Finland */
    Fi = "FI",
    /** Fiji */
    Fj = "FJ",
    /** Falkland Islands (Malvinas) */
    Fk = "FK",
    /** Micronesia, Federated States of */
    Fm = "FM",
    /** Faroe Islands */
    Fo = "FO",
    /** France */
    Fr = "FR",
    /** France, Metropolitan */
    Fx = "FX",
    /** Gabon */
    Ga = "GA",
    /** United Kingdom */
    Gb = "GB",
    /** Grenada */
    Gd = "GD",
    /** Georgia */
    Ge = "GE",
    /** French Guiana */
    Gf = "GF",
    /** Ghana */
    Gh = "GH",
    /** Gibraltar */
    Gi = "GI",
    /** Greenland */
    Gl = "GL",
    /** Gambia */
    Gm = "GM",
    /** Guinea */
    Gn = "GN",
    /** Guadeloupe */
    Gp = "GP",
    /** Equatorial Guinea */
    Gq = "GQ",
    /** Greece */
    Gr = "GR",
    /** South Georgia South Sandwich Islands */
    Gs = "GS",
    /** Guatemala */
    Gt = "GT",
    /** Guinea-Bissau */
    Gw = "GW",
    /** Guyana */
    Gy = "GY",
    /** Hong Kong */
    Hk = "HK",
    /** Heard and Mc Donald Islands */
    Hm = "HM",
    /** Honduras */
    Hn = "HN",
    /** Croatia (Hrvatska) */
    Hr = "HR",
    /** Haiti */
    Ht = "HT",
    /** Hungary */
    Hu = "HU",
    /** Indonesia */
    Id = "ID",
    /** Ireland */
    Ie = "IE",
    /** Israel */
    Il = "IL",
    /** India */
    In = "IN",
    /** British Indian Ocean Territory */
    Io = "IO",
    /** Iraq */
    Iq = "IQ",
    /** Iran (Islamic Republic of) */
    Ir = "IR",
    /** Iceland */
    Is = "IS",
    /** Italy */
    It = "IT",
    /** Jamaica */
    Jm = "JM",
    /** Jordan */
    Jo = "JO",
    /** Japan */
    Jp = "JP",
    /** Kenya */
    Ke = "KE",
    /** Kyrgyzstan */
    Kg = "KG",
    /** Cambodia */
    Kh = "KH",
    /** Kiribati */
    Ki = "KI",
    /** Comoros */
    Km = "KM",
    /** Saint Kitts and Nevis */
    Kn = "KN",
    /** Korea, Democratic People's Republic of */
    Kp = "KP",
    /** Korea, Republic of */
    Kr = "KR",
    /** Kuwait */
    Kw = "KW",
    /** Cayman Islands */
    Ky = "KY",
    /** Kazakhstan */
    Kz = "KZ",
    /** Lao People's Democratic Republic */
    La = "LA",
    /** Lebanon */
    Lb = "LB",
    /** Saint Lucia */
    Lc = "LC",
    /** Liechtenstein */
    Li = "LI",
    /** Sri Lanka */
    Lk = "LK",
    /** Liberia */
    Lr = "LR",
    /** Lesotho */
    Ls = "LS",
    /** Lithuania */
    Lt = "LT",
    /** Luxembourg */
    Lu = "LU",
    /** Latvia */
    Lv = "LV",
    /** Libyan Arab Jamahiriya */
    Ly = "LY",
    /** Morocco */
    Ma = "MA",
    /** Monaco */
    Mc = "MC",
    /** Moldova, Republic of */
    Md = "MD",
    /** Madagascar */
    Mg = "MG",
    /** Marshall Islands */
    Mh = "MH",
    /** Macedonia */
    Mk = "MK",
    /** Mali */
    Ml = "ML",
    /** Myanmar */
    Mm = "MM",
    /** Mongolia */
    Mn = "MN",
    /** Macau */
    Mo = "MO",
    /** Martinique */
    Mq = "MQ",
    /** Mauritania */
    Mr = "MR",
    /** Montserrat */
    Ms = "MS",
    /** Malta */
    Mt = "MT",
    /** Mauritius */
    Mu = "MU",
    /** Maldives */
    Mv = "MV",
    /** Malawi */
    Mw = "MW",
    /** Mexico */
    Mx = "MX",
    /** Malaysia */
    My = "MY",
    /** Mozambique */
    Mz = "MZ",
    /** Namibia */
    Na = "NA",
    /** New Caledonia */
    Nc = "NC",
    /** Niger */
    Ne = "NE",
    /** Norfork Island */
    Nf = "NF",
    /** Nigeria */
    Ng = "NG",
    /** Nicaragua */
    Ni = "NI",
    /** Netherlands */
    Nl = "NL",
    /** Norway */
    No = "NO",
    /** Nepal */
    Np = "NP",
    /** Nauru */
    Nr = "NR",
    /** Niue */
    Nu = "NU",
    /** New Zealand */
    Nz = "NZ",
    /** Oman */
    Om = "OM",
    /** Panama */
    Pa = "PA",
    /** Peru */
    Pe = "PE",
    /** French Polynesia */
    Pf = "PF",
    /** Papua New Guinea */
    Pg = "PG",
    /** Philippines */
    Ph = "PH",
    /** Pakistan */
    Pk = "PK",
    /** Poland */
    Pl = "PL",
    /** St. Pierre and Miquelon */
    Pm = "PM",
    /** Pitcairn */
    Pn = "PN",
    /** Puerto Rico */
    Pr = "PR",
    /** Portugal */
    Pt = "PT",
    /** Palau */
    Pw = "PW",
    /** Paraguay */
    Py = "PY",
    /** Qatar */
    Qa = "QA",
    /** Reunion */
    Re = "RE",
    /** Romania */
    Ro = "RO",
    /** Serbia */
    Rs = "RS",
    /** Russian Federation */
    Ru = "RU",
    /** Rwanda */
    Rw = "RW",
    /** Saudi Arabia */
    Sa = "SA",
    /** Solomon Islands */
    Sb = "SB",
    /** Seychelles */
    Sc = "SC",
    /** Sudan */
    Sd = "SD",
    /** Sweden */
    Se = "SE",
    /** Singapore */
    Sg = "SG",
    /** St. Helena */
    Sh = "SH",
    /** Slovenia */
    Si = "SI",
    /** Svalbard and Jan Mayen Islands */
    Sj = "SJ",
    /** Slovakia */
    Sk = "SK",
    /** Sierra Leone */
    Sl = "SL",
    /** San Marino */
    Sm = "SM",
    /** Senegal */
    Sn = "SN",
    /** Somalia */
    So = "SO",
    /** Suriname */
    Sr = "SR",
    /** Sao Tome and Principe */
    St = "ST",
    /** El Salvador */
    Sv = "SV",
    /** Syrian Arab Republic */
    Sy = "SY",
    /** Swaziland */
    Sz = "SZ",
    /** Turks and Caicos Islands */
    Tc = "TC",
    /** Chad */
    Td = "TD",
    /** French Southern Territories */
    Tf = "TF",
    /** Togo */
    Tg = "TG",
    /** Thailand */
    Th = "TH",
    /** Tajikistan */
    Tj = "TJ",
    /** Tokelau */
    Tk = "TK",
    /** Turkmenistan */
    Tm = "TM",
    /** Tunisia */
    Tn = "TN",
    /** Tonga */
    To = "TO",
    /** East Timor */
    Tp = "TP",
    /** Turkey */
    Tr = "TR",
    /** Trinidad and Tobago */
    Tt = "TT",
    /** Tuvalu */
    Tv = "TV",
    /** Taiwan */
    Tw = "TW",
    /** Mayotte */
    Ty = "TY",
    /** Tanzania, United Republic of */
    Tz = "TZ",
    /** Ukraine */
    Ua = "UA",
    /** Uganda */
    Ug = "UG",
    /** United States */
    Us = "US",
    /** Uruguay */
    Uy = "UY",
    /** Uzbekistan */
    Uz = "UZ",
    /** Vatican City State */
    Va = "VA",
    /** Saint Vincent and the Grenadines */
    Vc = "VC",
    /** Venezuela */
    Ve = "VE",
    /** Virgin Islands (British) */
    Vg = "VG",
    /** Vietnam */
    Vn = "VN",
    /** Vanuatu */
    Vu = "VU",
    /** Wallis and Futuna Islands */
    Wf = "WF",
    /** Samoa */
    Ws = "WS",
    /** Yemen */
    Ye = "YE",
    /** Yugoslavia */
    Yu = "YU",
    /** South Africa */
    Za = "ZA",
    /** Zambia */
    Zm = "ZM",
    /** Zaire */
    Zr = "ZR",
    /** Zimbabwe */
    Zw = "ZW"
}
/** The input object that defines the fields for the createAccessLog mutation. */
export type CreateAccessLogMutationInput = {
    /** The ID of the entity that this access log belongs to. */
    accessloggable_id: Scalars['Int64Bit']['input'];
    /** The entity that this access log belongs to. */
    accessloggable_type: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createAccountAdjustmentTransaction mutation. */
export type CreateAccountAdjustmentTransactionMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The amount to apply this adjustment service for. */
    amount: Scalars['Int']['input'];
    /** A description for the transaction. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createAccountCalixServiceDetail mutation. */
export type CreateAccountCalixServiceDetailMutationInput = {
    /** The ID of an AccountService. */
    account_service_id: Scalars['Int64Bit']['input'];
    /** Calix Inegartion ID. */
    calix_integration_id: Scalars['Int64Bit']['input'];
    /** Custom JSON. */
    custom_json?: InputMaybe<Scalars['String']['input']>;
    /** C-VLAN. */
    cvlan?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Global VLAN. */
    global_vlan?: InputMaybe<Scalars['String']['input']>;
    /** ONT Port ID. */
    ont_port_id?: InputMaybe<Scalars['String']['input']>;
    /** Policy Map. */
    policy_map?: InputMaybe<Scalars['String']['input']>;
    /** Use Custom JSON. */
    use_custom_json?: InputMaybe<Scalars['Boolean']['input']>;
    /** VLAN. */
    vlan?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createAccountGroup mutation. */
export type CreateAccountGroupMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createAccount mutation. */
export type CreateAccountMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of an AccountStatus. */
    account_status_id: Scalars['Int64Bit']['input'];
    /** The ID of an AccountType. */
    account_type_id: Scalars['Int64Bit']['input'];
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['input'];
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** An address where this entity receives mail. If this is not set, the physical address will be used as the mailing address. */
    mailing_address?: InputMaybe<CreateAddressMutationInput>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The primary contact person. */
    primary_contact: CreatePrimaryContactMutationInput;
    /** The ID of the serviceable address to use for this account. */
    serviceable_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createAccountOneTimeTransaction mutation. */
export type CreateAccountOneTimeTransactionMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** Items specific to a voice service. Includes the quantity, price override, and related configuration parameter of each. */
    account_voice_service_details?: InputMaybe<Array<InputMaybe<OneTimeTransactionAccountVoiceServiceDetailMutationInput>>>;
    /** A description for the transaction. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The amount to override the cost of the service to. If this is excluded, the service cost will be used. */
    price_override?: InputMaybe<Scalars['Int']['input']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createAccountStatus mutation. */
export type CreateAccountStatusMutationInput = {
    /** Whether or not this status activates the account. */
    activates_account: Scalars['Boolean']['input'];
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color: Scalars['HtmlHexColor']['input'];
    /** An icon. */
    icon: Icon;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createAccountType mutation. */
export type CreateAccountTypeMutationInput = {
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** An icon. */
    icon?: InputMaybe<Icon>;
    /** The ID of an `InvoiceMessage`. */
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The type. */
    type: AccountTypeEnum;
};
/** The input object that defines the fields for the createAchBatch mutation. */
export type CreateAchBatchMutationInput = {
    /** The batch ID that gets inserted into the ACH file on generation. */
    ach_sequence: Scalars['Int64Bit']['input'];
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether the receiving bank requires an offset record. */
    offset_record: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createAddressList mutation. */
export type CreateAddressListMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The types of account statuses for accounts that are part of this grouping. */
    account_status: AddressListAccountStatus;
    /** IDs of `AccountStatus`es. */
    account_status_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of data `Service`s. */
    data_service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The delinquency state for accounts that are part of this grouping. */
    delinquency: AddressListDelinquency;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A list of IDs of `UsageBasedBillingPolicy` objects. */
    usage_based_billing_policy_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The fields necessary to create an address. */
export type CreateAddressMutationInput = {
    /** Address status ID. */
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A city. */
    city: Scalars['String']['input'];
    /** A two character country code. */
    country: Country;
    /** Address line 1. */
    line1: Scalars['String']['input'];
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** A ZIP or postal code. */
    zip: Scalars['String']['input'];
};
/** The input object that defines the fields for the createAddressStatus mutation. */
export type CreateAddressStatusMutationInput = {
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color: Scalars['HtmlHexColor']['input'];
    /** An icon. */
    icon: Icon;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createAdjustmentService mutation. */
export type CreateAdjustmentServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount that can be adjusted using this service within the period defined in `adjustment_service_days`. */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application: ServiceApplication;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The period of time in which transactions are tracked to calculate against the total defined in `adjustment_service_amount`. */
    days?: InputMaybe<Scalars['Int']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The IDs of `Role`s that are allowed to use this adjustment service. */
    role_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
};
/** The input object that defines the fields for the createAlertingRotationDay mutation. */
export type CreateAlertingRotationDayMutationInput = {
    /** The alerting rotation ID. */
    alerting_rotation_id: Scalars['Int64Bit']['input'];
    /** A day. */
    day: Day;
    /** The end time for the day. */
    end_time: Scalars['Time']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The start time for the day. */
    start_time: Scalars['Time']['input'];
};
/** The input object that defines the fields for the createAlertingRotation mutation. */
export type CreateAlertingRotationMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Whether to include all account equipment in this rotation. */
    all_accounts: Scalars['Boolean']['input'];
    /** Whether to include all inventory models in this rotation. */
    all_inventory_models: Scalars['Boolean']['input'];
    /** Whether to include all network site equipment in this rotation. */
    all_network_sites: Scalars['Boolean']['input'];
    /** The number of minutes a device can be in a down state before generating alert. */
    down_time_in_minutes_before_alerting: Scalars['Int']['input'];
    /** The number of minutes a device can remain in a down state before sending a repeat alert. */
    down_time_in_minutes_before_repeat: Scalars['Int']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** Whether this repeats forever or not. */
    infinite_repetitions: Scalars['Boolean']['input'];
    /** IDs of `InventoryModel`s. */
    inventory_model_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** IDs of `NetworkSite`s. */
    network_site_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The number of times this repeats. */
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    /** The start. */
    start: Scalars['Date']['input'];
    /** IDs of `User`s. */
    user_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
    /** The number of minutes a device can be in a warning state before generating alert. */
    warning_time_in_minutes_before_alerting: Scalars['Int']['input'];
    /** The number of minutes a device can remain in a warning state before sending a repeat alert. */
    warning_time_in_minutes_before_repeat: Scalars['Int']['input'];
    /** The number of weeks between repetitions. */
    weeks_between_repetitions: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createApplicationFirewallRule mutation. */
export type CreateApplicationFirewallRuleMutationInput = {
    /** A human readable description. */
    description: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['input'];
};
/** The input object that defines the fields for the createAvalaraTaxDefinition mutation. */
export type CreateAvalaraTaxDefinitionMutationInput = {
    /** Whether or not this entity is archived. */
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    /** The service name as defined by Avalara. */
    service_name: Scalars['String']['input'];
    /** The service type as defined by Avalara. */
    service_type: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createBankAccount mutation. */
export type CreateBankAccountMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The bank account number. */
    account_number: Scalars['Numeric']['input'];
    /** The billing address for the payment method. */
    address: CreateAddressMutationInput;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto: Scalars['Boolean']['input'];
    /** The type of bank account this is. */
    bank_account_type: BankAccountType;
    /** The name on the account. */
    name_on_account: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The bank routing number. */
    routing_number: Scalars['Numeric']['input'];
};
/** The input object that defines the fields for the createBankAccountPayment mutation. */
export type CreateBankAccountPaymentMutationInput = {
    /** The amount of the payment, in the smallest currency value. */
    amount: Scalars['Int']['input'];
    /** Apply this payment to any open invoices. */
    apply_to_open_invoices: Scalars['Boolean']['input'];
    /** The ID of a BankAccount. */
    bank_account_id: Scalars['Int64Bit']['input'];
    /** A description of the payment, used for internal reference. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** Email payment receipt to account holder */
    email_payment_receipt?: InputMaybe<Scalars['Boolean']['input']>;
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createBankAccountProcessor mutation. */
export type CreateBankAccountProcessorMutationInput = {
    /** The credentials to use to authenticate against the bank account provider. */
    bank_account_processor_credentials: Array<InputMaybe<BankAccountProcessorCredentialInput>>;
    /** IDs of `Companies`. */
    company_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** Whether or not this is the primary provider to use when transacting against newly added bank accounts. */
    primary: Scalars['Boolean']['input'];
    /** The provider to use when transacting against bank accounts. */
    provider: BankAccountProvider;
};
/** The input object that defines the fields for the createBillingDefault mutation. */
export type CreateBillingDefaultLinkedInput = {
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not to aggregate invoice taxes instead of printing with each charge. */
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to aggregate linked debits on Anchor invoices. */
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    /** Determines if delinquency settings on an Anchor default is applied only to the Anchor account or the Linked accounts as well. */
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    /** If `invoice_day` is not null, this allows you to select whether `auto_pay_days` is calculated from the billing day, or the invoice day. */
    auto_pay_day: BillingParameterDayOption;
    /** The number of days after `auto_pay_day` that auto pay runs for an invoice. */
    auto_pay_days: Scalars['Int']['input'];
    /** The day that billing runs. */
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether the account bill and invoice day are fixed, the account activation day is used as bill day, or the account activation day is used as the invoice day. */
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    /** The type of bill this account receives. */
    bill_mode: BillMode;
    /** Services specific to a Linked billing default. Includes the service, name override, price override, and anchor allowance of each. */
    billing_services?: InputMaybe<Array<InputMaybe<BillingServiceMutationInput>>>;
    /** If `switch_status_after_delinquency` is `true`, then this is the number of days of delinquency to allow before the status switch. */
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    /** Determines if the billing parameters apply by account type or for anchor / linked types. */
    default_for?: InputMaybe<BillingDefaultFor>;
    /** If `switch_status_after_delinquency` is true, this is the account status that the account will be moved into after `days_of_delinquency_for_status_switch` days of delinquency. */
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If `switch_status_after_delinquency` is `true`, then this is the status the account will be moved back into if delinquency is cleared while the account is set to the `delinquency_account_status_id` account status. */
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The number of days after the invoice date that it is due. */
    due_days: Scalars['Int']['input'];
    /** If `invoice_day` is not null, this allows you to select whether `due_days` is calculated from the billing day, or the invoice day. */
    due_days_day: BillingParameterDayOption;
    /** Whether or not to use a fixed bill day, versus anniversary day billing. Use `bill_day_mode` for further customization. */
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of days after the invoice due date that the invoice is marked delinquent. */
    grace_days: Scalars['Int']['input'];
    /** The day that automatic billing invoices are generated for. If this is `null`, then `bill_day` is used. */
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not this account participates in the federal Lifeline program. */
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of months to bill at a time. */
    months_to_bill: Scalars['Int']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** Whether this account receives a printed invoice. */
    print_invoice: Scalars['Boolean']['input'];
    /** Whether or not this account should be moved into another status after being delinquent for a preset period. */
    switch_status_after_delinquency: Scalars['Boolean']['input'];
    /** Whether or not this account is tax exempt. */
    tax_exempt: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createBillingDefault mutation. */
export type CreateBillingDefaultMutationInput = {
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not to aggregate invoice taxes instead of printing with each charge. */
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to aggregate linked debits on Anchor invoices. */
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    /** Determines if delinquency settings on an Anchor default is applied only to the Anchor account or the Linked accounts as well. */
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    /** If `invoice_day` is not null, this allows you to select whether `auto_pay_days` is calculated from the billing day, or the invoice day. */
    auto_pay_day: BillingParameterDayOption;
    /** The number of days after `auto_pay_day` that auto pay runs for an invoice. */
    auto_pay_days: Scalars['Int']['input'];
    /** The day that billing runs. */
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether the account bill and invoice day are fixed, the account activation day is used as bill day, or the account activation day is used as the invoice day. */
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    /** The type of bill this account receives. */
    bill_mode: BillMode;
    /** Services specific to a Linked billing default. Includes the service, name override, price override, and anchor allowance of each. */
    billing_services?: InputMaybe<Array<InputMaybe<BillingServiceMutationInput>>>;
    /** If `switch_status_after_delinquency` is `true`, then this is the number of days of delinquency to allow before the status switch. */
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    /** Determines if the billing parameters apply by account type or for anchor / linked types. */
    default_for?: InputMaybe<BillingDefaultFor>;
    /** If `switch_status_after_delinquency` is true, this is the account status that the account will be moved into after `days_of_delinquency_for_status_switch` days of delinquency. */
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If `switch_status_after_delinquency` is `true`, then this is the status the account will be moved back into if delinquency is cleared while the account is set to the `delinquency_account_status_id` account status. */
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The number of days after the invoice date that it is due. */
    due_days: Scalars['Int']['input'];
    /** If `invoice_day` is not null, this allows you to select whether `due_days` is calculated from the billing day, or the invoice day. */
    due_days_day: BillingParameterDayOption;
    /** Whether or not to use a fixed bill day, versus anniversary day billing. Use `bill_day_mode` for further customization. */
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of days after the invoice due date that the invoice is marked delinquent. */
    grace_days: Scalars['Int']['input'];
    /** The day that automatic billing invoices are generated for. If this is `null`, then `bill_day` is used. */
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not this account participates in the federal Lifeline program. */
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    /** The linked billing defaults for the anchor. */
    linked_billing_default?: InputMaybe<CreateBillingDefaultLinkedInput>;
    /** The number of months to bill at a time. */
    months_to_bill: Scalars['Int']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** Whether this account receives a printed invoice. */
    print_invoice: Scalars['Boolean']['input'];
    /** Whether or not this account should be moved into another status after being delinquent for a preset period. */
    switch_status_after_delinquency: Scalars['Boolean']['input'];
    /** Whether or not this account is tax exempt. */
    tax_exempt: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createCableModemProvisioner mutation. */
export type CreateCableModemProvisionerMutationInput = {
    /** Credentials for a cable modem provisioner. */
    cable_modem_provisioner_credentials: Array<InputMaybe<CableModemAuthenticationCredentialMutationInput>>;
    /** Whether or not this is enabled. */
    enabled?: Scalars['Boolean']['input'];
    /** The cable modem provisioner hostname or IP address. */
    hostname: Scalars['String']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The type of cable modem provisioner. */
    type: CableModemProvisionerType;
};
/** The input object that defines the fields for the createCalendarIcal mutation. */
export type CreateCalendarIcalMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createCalixIntegration mutation. */
export type CreateCalixIntegrationMutationInput = {
    /** Controls if Sonar updates the ICMP device status from SMx alarms */
    alarms_change_device_status: Scalars['Boolean']['input'];
    /** Controls if Sonar should add SMx device alarms to inventory item logs */
    alarms_create_logs: Scalars['Boolean']['input'];
    /** Controls if Sonar updates the inventory item's soft IP address from SMx DHCP lease alarms. */
    alarms_update_ip_assignment: Scalars['Boolean']['input'];
    /** Disable, pause, then re-enable Calix ONT ports after creating or removing service.  Recommended for deployments using DHCP within SMx. */
    bounce_ports: Scalars['Boolean']['input'];
    /** The Calix policy map name to use when a commercial account becomes delinquent. */
    commercial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a commercial account becomes delinquent. */
    commercial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** Controls whether to turn on synchronization of Calix ONTs and Subscribers, from Sonar Inventory Items and Accounts. */
    enable_ont_synchronization: Scalars['Boolean']['input'];
    /** The Calix policy map name to use when a government account becomes delinquent. */
    government_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a government account becomes delinquent. */
    government_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** The Calix policy map name to use when an industrial account becomes delinquent. */
    industrial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when an industrial account becomes delinquent. */
    industrial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
    integration_field_mappings?: InputMaybe<Array<InputMaybe<IntegrationFieldMappingInput>>>;
    /** An entity which maps a service to a vendor specific service name */
    integration_service_mappings?: InputMaybe<Array<InputMaybe<IntegrationServiceMappingInput>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Subscriber organization ID to use for integration */
    org_id: Scalars['String']['input'];
    /** The Calix policy map name to use when a residential account becomes delinquent. */
    residential_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a residential account becomes delinquent. */
    residential_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** The Calix policy map name to use when a senior citizen account becomes delinquent. */
    senior_citizen_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a senior citizen account becomes delinquent. */
    senior_citizen_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** The basic auth credentials to use with SMx, username:password */
    smx_credentials: Scalars['String']['input'];
    /** The URL of the SMx server including the SMx API port, eg. mysmx.org:18443 (SMx uses 18443 as the default API port) */
    smx_url: Scalars['String']['input'];
    /** The software version of SMx that will be used in integration */
    smx_version: CalixIntegrationVersion;
};
/** The input object that defines the fields for the createCallDetailRecordImportFlatfile mutation. */
export type CreateCallDetailRecordImportFlatfileMutationInput = {
    /** The identifier of a unique batch at Flatfile. */
    flatfile_batch_identifier: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createCallDetailRecord mutation. */
export type CreateCallDetailRecordMutationInput = {
    /** The total length of the call in seconds. */
    length_in_seconds: Scalars['Int']['input'];
    /** The DID that initiated the call. */
    originating_number: Scalars['String']['input'];
    /** The DID that received the call. */
    receiving_number: Scalars['String']['input'];
    /** When the call was started. */
    started_at: Scalars['Datetime']['input'];
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createCallLog mutation. */
export type CreateCallLogMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The body. */
    body: Scalars['Text']['input'];
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The subject. */
    subject: Scalars['String']['input'];
    /** The time in seconds. */
    time_in_seconds: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createCannedReplyCategory mutation. */
export type CreateCannedReplyCategoryMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createCannedReply mutation. */
export type CreateCannedReplyMutationInput = {
    /** The body. */
    body: Scalars['Text']['input'];
    /** The ID of a `CannedReplyCategory`. */
    canned_reply_category_id: Scalars['Int64Bit']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createCompany mutation. */
export type CreateCompanyMutationInput = {
    /** The address shown on the invoice, and on the remittance slip, if it is enabled. */
    address: CreateAddressMutationInput;
    /** On an enabled remittance slip, who should checks be made payable to? */
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country: Country;
    /** The IDs of `CustomField`s that should be displayed on invoices. A maximum of 3 fields can be selected, and they must all be associated with `Account`s. */
    custom_field_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The URL to your customer portal. */
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    /** Whether or not this entity is a default entry. */
    default: Scalars['Boolean']['input'];
    /** Departments. */
    departments?: InputMaybe<Array<InputMaybe<CompanyDepartmentInput>>>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ISP type of this `Company`. */
    isp_type?: InputMaybe<IspType>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A telephone number. */
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    /** The primary color to use in Sonar. */
    primary_color: Scalars['HtmlHexColor']['input'];
    /** The secondary color to use in Sonar. */
    secondary_color: Scalars['HtmlHexColor']['input'];
    /** Whether or not to include a detachable remittance slip on the invoice. */
    show_remittance_slip: Scalars['Boolean']['input'];
    /** A tax identification number. Should only be entered if you are required to share some type of tax identification information with your customers. */
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    /** The address of the company website. */
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** The input object that defines the fields for the createContact mutation. */
export type CreateContactMutationInput = {
    /** Make this the new primary contact. */
    become_primary?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of the entity that owns this contact. */
    contactable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that owns this contact. */
    contactable_type: ContactableType;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** An email address. */
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    email_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A supported language. */
    language?: InputMaybe<Language>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A password. */
    password?: InputMaybe<Scalars['String']['input']>;
    /** Phone numbers. */
    phone_numbers?: InputMaybe<Array<InputMaybe<CreatePhoneNumberMutationInput>>>;
    /** The role of the contact, e.g. "CEO" or "Network Engineer". */
    role?: InputMaybe<Scalars['String']['input']>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A username, used for authentication. */
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the  mutation. */
export type CreateContactPhoneNumberMutationInput = {
    /** The ID of the contact that owns this. */
    contact_id: Scalars['Int64Bit']['input'];
    /** A two character country code for this phone number. */
    country: Country;
    /** The extension. */
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    /** The number. */
    number: Scalars['Numeric']['input'];
    /** The ID of the PhoneNumberType associated with this phone number. */
    phone_number_type_id: Scalars['Int64Bit']['input'];
    /** Whether or not SMS messages accepted. */
    sms_opt_in?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the createContract mutation. */
export type CreateContractMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The ID of the contact that owns this. */
    contact_id: Scalars['Int64Bit']['input'];
    /** The ID of a `ContractTemplate`. */
    contract_template_id: Scalars['Int64Bit']['input'];
    /** The custom message. */
    custom_message?: InputMaybe<Scalars['Text']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createContractTemplate mutation. */
export type CreateContractTemplateMutationInput = {
    /** The body. */
    body: Scalars['Text']['input'];
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The term in months. */
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createCoreCreditCard mutation. */
export type CreateCoreCreditCardMutationInput = {
    /** The billing address for the payment method. */
    address: CreateAddressMutationInput;
    /** The credit card number. */
    card_number: Scalars['Numeric']['input'];
    /** The CVV2 number (also called CVV, CSV, and CID, depending on the card issuer.) */
    cvv2: Scalars['Numeric']['input'];
    /** The month the credit card expires. */
    expiration_month: Scalars['Int']['input'];
    /** The year the credit card expires. */
    expiration_year: Scalars['Int']['input'];
    /** The name on the credit card. */
    name_on_card: Scalars['String']['input'];
};
/** The input object that defines the fields for the createCorePayment mutation. */
export type CreateCorePaymentMutationInput = {
    /** The amount of the payment, in the smallest currency value. */
    amount: Scalars['Int']['input'];
    /** Apply this payment to any open invoices. */
    apply_to_open_invoices: Scalars['Boolean']['input'];
    /** The ID of a CreditCard. */
    credit_card_id: Scalars['Int64Bit']['input'];
    /** A description of the payment, used for internal reference. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** Email payment receipt to account holder */
    email_payment_receipt?: InputMaybe<Scalars['Boolean']['input']>;
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createCreditCard mutation. */
export type CreateCreditCardMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The billing address for the payment method. */
    address: CreateAddressMutationInput;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto: Scalars['Boolean']['input'];
    /** The credit card number. */
    card_number: Scalars['Numeric']['input'];
    /** The CVV2 number (also called CVV, CSV, and CID, depending on the card issuer.) */
    cvv2: Scalars['Numeric']['input'];
    /** The month the credit card expires. */
    expiration_month: Scalars['Int']['input'];
    /** The year the credit card expires. */
    expiration_year: Scalars['Int']['input'];
    /** The name on the credit card. */
    name_on_card: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createCreditCardPayment mutation. */
export type CreateCreditCardPaymentMutationInput = {
    /** The amount of the payment, in the smallest currency value. */
    amount: Scalars['Int']['input'];
    /** Apply this payment to any open invoices. */
    apply_to_open_invoices: Scalars['Boolean']['input'];
    /** The ID of a CreditCard. */
    credit_card_id: Scalars['Int64Bit']['input'];
    /** A description of the payment, used for internal reference. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** Email payment receipt to account holder */
    email_payment_receipt?: InputMaybe<Scalars['Boolean']['input']>;
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createCreditCardProcessor mutation. */
export type CreateCreditCardProcessorMutationInput = {
    /** Enable American Express transactions. */
    amex?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `Companies`. */
    company_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A list of credentials for the provider. Check the enum `CreditCardProviderCredential` - all values that begin with the same string as the `CreditCardProvider` entered in the `provider` field must be included. */
    credit_card_processor_credentials: Array<InputMaybe<CreditCardProcessorCredentialInput>>;
    /** Enable Dankort transactions. */
    dankort?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Diners Club transactions. */
    dinersclub?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Discover transactions. */
    discover?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** Enable Forbrugsforeningen transactions. */
    forbrugsforeningen?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable JCB transactions. */
    jcb?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Maestro transactions. */
    maestro?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Mastercard transactions. */
    mastercard?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enables processor specific `Mail Or Telephone Order` functionality. Currently only applicable for `Stripe`. */
    moto_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is the primary type of entity. */
    primary: Scalars['Boolean']['input'];
    /** The company that provides credit card processing services. */
    provider: CreditCardProvider;
    /** Enable UnionPay transactions. */
    unionpay?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable VISA transactions. */
    visa?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable VISA Electron transactions. */
    visaelectron?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the createCustomField mutation. */
export type CreateCustomFieldMutationInput = {
    /** The type of entity this custom field will be associated with. */
    entity_type: CustomfielddataableType;
    /** A list of values that are valid for this field, if this is a TEXT field. If this is empty, and the field is a TEXT type, then any value will be allowed. */
    enum_options?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether or not this custom field must be filled in upon creation of an entity. */
    required: Scalars['Boolean']['input'];
    /** The type of custom field input this is. */
    type: CustomFieldType;
    /** Whether or not the value of this custom field must be unique throughout the system. */
    unique: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createDataService mutation. */
export type CreateDataServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['input'];
    /** How this is applied. */
    application: ServiceApplication;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['input'];
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** The download speed of the service in kilobits per second. */
    download_speed_kilobits_per_second: Scalars['Int']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** The FCC technology code for the service. Only relevant to US ISPs filing FCC Form 477. */
    technology_code: TechnologyCode;
    /** The global service profile name for this service if using Telrad provisioning. */
    telrad_global_service_profile_name?: InputMaybe<Scalars['String']['input']>;
    /** The upload speed of the service in kilobits per second. */
    upload_speed_kilobits_per_second: Scalars['Int']['input'];
    /** The ID of a `UsageBasedBillingPolicy`. */
    usage_based_billing_policy_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createDataUsages mutation. */
export type CreateDataUsageMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The data source identifier. */
    data_source_identifier: Scalars['String']['input'];
    /** The data source parent. */
    data_source_parent: Scalars['String']['input'];
    /** The amount of inbound bytes (must be a counter value). */
    inbytes: Scalars['Int64Bit']['input'];
    /** The amount of outbound bytes (must be a counter value). */
    outbytes: Scalars['Int64Bit']['input'];
    /** The time. */
    time: Scalars['Datetime']['input'];
};
/** The input object that defines the fields for the createDataUsageTopOff mutation. */
export type CreateDataUsageTopOffMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createDelinquencyExclusion mutation. */
export type CreateDelinquencyExclusionMutationInput = {
    /** The day that this exclusion covers. */
    day: Scalars['Int']['input'];
    /** The month that this exclusion covers. */
    month: Scalars['Int']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The year that this exclusion covers. */
    year?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the createDepartment mutation. */
export type CreateDepartmentMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createDeploymentType mutation. */
export type CreateDeploymentTypeMutationInput = {
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createDepositSlip mutation. */
export type CreateDepositSlipMutationInput = {
    /** The bank account name/number */
    bank_account_line: Scalars['String']['input'];
    /** A date */
    date: Scalars['Date']['input'];
    /** A single file to associate with this object. Any existing file will be overwritten. */
    file?: InputMaybe<AssociateFileMutationInput>;
    /** The memo. */
    memo?: InputMaybe<Scalars['Text']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The payment IDs. */
    payment_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
};
/** The input object that defines the fields for the createDhcpServerIdentifier mutation. */
export type CreateDhcpServerIdentifierMutationInput = {
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createDhcpServer mutation. */
export type CreateDhcpServerMutationInput = {
    /** Credentials for the `DhcpServer.` */
    dhcp_server_credentials: Array<InputMaybe<DhcpServerAuthenticationCredentialMutationInput>>;
    /** Whether or not this is enabled. */
    enabled?: Scalars['Boolean']['input'];
    /** An IPv4/IPv6 address. */
    ip_address: Scalars['IP']['input'];
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A TCP port. */
    port: Scalars['Port']['input'];
    /** Does this `DhcpServer` provide DHCP for all IP pools? */
    serves_all_pools: Scalars['Boolean']['input'];
    /** A `DhcpServerType`. */
    type: DhcpServerType;
    /** If this is `true`, then Sonar will use the MAC address of the DHCP relay rather than the MAC address of the requesting device when writing a lease. This should generally be disabled unless you have a specific reason to enable it. */
    use_source_mac_address?: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createDidAssignment mutation. */
export type CreateDidAssignmentMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The ID of a `Did`. */
    did_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a Service. */
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createDidImportFlatfile mutation. */
export type CreateDidImportFlatfileMutationInput = {
    /** The identifier of a unique batch at Flatfile. */
    flatfile_batch_identifier: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a `RateCenter`. */
    rate_center_id: Scalars['Int64Bit']['input'];
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createDid mutation. */
export type CreateDidMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The number. */
    number: Scalars['String']['input'];
    /** The ID of a `RateCenter`. */
    rate_center_id: Scalars['Int64Bit']['input'];
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createEmailCategory mutation. */
export type CreateEmailCategoryMutationInput = {
    /** If `true`, this category will be added to all existing contacts. */
    apply_to_existing_contacts?: InputMaybe<Scalars['Boolean']['input']>;
    /** If this is `true`, then any contacts created will have this category associated with them by default. */
    default: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createEmailDomain mutation. */
export type CreateEmailDomainMutationInput = {
    /** A domain name. */
    domain: Scalars['DomainName']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createEmailMessageContent mutation. */
export type CreateEmailMessageContentMutationInput = {
    /** The body. */
    body: Scalars['Text']['input'];
    /** The ID of an EmailMessage. */
    email_message_id: Scalars['Int64Bit']['input'];
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A short sentence that will be shown as a preview in compatible email clients. */
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    /** A supported language. */
    language: Language;
    /** The subject. */
    subject: Scalars['String']['input'];
};
/** The input object that defines the fields for the createEmailMessage mutation. */
export type CreateEmailMessageMutationInput = {
    /** The email address to send from when using this email message. If `null`, then the system default will be used. */
    from_email_address: Scalars['EmailAddress']['input'];
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** ID of the Saved Message Category. */
    saved_message_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createEpc mutation. */
export type CreateEpcMutationInput = {
    /** The identifier used by the EPC, this is typically numeric. */
    identifier: Scalars['String']['input'];
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createExpiringService mutation. */
export type CreateExpiringServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['input'];
    /** How this is applied. */
    application: ServiceApplication;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['input'];
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this entity is active. */
    enabled: Scalars['Boolean']['input'];
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** The number of times this expiring service should run. */
    times_to_run: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createExternalMarketingProvider mutation. */
export type CreateExternalMarketingProviderMutationInput = {
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The credentials to use to authenticate against the external marketing provider. */
    external_marketing_provider_credentials: Array<InputMaybe<ExternalMarketingProviderCredentialInput>>;
    /** The `ExternalMarketingProviderType` for 3rd party external marketing integration. */
    provider: ExternalMarketingProviderType;
};
/** The input object that defines the fields for the createFccForm477Report mutation. */
export type CreateFccForm477ReportMutationInput = {
    /** A list of IDs of data `Service`s used to generate data for FCC Form 477. */
    data_service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
    /** A single file to associate with this object. Any existing file will be overwritten. */
    file?: InputMaybe<AssociateFileMutationInput>;
    /** The format of the reporting for FCC Form 477. */
    format: FccForm477Format;
    /** A list of IDs of voice `Service`s for use with FCC Form 477. */
    voice_service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
};
/** The input object that defines the fields for the createFibermapIntegration mutation. */
export type CreateFibermapIntegrationMutationInput = {
    /** Whether or not this is enabled. */
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Always create new network sites */
    always_create_new_network_sites: Scalars['Boolean']['input'];
    /** An API token. */
    api_token: Scalars['String']['input'];
    /** Whether or not this is enabled. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** Import plans and contacts */
    import_accounts_and_contacts: Scalars['Boolean']['input'];
    /** Import serviceable addresses */
    import_serviceable_addresses: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createGeneralLedgerCode mutation. */
export type CreateGeneralLedgerCodeMutationInput = {
    /** A code for this general ledger code. This is typically numeric, but does not have to be. */
    code: Scalars['String']['input'];
    /** A human readable description for this general ledger code (e.g. Internet Services.) */
    description: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createGenericInventoryAssignee mutation. */
export type CreateGenericInventoryAssigneeMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createGenericInventoryItems mutation. */
export type CreateGenericInventoryItemsMutationInput = {
    /** The type of entity that owns this generic `InventoryItem`. */
    genericinventoryitemable_id: Scalars['Int64Bit']['input'];
    /** The ID of the entity that owns this generic `InventoryItem`. */
    genericinventoryitemable_type: InventoryitemableType;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The purchase price of this item. */
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createGeoTaxZone mutation. */
export type CreateGeoTaxZoneMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** A US county. Only used for US addresses. */
    county?: InputMaybe<UsCounty>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The rate for a tax. For a percentage based tax, this is a percentage. For a flat tax, it is a currency value in the smallest currency unit (e.g. cents, pence, pesos.) */
    rate: Scalars['Float']['input'];
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['input'];
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
    /** Whether to match on partial ZIP/postal codes. */
    zip_partial_match: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createGeofence mutation. */
export type CreateGeofenceMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A collection of points that makes up a polygon. */
    vertexes: Array<InputMaybe<Array<VertexMutationInput>>>;
};
/** The input object that defines the fields for the createGlobalInventoryModelMinMax mutation. */
export type CreateGlobalInventoryModelMinMaxMutationInput = {
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['input'];
    /** Minimum value */
    maximum?: InputMaybe<Scalars['Int']['input']>;
    /** Minimum value */
    minimum: Scalars['Int']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createGpsTrackingProvider mutation. */
export type CreateGpsTrackingProviderMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: Scalars['Boolean']['input'];
    /** `GpsTrackingProvider` Credentials. */
    gps_tracking_provider_credentials: Array<InputMaybe<GpsTrackingProviderCredentialInput>>;
    /** A descriptive name. */
    provider: GpsTrackingProviderType;
};
/** The input object that defines the fields for the createIdentityProviderActiveDirectory mutation. */
export type CreateIdentityProviderActiveDirectoryMutationInput = {
    /** Whether to use client SSL certificate authentication or not. */
    cert_auth: Scalars['Boolean']['input'];
    /** Whether to disable the cache or not. */
    disable_cache: Scalars['Boolean']['input'];
    /** The display name. */
    display_name: Scalars['String']['input'];
    /** The list of domains that can be authenticated. */
    domain_aliases?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The ActiveDirectory icon URL. */
    icon_url?: InputMaybe<Scalars['URL']['input']>;
    /** The range of IPs with which to use Windows Integrated Auth (Kerberos). */
    ips?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** Whether to use Windows Integrated Auth (Kerberos) or not. */
    kerberos: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createIdentityProviderGoogle mutation. */
export type CreateIdentityProviderGoogleMutationInput = {
    /** The client ID for this identity provider. */
    client_id: Scalars['String']['input'];
    /** The client secret for this identity provider. */
    client_secret: Scalars['String']['input'];
    /** The display name. */
    display_name: Scalars['String']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createIdentityProviderMicrosoft mutation. */
export type CreateIdentityProviderMicrosoftMutationInput = {
    /** The client ID for this identity provider. */
    client_id: Scalars['String']['input'];
    /** The client secret for this identity provider. */
    client_secret: Scalars['String']['input'];
    /** The display name. */
    display_name: Scalars['String']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createIdentityProviderSaml mutation. */
export type CreateIdentityProviderSamlMutationInput = {
    /** Authentication domains. */
    auth_domains: Scalars['String']['input'];
    /** The X.509 signing certificate contents. */
    certificate: Scalars['Text']['input'];
    /** Whether to include more verbose logging during the authentication process or not. */
    debug: Scalars['Boolean']['input'];
    /** The sign request algorithm digest. */
    digest_algorithm: SamlDigestAlgorithm;
    /** The display name. */
    display_name: Scalars['String']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The SAML protocol binding. */
    protocol_binding: SamlProtocolBinding;
    /** The SAML sign in URL. */
    sign_in_endpoint: Scalars['URL']['input'];
    /** The SAML sign out URL. */
    sign_out_endpoint?: InputMaybe<Scalars['URL']['input']>;
    /** Whether to sign the SAML request or not. */
    sign_saml_request: Scalars['Boolean']['input'];
    /** The sign request algorithm. */
    signature_algorithm: SamlSignatureAlgorithm;
    /** The attribute in the SAML token that will be mapped to the user_id property. */
    user_id_attribute?: InputMaybe<Scalars['URL']['input']>;
};
/** The input object that defines the fields for the createInboundMailbox mutation. */
export type CreateInboundMailboxMutationInput = {
    /** Whether or not to append a signature. */
    append_signature: Scalars['Boolean']['input'];
    /** The auto reply to send. */
    auto_reply?: InputMaybe<Scalars['Text']['input']>;
    /** The ID of an `EmailDomain`. */
    email_domain_id: Scalars['Int64Bit']['input'];
    /** Whether or not to enable Slack integration. */
    enable_slack_integration: Scalars['Boolean']['input'];
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The mailbox email is sent from. */
    from_mailbox: Scalars['String']['input'];
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name: Scalars['String']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether the email body should be posted to Slack, or just the email subject. */
    post_email_body_to_slack?: InputMaybe<Scalars['Boolean']['input']>;
    /** The priority of a `Ticket`. */
    priority: TicketPriority;
    /** Whether or not an auto reply should be sent. */
    send_auto_reply: Scalars['Boolean']['input'];
    /** The signature to append. You can include `[PUBLIC_NAME]` as a variable to insert the user's public name when the signature is appended. */
    signature?: InputMaybe<Scalars['Text']['input']>;
    /** The URL of a Slack webhook. You can generate one at https://my.slack.com/services/new/incoming-webhook. */
    slack_webhook_url?: InputMaybe<Scalars['URL']['input']>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createInlineDevice mutation. */
export type CreateInlineDeviceMutationInput = {
    /** Whether this device should write entries for all subnets or not. */
    all_subnets: Scalars['Boolean']['input'];
    /** Whether or not this is enabled. */
    enabled?: Scalars['Boolean']['input'];
    /** Credentials for an inline device. */
    inline_device_credentials: Array<InputMaybe<InlineDeviceAuthenticationCredentialMutationInput>>;
    /** An IPv4/IPv6 address. */
    ip_address: Scalars['IP']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A TCP port. */
    port?: InputMaybe<Scalars['Port']['input']>;
    /** IDs of `Subnet`s. */
    subnet_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The type of inline device. */
    type: InlineDeviceType;
};
/** The input object that defines the fields for the createInternalLocation mutation. */
export type CreateInternalLocationMutationInput = {
    /** The ID of an `InventoryLocation`. */
    inventory_location_id: Scalars['Int64Bit']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createInternalTicket mutation. */
export type CreateInternalTicketMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A human readable description. */
    description: Scalars['Text']['input'];
    /** The date this invoice is due by. */
    due_date?: InputMaybe<Scalars['Date']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of the `Ticket` that this `Ticket` is a child of. */
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The priority of a `Ticket`. */
    priority: TicketPriority;
    /** The status. */
    status: TicketStatus;
    /** The subject. */
    subject: Scalars['String']['input'];
    /** Allows subscribing to notifications for this entity. */
    subscription?: InputMaybe<SubscriptionMutationInput>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** IDs of `TicketCategory`s. */
    ticket_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity that this `Ticket` is associated with. */
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that this `Ticket` is associated with. */
    ticketable_type?: InputMaybe<TicketableType>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createInventoryItems mutation. */
export type CreateInventoryItemsMutationInput = {
    /** The ID of a `DeploymentType`. */
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['input'];
    /** The ID of the entity that this inventory item is assigned to. */
    inventoryitemable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that this inventory item is assigned to. */
    inventoryitemable_type: InventoryitemableType;
    /** The contents of the fields for the items being added. */
    items: Array<InputMaybe<InventoryItemFieldsMutationInput>>;
};
/** Provides address details for an inventory location. */
export type CreateInventoryLocationAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country: Country;
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['input'];
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['input'];
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createInventoryLocation mutation. */
export type CreateInventoryLocationMutationInput = {
    /** The physical address of the inventory location. */
    address: CreateInventoryLocationAddressMutationInput;
    /** Marks this inventory location as the default shipping location for purchase orders. */
    default_shipping_location?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createInventoryModelCategory mutation. */
export type CreateInventoryModelCategoryMutationInput = {
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** An icon. */
    icon: Icon;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createInventoryModelField mutation. */
export type CreateInventoryModelFieldMutationInput = {
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A single inventory model field can be set to be the primary field. This will be used as the primary identifier for items of this model throughout Sonar. */
    primary: Scalars['Boolean']['input'];
    /** A PCRE regular expression. Omit the leading and closing /. */
    regexp?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this field is required. */
    required: Scalars['Boolean']['input'];
    /** Secondary types that inventory model fields can be set to. */
    secondary_type?: InputMaybe<InventoryModelFieldSecondaryType>;
    /** Types that inventory model fields can be set to. */
    type: InventoryModelFieldType;
    /** Whether or not the field contents must be unique. */
    unique: Uniqueness;
};
/** The input object that defines the fields for the createInventoryModelMinMax mutation. */
export type CreateInventoryModelMinMaxMutationInput = {
    /** The ID of an `InventoryModel`. */
    inventory_location_id: Scalars['Int64Bit']['input'];
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['input'];
    /** Minimum value */
    maximum?: InputMaybe<Scalars['Int']['input']>;
    /** Minimum value */
    minimum: Scalars['Int']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createInventoryModel mutation. */
export type CreateInventoryModelMutationInput = {
    /** Sets the default vendor to be used for purchasing this inventory model. */
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of inventory model. */
    device_type?: InputMaybe<InventoryModelDeviceType>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A generic inventory model does not have any fields, and is used for items that you don't need to track individually (for example, a box of screws, or a spool of cable.) */
    generic: Scalars['Boolean']['input'];
    /** An icon. */
    icon: Icon;
    /** The ID of an InventoryModelCategory. */
    inventory_model_category_id: Scalars['Int64Bit']['input'];
    /** The ID of a Manufacturer. */
    manufacturer_id: Scalars['Int64Bit']['input'];
    /** The actual model name/part number. */
    model_name?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The TCP port that the web interface of this type of device is available on. */
    port?: InputMaybe<Scalars['Int']['input']>;
    /** The protocol used to access the web interface. */
    protocol?: InputMaybe<Protocol>;
};
/** The input object that defines the fields for the createInvoiceAttachment mutation. */
export type CreateInvoiceAttachmentMutationInput = {
    /** The date to stop attaching this PDF to invoices. */
    end?: InputMaybe<Scalars['Date']['input']>;
    /** A single file to associate with this object. Any existing file will be overwritten. */
    file?: InputMaybe<AssociateFileMutationInput>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The date to start attaching this PDF to invoices. */
    start?: InputMaybe<Scalars['Date']['input']>;
};
/** The input object that defines the fields for the createInvoiceMessage mutation. */
export type CreateInvoiceMessageMutationInput = {
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The message. */
    message: Scalars['String']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createInvoice mutation. */
export type CreateInvoiceMutationInput = {
    /** The invoice date. */
    date: Scalars['Date']['input'];
    /** A list of `Debit` IDs to be used to create the invoice. They must not be currently associated with an invoice. */
    debit_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
    /** The date this invoice is due by. */
    due_date?: InputMaybe<Scalars['Date']['input']>;
    /** A custom message to print on the invoice. */
    message?: InputMaybe<Scalars['Text']['input']>;
};
/** The input object that defines the fields for the createIpAssignmentFromDhcpReservation mutation. */
export type CreateIpAssignmentFromDhcpReservationMutationInput = {
    /** Expired. */
    expired: Scalars['Boolean']['input'];
    /** An IPv4/IPv6 subnet. */
    ip_address: Scalars['String']['input'];
    /** A MAC address. */
    mac_address: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Some reference data regarding this IP assignment. */
    remote_id?: InputMaybe<Scalars['Text']['input']>;
};
/** The input object that defines the fields for the createIpAssignment mutation. */
export type CreateIpAssignmentMutationInput = {
    /** A human readable description. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The ID of the owner of this `IpAssignment`. */
    ipassignmentable_id: Scalars['Int64Bit']['input'];
    /** The owner of this `IpAssignment`. */
    ipassignmentable_type: IpassignmentableType;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Some reference data regarding this IP assignment. */
    reference?: InputMaybe<Scalars['Text']['input']>;
    /** If this IP was assigned automatically (e.g. via DHCP or RADIUS) then it will be marked as a soft assignment. */
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['input'];
};
/** The input object that defines the fields for the createIpPool mutation. */
export type CreateIpPoolMutationInput = {
    /** The ID of a `DhcpServerIdentifier`. */
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** IDs of `DhcpServer`s. */
    dhcp_server_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `EPC`s. */
    epc_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A range of IPv4 addresses. */
    ip_range: Scalars['IpRange']['input'];
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createJob mutation. */
export type CreateJobMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of a `JobType`. */
    job_type_id: Scalars['Int64Bit']['input'];
    /** The ID of the entity that this `Job` is associated with. */
    jobbable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that this `Job` is associated with. */
    jobbable_type: JobbableType;
    /** The length in minutes for this `Job`. */
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The date and time this `Job` is scheduled for. */
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** The ID of a `Ticket`. */
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createJobService mutation. */
export type CreateJobServiceMutationInput = {
    /** The ID of a `Job`. */
    job_id: Scalars['Int64Bit']['input'];
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
    /** The ID of a `Service`. */
    service_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createJobType mutation. */
export type CreateJobTypeMutationInput = {
    /** If this is set, any `Job` using this `JobType` that is completed successfully while associated with an `Account` will change the `Account` to this `AccountStatus`. */
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If this is set, any `Job` using this `JobType` that is completed unsuccessfully while associated with an `Account` will change the `Account` to this `AccountStatus`. */
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Completion ticket action. */
    action_on_completion?: InputMaybe<JobTypeAction>;
    /** Failure ticket action. */
    action_on_failure?: InputMaybe<JobTypeAction>;
    /** Whether or not this `JobType` is valid for all `Companies`. */
    all_companies: Scalars['Boolean']['input'];
    /** Whether `Job`s associated with this `JobType` should be able to be completed with incomplete tasks. */
    allow_completion_with_incomplete_tasks: Scalars['Boolean']['input'];
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color: Scalars['HtmlHexColor']['input'];
    /** IDs of `Companies`. */
    company_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a `ContractTemplate`. */
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The default length for a `Job` created using this `JobType`. */
    default_length_in_minutes: Scalars['Int']['input'];
    /** If this is set, any `Job` using this `JobType` that is completed successfully while associated with an `Account` will trigger the disconnection of the `Account`. */
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** An icon. */
    icon: Icon;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** IDs of `Service`s. */
    service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a `TaskTemplate`. */
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If this is set, any `Job` using this `JobType` that is completed successfully will create a `Ticket` and assign it to this `TicketGroup`. */
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If this is set, any `Job` using this `JobType` that is completed unsuccessfully will create a `Ticket` and assign it to this `TicketGroup`. */
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Ticket status on completion. */
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    /** Ticket status on failure. */
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
};
/** The linked address details for each item processed in createLinkedAddresses mutation. */
export type CreateLinkedAddresses = {
    __typename: 'CreateLinkedAddresses';
    /** The ID of an Account. */
    account_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the serviceable address to use for this account. */
    serviceable_address_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The name of the serviceable address to use for this account. */
    serviceable_address_name?: Maybe<Scalars['String']['output']>;
    /** The status of each specific linked address during bulk creation. */
    status?: Maybe<LinkedAddressesStatus>;
};
/** The input object that defines the fields for the createLinkedAddresses mutation. */
export type CreateLinkedAddressesMutationInput = {
    /** Data to insert into custom fields. */
    account_custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of an AccountStatus. */
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** An address range string used in bulk address creation. */
    address_range: Scalars['String']['input'];
    /** The address ID for the Anchor address */
    anchor_address_id: Scalars['Int64Bit']['input'];
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not shell accounts are to be created. */
    create_shell_account: Scalars['Boolean']['input'];
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The unit designator for creating addresses. */
    unit_designator: UnitDesignator;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The results from the createLinkedAddresses mutation. */
export type CreateLinkedAddressesResponse = {
    __typename: 'CreateLinkedAddressesResponse';
    /** The number of address(es) created in the range provided. */
    addresses_created?: Maybe<Scalars['Int64Bit']['output']>;
    /** The total number of address(es) in the range provided. */
    addresses_total?: Maybe<Scalars['Int64Bit']['output']>;
    /** The list of address(es) processed in the range provided and details on each. */
    linked_addresses?: Maybe<Array<Maybe<CreateLinkedAddresses>>>;
};
/** The input object that defines the fields for the createLocalPrefix mutation. */
export type CreateLocalPrefixMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A telephone number prefix. */
    prefix: Scalars['Numeric']['input'];
    /** The ID of the `VoiceServiceDetail`. */
    voice_service_detail_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createLteProvider mutation. */
export type CreateLteProviderMutationInput = {
    /** Automatically detach UE when account is changed to delinquency status. */
    deactivate_on_delinquency: Scalars['Boolean']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** Whether or not a floating license model is used with BreezeVIEW. */
    floating_license?: InputMaybe<Scalars['Boolean']['input']>;
    /** Credentials for the LTE provider. */
    lte_provider_credentials: Array<InputMaybe<LteProviderAuthenticationCredentialMutationInput>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The type of `LteProvider`. */
    type: LteProviderType;
    /** Write PDN address allocation into BreezeVIEW. */
    write_pdn_address_allocation?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the createMailingAddress mutation. */
export type CreateMailingAddressMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** A city. */
    city: Scalars['String']['input'];
    /** A two character country code. */
    country: Country;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** Address line 1. */
    line1: Scalars['String']['input'];
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A ZIP or postal code. */
    zip: Scalars['String']['input'];
};
/** The input object that defines the fields for the createManufacturer mutation. */
export type CreateManufacturerMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createMapOverlay mutation. */
export type CreateMapOverlayMutationInput = {
    /** Map Overlay Language (KML) file contents. */
    contents: Scalars['Base64Clob']['input'];
    /** file type */
    file_type: MapOverlayFileType;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** Network site id. */
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `network_site_id` to null. */
    unset_network_site_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the createMassEmail mutation. */
export type CreateMassEmailMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountStatus`es. */
    account_status_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Whether or not this entity is delinquent. */
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    email_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The email address to send from when using this email message. If `null`, then the system default will be used. */
    from_email_address: Scalars['EmailAddress']['input'];
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name: Scalars['String']['input'];
    /** A short sentence that will be shown as a preview in compatible email clients. */
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    /** IDs of `InventoryItem`s. */
    inventory_item_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** List of language codes. */
    languages?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** The message. */
    message: Scalars['Text']['input'];
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `NetworkSite`s. */
    network_site_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** IDs of `Service`s. */
    service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The subject. */
    subject: Scalars['String']['input'];
    /** IDs of `Subnet`s. */
    subnet_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createMassMessage mutation. */
export type CreateMassMessageMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountStatus`es. */
    account_status_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Whether or not this entity is delinquent. */
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The email address to send from when using this email message. If `null`, then the system default will be used. */
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name?: InputMaybe<Scalars['String']['input']>;
    /** A short sentence that will be shown as a preview in compatible email clients. */
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    /** IDs of `InventoryItem`s. */
    inventory_item_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** List of language codes. */
    languages?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** The message. */
    message?: InputMaybe<Scalars['Text']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `NetworkSite`s. */
    network_site_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** End date/time of outage */
    outage_end?: InputMaybe<Scalars['Datetime']['input']>;
    /** Start date/time of outage */
    outage_start?: InputMaybe<Scalars['Datetime']['input']>;
    /** Whether or not to send an e-mail message. */
    send_email: Scalars['Boolean']['input'];
    /** Whether or not to send an SMS message. */
    send_sms: Scalars['Boolean']['input'];
    /** IDs of `Service`s. */
    service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a signature. */
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the SMS message. */
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The subject. */
    subject?: InputMaybe<Scalars['String']['input']>;
    /** IDs of `Subnet`s. */
    subnet_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createMessageCategory mutation. */
export type CreateMessageCategoryMutationInput = {
    /** If `true`, this category will be added to all existing contacts. */
    apply_to_existing_contacts?: InputMaybe<Scalars['Boolean']['input']>;
    /** If this is `true`, then any contacts created will have this category associated with them by default. */
    default: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createNetflowAllowedSubnet mutation. */
export type CreateNetflowAllowedSubnetMutationInput = {
    /** The ID of a `NetflowEndpoint`. */
    netflow_endpoint_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['input'];
};
/** The input object that defines the fields for the createNetflowEndpoint mutation. */
export type CreateNetflowEndpointMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whitelist mode. */
    whitelist_mode: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createNetflowWhitelist mutation. */
export type CreateNetflowWhitelistMutationInput = {
    /** The ID of a `NetflowEndpoint`. */
    netflow_endpoint_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['input'];
};
/** The input object that defines the fields for the createNetworkMonitoringGraph mutation. */
export type CreateNetworkMonitoringGraphMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** The ID of a `NetworkMonitoringTemplate`. */
    network_monitoring_template_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Stacked */
    stacked?: InputMaybe<Scalars['Boolean']['input']>;
    /** The type. */
    type?: InputMaybe<NetworkMonitoringGraphType>;
};
/** The input object that defines the fields for the createNetworkMonitoringTemplate mutation. */
export type CreateNetworkMonitoringTemplateMutationInput = {
    /** Whether or not to collect interface statistics. */
    collect_interface_statistics?: InputMaybe<Scalars['Boolean']['input']>;
    /** ICMP latency threshold (ms). */
    icmp_latency_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** ICMP loss threshold (%). */
    icmp_loss_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not ICMP monitoring is enabled. */
    icmp_monitoring?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** SNMPv3 auth passphrase */
    snmp3_auth_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 auth protocol */
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    /** SNMPv3 context engine ID */
    snmp3_context_engineid?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 context name */
    snmp3_context_name?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy passphrase */
    snmp3_priv_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy protocol */
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    /** SNMPv3 security level */
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    /** SNMP community/securityName */
    snmp_community?: InputMaybe<Scalars['String']['input']>;
    /** SNMP version */
    snmp_version?: InputMaybe<SnmpVersion>;
};
/** Provides address details for a network site. */
export type CreateNetworkSiteAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country: Country;
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['input'];
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['input'];
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: InputMaybe<Timezone>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createNetworkSite mutation. */
export type CreateNetworkSiteMutationInput = {
    /** The address for the network site. */
    address: CreateNetworkSiteAddressMutationInput;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** Height in meters. */
    height_in_meters: Scalars['Float']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createNonInventoryItem mutation. */
export type CreateNonInventoryItemMutationInput = {
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createNote mutation. */
export type CreateNoteMutationInput = {
    /** The message. */
    message: Scalars['Text']['input'];
    /** The ID of the entity that owns this note. */
    noteable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that owns this note. */
    noteable_type: NoteableType;
    /** The priority of the note. */
    priority: NotePriority;
};
/** The input object that defines the fields for the createOneTimeService mutation. */
export type CreateOneTimeServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['input'];
    /** How this is applied. */
    application: ServiceApplication;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
};
/** The input object that defines the fields for the createOrderGroup mutation. */
export type CreateOrderGroupMutationInput = {
    /** A list of user IDs that should have authority to approve purchase orders in this order group. */
    approver_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
    /** The threshold at which requesters require approval of their purchase orders. */
    automatic_approval_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** Disabled order groups cannot be assigned users or used to create purchase orders. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The name of an order group. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A list of user IDs that should have permission to create product requests in this group. */
    requester_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
};
/** The input object that defines the fields for the createOverageService mutation. */
export type CreateOverageServiceMutationInput = {
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['input'];
    /** How this is applied. */
    application: ServiceApplication;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A value in gigabytes. */
    gigabytes: Scalars['Int']['input'];
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
};
/** The input object that defines the fields for the createPackage mutation. */
export type CreatePackageMutationInput = {
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting to indicate if services in this package should be rolled up into a package total when this package is displayed. */
    rollup_services?: InputMaybe<Scalars['Boolean']['input']>;
    /** The services in this package. */
    services: Array<InputMaybe<PackageServiceMutationInput>>;
};
/** The input object that defines the fields for the createPayPalCredential mutation. */
export type CreatePayPalCredentialMutationInput = {
    /** The client ID for PayPal. */
    client_id: Scalars['String']['input'];
    /** The client secret for PayPal. */
    client_secret: Scalars['String']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createPayment mutation. */
export type CreatePaymentMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The amount of the payment, in the smallest currency value. */
    amount: Scalars['Int']['input'];
    /** Apply this payment to any open invoices. */
    apply_to_open_invoices?: InputMaybe<Scalars['Boolean']['input']>;
    /** A description of the payment, used for internal reference. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** Email payment receipt to account holder */
    email_payment_receipt?: InputMaybe<Scalars['Boolean']['input']>;
    /** A list of applicable `Invoice` IDs. */
    invoice_ids?: InputMaybe<Array<Scalars['Int64Bit']['input']>>;
    /** The date and time the payment was made. */
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    /** A `Payment` type made without a payment method. */
    payment_type: NonPaymentMethodPaymentType;
    /** A payment reference like a check number, or wire transfer confirmation number. */
    reference?: InputMaybe<Scalars['String']['input']>;
    /** The transaction ID from the credit card provider. */
    transaction_id?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createPayments mutation. */
export type CreatePaymentsMutationInput = {
    /** A payment. */
    payments: Array<InputMaybe<CreatePaymentMutationInput>>;
};
/** The input object that defines the fields for the createPersonalAccessToken mutation. */
export type CreatePersonalAccessTokenMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the  mutation. */
export type CreatePhoneNumberMutationInput = {
    /** A two character country code for this phone number. */
    country: Country;
    /** The extension. */
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    /** The number. */
    number: Scalars['Numeric']['input'];
    /** The ID of the PhoneNumberType associated with this phone number. */
    phone_number_type_id: Scalars['Int64Bit']['input'];
    /** Whether or not SMS messages accepted. */
    sms_opt_in?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the createPhoneNumberType mutation. */
export type CreatePhoneNumberTypeMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** Whether or not phone numbers of this type are capable of sending and receiving SMS messages. */
    sms_capable: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createPoller mutation. */
export type CreatePollerMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Poller subnet configuration. */
    poller_subnets?: InputMaybe<Array<InputMaybe<PollerSubnetMutationInput>>>;
};
/** The input object that defines the fields for the Contact mutation. */
export type CreatePrimaryContactMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** An email address. */
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    email_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** Phone numbers. */
    phone_numbers?: InputMaybe<Array<InputMaybe<CreatePhoneNumberMutationInput>>>;
    /** The role of the contact, e.g. "CEO" or "Network Engineer". */
    role?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createPrintedInvoiceBatch mutation. */
export type CreatePrintedInvoiceBatchMutationInput = {
    /** The date to generate the printed invoice batch for. */
    date: Scalars['Date']['input'];
    /** Exclude zero balance invoices from the printed invoice batch. */
    exclude_paid?: InputMaybe<Scalars['Boolean']['input']>;
    /** A single file to associate with this object. Any existing file will be overwritten. */
    file?: InputMaybe<AssociateFileMutationInput>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Include detailed transactions on a printed invoice batch. */
    with_detailed_transactions?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the createPublicTicket mutation. */
export type CreatePublicTicketMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A human readable description. */
    description: Scalars['Text']['input'];
    /** The date this invoice is due by. */
    due_date?: InputMaybe<Scalars['Date']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of an `InboundMailbox`. */
    inbound_mailbox_id: Scalars['Int64Bit']['input'];
    /** The ID of the `Ticket` that this `Ticket` is a child of. */
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The priority of a `Ticket`. */
    priority: TicketPriority;
    /** The status. */
    status: TicketStatus;
    /** The subject. */
    subject: Scalars['String']['input'];
    /** Allows subscribing to notifications for this entity. */
    subscription?: InputMaybe<SubscriptionMutationInput>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** IDs of `TicketCategory`s. */
    ticket_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Recipients for ticket replies. */
    ticket_recipients?: InputMaybe<Array<InputMaybe<CreateTicketRecipientDuringTicketCreationMutationInput>>>;
    /** The ID of the entity that this `Ticket` is associated with. */
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that this `Ticket` is associated with. */
    ticketable_type?: InputMaybe<TicketableType>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createPurchaseOrder mutation. */
export type CreatePurchaseOrderMutationInput = {
    /** The ID of the company that will be used in the header of this purchase order. */
    company_id: Scalars['Int64Bit']['input'];
    /** The currency used for all transactions with this vendor. */
    currency?: InputMaybe<Currency>;
    /** A message to be included on purchase orders when sent to vendors. */
    external_message?: InputMaybe<Scalars['String']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The source of the shipping address for a purchase order. */
    inventory_location_id: Scalars['Int64Bit']['input'];
    /** Whether or not the purchase order has been marked as being paid. */
    is_paid?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of an order group related to this purchase order. */
    order_group_id: Scalars['Int64Bit']['input'];
    /** A unique number identifying an approved purchase order. */
    order_number?: InputMaybe<Scalars['Int']['input']>;
    /** The terms of payment for deliveries from this vendor. */
    payment_terms?: InputMaybe<PaymentTerm>;
    /** The order items to attach to a new purchase order. */
    purchase_order_items?: InputMaybe<Array<InputMaybe<CreatePurchaseOrderOrderItemsMutationInput>>>;
    /** The current status of this purchase order. */
    status?: InputMaybe<PurchaseOrderStatus>;
    /** The ID of a vendor. */
    vendor_id: Scalars['Int64Bit']['input'];
    /** The name of a vendor. */
    vendor_name?: InputMaybe<Scalars['String']['input']>;
};
/** Add items to a new purchase order. */
export type CreatePurchaseOrderOrderItemsMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** The order this item is shown in a list. */
    list_order?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** Part number used by the vendor to identify this vendor item. */
    part_number?: InputMaybe<Scalars['String']['input']>;
    /** The price of the vendor item at the time the purchase order was created. */
    price?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Number of inventory models that are included in a single unit of this vendors product. */
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    /** The current status of a purchase order item. */
    status?: InputMaybe<PurchaseOrderItemStatus>;
    /** A list of tax IDs that should be applied to this purchase order item. */
    taxes?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The quantity of a vendor item on a purchase order. */
    units?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a vendor item. */
    vendor_item_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createRadiusAccount mutation. */
export type CreateRadiusAccountMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A password. */
    password?: InputMaybe<Scalars['String']['input']>;
    /** A username, used for authentication. */
    username: Scalars['String']['input'];
};
/** The input object that defines the fields for the createRadiusGroup mutation. */
export type CreateRadiusGroupMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The types of account statuses for accounts that are part of this grouping. */
    account_status: AddressListAccountStatus;
    /** IDs of `AccountStatus`es. */
    account_status_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of data `Service`s. */
    data_service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The delinquency state for accounts that are part of this grouping. */
    delinquency: AddressListDelinquency;
    /** Whether or not this is a fall through group. */
    fall_through: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The RADIUS group priority. */
    priority: Scalars['Int']['input'];
    /** A list of IDs of `UsageBasedBillingPolicy` objects. */
    usage_based_billing_policy_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createRadiusGroupReplyAttribute mutation. */
export type CreateRadiusGroupReplyAttributeMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A RADIUS reply operator. */
    operator: RadiusReplyOperator;
    /** The ID of a `RadiusGroup`. */
    radius_group_id: Scalars['Int64Bit']['input'];
    /** A RADIUS reply. */
    reply: Scalars['String']['input'];
};
/** The input object that defines the fields for the createRadiusServer mutation. */
export type CreateRadiusServerMutationInput = {
    /** The secret used to send a change of authorization to this device. */
    coa_secret?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not Sonar should track bandwidth usage data from this RADIUS server. */
    collect_bandwidth?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** An IPv4/IPv6 address. */
    ip_address: Scalars['IP']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The RADIUS server credentials. */
    radius_server_credentials: Array<InputMaybe<RadiusServerCredentialInput>>;
    /** Send a change of authorization on account delinquency to this device. */
    send_change_auth_on_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    /** Send a change of authorization on account service change to this device. */
    send_change_auth_on_service_change?: InputMaybe<Scalars['Boolean']['input']>;
    /** Send a change of authorization on account status change to this device. */
    send_change_auth_on_status_change?: InputMaybe<Scalars['Boolean']['input']>;
    /** The RADIUS server type. */
    type: RadiusServerType;
};
/** The input object that defines the fields for the createRateCenter mutation. */
export type CreateRateCenterMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createRecentItem mutation. */
export type CreateRecentItemMutationInput = {
    /** The ID of the entity that this recent item entry is for. */
    recentitemable_id: Scalars['Int64Bit']['input'];
    /** The entity that a recent item entry is for. */
    recentitemable_type: RecentitemableType;
};
/** The input object that defines the fields for the createRecurringService mutation. */
export type CreateRecurringServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['input'];
    /** How this is applied. */
    application: ServiceApplication;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['input'];
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
};
/** The input object that defines the fields for the createReport mutation. */
export type CreateReportMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** The report category. */
    report_category: ReportCategory;
};
/** The input object that defines the fields for the createRole mutation. */
export type CreateRoleMutationInput = {
    /** A list of permissions associated with this role. */
    applied_permissions: Array<Permission>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createSavedMessageCategory mutation. */
export type CreateSavedMessageCategoryMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createScheduleAddress mutation. */
export type CreateScheduleAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['input'];
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal latitude. */
    longitude: Scalars['Longitude']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: InputMaybe<Timezone>;
    /** The type of schedule address that this is. */
    type: ScheduleAddressType;
    /** IDs of `User`s. */
    user_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createScheduleAvailabilityDayTime mutation. */
export type CreateScheduleAvailabilityDayTimeMutationInput = {
    /** Whether this day is available from start to finish. */
    all_day: Scalars['Boolean']['input'];
    /** A day. */
    day: Day;
    /** The end time for the day. */
    end_time?: InputMaybe<Scalars['Time']['input']>;
    /** The ID of a `ScheduleAvailability`. */
    schedule_availability_id: Scalars['Int64Bit']['input'];
    /** The start time for the day. */
    start_time?: InputMaybe<Scalars['Time']['input']>;
};
/** The input object that defines the fields for the createScheduleAvailability mutation. */
export type CreateScheduleAvailabilityMutationInput = {
    /** Whether or not this `ScheduleAvailability` creates or removes availability. */
    available: Scalars['Boolean']['input'];
    /** The ID of a `Geofence`. */
    geofence_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether this repeats forever or not. */
    infinite_repetitions: Scalars['Boolean']['input'];
    /** IDs of `JobType`s. */
    job_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The number of times this repeats. */
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    /** The start date for this `ScheduleAvailability`. */
    start_date: Scalars['Date']['input'];
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The number of weeks between repetitions. */
    weeks_between_repetitions: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createScheduleBlockerDayTime mutation. */
export type CreateScheduleBlockerDayTimeMutationInput = {
    /** A day. */
    day: Day;
    /** The end time for the day. */
    end_time: Scalars['Time']['input'];
    /** The ID of a `ScheduleBlocker`. */
    schedule_blocker_id: Scalars['Int64Bit']['input'];
    /** The start time for the day. */
    start_time: Scalars['Time']['input'];
};
/** The input object that defines the fields for the createScheduleBlocker mutation. */
export type CreateScheduleBlockerMutationInput = {
    /** Whether this repeats forever or not. */
    infinite_repetitions: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The number of times this repeats. */
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    /** The start date for this `ScheduleAvailability`. */
    start_date: Scalars['Date']['input'];
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The number of weeks between repetitions. */
    weeks_between_repetitions: Scalars['Int']['input'];
};
/** The input object that defines the fields for the createScheduleTimeOff mutation. */
export type CreateScheduleTimeOffMutationInput = {
    /** The date and time that this ends. */
    end_datetime: Scalars['Datetime']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The date and time that this starts. */
    start_datetime: Scalars['Datetime']['input'];
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createScheduledEvent mutation. */
export type CreateScheduledEventMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** Items specific to a voice service. Includes the quantity, price override, and related configuration parameter of each. */
    account_voice_service_details?: InputMaybe<Array<InputMaybe<AccountVoiceServiceDetailMutationInput>>>;
    /** The amount to be used for this scheduled event. Only applicable for events that relate to money (e.g. price override, payment.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** A date and time */
    datetime: Scalars['Datetime']['input'];
    /** A human readable description. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The event for this scheduled event. */
    event: ScheduledEventEvent;
    /** The ID of an object described by the `event` field. */
    primary_event_object_id?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the createSearchFilter mutation. */
export type CreateSearchFilterMutationInput = {
    /** Whether the filter is available to every user (admins only). */
    all_users?: InputMaybe<Scalars['Boolean']['input']>;
    /** The type of entity this filter belongs to. */
    entity_type: Scalars['String']['input'];
    /** The actual filter, as JSON. */
    filter: Scalars['String']['input'];
    /** The filter's name. */
    name: Scalars['String']['input'];
};
/** The input object that defines the fields for the createServiceMetadata mutation. */
export type CreateServiceMetadataMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createServiceableAddress mutation. */
export type CreateServiceableAddressMutationInput = {
    /** Address status ID. */
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The address ID for the Anchor address */
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a BillingDefault. */
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A city. */
    city: Scalars['String']['input'];
    /** A two character country code. */
    country: Country;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this address is an anchor */
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['input'];
    /** Address line 1. */
    line1: Scalars['String']['input'];
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal latitude. */
    longitude: Scalars['Longitude']['input'];
    /** IDs of `NetworkSite`s. */
    network_site_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: InputMaybe<Timezone>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A ZIP or postal code. */
    zip: Scalars['String']['input'];
};
/** The input object that defines the fields for the createSignature mutation. */
export type CreateSignatureMutationInput = {
    /** The ID of a department. */
    department_id: Scalars['Int64Bit']['input'];
    /** Whether or not signature is default for mass messages. */
    mass_default?: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Body of an SMS signature. */
    sms_signature?: InputMaybe<SmsContactPrefix>;
    /** Whether or not signature is default for triggered messages. */
    triggered_default?: Scalars['Boolean']['input'];
};
/** The input object that defines the fields for the createSnmpOid mutation. */
export type CreateSnmpOidMutationInput = {
    /** Whether or not to auto scale. */
    auto_scale?: InputMaybe<Scalars['Boolean']['input']>;
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** Display as table */
    display_as_table?: InputMaybe<Scalars['Boolean']['input']>;
    /** Divide by */
    divide_by?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** The ID of a `NetworkMonitoringGraph`. */
    network_monitoring_graph_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An OID */
    oid: Scalars['String']['input'];
    /** Unit of measurement */
    unit_of_measurement?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the createSnmpOidThreshold mutation. */
export type CreateSnmpOidThresholdMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An operator that defines how to apply the threshold value to the attribute. */
    operator: RangeOperator;
    /** The ID of an `SnmpOid`. */
    snmp_oid_id: Scalars['Int64Bit']['input'];
    /** The amount of time in minutes that the threshold must be violated before it is triggered. */
    time_period_in_minutes: Scalars['Int']['input'];
    /** The value. */
    value: Scalars['String']['input'];
};
/** The input object that defines the fields for the createSnmpOverride mutation. */
export type CreateSnmpOverrideMutationInput = {
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** SNMPv3 auth passphrase */
    snmp3_auth_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 auth protocol */
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    /** SNMPv3 context engine ID */
    snmp3_context_engineid?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 context name */
    snmp3_context_name?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy passphrase */
    snmp3_priv_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy protocol */
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    /** SNMPv3 security level */
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    /** SNMP community/securityName */
    snmp_community?: InputMaybe<Scalars['String']['input']>;
    /** SNMP version */
    snmp_version?: InputMaybe<SnmpVersion>;
};
/** The input object that defines the fields for the createStoredView mutation. */
export type CreateStoredViewMutationInput = {
    /** Whether or not this StoredView is available to all users. */
    is_global?: InputMaybe<Scalars['Boolean']['input']>;
    /** The location in the UI that this view is available. */
    location: Scalars['String']['input'];
    /** A name to identify this `StoredView`. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The column used to sort the filtered results. */
    sort_column?: InputMaybe<Scalars['String']['input']>;
    /** The direction to sort in. */
    sort_direction?: InputMaybe<SortDirection>;
    /** The list of filter groups for this `StoredView`. */
    stored_groups?: InputMaybe<Array<InputMaybe<StoredGroupMutationInput>>>;
    /** The type of `StoredView`. */
    type: StoredViewType;
};
/** The input object that defines the fields for the createSubnet mutation. */
export type CreateSubnetMutationInput = {
    /** A list of `InlineDevice` IDs. */
    inline_device_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a `Poller`. */
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Polling priority. */
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['input'];
    /** Subnet type. */
    type: SubnetType;
};
/** The input object that defines the fields for the createSubscription mutation. */
export type CreateSubscriptionMutationInput = {
    /** The id of the entity that is being subscribed to. */
    subscribable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that is being subscribed to. */
    subscribable_type: SubscribableType;
};
/** The input object that defines the fields for the createSupernet mutation. */
export type CreateSupernetMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['input'];
};
/** The input object that defines the fields for the createSystemBackupDestination mutation. */
export type CreateSystemBackupDestinationMutationInput = {
    /** The base path to the directory that the file will be stored in. */
    base_path?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The service that a system backup will be exported to. */
    provider: SystemBackupDestinationProvider;
    /** The credentials used to authenticate against a system backup destination provider. */
    system_backup_destination_credentials: Array<InputMaybe<SystemBackupDestinationCredentialInput>>;
};
/** The input object that defines the fields for the createSystemBackup mutation. */
export type CreateSystemBackupMutationInput = {
    /** A single file to associate with this object. Any existing file will be overwritten. */
    file?: InputMaybe<AssociateFileMutationInput>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createTask mutation. */
export type CreateTaskMutationInput = {
    /** The ID of the entity that completes or completed this task. Only required if completable_type is `CustomField`. */
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that completes this task. Only required when completion_type is not `BOOLEAN`. */
    completable_type?: InputMaybe<CompletableType>;
    /** How this task gets marked as completed. */
    completion_type?: InputMaybe<TaskCompletionType>;
    /** The date on which the task is due. */
    due?: InputMaybe<Scalars['Date']['input']>;
    /** The order this item is shown in a list. */
    list_order?: InputMaybe<Scalars['Int']['input']>;
    /** The task to be performed. */
    task: Scalars['Text']['input'];
    /** The ID of the entity that the task is associated with. */
    taskable_id: Scalars['Int64Bit']['input'];
    /** The entity that the task is associated with. */
    taskable_type: TaskableType;
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createTaskTemplateItem mutation. */
export type CreateTaskTemplateItemMutationInput = {
    /** The ID of the entity that completes or completed this task. Only required if completable_type is `CustomField`. */
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that completes this task. Only required when completion_type is not `BOOLEAN`. */
    completable_type?: InputMaybe<CompletableType>;
    /** How this task gets marked as completed. */
    completion_type?: InputMaybe<TaskCompletionType>;
    /** The order this item is shown in a list. */
    list_order?: InputMaybe<Scalars['Int']['input']>;
    /** The task to be performed. */
    task: Scalars['String']['input'];
    /** The ID of a `TaskTemplate`. */
    task_template_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createTaskTemplate mutation. */
export type CreateTaskTemplateMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
};
/** The input object that defines the fields for the createTaxExemption mutation. */
export type CreateTaxExemptionMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** A list of `AvalaraTaxCategory` IDs. */
    avalara_tax_category_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
    /** The jurisdictions of this `TaxExemption`. */
    jurisdictions: Array<InputMaybe<TaxJurisdiction>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of an `TaxProvider`. */
    tax_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createTax mutation. */
export type CreateTaxMutationInput = {
    /** Whether this `Tax` is applied as a percentage of the `Service` charge, or as a flat rate. */
    application: TaxApplication;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The rate for a tax. For a percentage based tax, this is a percentage. For a flat tax, it is a currency value in the smallest currency unit (e.g. cents, pence, pesos.) */
    rate: Scalars['Float']['input'];
    /** Whether this tax is applied based on the account being in a specific geography, or whether it is applied to all accounts. */
    type: TaxType;
};
/** The input object that defines the fields for the createTaxOverride mutation. */
export type CreateTaxOverrideMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The rate for a tax. For a percentage based tax, this is a percentage. For a flat tax, it is a currency value in the smallest currency unit (e.g. cents, pence, pesos.) */
    rate: Scalars['Float']['input'];
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createTaxProvider mutation. */
export type CreateTaxProviderMutationInput = {
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The list of subdivisions where this tax provider will collect taxes. */
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    /** Credentials for the tax provider. */
    tax_provider_credentials: Array<InputMaybe<TaxProviderCredentialMutationInput>>;
    /** The type of `TaxProvider`. */
    type: TaxProviderType;
};
/** The input object that defines the fields for the createTicketCategory mutation. */
export type CreateTicketCategoryMutationInput = {
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createTicketComment mutation. */
export type CreateTicketCommentMutationInput = {
    /** The body of the comment. */
    body: Scalars['Text']['input'];
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of a `Ticket`. */
    ticket_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createTicketGroup mutation. */
export type CreateTicketGroupMutationInput = {
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether or not the group is private. */
    private: Scalars['Boolean']['input'];
    /** The IDs of `Users` in this `TicketGroup`. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createTicketRecipient mutation. */
export type CreateTicketRecipientDuringTicketCreationMutationInput = {
    /** An email address. */
    email_address: Scalars['EmailAddress']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createTicketRecipient mutation. */
export type CreateTicketRecipientMutationInput = {
    /** An email address. */
    email_address: Scalars['EmailAddress']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a `Ticket`. */
    ticket_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createTicketReply mutation. */
export type CreateTicketReplyMutationInput = {
    /** The author. */
    author?: InputMaybe<Scalars['Text']['input']>;
    /** The email address of the author. */
    author_email?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** The body. */
    body: Scalars['Text']['input'];
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** Whether or not the reply was incoming (from an external party) or outgoing (from a Sonar `User`.) */
    incoming?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a `Ticket`. */
    ticket_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createTokenizedBankAccount mutation. */
export type CreateTokenizedBankAccountMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The billing address for the payment method. */
    address?: InputMaybe<CreateAddressMutationInput>;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto: Scalars['Boolean']['input'];
    /** The ID of a BankProcessor. */
    bank_account_processor_id: Scalars['Int64Bit']['input'];
    /** The type of bank account this is. */
    bank_account_type: BankAccountType;
    /** The profile ID provided by a credit card processing service. */
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    /** A partial account number that can be used for identification. */
    masked_account_number: Scalars['String']['input'];
    /** The name on the account. */
    name_on_account: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The tokenized value that represents a credit card, provided by a credit card processing service. */
    token: Scalars['String']['input'];
};
/** The input object that defines the fields for the createTokenizedCreditCard mutation. */
export type CreateTokenizedCreditCardMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** The billing address for the payment method. */
    address: CreateAddressMutationInput;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto: Scalars['Boolean']['input'];
    /** The ID of a CreditCardProcessor. */
    credit_card_processor_id: Scalars['Int64Bit']['input'];
    /** The type of a credit card (e.g. Visa, Mastercard.) */
    credit_card_type: CreditCardType;
    /** The profile ID provided by a credit card processing service. */
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    /** The month the credit card expires. */
    expiration_month: Scalars['Int']['input'];
    /** The year the credit card expires. */
    expiration_year: Scalars['Int']['input'];
    /** A partial credit card number that can be used for identification. */
    masked_number: Scalars['String']['input'];
    /** The name on the credit card. */
    name_on_card: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The tokenized value that represents a credit card, provided by a credit card processing service. */
    token: Scalars['String']['input'];
};
/** The input object that defines the fields for the createTriggeredEmail mutation. */
export type CreateTriggeredEmailMutationInput = {
    /** Whether or not child accounts are allowed. */
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    /** The count associated with this `TriggeredEmail`. This is defined by the trigger, and could be something like a number of days, months, gigabytes, etc. */
    count?: InputMaybe<Scalars['Int']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    email_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of an EmailMessage. */
    email_message_id: Scalars['Int64Bit']['input'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The `Job` ID for this `TriggeredEmail`. This will only be saved for triggered emails using the trigger `JOB_SCHEDULED`. */
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A list of MessageCategory IDs to apply to this triggered email. If this triggered email sends to account contacts, then the contact must have at least one of the message categories defined here in order to receive this email. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The trigger for this message. */
    trigger: EmailTrigger;
};
/** The input object that defines the fields for the createTriggeredMessage mutation. */
export type CreateTriggeredMessageMutationInput = {
    /** Whether or not child accounts are allowed. */
    allow_children: Scalars['Boolean']['input'];
    /** The count associated with this `TriggeredMessage`. This is defined by the trigger, and could be something like a number of days, months, gigabytes, etc. */
    count?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of an EmailMessage. */
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The ID of a `JobType`. */
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a signature. */
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the SMS message. */
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The trigger for this message. */
    trigger: MessageTrigger;
};
/** The input object that defines the fields for the createUninventoriedMacAddress mutation. */
export type CreateUninventoriedMacAddressMutationInput = {
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['input'];
    /** A MAC address. */
    mac_address: Scalars['MacAddress']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createUsageBasedBillingPolicyFreePeriod mutation. */
export type CreateUsageBasedBillingPolicyFreePeriodMutationInput = {
    /** A day. */
    day: Day;
    /** The end. */
    end: Scalars['Time']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The start. */
    start: Scalars['Time']['input'];
    /** The ID of a `UsageBasedBillingPolicy`. */
    usage_based_billing_policy_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createUsageBasedBillingPolicy mutation. */
export type CreateUsageBasedBillingPolicyMutationInput = {
    /** Whether or not a customer can purchase additional data usage capacity during a billing period. */
    allow_purchase_of_additional_capacity_during_billing_period: Scalars['Boolean']['input'];
    /** Whether or not to assess charges for usage over the bandwidth limit at the end of the billing period. */
    assess_charges_at_end_of_billing_period: Scalars['Boolean']['input'];
    /** The available data usage in this policy, measured in gigabytes. */
    cap_in_gigabytes: Scalars['Int']['input'];
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether or not rollover is enabled. */
    rollover_enabled: Scalars['Boolean']['input'];
    /** Whether or not rollover expiration is enabled. */
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Rollover expires after this many months, if rollover expiration is enabled. */
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    /** The overage service that this policy uses to charge for service overages. */
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the createUser mutation. */
export type CreateUserMutationInput = {
    /** An email address. */
    email_address: Scalars['EmailAddress']['input'];
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The preferred language for this user. If none is set, then the system default will be used. This will affect the interface, as well as communications sent to this user. */
    language?: InputMaybe<Language>;
    /** A mobile phone number. This will be used to send SMS messages. */
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** The publicly viewable name of this user. */
    public_name: Scalars['String']['input'];
    /** The ID of a Role. */
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Super admins receive all system permissions automatically, regardless of their role. Only a super admin can create another super admin. If you submit this property when you are not a super admin, the mutation will fail. */
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    /** A username, used for authentication. */
    username: Scalars['String']['input'];
};
/** The input object that defines the fields for the createVehicle mutation. */
export type CreateVehicleMutationInput = {
    /** Whether or not to always track the vehicle. */
    gps_tracking_always?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Friday. */
    gps_tracking_day_friday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Monday. */
    gps_tracking_day_monday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Saturday. */
    gps_tracking_day_saturday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Sunday. */
    gps_tracking_day_sunday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Thursday. */
    gps_tracking_day_thursday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Tuesday. */
    gps_tracking_day_tuesday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Wednesday. */
    gps_tracking_day_wednesday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not GPS Tracking enabled for vehicle. */
    gps_tracking_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, end time for tracking. */
    gps_tracking_end_time?: InputMaybe<Scalars['Time']['input']>;
    /** A `GpsTrackingProvider` ID. */
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If not always, start time for tracking. */
    gps_tracking_start_time?: InputMaybe<Scalars['Time']['input']>;
    /** The timezone you want times in the system displayed in. */
    gps_tracking_timezone?: InputMaybe<Timezone>;
    /** A GPS Tracking Provider vehicle unique identifier. */
    gps_tracking_uid?: InputMaybe<Scalars['String']['input']>;
    /** The manufacturer. */
    manufacturer?: InputMaybe<Scalars['String']['input']>;
    /** The model. */
    model?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The vehicle identification number. */
    vin?: InputMaybe<Scalars['String']['input']>;
    /** A year. */
    year?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the createVendorItem mutation. */
export type CreateVendorItemMutationInput = {
    /** Archived vendor items may not be used for creating new purchase orders or product requests. */
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Part number used by the vendor to identify this vendor item. */
    part_number?: InputMaybe<Scalars['String']['input']>;
    /** The purchase price of this item from the vendor. */
    price?: InputMaybe<Scalars['Int']['input']>;
    /** Number of inventory models that are included in a single unit of this vendors product. */
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    /** Flag for vendor items that should create a one-time service for retail sale to customers. */
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    /** The price of the one-time service created for this vendor item */
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of the one-time service created when this vendor item was created. */
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the vendor that sells this item */
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity that is referred to by this vendor item. */
    vendoritemable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that is referred to by this vendor item. */
    vendoritemable_type: VendoritemableType;
};
/** The input object that defines the fields for the createVendor mutation. */
export type CreateVendorMutationInput = {
    /** The physical address of this vendor. */
    address: CreateAddressMutationInput;
    /** Archived vendors may not be used for creating new Purchase Orders or Product Requests. */
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    /** Determines if approved purchase orders for this vendor should automatically dispatch an email to the vendor. */
    automate_approved_purchase_orders?: InputMaybe<Scalars['Boolean']['input']>;
    /** The currency used for all transactions with this vendor. */
    currency?: InputMaybe<Currency>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The terms of payment for deliveries from this vendor. */
    payment_terms?: InputMaybe<PaymentTerm>;
    /** The primary contact information of this vendor */
    primary_contact: CreatePrimaryContactMutationInput;
    /** A list of IDs belonging to the taxes that should be applied to each item sold by this vendor. */
    taxes?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the createVoiceProvider mutation. */
export type CreateVoiceProviderMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the createVoiceProviderRateImportFlatfile mutation. */
export type CreateVoiceProviderRateImportFlatfileMutationInput = {
    /** The percentage over the base rate to charge the customer. */
    charge_percent: Scalars['Float']['input'];
    /** The identifier of a unique batch at Flatfile. */
    flatfile_batch_identifier: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createVoiceProviderRate mutation. */
export type CreateVoiceProviderRateMutationInput = {
    /** The rate that is imported from a rate deck. */
    base_rate: Scalars['Float']['input'];
    /** The percentage over the base rate to charge the customer. */
    charge_percent: Scalars['Float']['input'];
    /** The description for the rate. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The prefix for the rate. */
    prefix: Scalars['String']['input'];
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createVoiceServiceGenericParameter mutation. */
export type CreateVoiceServiceGenericParameterMutationInput = {
    /** The quantity of this item that will be added to accounts with the related voice service at the time of the item's creation. */
    backfill_quantity?: InputMaybe<Scalars['Int']['input']>;
    /** The default quantity of this item. */
    default_quantity?: InputMaybe<Scalars['Int']['input']>;
    /** A human readable description. */
    description: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The price per unit of this item. */
    price: Scalars['Int']['input'];
    /** Indicates if changes to this entity trigger proration. */
    proratable: Scalars['Boolean']['input'];
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The date to prorate the transaction as of. */
    proration_date?: InputMaybe<Scalars['Date']['input']>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this voice service generic parameter creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<VoiceServiceGenericParameterTaxMutationInput>>>;
    /** The ID of the `VoiceServiceDetail`. */
    voice_service_detail_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createVoiceService mutation. */
export type CreateVoiceServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['input'];
    /** How this is applied. */
    application: ServiceApplication;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['input'];
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The cost per minute for local calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    cost_per_minute_local_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    /** The cost per minute for long distance calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    cost_per_minute_long_distance_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    /** A two character country code. */
    country: Country;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** This is the minimum amount of time the customer will be charged for a call. */
    first_interval_in_seconds: Scalars['Int']['input'];
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity. */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If a customer has a toll free number, this is the rate charged to them for inbound calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    inbound_toll_free_rate_per_minute_in_thousandths: Scalars['Int']['input'];
    /** The quantity of free local minutes provided, if `unlimited_local_minutes` is false. */
    local_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** Which prefixes should be treated as local for this voice service. */
    local_prefixes?: InputMaybe<Array<InputMaybe<Scalars['Numeric']['input']>>>;
    /** The quantity of free long distance minutes provided, if `unlimited_long_distance_minutes` is false. */
    long_distance_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Hide parameters of this service on customer invoices/statements and in the customer portal. */
    rollup_generic_parameters?: InputMaybe<Scalars['Boolean']['input']>;
    /** Indicates if Call Detail Records (CDRs) for this service should be displayed on an invoice. */
    show_call_detail_records_on_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    /** After the `first_interval_in_seconds` time is exceeded, this is the minimum amount of subsequent time. For example, if `first_interval_in_seconds` is 30, and `sub_interval_in_seconds` is 6, then a 31 second call would be charged at 36 seconds, and a 37 second call would be charged at 42 seconds. */
    sub_interval_in_seconds: Scalars['Int']['input'];
    /** The sub type of this voice service. */
    sub_type: VoiceServiceDetailSubType;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** Whether this service provides unlimited local minutes. */
    unlimited_local_minutes: Scalars['Boolean']['input'];
    /** Whether this service provides unlimited long distance minutes. */
    unlimited_long_distance_minutes: Scalars['Boolean']['input'];
    /** Attributes specific to a voice service that establish baseline prices of each. */
    voice_service_generic_parameters: Array<InputMaybe<VoiceServiceGenericParameterMutationInput>>;
};
/** The input object that defines the fields for the createWebhookEndpointEvent mutation. */
export type CreateWebhookEndpointEventMutationInput = {
    /** The event(s) for the model attached to a webhook endpoint. */
    event: WebhookEndpointModelEvent;
    /** The model. */
    model: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a webhook endpoint. */
    webhook_endpoint_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the createWebhookEndpoint mutation. */
export type CreateWebhookEndpointMutationInput = {
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['input'];
    /** The endpoint. */
    endpoint: Scalars['HttpsUrl']['input'];
    /** The model and event associated with a webhook endpoint. */
    model_events?: InputMaybe<Array<InputMaybe<WebhookEndpointModelEventInput>>>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** types.credential_validation_response */
export type CredentialValidationResponse = {
    __typename: 'CredentialValidationResponse';
    /** Any message returned from the device upon attempted credential validation. */
    message?: Maybe<Scalars['String']['output']>;
    /** The status of the validation attempt. */
    status: Scalars['Boolean']['output'];
};
/** The application of a `Discount` or `Payment` against an `Invoice`. */
export type Credit = AccessloggableInterface & LoggableInterface & {
    __typename: 'Credit';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The entity this `Credit` is associated with. */
    creditable?: Maybe<CreditableInterface>;
    /** The ID the transaction that created this credit. */
    creditable_id: Scalars['Int64Bit']['output'];
    /** The type of transaction that created this credit. */
    creditable_type: CreditableType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoice?: Maybe<Invoice>;
    /** The ID of an `Invoice`. */
    invoice_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Whether or not this entity has been voided. */
    void: Scalars['Boolean']['output'];
    /** When this was voided. */
    voided_at?: Maybe<Scalars['Datetime']['output']>;
};
/** The application of a `Discount` or `Payment` against an `Invoice`. */
export type CreditAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The application of a `Discount` or `Payment` against an `Invoice`. */
export type CreditAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The application of a `Discount` or `Payment` against an `Invoice`. */
export type CreditCreditableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The application of a `Discount` or `Payment` against an `Invoice`. */
export type CreditInvoiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The application of a `Discount` or `Payment` against an `Invoice`. */
export type CreditLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credit card. */
export type CreditCard = AccessloggableInterface & AddressableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CreditCard';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** A geographical address. */
    addresses: AddressConnection;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A company that processes `CreditCard` transactions. */
    credit_card_processor?: Maybe<CreditCardProcessor>;
    /** The ID of a CreditCardProcessor. */
    credit_card_processor_id: Scalars['Int64Bit']['output'];
    /** The type of a credit card (e.g. Visa, Mastercard.) */
    credit_card_type: CreditCardType;
    /** The profile ID provided by a credit card processing service. */
    customer_profile_id?: Maybe<Scalars['String']['output']>;
    /** The month the credit card expires. */
    expiration_month: Scalars['Int']['output'];
    /** The year the credit card expires. */
    expiration_year: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A partial credit card number that can be used for identification. */
    masked_number: Scalars['String']['output'];
    /** The name on the credit card. */
    name_on_card?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A payment. */
    payments: PaymentConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The tokenized value that represents a credit card, provided by a credit card processing service. */
    token: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A credit card. */
export type CreditCardAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credit card. */
export type CreditCardAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A credit card. */
export type CreditCardAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A credit card. */
export type CreditCardCredit_Card_ProcessorArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amex?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dankort?: InputMaybe<Scalars['Boolean']['input']>;
    dinersclub?: InputMaybe<Scalars['Boolean']['input']>;
    discover?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    forbrugsforeningen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jcb?: InputMaybe<Scalars['Boolean']['input']>;
    maestro?: InputMaybe<Scalars['Boolean']['input']>;
    mastercard?: InputMaybe<Scalars['Boolean']['input']>;
    moto_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<CreditCardProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unionpay?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    visa?: InputMaybe<Scalars['Boolean']['input']>;
    visaelectron?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A credit card. */
export type CreditCardLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credit card. */
export type CreditCardNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credit card. */
export type CreditCardPaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CreditCardConnection` type. */
export type CreditCardConnection = {
    __typename: 'CreditCardConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CreditCard>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A company that processes `CreditCard` transactions. */
export type CreditCardProcessor = AccessloggableInterface & LoggableInterface & {
    __typename: 'CreditCardProcessor';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** American Express. */
    amex: Scalars['Boolean']['output'];
    /** A company you do business as. */
    companies: CompanyConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Credentials for a `CreditCardProcessor`. */
    credit_card_processor_credentials: CreditCardProcessorCredentialConnection;
    /** A credit card. */
    credit_cards: CreditCardConnection;
    /** Dankort. */
    dankort: Scalars['Boolean']['output'];
    /** Diner's Club. */
    dinersclub: Scalars['Boolean']['output'];
    /** Discover. */
    discover: Scalars['Boolean']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** Forbrugsforeningen. */
    forbrugsforeningen: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** JCB */
    jcb: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Maestro. */
    maestro: Scalars['Boolean']['output'];
    /** MasterCard. */
    mastercard: Scalars['Boolean']['output'];
    /** Enables processor specific `Mail Or Telephone Order` functionality. Currently only applicable for `Stripe`. */
    moto_enabled: Scalars['Boolean']['output'];
    /** Whether or not this is the primary type of entity. */
    primary: Scalars['Boolean']['output'];
    /** The company that provides credit card processing services. */
    provider: CreditCardProvider;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Union Pay. */
    unionpay: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Visa */
    visa: Scalars['Boolean']['output'];
    /** VISA Electron. */
    visaelectron: Scalars['Boolean']['output'];
};
/** A company that processes `CreditCard` transactions. */
export type CreditCardProcessorAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A company that processes `CreditCard` transactions. */
export type CreditCardProcessorCompaniesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A company that processes `CreditCard` transactions. */
export type CreditCardProcessorCredit_Card_Processor_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<CreditCardProviderCredential>;
    credit_card_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A company that processes `CreditCard` transactions. */
export type CreditCardProcessorCredit_CardsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credit_card_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    credit_card_type?: InputMaybe<CreditCardType>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    expiration_month?: InputMaybe<Scalars['Int']['input']>;
    expiration_year?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_number?: InputMaybe<Scalars['String']['input']>;
    name_on_card?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A company that processes `CreditCard` transactions. */
export type CreditCardProcessorLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CreditCardProcessorConnection` type. */
export type CreditCardProcessorConnection = {
    __typename: 'CreditCardProcessorConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CreditCardProcessor>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for a `CreditCardProcessor`. */
export type CreditCardProcessorCredential = AccessloggableInterface & LoggableInterface & {
    __typename: 'CreditCardProcessorCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The credential name. */
    credential: CreditCardProviderCredential;
    /** A company that processes `CreditCard` transactions. */
    credit_card_processor?: Maybe<CreditCardProcessor>;
    /** The ID of a CreditCardProcessor. */
    credit_card_processor_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** Credentials for a `CreditCardProcessor`. */
export type CreditCardProcessorCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Credentials for a `CreditCardProcessor`. */
export type CreditCardProcessorCredentialCredit_Card_ProcessorArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amex?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dankort?: InputMaybe<Scalars['Boolean']['input']>;
    dinersclub?: InputMaybe<Scalars['Boolean']['input']>;
    discover?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    forbrugsforeningen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jcb?: InputMaybe<Scalars['Boolean']['input']>;
    maestro?: InputMaybe<Scalars['Boolean']['input']>;
    mastercard?: InputMaybe<Scalars['Boolean']['input']>;
    moto_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<CreditCardProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unionpay?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    visa?: InputMaybe<Scalars['Boolean']['input']>;
    visaelectron?: InputMaybe<Scalars['Boolean']['input']>;
};
/** Credentials for a `CreditCardProcessor`. */
export type CreditCardProcessorCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CreditCardProcessorCredentialConnection` type. */
export type CreditCardProcessorCredentialConnection = {
    __typename: 'CreditCardProcessorCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CreditCardProcessorCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The credentials for the credit card processor. Generally some type of API key or authentication information. */
export type CreditCardProcessorCredentialInput = {
    /** The credential name. */
    credential: CreditCardProviderCredential;
    /** The credential value. */
    value: Scalars['String']['input'];
};
/** A company that processes `CreditCard`s. */
export declare enum CreditCardProvider {
    /** Authorize.net CIM (https://authorize.net) */
    Authorize = "AUTHORIZE",
    /** Bambora (https://www.bambora.com/en/us/) */
    Bambora = "BAMBORA",
    /** BluePay (https://www.bluepay.com) */
    Bluepay = "BLUEPAY",
    /** CardConnect (https://cardconnect.com) */
    Cardconnect = "CARDCONNECT",
    /** IPpay (http://ippay.com) */
    Ippay = "IPPAY",
    /** Moneris Canada eSelect Vault (https://www.moneris.com) */
    MonerisCa = "MONERIS_CA",
    /** PayGate PayHost/PayVault (https://www.paygate.co.za/) */
    Paygate = "PAYGATE",
    /** ProPay ProtectPay (https://epay.propay.com/protectpay) */
    Propay = "PROPAY",
    /** SonarPay */
    Sonarpay = "SONARPAY",
    /** Stripe (https://stripe.com) */
    Stripe = "STRIPE"
}
/** Defines the required credentials for a credit card provider. */
export declare enum CreditCardProviderCredential {
    /** Authorize.net API login ID. */
    AuthorizeApiLoginId = "AUTHORIZE_API_LOGIN_ID",
    /** Authorize.net transaction key. */
    AuthorizeTransactionKey = "AUTHORIZE_TRANSACTION_KEY",
    /** Authorize.net validation mode. */
    AuthorizeValidationMode = "AUTHORIZE_VALIDATION_MODE",
    /** Bambora merchant ID. */
    BamboraMerchantId = "BAMBORA_MERCHANT_ID",
    /** Bambora payment profile API key. */
    BamboraPaymentProfileApiKey = "BAMBORA_PAYMENT_PROFILE_API_KEY",
    /** Bambora transaction API key. */
    BamboraTransactionApiKey = "BAMBORA_TRANSACTION_API_KEY",
    /** Bluepay account ID. */
    BluepayAccountId = "BLUEPAY_ACCOUNT_ID",
    /** Bluepay secret key. */
    BluepaySecretKey = "BLUEPAY_SECRET_KEY",
    /** CardConnect merchant ID. */
    CardconnectMerchantId = "CARDCONNECT_MERCHANT_ID",
    /** CardConnect password. */
    CardconnectPassword = "CARDCONNECT_PASSWORD",
    /** CardConnect username. */
    CardconnectUsername = "CARDCONNECT_USERNAME",
    /** IPpay terminal ID */
    IppayTerminalid = "IPPAY_TERMINALID",
    /** Moneris API token. */
    MonerisCaApiToken = "MONERIS_CA_API_TOKEN",
    /** Moneris store ID. */
    MonerisCaStoreId = "MONERIS_CA_STORE_ID",
    /** PayGate ID. */
    PaygateId = "PAYGATE_ID",
    /** PayGate PayHost password. */
    PaygatePayhostPassword = "PAYGATE_PAYHOST_PASSWORD",
    /** ProPay auth token. */
    PropayAuthToken = "PROPAY_AUTH_TOKEN",
    /** ProPay biller account ID. */
    PropayBillerAccountId = "PROPAY_BILLER_ACCOUNT_ID",
    /** SonarPay Merchant ID */
    SonarpayMerchantId = "SONARPAY_MERCHANT_ID",
    /** Stripe secret key */
    StripeSecretKey = "STRIPE_SECRET_KEY"
}
/** The type of `CreditCard`. */
export declare enum CreditCardType {
    /** American Express */
    Amex = "AMEX",
    /** Dankort */
    Dankort = "DANKORT",
    /** Diner's Club */
    Dinersclub = "DINERSCLUB",
    /** Discover */
    Discover = "DISCOVER",
    /** Forbrugsforeningen */
    Forbrugsforeningen = "FORBRUGSFORENINGEN",
    /** JCB */
    Jcb = "JCB",
    /** Maestro */
    Maestro = "MAESTRO",
    /** MasterCard */
    Mastercard = "MASTERCARD",
    /** Union Pay */
    Unionpay = "UNIONPAY",
    /** Visa */
    Visa = "VISA",
    /** Visa Electron */
    Visaelectron = "VISAELECTRON"
}
/** The connection wrapper around the `CreditConnection` type. */
export type CreditConnection = {
    __typename: 'CreditConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Credit>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A transaction that can create a `Credit`. */
export type CreditableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The entity that this `Credit` is associated with. */
export declare enum CreditableType {
    /** A `Discount`. */
    Discount = "Discount",
    /** A `Payment`. */
    Payment = "Payment"
}
/** A type of currency. */
export declare enum Currency {
    /** UAE Dirham */
    Aed = "AED",
    /** Afghani */
    Afn = "AFN",
    /** Lek */
    All = "ALL",
    /** Armenian Dram */
    Amd = "AMD",
    /** Netherlands Antillean Guilder */
    Ang = "ANG",
    /** Kwanza */
    Aoa = "AOA",
    /** Argentine Peso */
    Ars = "ARS",
    /** Australian Dollar */
    Aud = "AUD",
    /** Aruban Florin */
    Awg = "AWG",
    /** Azerbaijan Manat */
    Azn = "AZN",
    /** Convertible Mark */
    Bam = "BAM",
    /** Barbados Dollar */
    Bbd = "BBD",
    /** Taka */
    Bdt = "BDT",
    /** Bulgarian Lev */
    Bgn = "BGN",
    /** Bermudian Dollar */
    Bmd = "BMD",
    /** Brunei Dollar */
    Bnd = "BND",
    /** Boliviano */
    Bob = "BOB",
    /** Brazilian Real */
    Brl = "BRL",
    /** Bahamian Dollar */
    Bsd = "BSD",
    /** Ngultrum */
    Btn = "BTN",
    /** Pula */
    Bwp = "BWP",
    /** Belarusian Ruble */
    Byn = "BYN",
    /** Belize Dollar */
    Bzd = "BZD",
    /** Canadian Dollar */
    Cad = "CAD",
    /** Congolese Franc */
    Cdf = "CDF",
    /** Swiss Franc */
    Chf = "CHF",
    /** Yuan Renminbi */
    Cny = "CNY",
    /** Colombian Peso */
    Cop = "COP",
    /** Costa Rican Colon */
    Crc = "CRC",
    /** Peso Convertible */
    Cuc = "CUC",
    /** Cuban Peso */
    Cup = "CUP",
    /** Cabo Verde Escudo */
    Cve = "CVE",
    /** Czech Koruna */
    Czk = "CZK",
    /** Danish Krone */
    Dkk = "DKK",
    /** Dominican Peso */
    Dop = "DOP",
    /** Algerian Dinar */
    Dzd = "DZD",
    /** Egyptian Pound */
    Egp = "EGP",
    /** Nakfa */
    Ern = "ERN",
    /** Ethiopian Birr */
    Etb = "ETB",
    /** Euro */
    Eur = "EUR",
    /** Fiji Dollar */
    Fjd = "FJD",
    /** Falkland Islands Pound */
    Fkp = "FKP",
    /** Pound Sterling */
    Gbp = "GBP",
    /** Lari */
    Gel = "GEL",
    /** Ghana Cedi */
    Ghs = "GHS",
    /** Gibraltar Pound */
    Gip = "GIP",
    /** Dalasi */
    Gmd = "GMD",
    /** Quetzal */
    Gtq = "GTQ",
    /** Hong Kong Dollar */
    Hkd = "HKD",
    /** Lempira */
    Hnl = "HNL",
    /** Gourde */
    Htg = "HTG",
    /** Forint */
    Huf = "HUF",
    /** Rupiah */
    Idr = "IDR",
    /** New Israeli Sheqel */
    Ils = "ILS",
    /** Indian Rupee */
    Inr = "INR",
    /** Iranian Rial */
    Irr = "IRR",
    /** Jamaican Dollar */
    Jmd = "JMD",
    /** Kenyan Shilling */
    Kes = "KES",
    /** Som */
    Kgs = "KGS",
    /** Riel */
    Khr = "KHR",
    /** North Korean Won */
    Kpw = "KPW",
    /** Cayman Islands Dollar */
    Kyd = "KYD",
    /** Tenge */
    Kzt = "KZT",
    /** Lao Kip */
    Lak = "LAK",
    /** Lebanese Pound */
    Lbp = "LBP",
    /** Sri Lanka Rupee */
    Lkr = "LKR",
    /** Liberian Dollar */
    Lrd = "LRD",
    /** Loti */
    Lsl = "LSL",
    /** Moroccan Dirham */
    Mad = "MAD",
    /** Moldovan Leu */
    Mdl = "MDL",
    /** Malagasy Ariary */
    Mga = "MGA",
    /** Denar */
    Mkd = "MKD",
    /** Kyat */
    Mmk = "MMK",
    /** Tugrik */
    Mnt = "MNT",
    /** Pataca */
    Mop = "MOP",
    /** Ouguiya */
    Mru = "MRU",
    /** Mauritius Rupee */
    Mur = "MUR",
    /** Rufiyaa */
    Mvr = "MVR",
    /** Malawi Kwacha */
    Mwk = "MWK",
    /** Mexican Peso */
    Mxn = "MXN",
    /** Malaysian Ringgit */
    Myr = "MYR",
    /** Mozambique Metical */
    Mzn = "MZN",
    /** Namibia Dollar */
    Nad = "NAD",
    /** Naira */
    Ngn = "NGN",
    /** Cordoba Oro */
    Nio = "NIO",
    /** Norwegian Krone */
    Nok = "NOK",
    /** Nepalese Rupee */
    Npr = "NPR",
    /** New Zealand Dollar */
    Nzd = "NZD",
    /** Balboa */
    Pab = "PAB",
    /** Sol */
    Pen = "PEN",
    /** Kina */
    Pgk = "PGK",
    /** Philippine Peso */
    Php = "PHP",
    /** Pakistan Rupee */
    Pkr = "PKR",
    /** Zloty */
    Pln = "PLN",
    /** Qatari Rial */
    Qar = "QAR",
    /** Romanian Leu */
    Ron = "RON",
    /** Serbian Dinar */
    Rsd = "RSD",
    /** Russian Ruble */
    Rub = "RUB",
    /** Saudi Riyal */
    Sar = "SAR",
    /** Solomon Islands Dollar */
    Sbd = "SBD",
    /** Seychelles Rupee */
    Scr = "SCR",
    /** Sudanese Pound */
    Sdg = "SDG",
    /** Swedish Krona */
    Sek = "SEK",
    /** Singapore Dollar */
    Sgd = "SGD",
    /** Saint Helena Pound */
    Shp = "SHP",
    /** Leone */
    Sll = "SLL",
    /** Somali Shilling */
    Sos = "SOS",
    /** Surinam Dollar */
    Srd = "SRD",
    /** South Sudanese Pound */
    Ssp = "SSP",
    /** Dobra */
    Stn = "STN",
    /** El Salvador Colon */
    Svc = "SVC",
    /** Syrian Pound */
    Syp = "SYP",
    /** Lilangeni */
    Szl = "SZL",
    /** Baht */
    Thb = "THB",
    /** Somoni */
    Tjs = "TJS",
    /** Turkmenistan New Manat */
    Tmt = "TMT",
    /** Pa’anga */
    Top = "TOP",
    /** Turkish Lira */
    Try = "TRY",
    /** Trinidad and Tobago Dollar */
    Ttd = "TTD",
    /** New Taiwan Dollar */
    Twd = "TWD",
    /** Tanzanian Shilling */
    Tzs = "TZS",
    /** Hryvnia */
    Uah = "UAH",
    /** US Dollar */
    Usd = "USD",
    /** Peso Uruguayo */
    Uyu = "UYU",
    /** Uzbekistan Sum */
    Uzs = "UZS",
    /** Bolívar Soberano */
    Ves = "VES",
    /** Tala */
    Wst = "WST",
    /** East Caribbean Dollar */
    Xcd = "XCD",
    /** Yemeni Rial */
    Yer = "YER",
    /** Rand */
    Zar = "ZAR",
    /** Zambian Kwacha */
    Zmw = "ZMW",
    /** Zimbabwe Dollar */
    Zwl = "ZWL"
}
/** A user defined field. */
export type CustomField = AccessloggableInterface & CompletableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'CustomField';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A company you do business as. */
    companies: CompanyConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** The type of entity this custom field will be associated with. */
    entity_type: CustomfielddataableType;
    /** A list of values that are valid for this field, if this is a TEXT field. If this is empty, and the field is a TEXT type, then any value will be allowed. */
    enum_options?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** Whether or not this field is required. */
    required: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A `task template item`. */
    task_template_items: TaskTemplateItemConnection;
    /** A task. */
    tasks: TaskConnection;
    /** The type. */
    type: CustomFieldType;
    /** Whether or not the value of this custom field must be unique throughout the system. */
    unique: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A user defined field. */
export type CustomFieldAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user defined field. */
export type CustomFieldCompaniesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A user defined field. */
export type CustomFieldCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A user defined field. */
export type CustomFieldLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user defined field. */
export type CustomFieldNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user defined field. */
export type CustomFieldTask_Template_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['String']['input']>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user defined field. */
export type CustomFieldTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CustomFieldConnection` type. */
export type CustomFieldConnection = {
    __typename: 'CustomFieldConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CustomField>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Data entered into a `CustomField`. */
export type CustomFieldData = AccessloggableInterface & LoggableInterface & SearchableInterface & {
    __typename: 'CustomFieldData';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A user defined field. */
    custom_field?: Maybe<CustomField>;
    /** The ID of a CustomField that is associated with this type of entity. */
    custom_field_id: Scalars['Int64Bit']['output'];
    /** The owner of this `CustomFieldData`. */
    customfielddataable?: Maybe<CustomfielddataableInterface>;
    /** The ID of the entity that owns this custom field data. */
    customfielddataable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that owns this custom field data. */
    customfielddataable_type: CustomfielddataableType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** Data entered into a `CustomField`. */
export type CustomFieldDataAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Data entered into a `CustomField`. */
export type CustomFieldDataCustom_FieldArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_type?: InputMaybe<CustomfielddataableType>;
    enum_options?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    required?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<CustomFieldType>;
    unique?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Data entered into a `CustomField`. */
export type CustomFieldDataCustomfielddataableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Data entered into a `CustomField`. */
export type CustomFieldDataLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `CustomFieldDataConnection` type. */
export type CustomFieldDataConnection = {
    __typename: 'CustomFieldDataConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<CustomFieldData>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Allows the addition of custom field data to the parent entity. */
export type CustomFieldDataMutationInput = {
    /** The ID of a CustomField that is associated with this type of entity. */
    custom_field_id: Scalars['Int64Bit']['input'];
    /** The value of the custom field. For custom fields of the TEXT type, this should be arbitrary text, or one of the allowed values. For custom fields of the DATE type, this should be a date in YYYY-MM-DD format. For custom fields of the BOOLEAN type, this should be 1 or 0. */
    value: Scalars['String']['input'];
};
/** Different types of `CustomField`s. */
export declare enum CustomFieldType {
    /** A boolean value */
    Boolean = "BOOLEAN",
    /** A date input */
    Date = "DATE",
    /** A text input */
    Text = "TEXT"
}
/** The type of contacts that can access the customer portal. */
export declare enum CustomerPortalContactAccess {
    /** All contacts */
    All = "ALL",
    /** Primary contacts only */
    Primary = "PRIMARY"
}
/** An entity that has `CustomFieldData` associated with it. */
export type CustomfielddataableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An entity that is allowed to have custom fields defined for it. */
export declare enum CustomfielddataableType {
    /** A customer account. */
    Account = "Account",
    /** A geographical address. */
    Address = "Address",
    /** A contact person. */
    Contact = "Contact",
    /** A generic assignee for inventory items. */
    GenericInventoryAssignee = "GenericInventoryAssignee",
    /** A job, typically in the field. */
    Job = "Job",
    /** A network site. */
    NetworkSite = "NetworkSite",
    /** A line item on a purchase order. */
    PurchaseOrderItem = "PurchaseOrderItem",
    /** types.test_read_only_file_model */
    TestReadOnlyFileModel = "TestReadOnlyFileModel",
    /** A ticket. */
    Ticket = "Ticket"
}
/** An aggregated value calculated for a given date. */
export type DailyAggregateValue = AccessloggableInterface & LoggableInterface & {
    __typename: 'DailyAggregateValue';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Additional context regarding the item. */
    context?: Maybe<Scalars['Text']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date */
    date: Scalars['Date']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Key for a specific value. */
    key: AggregateKey;
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['Float']['output'];
};
/** An aggregated value calculated for a given date. */
export type DailyAggregateValueAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An aggregated value calculated for a given date. */
export type DailyAggregateValueLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DailyAggregateValueConnection` type. */
export type DailyAggregateValueConnection = {
    __typename: 'DailyAggregateValueConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DailyAggregateValue>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details regarding a specific data `Service`. */
export type DataServiceDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DataServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The download speed of the service in kilobits per second. */
    download_speed_kilobits_per_second: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The FCC technology code for the service. Only relevant to US ISPs filing FCC Form 477. */
    technology_code: TechnologyCode;
    /** The global service profile name for this service if using Telrad provisioning. */
    telrad_global_service_profile_name?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The upload speed of the service in kilobits per second. */
    upload_speed_kilobits_per_second: Scalars['Int']['output'];
    /** A usage based billing policy. */
    usage_based_billing_policy?: Maybe<UsageBasedBillingPolicy>;
    /** The ID of a `UsageBasedBillingPolicy`. */
    usage_based_billing_policy_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** Details regarding a specific data `Service`. */
export type DataServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific data `Service`. */
export type DataServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific data `Service`. */
export type DataServiceDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific data `Service`. */
export type DataServiceDetailServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Details regarding a specific data `Service`. */
export type DataServiceDetailUsage_Based_Billing_PolicyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_purchase_of_additional_capacity_during_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    assess_charges_at_end_of_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    cap_in_gigabytes?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `DataServiceDetailConnection` type. */
export type DataServiceDetailConnection = {
    __typename: 'DataServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DataServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** types.data_usage */
export type DataUsage = {
    __typename: 'DataUsage';
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The data source identifier. */
    data_source_identifier?: Maybe<Scalars['String']['output']>;
    /** The data source parent. */
    data_source_parent?: Maybe<Scalars['String']['output']>;
    /** A Unix timestamp in the same timezone as this Sonar instance */
    epoch_system_timezone?: Maybe<Scalars['EpochTimestamp']['output']>;
    /** The amount of inbound bytes per second. */
    inbytes_per_second?: Maybe<Scalars['Int64Bit']['output']>;
    /** The amount of outbound bytes per second. */
    outbytes_per_second?: Maybe<Scalars['Int64Bit']['output']>;
    /** The time. */
    time?: Maybe<Scalars['Datetime']['output']>;
};
/** A data usage history entry. */
export type DataUsageHistory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DataUsageHistory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The `DataUsageHistory`(s) that were rolled over. */
    available_rollover_histories: DataUsageHistoryConnection;
    /** The total billable inbound data in bytes. */
    billable_in_bytes: Scalars['Int64Bit']['output'];
    /** The total billable outbound data in bytes. */
    billable_out_bytes: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A data usage top off. */
    data_usage_top_offs: DataUsageTopOffConnection;
    /** The end time of this data usage history interval. */
    end_time?: Maybe<Scalars['Datetime']['output']>;
    /** The total free inbound data in bytes. */
    free_in_bytes: Scalars['Int64Bit']['output'];
    /** The total free outbound data in bytes. */
    free_out_bytes: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The policy cap when this data usage history interval was closed. */
    policy_cap_at_close_in_bytes: Scalars['Int64Bit']['output'];
    /** The total available rollover data in bytes. */
    rollover_available_in_bytes: Scalars['Int64Bit']['output'];
    /** The parent `DataUsageHistory`(s) for which this `DataUsageHistory` is counted as a rollover for. */
    rollover_parent_histories: DataUsageHistoryConnection;
    /** The total remaining rollover data in bytes. */
    rollover_remainder_bytes: Scalars['Int64Bit']['output'];
    /** The total unconsumed rollover data in bytes. */
    rollover_unconsumed_bytes: Scalars['Int64Bit']['output'];
    /** The rollover used when this data usage history interval was closed. */
    rollover_used_at_close_in_bytes: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start time of this data usage history interval. */
    start_time: Scalars['Datetime']['output'];
    /** The top off total when this data usage history interval was closed. */
    top_off_total_at_close_in_bytes: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A data usage history entry. */
export type DataUsageHistoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A data usage history entry. */
export type DataUsageHistoryAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A data usage history entry. */
export type DataUsageHistoryAvailable_Rollover_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billable_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    billable_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_time?: InputMaybe<Scalars['Datetime']['input']>;
    free_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    free_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_cap_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_available_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_remainder_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_unconsumed_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_used_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Datetime']['input']>;
    top_off_total_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A data usage history entry. */
export type DataUsageHistoryData_Usage_Top_OffsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_history_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A data usage history entry. */
export type DataUsageHistoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A data usage history entry. */
export type DataUsageHistoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A data usage history entry. */
export type DataUsageHistoryRollover_Parent_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billable_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    billable_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_time?: InputMaybe<Scalars['Datetime']['input']>;
    free_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    free_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_cap_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_available_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_remainder_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_unconsumed_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_used_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Datetime']['input']>;
    top_off_total_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `DataUsageHistoryConnection` type. */
export type DataUsageHistoryConnection = {
    __typename: 'DataUsageHistoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DataUsageHistory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A data usage top off. */
export type DataUsageTopOff = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DataUsageTopOff';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The amount of top off data in bytes. */
    amount_in_bytes: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A data usage history entry. */
    data_usage_history?: Maybe<DataUsageHistory>;
    /** The ID of a `DataUsageHistory`. */
    data_usage_history_id: Scalars['Int64Bit']['output'];
    /** A debit. */
    debit?: Maybe<Debit>;
    /** The ID of a `Debit`. */
    debit_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A data usage top off. */
export type DataUsageTopOffAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A data usage top off. */
export type DataUsageTopOffAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A data usage top off. */
export type DataUsageTopOffData_Usage_HistoryArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billable_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    billable_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_time?: InputMaybe<Scalars['Datetime']['input']>;
    free_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    free_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_cap_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_available_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_remainder_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_unconsumed_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_used_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Datetime']['input']>;
    top_off_total_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A data usage top off. */
export type DataUsageTopOffDebitArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A data usage top off. */
export type DataUsageTopOffLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A data usage top off. */
export type DataUsageTopOffNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DataUsageTopOffConnection` type. */
export type DataUsageTopOffConnection = {
    __typename: 'DataUsageTopOffConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DataUsageTopOff>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The way in which a date is formatted in Sonar. */
export declare enum DateFormat {
    /** A date in DD/MM/YYYY format */
    DayMonthYear = "DAY_MONTH_YEAR",
    /** A human readable format (e.g. Wednesday, January 4th, 2020.) */
    HumanFormat = "HUMAN_FORMAT",
    /** A date in MM/DD/YYYY format */
    MonthDayYear = "MONTH_DAY_YEAR",
    /** A date in YYYY-MM-DD format */
    YearMonthDay = "YEAR_MONTH_DAY"
}
/** types.date_time_range */
export type DateTimeRange = {
    __typename: 'DateTimeRange';
    /** The date and time that this ends. */
    end_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** The date and time that this starts. */
    start_datetime?: Maybe<Scalars['Datetime']['output']>;
};
/** A day of the week. */
export declare enum Day {
    /** Friday. */
    Friday = "FRIDAY",
    /** Monday. */
    Monday = "MONDAY",
    /** Saturday. */
    Saturday = "SATURDAY",
    /** Sunday. */
    Sunday = "SUNDAY",
    /** Thursday. */
    Thursday = "THURSDAY",
    /** Tuesday. */
    Tuesday = "TUESDAY",
    /** Wednesday. */
    Wednesday = "WEDNESDAY"
}
/** A debit. */
export type Debit = AccessloggableInterface & LoggableInterface & TaxtransactionableInterface & TransactionInterface & {
    __typename: 'Debit';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A data usage top off. */
    data_usage_top_off?: Maybe<DataUsageTopOff>;
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** A discount. */
    discount?: Maybe<Discount>;
    /** A fractional debit, stored to accurately calculate multi month billing. */
    fractional_debits: FractionalDebitConnection;
    /** A general ledger code. */
    general_ledger_code?: Maybe<Scalars['String']['output']>;
    /** A general ledger code description. */
    general_ledger_code_description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoice?: Maybe<Invoice>;
    /** The ID of an `Invoice`. */
    invoice_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the Debit which is linked to the current Debit. */
    linked_debit_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** The total number of minutes. */
    minutes?: Maybe<Scalars['Float']['output']>;
    /** The number of months of service this invoice was billed for. */
    number_of_months: Scalars['Int']['output'];
    /** The date this transaction was prorated from. */
    prorated_from?: Maybe<Scalars['Date']['output']>;
    /** The date this transaction was prorated to. */
    prorated_to?: Maybe<Scalars['Date']['output']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** The quantity the associated service had before the quantity was changed and prorated. */
    quantity_prorated_from?: Maybe<Scalars['Int']['output']>;
    /** The quantity the associated service was changed to when the quantity was changed and prorated. */
    quantity_prorated_to?: Maybe<Scalars['Int']['output']>;
    /** Whether or not this has been reversed. */
    reversed: Scalars['Boolean']['output'];
    /** When this was reversed. */
    reversed_at?: Maybe<Scalars['Datetime']['output']>;
    /** The user that caused a reversal. */
    reversed_by_user?: Maybe<User>;
    /** The user ID that reversed this. */
    reversed_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** The name of a service. */
    service_name: Scalars['String']['output'];
    /** The type of transaction on this service. */
    service_transaction_type?: Maybe<ServiceTransactionType>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax transaction. */
    tax_transactions: TaxTransactionConnection;
    /** The type. */
    type: ServiceType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of the user who created this transaction. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A configurable attribute for a voice service. */
    voice_service_generic_parameter?: Maybe<VoiceServiceGenericParameter>;
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A debit. */
export type DebitAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A debit. */
export type DebitAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A debit. */
export type DebitCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A debit. */
export type DebitData_Usage_Top_OffArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_history_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A debit. */
export type DebitDiscountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A debit. */
export type DebitFractional_DebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A debit. */
export type DebitInvoiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A debit. */
export type DebitLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A debit. */
export type DebitReversed_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A debit. */
export type DebitServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A debit. */
export type DebitTax_TransactionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_taxed?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    taxtransactionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxtransactionable_type?: InputMaybe<TaxtransactionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A debit. */
export type DebitUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A debit. */
export type DebitVoice_Service_Generic_ParameterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    proratable?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<VoiceServiceGenericParameterType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DebitConnection` type. */
export type DebitConnection = {
    __typename: 'DebitConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Debit>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The character that marks a decimal place in a number. */
export declare enum DecimalSeparator {
    /** A comma */
    Comma = "COMMA",
    /** A dot/period */
    Dot = "DOT"
}
/** The input object that defines the fields for the deleteAccountService mutation. */
export type DeleteAccountServiceMutationInput = {
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The date to prorate the transaction as of. */
    proration_date?: InputMaybe<Scalars['Date']['input']>;
};
/** The input object that defines the fields for the deleteGenericInventoryItems mutation. */
export type DeleteGenericInventoryItemsMutationInput = {
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
};
/** Provides request options when deleting a reversed payment. */
export type DeleteReversedPaymentMutationInput = {
    /** Apply this payment to any open invoices. */
    apply_to_open_invoices: Scalars['Boolean']['input'];
};
/** The fields necessary to delete a transaction. */
export type DeleteTransactionMutationInput = {
    /** The reason for deletion of this transaction. */
    message: Scalars['String']['input'];
};
/** The input object that defines the fields for the deleteVoiceServiceGenericParameter mutation. */
export type DeleteVoiceServiceGenericParameterMutationInput = {
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The date to prorate the transaction as of. */
    proration_date?: InputMaybe<Scalars['Date']['input']>;
};
/** A period of time when invoices are not evaluated for delinquency. */
export type DelinquencyExclusion = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DelinquencyExclusion';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A day. */
    day: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A month. */
    month: Scalars['Int']['output'];
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A year. */
    year?: Maybe<Scalars['Int']['output']>;
};
/** A period of time when invoices are not evaluated for delinquency. */
export type DelinquencyExclusionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A period of time when invoices are not evaluated for delinquency. */
export type DelinquencyExclusionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A period of time when invoices are not evaluated for delinquency. */
export type DelinquencyExclusionNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DelinquencyExclusionConnection` type. */
export type DelinquencyExclusionConnection = {
    __typename: 'DelinquencyExclusionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DelinquencyExclusion>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A department. */
export type Department = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Department';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A department in a company. */
    company_departments: CompanyDepartmentConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A signature. */
    signatures: SignatureConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A department. */
export type DepartmentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A department. */
export type DepartmentCompany_DepartmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    department_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['Numeric']['input']>;
    number_formatted?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A department. */
export type DepartmentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A department. */
export type DepartmentNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A department. */
export type DepartmentSignaturesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    department_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mass_default?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_signature?: InputMaybe<SmsContactPrefix>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    triggered_default?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `DepartmentConnection` type. */
export type DepartmentConnection = {
    __typename: 'DepartmentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Department>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The mode that an inventory item is deployed in. */
export type DeploymentType = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DeploymentType';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A `NetworkMonitoringTemplate`. */
    network_monitoring_template?: Maybe<NetworkMonitoringTemplate>;
    /** The ID of a `NetworkMonitoringTemplate`. */
    network_monitoring_template_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The mode that an inventory item is deployed in. */
export type DeploymentTypeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The mode that an inventory item is deployed in. */
export type DeploymentTypeInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The mode that an inventory item is deployed in. */
export type DeploymentTypeInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The mode that an inventory item is deployed in. */
export type DeploymentTypeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The mode that an inventory item is deployed in. */
export type DeploymentTypeNetwork_Monitoring_TemplateArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    collect_interface_statistics?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_latency_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_loss_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_monitoring?: InputMaybe<Scalars['Boolean']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp3_auth_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    snmp3_context_engineid?: InputMaybe<Scalars['Text']['input']>;
    snmp3_context_name?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    snmp_community?: InputMaybe<Scalars['Text']['input']>;
    snmp_version?: InputMaybe<SnmpVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The mode that an inventory item is deployed in. */
export type DeploymentTypeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DeploymentTypeConnection` type. */
export type DeploymentTypeConnection = {
    __typename: 'DeploymentTypeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DeploymentType>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A deposit slip. */
export type DepositSlip = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DepositSlip';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The bank account name/number */
    bank_account_line: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date */
    date: Scalars['Date']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The memo. */
    memo?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A payment. */
    payments: PaymentConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A deposit slip. */
export type DepositSlipAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A deposit slip. */
export type DepositSlipFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A deposit slip. */
export type DepositSlipLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A deposit slip. */
export type DepositSlipNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A deposit slip. */
export type DepositSlipPaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DepositSlipConnection` type. */
export type DepositSlipConnection = {
    __typename: 'DepositSlipConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DepositSlip>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The interfaces on a device. */
export type DeviceInterfaceMapping = AccessloggableInterface & LoggableInterface & {
    __typename: 'DeviceInterfaceMapping';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The interfaces connected to this interface. */
    connected_interfaces: DeviceInterfaceMappingConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_item?: Maybe<InventoryItem>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A MAC address. */
    mac_address?: Maybe<Scalars['MacAddress']['output']>;
    /** The metadata. */
    metadata: Scalars['Text']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The interface in speed in Mbps. */
    speed_mbps_in?: Maybe<Scalars['Int']['output']>;
    /** The interface out speed in Mbps. */
    speed_mbps_out?: Maybe<Scalars['Int']['output']>;
    /** The type. */
    type?: Maybe<Scalars['String']['output']>;
    /** Whether or not this interface is up. */
    up: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The interfaces on a device. */
export type DeviceInterfaceMappingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The interfaces on a device. */
export type DeviceInterfaceMappingConnected_InterfacesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mac_address?: InputMaybe<Scalars['MacAddress']['input']>;
    metadata?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    speed_mbps_in?: InputMaybe<Scalars['Int']['input']>;
    speed_mbps_out?: InputMaybe<Scalars['Int']['input']>;
    type?: InputMaybe<Scalars['String']['input']>;
    up?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The interfaces on a device. */
export type DeviceInterfaceMappingInventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The interfaces on a device. */
export type DeviceInterfaceMappingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DeviceInterfaceMappingConnection` type. */
export type DeviceInterfaceMappingConnection = {
    __typename: 'DeviceInterfaceMappingConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DeviceInterfaceMapping>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A DHCP server. */
export type DhcpServer = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DhcpServer';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An API key. */
    api_key: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A credential for a `DhcpServer`. */
    dhcp_server_credentials: DhcpServerCredentialConnection;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IPv4/IPv6 address. */
    ip_address: Scalars['IP']['output'];
    /** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
    ip_pools: IpPoolConnection;
    /** The date and time this device was last synchronized. */
    last_synchronized?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A TCP port. */
    port: Scalars['Port']['output'];
    /** Does this `DhcpServer` provide DHCP for all IP pools? */
    serves_all_pools: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status?: Maybe<ProvisioningDeviceStatus>;
    /** A message describing what caused the current status of this device. */
    status_message?: Maybe<Scalars['String']['output']>;
    /** Whether or not a synchronization request is queued. */
    synchronization_queued: Scalars['Boolean']['output'];
    /** The date/time that synchronization started. */
    synchronization_start?: Maybe<Scalars['Datetime']['output']>;
    /** The type. */
    type: DhcpServerType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** If this is `true`, then Sonar will use the MAC address of the DHCP relay rather than the MAC address of the requesting device when writing a lease. This should generally be disabled unless you have a specific reason to enable it. */
    use_source_mac_address: Scalars['Boolean']['output'];
};
/** A DHCP server. */
export type DhcpServerAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A DHCP server. */
export type DhcpServerDhcp_Server_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<DhcpServerAuthenticationCredential>;
    dhcp_server_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A DHCP server. */
export type DhcpServerIp_PoolsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_range?: InputMaybe<Scalars['IpRange']['input']>;
    ips_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A DHCP server. */
export type DhcpServerLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A DHCP server. */
export type DhcpServerNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credential to authenticate against a DHCP server. */
export declare enum DhcpServerAuthenticationCredential {
    /** A password for a MikroTik DHCP server. */
    MikrotikPassword = "MIKROTIK_PASSWORD",
    /** A username for a MikroTik DHCP server. */
    MikrotikUsername = "MIKROTIK_USERNAME"
}
/** Credentials for a `DhcpServer`. */
export type DhcpServerAuthenticationCredentialMutationInput = {
    /** A credential for a `DhcpServer`. */
    credential: DhcpServerAuthenticationCredential;
    /** The value of a credential for a `DhcpServer`. */
    value: Scalars['String']['input'];
};
/** The connection wrapper around the `DhcpServerConnection` type. */
export type DhcpServerConnection = {
    __typename: 'DhcpServerConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DhcpServer>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A credential for a `DhcpServer`. */
export type DhcpServerCredential = AccessloggableInterface & LoggableInterface & {
    __typename: 'DhcpServerCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A credential for a `DhcpServer`. */
    credential: DhcpServerAuthenticationCredential;
    /** A DHCP server. */
    dhcp_server?: Maybe<DhcpServer>;
    /** The ID of a `DhcpServer`. */
    dhcp_server_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value of a credential for a `DhcpServer`. */
    value: Scalars['String']['output'];
};
/** A credential for a `DhcpServer`. */
export type DhcpServerCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credential for a `DhcpServer`. */
export type DhcpServerCredentialDhcp_ServerArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    api_key?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serves_all_pools?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<DhcpServerType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    use_source_mac_address?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A credential for a `DhcpServer`. */
export type DhcpServerCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DhcpServerCredentialConnection` type. */
export type DhcpServerCredentialConnection = {
    __typename: 'DhcpServerCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DhcpServerCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A specific identifier for a DHCP server. */
export type DhcpServerIdentifier = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DhcpServerIdentifier';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
    ip_pools: IpPoolConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A specific identifier for a DHCP server. */
export type DhcpServerIdentifierAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A specific identifier for a DHCP server. */
export type DhcpServerIdentifierIp_PoolsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_range?: InputMaybe<Scalars['IpRange']['input']>;
    ips_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A specific identifier for a DHCP server. */
export type DhcpServerIdentifierLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A specific identifier for a DHCP server. */
export type DhcpServerIdentifierNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DhcpServerIdentifierConnection` type. */
export type DhcpServerIdentifierConnection = {
    __typename: 'DhcpServerIdentifierConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DhcpServerIdentifier>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A type of DHCP server. */
export declare enum DhcpServerType {
    /** MikroTik DHCP server (SSL API). */
    Mikrotik = "MIKROTIK"
}
/** A direct inward dial (DID). */
export type Did = AccessloggableInterface & LoggableInterface & NoteableInterface & SearchableInterface & {
    __typename: 'Did';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A historical record of a direct inward dial (DID) assignment. */
    did_assignment_histories: DidAssignmentHistoryConnection;
    /** A direct inward dial (DID) assignment. */
    did_assignments: DidAssignmentConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The number. */
    number: Scalars['String']['output'];
    /** A rate center. */
    rate_center?: Maybe<RateCenter>;
    /** The ID of a `RateCenter`. */
    rate_center_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** A direct inward dial (DID). */
export type DidAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A direct inward dial (DID). */
export type DidDid_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A direct inward dial (DID). */
export type DidDid_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A direct inward dial (DID). */
export type DidLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A direct inward dial (DID). */
export type DidNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A direct inward dial (DID). */
export type DidRate_CenterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A direct inward dial (DID). */
export type DidVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A direct inward dial (DID) assignment. */
export type DidAssignment = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DidAssignment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A direct inward dial (DID). */
    did?: Maybe<Did>;
    /** The ID of a `Did`. */
    did_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A direct inward dial (DID) assignment. */
export type DidAssignmentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A direct inward dial (DID) assignment. */
export type DidAssignmentAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A direct inward dial (DID) assignment. */
export type DidAssignmentDidArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A direct inward dial (DID) assignment. */
export type DidAssignmentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A direct inward dial (DID) assignment. */
export type DidAssignmentNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A direct inward dial (DID) assignment. */
export type DidAssignmentServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `DidAssignmentConnection` type. */
export type DidAssignmentConnection = {
    __typename: 'DidAssignmentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DidAssignment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A historical record of a direct inward dial (DID) assignment. */
export type DidAssignmentHistory = AccessloggableInterface & LoggableInterface & {
    __typename: 'DidAssignmentHistory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The date and time of assignment. */
    assigned_datetime: Scalars['Datetime']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A direct inward dial (DID). */
    did?: Maybe<Did>;
    /** A direct inward dial (DID) assignment. */
    did_assignment?: Maybe<DidAssignment>;
    /** The ID of a `DidAssignment`. */
    did_assignment_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of a `Did`. */
    did_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The date and time of removal. */
    removed_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A historical record of a direct inward dial (DID) assignment. */
export type DidAssignmentHistoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A historical record of a direct inward dial (DID) assignment. */
export type DidAssignmentHistoryAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A historical record of a direct inward dial (DID) assignment. */
export type DidAssignmentHistoryDidArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A historical record of a direct inward dial (DID) assignment. */
export type DidAssignmentHistoryDid_AssignmentArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A historical record of a direct inward dial (DID) assignment. */
export type DidAssignmentHistoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A historical record of a direct inward dial (DID) assignment. */
export type DidAssignmentHistoryServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `DidAssignmentHistoryConnection` type. */
export type DidAssignmentHistoryConnection = {
    __typename: 'DidAssignmentHistoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DidAssignmentHistory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `DidConnection` type. */
export type DidConnection = {
    __typename: 'DidConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Did>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A recipe for importing DIDs. */
export type DidImportRecipe = AccessloggableInterface & ImportrecipeableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DidImportRecipe';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How many records passed validation checks during import. */
    clean_records?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Any errors encountered for this import. */
    errors?: Maybe<Scalars['Clob']['output']>;
    /** How many records did not pass validation checks during import. */
    failed_records?: Maybe<Scalars['Int']['output']>;
    /** The identifier of a unique batch at Flatfile. */
    flatfile_batch_identifier?: Maybe<Scalars['String']['output']>;
    /** A hash of the data content of an import. */
    hash?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An import. */
    imports: ImportConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The progress of an import as a percentage. */
    progress?: Maybe<Scalars['Int']['output']>;
    /** A rate center. */
    rate_center?: Maybe<RateCenter>;
    /** The ID of a `RateCenter`. */
    rate_center_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start date and time for the import. */
    start_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** The status. */
    status: ImportStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** A recipe for importing DIDs. */
export type DidImportRecipeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing DIDs. */
export type DidImportRecipeImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_type?: InputMaybe<ImportrecipeableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A recipe for importing DIDs. */
export type DidImportRecipeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing DIDs. */
export type DidImportRecipeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing DIDs. */
export type DidImportRecipeRate_CenterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A recipe for importing DIDs. */
export type DidImportRecipeUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A recipe for importing DIDs. */
export type DidImportRecipeVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `DidImportRecipeConnection` type. */
export type DidImportRecipeConnection = {
    __typename: 'DidImportRecipeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DidImportRecipe>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The character that separates digits (e.g. 10,000,000 vs 10.000.000). */
export declare enum DigitSeparator {
    /** A comma */
    Comma = "COMMA",
    /** A dot/period */
    Dot = "DOT",
    /** A space */
    Space = "SPACE"
}
/** An entity that defines the transaction fo a `DisbursementDetail`. */
export type DisbursableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The entity that this `DisbursementDetail` is associated with. */
export declare enum DisbursableType {
    /** A `Payment`. */
    Payment = "Payment",
    /** A `Refunded Payment`. */
    RefundedPayment = "RefundedPayment"
}
/** A disbursement. */
export type Disbursement = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Disbursement';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The bank account. */
    bank_account?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A disbursement detail. */
    disbursement_details: DisbursementDetailConnection;
    /** The payment processor's external ID. */
    external_id: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The date and time this entity was processed. */
    processed_at?: Maybe<Scalars['Datetime']['output']>;
    /** The disbursement payout schedule. */
    schedule?: Maybe<DisbursementSchedule>;
    /** The amount scheduled to be paid out. */
    schedule_amount?: Maybe<Scalars['Int']['output']>;
    /** The disbursement payout scheduling factor. */
    schedule_factor?: Maybe<Scalars['Int']['output']>;
    /** The unit of measurement of a disbursement's payout amount. */
    schedule_unit?: Maybe<DisbursementScheduleUnit>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status: DisbursementStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A disbursement. */
export type DisbursementAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A disbursement. */
export type DisbursementDisbursement_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_used?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disbursable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    disbursable_type?: InputMaybe<DisbursableType>;
    disbursement_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event?: InputMaybe<DisbursementDetailEvent>;
    external_id?: InputMaybe<Scalars['String']['input']>;
    fractional_amount?: InputMaybe<Scalars['Int']['input']>;
    fractional_amount_used?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_fee?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A disbursement. */
export type DisbursementLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A disbursement. */
export type DisbursementNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DisbursementConnection` type. */
export type DisbursementConnection = {
    __typename: 'DisbursementConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Disbursement>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A disbursement detail. */
export type DisbursementDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DisbursementDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The amount used. */
    amount_used: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The entity for this `DisbursementDetail`. */
    disbursable?: Maybe<DisbursableInterface>;
    /** The id of the entity that the disbusement applies to. */
    disbursable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that the disbursement applies to. */
    disbursable_type?: Maybe<DisbursableType>;
    /** A disbursement. */
    disbursement?: Maybe<Disbursement>;
    /** The ID of a `Disbursement`. */
    disbursement_id: Scalars['Int64Bit']['output'];
    /** The event associated with the disbursement detail record. */
    event: DisbursementDetailEvent;
    /** The payment processor's external ID. */
    external_id: Scalars['String']['output'];
    /** The fractional portion of the amount. */
    fractional_amount: Scalars['Int']['output'];
    /** The fractional portion of the amount used. */
    fractional_amount_used: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether or not this record is a fee. */
    is_fee: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The transaction ID from the credit card provider. */
    transaction_id?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A disbursement detail. */
export type DisbursementDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A disbursement detail. */
export type DisbursementDetailDisbursableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A disbursement detail. */
export type DisbursementDetailDisbursementArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    bank_account?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    external_id?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    processed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule?: InputMaybe<DisbursementSchedule>;
    schedule_amount?: InputMaybe<Scalars['Int']['input']>;
    schedule_factor?: InputMaybe<Scalars['Int']['input']>;
    schedule_unit?: InputMaybe<DisbursementScheduleUnit>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<DisbursementStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A disbursement detail. */
export type DisbursementDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A disbursement detail. */
export type DisbursementDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `DisbursementDetailConnection` type. */
export type DisbursementDetailConnection = {
    __typename: 'DisbursementDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DisbursementDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The event which is associated with the disbursement detail. */
export declare enum DisbursementDetailEvent {
    /** Bank account verified */
    Account = "ACCOUNT",
    /** ACH failure */
    Achfail = "ACHFAIL",
    /** ACH notification of change */
    Achnoc = "ACHNOC",
    /** Adjustment */
    Adjustment = "ADJUSTMENT",
    /** Arbitration chargeback */
    Arbitration = "ARBITRATION",
    /** Authorization */
    Auth = "AUTH",
    /** Merchant is boarded */
    Board = "BOARD",
    /** Capture */
    Capture = "CAPTURE",
    /** Chargeback */
    Chargeback = "CHARGEBACK",
    /** Currency conversion */
    CurrencyConversion = "CURRENCY_CONVERSION",
    /** Triggered daily */
    Days = "DAYS",
    /** eCheck fail */
    Ecfail = "ECFAIL",
    /** eCheck notification of change */
    Ecnoc = "ECNOC",
    /** eCheck non-sufficient funds */
    Ecnsf = "ECNSF",
    /** eCheck Refund */
    Ecrefund = "ECREFUND",
    /** eCheck Return */
    Ecreturn = "ECRETURN",
    /** eCheck Sale */
    Ecsale = "ECSALE",
    /** Event 43 */
    Event_43 = "EVENT_43",
    /** Event 44 */
    Event_44 = "EVENT_44",
    /** Event 45 */
    Event_45 = "EVENT_45",
    /** Event 46 */
    Event_46 = "EVENT_46",
    /** Event 47 */
    Event_47 = "EVENT_47",
    /** Event 51 */
    Event_51 = "EVENT_51",
    /** Event 52 */
    Event_52 = "EVENT_52",
    /** Event 53 */
    Event_53 = "EVENT_53",
    /** Event 54 */
    Event_54 = "EVENT_54",
    /** Event 55 */
    Event_55 = "EVENT_55",
    /** Event 56 */
    Event_56 = "EVENT_56",
    /** Event 57 */
    Event_57 = "EVENT_57",
    /** Event 58 */
    Event_58 = "EVENT_58",
    /** Event 59 */
    Event_59 = "EVENT_59",
    /** Event 60 */
    Event_60 = "EVENT_60",
    /** Event 61 */
    Event_61 = "EVENT_61",
    /** Event 62 */
    Event_62 = "EVENT_62",
    /** Event 63 */
    Event_63 = "EVENT_63",
    /** Event 64 */
    Event_64 = "EVENT_64",
    /** Event 65 */
    Event_65 = "EVENT_65",
    /** Event 66 */
    Event_66 = "EVENT_66",
    /** Event 67 */
    Event_67 = "EVENT_67",
    /** Event 68 */
    Event_68 = "EVENT_68",
    /** Event 69 */
    Event_69 = "EVENT_69",
    /** Event 70 */
    Event_70 = "EVENT_70",
    /** Event 71 */
    Event_71 = "EVENT_71",
    /** Event 72 */
    Event_72 = "EVENT_72",
    /** Event 73 */
    Event_73 = "EVENT_73",
    /** Event 74 */
    Event_74 = "EVENT_74",
    /** Event 75 */
    Event_75 = "EVENT_75",
    /** Event 76 */
    Event_76 = "EVENT_76",
    /** Event 77 */
    Event_77 = "EVENT_77",
    /** Event 78 */
    Event_78 = "EVENT_78",
    /** Event 79 */
    Event_79 = "EVENT_79",
    /** Event 80 */
    Event_80 = "EVENT_80",
    /** Event 81 */
    Event_81 = "EVENT_81",
    /** Event 82 */
    Event_82 = "EVENT_82",
    /** Event 83 */
    Event_83 = "EVENT_83",
    /** Event 84 */
    Event_84 = "EVENT_84",
    /** Event 85 */
    Event_85 = "EVENT_85",
    /** Event 86 */
    Event_86 = "EVENT_86",
    /** Event 200 */
    Event_200 = "EVENT_200",
    /** Event 201 */
    Event_201 = "EVENT_201",
    /** Interchange fees */
    Interchange = "INTERCHANGE",
    /** Misuse of authorization */
    Misuse = "MISUSE",
    /** Triggered monthly */
    Months = "MONTHS",
    /** Overdraft */
    Overdraft = "OVERDRAFT",
    /** Partially reversed payout */
    PartialReversePayout = "PARTIAL_REVERSE_PAYOUT",
    /** Payout processed */
    Payout = "PAYOUT",
    /** Pending funds */
    PendingEntry = "PENDING_ENTRY",
    /** Paid pending funds */
    PendingPaid = "PENDING_PAID",
    /** Cancelled pending refund */
    PendingRefundCancelled = "PENDING_REFUND_CANCELLED",
    /** Payment processor */
    Processor = "PROCESSOR",
    /** Profit sharing */
    ProfitShare = "PROFIT_SHARE",
    /** Refund */
    Refund = "REFUND",
    /** Non-disbursed funds */
    Remainder = "REMAINDER",
    /** Previously non-disbursed funds */
    RemainderUsed = "REMAINDER_USED",
    /** Reserved funds */
    ReserveEntry = "RESERVE_ENTRY",
    /** Released reserves */
    ReserveEntryRelease = "RESERVE_ENTRY_RELEASE",
    /** Retrieval request chargeback */
    Retrieval = "RETRIEVAL",
    /** Reversed payout */
    ReversePayout = "REVERSE_PAYOUT",
    /** Settlement */
    Settlement = "SETTLEMENT",
    /** Fraud score */
    Sift = "SIFT",
    /** One-off */
    Single = "SINGLE",
    /** Terminal transaction */
    TerminalTxn = "TERMINAL_TXN",
    /** Unauthorized entry */
    Unauth = "UNAUTH",
    /** Triggered weekly */
    Weeks = "WEEKS",
    /** Triggered yearly */
    Years = "YEARS"
}
/** The `Disbursement` payout schedule. */
export declare enum DisbursementSchedule {
    /** Day(s) */
    Days = "DAYS",
    /** Month(s) */
    Months = "MONTHS",
    /** One Time */
    Onetime = "ONETIME",
    /** Week(s) */
    Weeks = "WEEKS",
    /** Year(s) */
    Years = "YEARS"
}
/** The unit of measurement of a `Disbursement`'s payout amount. */
export declare enum DisbursementScheduleUnit {
    /** Actual */
    Actual = "ACTUAL",
    /** Percentage */
    Percentage = "PERCENTAGE",
    /** Negative Percentage */
    Percentneg = "PERCENTNEG"
}
/** The status of a `Disbursement`. */
export declare enum DisbursementStatus {
    /** Denied */
    Denied = "DENIED",
    /** Failed */
    Failed = "FAILED",
    /** Processed */
    Processed = "PROCESSED",
    /** Processing */
    Processing = "PROCESSING",
    /** Requested */
    Requested = "REQUESTED",
    /** Returned */
    Returned = "RETURNED"
}
/** Disconnect an account. */
export type DisconnectAccountMutationInput = {
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The `Account` disconnections log. */
export type DisconnectionLog = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'DisconnectionLog';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The date and time that the account was disconnected. */
    disconnected_at: Scalars['Datetime']['output'];
    /** The user that disconnected this `Account`. */
    disconnected_by_user?: Maybe<User>;
    /** The `User` that disconnected the `Account`. */
    disconnected_by_user_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The serviceable address. */
    serviceable_address?: Maybe<Address>;
    /** The ID of the serviceable address to use for this account. */
    serviceable_address_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The deleted address object, as a formatted single line, that was disconnected. Used for historical reporting when address is deleted. */
    serviceable_address_reference_record?: Maybe<Scalars['Text']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The `Account` disconnections log. */
export type DisconnectionLogAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `Account` disconnections log. */
export type DisconnectionLogAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The `Account` disconnections log. */
export type DisconnectionLogDisconnected_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The `Account` disconnections log. */
export type DisconnectionLogLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `Account` disconnections log. */
export type DisconnectionLogNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `Account` disconnections log. */
export type DisconnectionLogServiceable_AddressArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `DisconnectionLogConnection` type. */
export type DisconnectionLogConnection = {
    __typename: 'DisconnectionLogConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<DisconnectionLog>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A discount. */
export type Discount = AccessloggableInterface & CreditableInterface & LoggableInterface & TaxtransactionableInterface & TransactionInterface & {
    __typename: 'Discount';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The amount of the `Discount`. */
    amount: Scalars['Int']['output'];
    /** The amount remaining that can be used. */
    amount_remaining: Scalars['Int']['output'];
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The application of a `Discount` or `Payment` against an `Invoice`. */
    credits: CreditConnection;
    /** A debit. */
    debit?: Maybe<Debit>;
    /** If this discount was created due to reversal of a `Debit`, this field will link to the reversed `Debit`. */
    debit_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** A general ledger code. */
    general_ledger_code?: Maybe<Scalars['String']['output']>;
    /** A general ledger code description. */
    general_ledger_code_description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The total number of minutes. */
    minutes?: Maybe<Scalars['Float']['output']>;
    /** The date this transaction was prorated from. */
    prorated_from?: Maybe<Scalars['Date']['output']>;
    /** The date this transaction was prorated to. */
    prorated_to?: Maybe<Scalars['Date']['output']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** The quantity the associated service had before the quantity was changed and prorated. */
    quantity_prorated_from?: Maybe<Scalars['Int']['output']>;
    /** The quantity the associated service was changed to when the quantity was changed and prorated. */
    quantity_prorated_to?: Maybe<Scalars['Int']['output']>;
    /** Whether or not this has been reversed. */
    reversed: Scalars['Boolean']['output'];
    /** When this was reversed. */
    reversed_at?: Maybe<Scalars['Datetime']['output']>;
    /** The user that caused a reversal. */
    reversed_by_user?: Maybe<User>;
    /** The user ID that reversed this. */
    reversed_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** The name of a service. */
    service_name: Scalars['String']['output'];
    /** The type of transaction on this service. */
    service_transaction_type?: Maybe<ServiceTransactionType>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether this entity's taxes have been committed or not. */
    tax_committed: Scalars['Boolean']['output'];
    /** A tax provider. */
    tax_provider?: Maybe<TaxProvider>;
    /** The ID of an `TaxProvider`. */
    tax_provider_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A tax transaction. */
    tax_transactions: TaxTransactionConnection;
    /** The type. */
    type: ServiceType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of the user who created this transaction. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A discount. */
export type DiscountAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A discount. */
export type DiscountAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A discount. */
export type DiscountCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A discount. */
export type DiscountCreditsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creditable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    creditable_type?: InputMaybe<CreditableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A discount. */
export type DiscountDebitArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A discount. */
export type DiscountLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A discount. */
export type DiscountReversed_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A discount. */
export type DiscountServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A discount. */
export type DiscountTax_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    type?: InputMaybe<TaxProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A discount. */
export type DiscountTax_TransactionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_taxed?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    taxtransactionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxtransactionable_type?: InputMaybe<TaxtransactionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A discount. */
export type DiscountUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `DiscountConnection` type. */
export type DiscountConnection = {
    __typename: 'DiscountConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Discount>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** types.drive_time_location */
export type DriveTimeLocation = {
    /** The ending latitude. */
    end_latitude: Scalars['Latitude']['input'];
    /** The ending longitude. */
    end_longitude: Scalars['Longitude']['input'];
    /** The starting latitude. */
    start_latitude: Scalars['Latitude']['input'];
    /** The starting longitude. */
    start_longitude: Scalars['Longitude']['input'];
};
/** types.drive_time_result */
export type DriveTimeResult = {
    __typename: 'DriveTimeResult';
    /** The amount of time it takes to drive from the start to the end, in minutes. */
    drive_time_in_minutes?: Maybe<Scalars['Int']['output']>;
    /** The ending latitude. */
    end_latitude: Scalars['Latitude']['output'];
    /** The ending longitude. */
    end_longitude: Scalars['Longitude']['output'];
    /** If the drive time lookup failed, the error that was provided. */
    error?: Maybe<Scalars['Text']['output']>;
    /** The starting latitude. */
    start_latitude: Scalars['Latitude']['output'];
    /** The starting longitude. */
    start_longitude: Scalars['Longitude']['output'];
    /** Whether the drive time lookup succeeded. */
    success: Scalars['Boolean']['output'];
};
/** types.drive_time_result_wrapper */
export type DriveTimeResultWrapper = {
    __typename: 'DriveTimeResultWrapper';
    /** The number of lookups that were loaded from the cache. */
    cached_lookups: Scalars['Int']['output'];
    /** The results of the drive time lookup. */
    results: Array<Maybe<DriveTimeResult>>;
};
/** An email. */
export type Email = AccessloggableInterface & LoggableInterface & {
    __typename: 'Email';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The body. */
    body?: Maybe<Scalars['Text']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email address. */
    email_address: Scalars['EmailAddress']['output'];
    /** A single click for a sent email. */
    email_clicks: EmailClickConnection;
    /** A single open for a sent email. */
    email_opens: EmailOpenConnection;
    /** The recipient of this `Email`. */
    emailable?: Maybe<EmailableInterface>;
    /** The ID of the entity that this email was sent to. */
    emailable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that this email was sent to. */
    emailable_type: EmailableType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** If rejected, the reason for rejection. */
    reject_reason?: Maybe<Scalars['String']['output']>;
    /** A single SMTP event for an email. */
    smtp_events: SmtpEventConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status: EmailStatus;
    /** The subject. */
    subject: Scalars['String']['output'];
    /** The name of the recipient. */
    to_name?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An email. */
export type EmailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An email. */
export type EmailEmail_ClicksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    url?: InputMaybe<Scalars['URL']['input']>;
    user_agent?: InputMaybe<Scalars['String']['input']>;
};
/** An email. */
export type EmailEmail_OpensArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_agent?: InputMaybe<Scalars['String']['input']>;
};
/** An email. */
export type EmailEmailableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An email. */
export type EmailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An email. */
export type EmailSmtp_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    destination_ip?: InputMaybe<Scalars['IP']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    response?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    size?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    source_ip?: InputMaybe<Scalars['IP']['input']>;
    type?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A categorization of an `Email` by type. */
export type EmailCategory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'EmailCategory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A contact person. */
    contacts: ContactConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this entity is a default entry. */
    default: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An `Email` that is sent when a particular event occurs. */
    triggered_emails: TriggeredEmailConnection;
    /** A message that is sent when a specific event occurs. */
    triggered_messages: TriggeredMessageConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A categorization of an `Email` by type. */
export type EmailCategoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A categorization of an `Email` by type. */
export type EmailCategoryContactsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A categorization of an `Email` by type. */
export type EmailCategoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A categorization of an `Email` by type. */
export type EmailCategoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A categorization of an `Email` by type. */
export type EmailCategoryTriggered_EmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<EmailTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A categorization of an `Email` by type. */
export type EmailCategoryTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `EmailCategoryConnection` type. */
export type EmailCategoryConnection = {
    __typename: 'EmailCategoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<EmailCategory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A single click for a sent email. */
export type EmailClick = AccessloggableInterface & LoggableInterface & {
    __typename: 'EmailClick';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email. */
    email?: Maybe<Email>;
    /** The ID of an email. */
    email_id: Scalars['Int64Bit']['output'];
    /** The location of a single opened or clicked email. */
    email_location?: Maybe<EmailLocation>;
    /** The ID of a location associated with a record in EmailClick and EmailOpen. */
    email_location_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time of an event sent from Mandrill */
    event_datetime: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IPv4/IPv6 address. */
    ip: Scalars['IP']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The URL that a user clicked on in a sent email. */
    url: Scalars['URL']['output'];
    /** The user agent string of a user that opened or clicked on a sent email. */
    user_agent: Scalars['String']['output'];
};
/** A single click for a sent email. */
export type EmailClickAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single click for a sent email. */
export type EmailClickEmailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A single click for a sent email. */
export type EmailClickEmail_LocationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    postal_code?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    timezone?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A single click for a sent email. */
export type EmailClickLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `EmailClickConnection` type. */
export type EmailClickConnection = {
    __typename: 'EmailClickConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<EmailClick>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `EmailConnection` type. */
export type EmailConnection = {
    __typename: 'EmailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Email>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An email domain. */
export type EmailDomain = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'EmailDomain';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not the DKIM record is valid. */
    dkim: Scalars['Boolean']['output'];
    /** The DNS requirements for domain validation. */
    dns_requirements?: Maybe<Scalars['String']['output']>;
    /** A domain name. */
    domain: Scalars['DomainName']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inbound mailbox. */
    inbound_mailboxes: InboundMailboxConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The domain ID from the email provider. */
    provider_domain_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Indicates that the domain has been verified for migration. */
    ready_for_migration?: Maybe<Scalars['Boolean']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether or not the SPF record is valid. */
    spf: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Whether or not the record is verified. */
    verified: Scalars['Boolean']['output'];
};
/** An email domain. */
export type EmailDomainAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An email domain. */
export type EmailDomainInbound_MailboxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    append_signature?: InputMaybe<Scalars['Boolean']['input']>;
    auto_reply?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enable_slack_integration?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    from_mailbox?: InputMaybe<Scalars['String']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    post_email_body_to_slack?: InputMaybe<Scalars['Boolean']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    send_auto_reply?: InputMaybe<Scalars['Boolean']['input']>;
    signature?: InputMaybe<Scalars['Text']['input']>;
    slack_webhook_url?: InputMaybe<Scalars['URL']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An email domain. */
export type EmailDomainLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An email domain. */
export type EmailDomainNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `EmailDomainConnection` type. */
export type EmailDomainConnection = {
    __typename: 'EmailDomainConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<EmailDomain>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details around resending an email invoice batch. */
export type EmailInvoiceBatchMutationInput = {
    /** Send invoices with a `date` property matching this. */
    date: Scalars['Date']['input'];
};
/** The input object that defines the fields for the emailInvoiceToContact mutation. */
export type EmailInvoiceToContactMutationInput = {
    /** The ID of the contact that owns this. */
    contact_id: Scalars['Int64Bit']['input'];
    /** The ID of an `Invoice`. */
    invoice_id: Scalars['Int64Bit']['input'];
};
/** The location of a single opened or clicked email. */
export type EmailLocation = AccessloggableInterface & LoggableInterface & {
    __typename: 'EmailLocation';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A city. */
    city: Scalars['String']['output'];
    /** A two character country code. */
    country: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A single click for a sent email. */
    email_clicks: EmailClickConnection;
    /** A single open for a sent email. */
    email_opens: EmailOpenConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['output'];
    /** The zip code of an email location sent by a Mandrill event. */
    postal_code: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The timezone you want times in the system displayed in. */
    timezone: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The location of a single opened or clicked email. */
export type EmailLocationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The location of a single opened or clicked email. */
export type EmailLocationEmail_ClicksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    url?: InputMaybe<Scalars['URL']['input']>;
    user_agent?: InputMaybe<Scalars['String']['input']>;
};
/** The location of a single opened or clicked email. */
export type EmailLocationEmail_OpensArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_agent?: InputMaybe<Scalars['String']['input']>;
};
/** The location of a single opened or clicked email. */
export type EmailLocationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `EmailLocationConnection` type. */
export type EmailLocationConnection = {
    __typename: 'EmailLocationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<EmailLocation>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An email message. */
export type EmailMessage = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'EmailMessage';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The localized content of an `EmailMessage`. */
    email_message_contents: EmailMessageContentConnection;
    /** The email address to send from when using this email message. If `null`, then the system default will be used. */
    from_email_address: Scalars['EmailAddress']['output'];
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** Saved message category. */
    saved_message_category?: Maybe<SavedMessageCategory>;
    /** ID of the Saved Message Category. */
    saved_message_category_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A message that is sent when a specific event occurs. */
    triggered_messages: TriggeredMessageConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An email message. */
export type EmailMessageAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An email message. */
export type EmailMessageEmail_Message_ContentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    language?: InputMaybe<Language>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subject?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An email message. */
export type EmailMessageLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An email message. */
export type EmailMessageNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An email message. */
export type EmailMessageSaved_Message_CategoryArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An email message. */
export type EmailMessageTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `EmailMessageConnection` type. */
export type EmailMessageConnection = {
    __typename: 'EmailMessageConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<EmailMessage>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The localized content of an `EmailMessage`. */
export type EmailMessageContent = AccessloggableInterface & FileableInterface & LoggableInterface & {
    __typename: 'EmailMessageContent';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The body. */
    body: Scalars['Text']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email message. */
    email_message?: Maybe<EmailMessage>;
    /** The ID of an EmailMessage. */
    email_message_id: Scalars['Int64Bit']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A short sentence that will be shown as a preview in compatible email clients. */
    inbox_preview?: Maybe<Scalars['String']['output']>;
    /** A supported language. */
    language: Language;
    /** A log entry. */
    logs: LogConnection;
    /** An external reference to a dynamic template at SendGrid. */
    sendgrid_dynamic_template_external_references: SendgridDynamicTemplateExternalReferenceConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The subject. */
    subject: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The localized content of an `EmailMessage`. */
export type EmailMessageContentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The localized content of an `EmailMessage`. */
export type EmailMessageContentEmail_MessageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    saved_message_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The localized content of an `EmailMessage`. */
export type EmailMessageContentFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The localized content of an `EmailMessage`. */
export type EmailMessageContentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The localized content of an `EmailMessage`. */
export type EmailMessageContentSendgrid_Dynamic_Template_External_ReferencesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_content_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sendgrid_identifier?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    triggered_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `EmailMessageContentConnection` type. */
export type EmailMessageContentConnection = {
    __typename: 'EmailMessageContentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<EmailMessageContent>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A single open for a sent email. */
export type EmailOpen = AccessloggableInterface & LoggableInterface & {
    __typename: 'EmailOpen';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email. */
    email?: Maybe<Email>;
    /** The ID of an email. */
    email_id: Scalars['Int64Bit']['output'];
    /** The location of a single opened or clicked email. */
    email_location?: Maybe<EmailLocation>;
    /** The ID of a location associated with a record in EmailClick and EmailOpen. */
    email_location_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time of an event sent from Mandrill */
    event_datetime: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IPv4/IPv6 address. */
    ip: Scalars['IP']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The user agent string of a user that opened or clicked on a sent email. */
    user_agent: Scalars['String']['output'];
};
/** A single open for a sent email. */
export type EmailOpenAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single open for a sent email. */
export type EmailOpenEmailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A single open for a sent email. */
export type EmailOpenEmail_LocationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    postal_code?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    timezone?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A single open for a sent email. */
export type EmailOpenLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `EmailOpenConnection` type. */
export type EmailOpenConnection = {
    __typename: 'EmailOpenConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<EmailOpen>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The status of an `Email`. */
export declare enum EmailStatus {
    /** The email was bounced by the recipients mail server */
    Bounced = "BOUNCED",
    /** The email recipient clicked a link in the email */
    Clicked = "CLICKED",
    /** The email was sent, but the receiving server has indicated that emails are being delivered to it too quickly and that Mandrill should slow down sending temporarily */
    Deferred = "DEFERRED",
    /** The email failed to send through the mail processor. This indicates a fatal error */
    Failed = "FAILED",
    /** The email was unable to be delivered because the recipient's email address is invalid */
    HardBounced = "HARD_BOUNCED",
    /** The email has been processed and is in progress. */
    InProgress = "IN_PROGRESS",
    /** The email recipient marked the email as spam */
    MarkedSpam = "MARKED_SPAM",
    /** The email was opened by the recipient */
    Opened = "OPENED",
    /** The email was rejected by the recipients mail server */
    Rejected = "REJECTED",
    /** The email was sent successfully */
    Sent = "SENT",
    /** The email was unable to be delivered because of a temporary issue with the recipient's inbox */
    SoftBounced = "SOFT_BOUNCED",
    /** The email recipient unsubscribed from seeing any additional emails */
    Unsubbed = "UNSUBBED"
}
/** The event that triggers a specific `Email`. */
export declare enum EmailTrigger {
    /** An account hits X% of their bandwidth cap */
    AccountAtXPercentageOfBandwidthCap = "ACCOUNT_AT_X_PERCENTAGE_OF_BANDWIDTH_CAP",
    /** An account becomes delinquent */
    AccountBecomesDelinquent = "ACCOUNT_BECOMES_DELINQUENT",
    /** An account is activated for the first time */
    AccountFirstActivated = "ACCOUNT_FIRST_ACTIVATED",
    /** An automatic payment fails */
    AutopayFailure = "AUTOPAY_FAILURE",
    /** An automatic payment succeeds */
    AutopaySuccess = "AUTOPAY_SUCCESS",
    /** A credit card is expiring */
    CreditCardExpiring = "CREDIT_CARD_EXPIRING",
    /** An invoice is manually emailed to a contact */
    EmailInvoice = "EMAIL_INVOICE",
    /** An initial invoice is generated for a newly activated account */
    InitialInvoice = "INITIAL_INVOICE",
    /** An invoice has been delinquent for X days */
    InvoiceDelinquentForXDays = "INVOICE_DELINQUENT_FOR_X_DAYS",
    /** An invoice will become delinquent in X days */
    InvoiceDelinquentInXDays = "INVOICE_DELINQUENT_IN_X_DAYS",
    /** An invoice is due in X days */
    InvoiceDueInXDays = "INVOICE_DUE_IN_X_DAYS",
    /** An invoice is past due for X days. */
    InvoicePastDueForXDays = "INVOICE_PAST_DUE_FOR_X_DAYS",
    /** A job is scheduled */
    JobScheduled = "JOB_SCHEDULED",
    /** A late fee is applied to an account */
    LateFeeApplied = "LATE_FEE_APPLIED",
    /** Billing runs successfully for an account */
    MonthlyBilling = "MONTHLY_BILLING",
    /** A new user is created */
    NewUserCreated = "NEW_USER_CREATED",
    /** A payment failed */
    PaymentFailure = "PAYMENT_FAILURE",
    /** A receipt for a payment. */
    PaymentReceipt = "PAYMENT_RECEIPT",
    /** A credit card or bank account payment is refunded */
    PaymentRefunded = "PAYMENT_REFUNDED",
    /** A payment succeeded */
    PaymentSuccess = "PAYMENT_SUCCESS",
    /** A signed contract is emailed to a contact */
    SendSignedContract = "SEND_SIGNED_CONTRACT",
    /** A contract pending signature is emailed to a contact */
    SendUnsignedContract = "SEND_UNSIGNED_CONTRACT",
    /** A user forgets their password and requests a new one */
    UserForgotPassword = "USER_FORGOT_PASSWORD"
}
/** An `Email` variable. */
export type EmailVariable = {
    __typename: 'EmailVariable';
    /** An `Email` variable. */
    email_variable?: Maybe<Scalars['String']['output']>;
};
/** An entity that can have an `Email` sent to it. */
export type EmailableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The entity that this `Email` is associated with. */
export declare enum EmailableType {
    /** An `Account`. */
    Account = "Account",
    /** A `Contact`. */
    Contact = "Contact",
    /** A `Network Site`. */
    NetworkSite = "NetworkSite",
    /** A `PurchaseOrder` */
    PurchaseOrder = "PurchaseOrder",
    /** A `Ticket`. */
    Ticket = "Ticket",
    /** A `TicketReply`. */
    TicketReply = "TicketReply",
    /** A `User`. */
    User = "User",
    /** A `Vendor`. */
    Vendor = "Vendor"
}
/** An LTE EPC. */
export type Epc = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Epc';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The identifier used by the EPC, this is typically numeric. */
    identifier: Scalars['String']['output'];
    /** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
    ip_pools: IpPoolConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An LTE EPC. */
export type EpcAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An LTE EPC. */
export type EpcIp_PoolsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_range?: InputMaybe<Scalars['IpRange']['input']>;
    ips_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An LTE EPC. */
export type EpcLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An LTE EPC. */
export type EpcNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `EpcConnection` type. */
export type EpcConnection = {
    __typename: 'EpcConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Epc>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details regarding a specific expiring `Service`. */
export type ExpiringServiceDetail = AccessloggableInterface & LoggableInterface & {
    __typename: 'ExpiringServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The number of times this expiring service should run. */
    times_to_run: Scalars['Int']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Details regarding a specific expiring `Service`. */
export type ExpiringServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific expiring `Service`. */
export type ExpiringServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific expiring `Service`. */
export type ExpiringServiceDetailServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `ExpiringServiceDetailConnection` type. */
export type ExpiringServiceDetailConnection = {
    __typename: 'ExpiringServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ExpiringServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A `ExternalMarketingProviderType` for `ExternalMarketingProvider` 3rd party integration. */
export type ExternalMarketingProvider = AccessloggableInterface & LoggableInterface & {
    __typename: 'ExternalMarketingProvider';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The `ExternalMarketingProvider` credentials for integration. */
    external_marketing_provider_credentials: ExternalMarketingProviderCredentialConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The `ExternalMarketingProviderType` for 3rd party external marketing integration. */
    provider: ExternalMarketingProviderType;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A `ExternalMarketingProviderType` for `ExternalMarketingProvider` 3rd party integration. */
export type ExternalMarketingProviderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `ExternalMarketingProviderType` for `ExternalMarketingProvider` 3rd party integration. */
export type ExternalMarketingProviderExternal_Marketing_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    external_marketing_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    key?: InputMaybe<ExternalMarketingProviderAuthCredential>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A `ExternalMarketingProviderType` for `ExternalMarketingProvider` 3rd party integration. */
export type ExternalMarketingProviderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `ExternalMarketingProvider` credentials for integration. */
export declare enum ExternalMarketingProviderAuthCredential {
    /** MarketBroadband.com account number. */
    MarketBroadbandAccountNumber = "MARKET_BROADBAND_ACCOUNT_NUMBER",
    /** MarketBroadband.com radius mailing quantity. */
    MarketBroadbandRadiusMailingQuantity = "MARKET_BROADBAND_RADIUS_MAILING_QUANTITY"
}
/** The connection wrapper around the `ExternalMarketingProviderConnection` type. */
export type ExternalMarketingProviderConnection = {
    __typename: 'ExternalMarketingProviderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ExternalMarketingProvider>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The `ExternalMarketingProvider` credentials for integration. */
export type ExternalMarketingProviderCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ExternalMarketingProviderCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A `ExternalMarketingProviderType` for `ExternalMarketingProvider` 3rd party integration. */
    external_marketing_provider?: Maybe<ExternalMarketingProvider>;
    /** The ID of an `ExternalMarketingProvider`. */
    external_marketing_provider_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Key for a specific value. */
    key: ExternalMarketingProviderAuthCredential;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** The `ExternalMarketingProvider` credentials for integration. */
export type ExternalMarketingProviderCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `ExternalMarketingProvider` credentials for integration. */
export type ExternalMarketingProviderCredentialExternal_Marketing_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<ExternalMarketingProviderType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The `ExternalMarketingProvider` credentials for integration. */
export type ExternalMarketingProviderCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `ExternalMarketingProvider` credentials for integration. */
export type ExternalMarketingProviderCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `ExternalMarketingProviderCredentialConnection` type. */
export type ExternalMarketingProviderCredentialConnection = {
    __typename: 'ExternalMarketingProviderCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ExternalMarketingProviderCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for the external marketing processor. */
export type ExternalMarketingProviderCredentialInput = {
    /** The credentials to use to authenticate against the external marketing provider. */
    key: ExternalMarketingProviderAuthCredential;
    /** The value of the credential key used to authenticate against the external marking provider. */
    value: Scalars['String']['input'];
};
/** A `ExternalMarketingProviderType` for `ExternalMarketingProvider` 3rd party integration. */
export declare enum ExternalMarketingProviderType {
    /** A 3rd party marketing provider called MarketBroadband.com. */
    MarketBroadband = "MARKET_BROADBAND"
}
/** The source of the company field for the FCC Form 477 report. This can be either the account or system wide default company. */
export declare enum FccForm477CompanySource {
    /** Company of the account. */
    Account = "ACCOUNT",
    /** System-wide default company. */
    Default = "DEFAULT"
}
/** The format of the FIPS for the FCC Form 477 report. */
export declare enum FccForm477Format {
    /** The FCC Form 477 report in the California FIPS format. */
    California = "CALIFORNIA",
    /** The FCC Form 477 report in the standard FIPS format. */
    Other = "OTHER"
}
/** A generated FCC Form 477 report. */
export type FccForm477Report = AccessloggableInterface & FileableInterface & LoggableInterface & {
    __typename: 'FccForm477Report';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date */
    date: Scalars['Date']['output'];
    /** A file. */
    files: FileConnection;
    /** The format of the reporting for FCC Form 477. */
    format: FccForm477Format;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A generated FCC Form 477 report. */
export type FccForm477ReportAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generated FCC Form 477 report. */
export type FccForm477ReportFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generated FCC Form 477 report. */
export type FccForm477ReportLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generated FCC Form 477 report. */
export type FccForm477ReportUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `FccForm477ReportConnection` type. */
export type FccForm477ReportConnection = {
    __typename: 'FccForm477ReportConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<FccForm477Report>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** FiberMap integration. */
export type FibermapIntegration = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'FibermapIntegration';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The ID of an AccountStatus. */
    account_status_id: Scalars['Int64Bit']['output'];
    /** The ID of an AccountType. */
    account_type_id: Scalars['Int64Bit']['output'];
    /** Always create new network sites */
    always_create_new_network_sites: Scalars['Boolean']['output'];
    /** An API token. */
    api_token: Scalars['String']['output'];
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** FiberMap plan. */
    fibermap_plans: FibermapPlanConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Import plans and contacts */
    import_accounts_and_contacts: Scalars['Boolean']['output'];
    /** Import serviceable addresses */
    import_serviceable_addresses: Scalars['Boolean']['output'];
    /** The date and time this device was last synchronized. */
    last_synchronized?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status?: Maybe<ProvisioningDeviceStatus>;
    /** A message describing what caused the current status of this device. */
    status_message?: Maybe<Scalars['String']['output']>;
    /** Whether or not a synchronization request is queued. */
    synchronization_queued: Scalars['Boolean']['output'];
    /** The date/time that synchronization started. */
    synchronization_start?: Maybe<Scalars['Datetime']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** FiberMap integration. */
export type FibermapIntegrationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** FiberMap integration. */
export type FibermapIntegrationFibermap_PlansArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    build?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    drop?: InputMaybe<Scalars['String']['input']>;
    fibermap_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_plan_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_name?: InputMaybe<Scalars['String']['input']>;
    fibermap_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    height_in_meters?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    map_overlay_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mapped_at?: InputMaybe<Scalars['Datetime']['input']>;
    mapping_user?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** FiberMap integration. */
export type FibermapIntegrationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** FiberMap integration. */
export type FibermapIntegrationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `FibermapIntegrationConnection` type. */
export type FibermapIntegrationConnection = {
    __typename: 'FibermapIntegrationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<FibermapIntegration>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** FiberMap plan. */
export type FibermapPlan = AccessloggableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'FibermapPlan';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Build */
    build?: Maybe<Scalars['String']['output']>;
    /** A two character country code. */
    country?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Drop */
    drop?: Maybe<Scalars['String']['output']>;
    /** FiberMap integration. */
    fibermap_integration?: Maybe<FibermapIntegration>;
    /** FiberMap integration ID */
    fibermap_integration_id: Scalars['Int64Bit']['output'];
    /** FiberMap plan ID */
    fibermap_plan_id: Scalars['Int64Bit']['output'];
    /** Fibermap project ID. */
    fibermap_project_id: Scalars['Int64Bit']['output'];
    /** Fibermap project name. */
    fibermap_project_name: Scalars['String']['output'];
    /** FiberMap service location. */
    fibermap_service_locations: FibermapServiceLocationConnection;
    /** FiberMap updated at */
    fibermap_updated_at?: Maybe<Scalars['Datetime']['output']>;
    /** Height in meters. */
    height_in_meters: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** is_visible of the information */
    is_visible: Scalars['Boolean']['output'];
    /** A decimal latitude. */
    latitude?: Maybe<Scalars['Latitude']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude?: Maybe<Scalars['Longitude']['output']>;
    /** Map Overlay. */
    map_overlay?: Maybe<MapOverlay>;
    /** The ID of a map overlay. */
    map_overlay_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Mapped at */
    mapped_at?: Maybe<Scalars['Datetime']['output']>;
    /** Mapping user */
    mapping_user?: Maybe<Scalars['String']['output']>;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A network site. */
    network_site?: Maybe<NetworkSite>;
    /** Network site id. */
    network_site_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A state, province, or other country subdivision. */
    subdivision?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** FiberMap plan. */
export type FibermapPlanAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** FiberMap plan. */
export type FibermapPlanFibermap_IntegrationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    always_create_new_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    api_token?: InputMaybe<Scalars['String']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    import_accounts_and_contacts?: InputMaybe<Scalars['Boolean']['input']>;
    import_serviceable_addresses?: InputMaybe<Scalars['Boolean']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** FiberMap plan. */
export type FibermapPlanFibermap_Service_LocationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    child_properties_json?: InputMaybe<Scalars['String']['input']>;
    child_vetro_id?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fibermap_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_plan_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    properties_json?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vetro_id?: InputMaybe<Scalars['String']['input']>;
};
/** FiberMap plan. */
export type FibermapPlanLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** FiberMap plan. */
export type FibermapPlanMap_OverlayArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contents?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    file_type?: InputMaybe<MapOverlayFileType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    radius?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** FiberMap plan. */
export type FibermapPlanNetwork_SiteArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    height_in_meters?: InputMaybe<Scalars['Float']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** FiberMap plan. */
export type FibermapPlanNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** FiberMap plan. */
export type FibermapPlanNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `FibermapPlanConnection` type. */
export type FibermapPlanConnection = {
    __typename: 'FibermapPlanConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<FibermapPlan>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** FiberMap service location. */
export type FibermapServiceLocation = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'FibermapServiceLocation';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A geographical address. */
    address?: Maybe<Address>;
    /** The ID of the address. */
    address_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Child properties JSON */
    child_properties_json: Scalars['String']['output'];
    /** Child Vetro ID */
    child_vetro_id?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** FiberMap integration ID */
    fibermap_integration_id: Scalars['Int64Bit']['output'];
    /** FiberMap plan. */
    fibermap_plan?: Maybe<FibermapPlan>;
    /** FiberMap plan ID */
    fibermap_plan_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** is_visible of the information */
    is_visible: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** Properties JSON */
    properties_json: Scalars['Text']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Vetro ID */
    vetro_id: Scalars['String']['output'];
};
/** FiberMap service location. */
export type FibermapServiceLocationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** FiberMap service location. */
export type FibermapServiceLocationAddressArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** FiberMap service location. */
export type FibermapServiceLocationFibermap_PlanArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    build?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    drop?: InputMaybe<Scalars['String']['input']>;
    fibermap_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_plan_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_name?: InputMaybe<Scalars['String']['input']>;
    fibermap_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    height_in_meters?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    map_overlay_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mapped_at?: InputMaybe<Scalars['Datetime']['input']>;
    mapping_user?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** FiberMap service location. */
export type FibermapServiceLocationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** FiberMap service location. */
export type FibermapServiceLocationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `FibermapServiceLocationConnection` type. */
export type FibermapServiceLocationConnection = {
    __typename: 'FibermapServiceLocationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<FibermapServiceLocation>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A file. */
export type File = AccessloggableInterface & CompletableInterface & LoggableInterface & {
    __typename: 'File';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** The file size, in bytes. */
    file_size_in_bytes: Scalars['Int64Bit']['output'];
    /** The entity that this `File` is associated with. */
    fileable?: Maybe<FileableInterface>;
    /** The ID of the entity that owns this file. */
    fileable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that owns this file. */
    fileable_type?: Maybe<FileableType>;
    /** The file name. */
    filename: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The MIME type of the file. */
    mime_type: Scalars['String']['output'];
    /** An image file may be set to the primary image. This will be used as the displayed image for the object that this file is associated to throughout Sonar. */
    primary_image: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A task. */
    tasks: TaskConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A file. */
export type FileAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A file. */
export type FileFileableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A file. */
export type FileLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A file. */
export type FileTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A file. */
export type FileUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `FileConnection` type. */
export type FileConnection = {
    __typename: 'FileConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<File>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that can own a `File`. */
export type FileableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of entity that owns this `File`. */
export declare enum FileableType {
    /** A customer account. */
    Account = "Account",
    /** An ACH batch file. */
    AchBatch = "AchBatch",
    /** A geographical address. */
    Address = "Address",
    /** An import of call data records (CDRs). */
    CallDataRecordImport = "CallDataRecordImport",
    /** An import of call detail records (CDRs). */
    CallDetailRecordImport = "CallDetailRecordImport",
    /** A call log. */
    CallLog = "CallLog",
    /** A company you do business as. */
    Company = "Company",
    /** A deposit slip. */
    DepositSlip = "DepositSlip",
    /** The localized content of an `EmailMessage`. */
    EmailMessageContent = "EmailMessageContent",
    /** A generated FCC Form 477 report. */
    FccForm477Report = "FccForm477Report",
    /** The signature on a contract. */
    HandwrittenSignature = "HandwrittenSignature",
    /** An inventory item. */
    InventoryItem = "InventoryItem",
    /** A type of item stored in inventory. */
    InventoryModel = "InventoryModel",
    /** A PDF to attach to invoices. */
    InvoiceAttachment = "InvoiceAttachment",
    /** A job, typically in the field. */
    Job = "Job",
    /** A mass email communication. */
    MassEmail = "MassEmail",
    /** A network site. */
    NetworkSite = "NetworkSite",
    /** A single PDF containing multiple invoices for printing. */
    PrintedInvoiceBatch = "PrintedInvoiceBatch",
    /** A purchase order for items from a third party vendor. */
    PurchaseOrder = "PurchaseOrder",
    /** A backup of your Sonar instance's data. */
    SystemBackup = "SystemBackup",
    /** types.test_read_only_file_model */
    TestReadOnlyFileModel = "TestReadOnlyFileModel",
    /** A ticket. */
    Ticket = "Ticket",
    /** A comment on a `Ticket`. */
    TicketComment = "TicketComment",
    /** A reply on a `Ticket`. */
    TicketReply = "TicketReply",
    /** A TowerCoverage submission. */
    TowercoverageSubmission = "TowercoverageSubmission",
    /** A third party vendor of inventory models. */
    Vendor = "Vendor",
    /** An import of voice provider rates. */
    VoiceProviderRateImport = "VoiceProviderRateImport"
}
/** A fractional debit, stored to accurately calculate multi month billing. */
export type FractionalDebit = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'FractionalDebit';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date */
    date: Scalars['Date']['output'];
    /** A debit. */
    debit?: Maybe<Debit>;
    /** The ID of a `Debit`. */
    debit_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A fractional debit, stored to accurately calculate multi month billing. */
export type FractionalDebitAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A fractional debit, stored to accurately calculate multi month billing. */
export type FractionalDebitDebitArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A fractional debit, stored to accurately calculate multi month billing. */
export type FractionalDebitLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A fractional debit, stored to accurately calculate multi month billing. */
export type FractionalDebitNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `FractionalDebitConnection` type. */
export type FractionalDebitConnection = {
    __typename: 'FractionalDebitConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<FractionalDebit>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A fractional tax transaction, stored to accurately calculate multi month billing. */
export type FractionalTaxTransaction = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'FractionalTaxTransaction';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The amount of this `Debit` that was taxed. */
    amount_taxed: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date */
    date: Scalars['Date']['output'];
    /** A human readable description. */
    description: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax transaction. */
    tax_transaction?: Maybe<TaxTransaction>;
    /** The ID of a `TaxTransactions`. */
    tax_transaction_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A fractional tax transaction, stored to accurately calculate multi month billing. */
export type FractionalTaxTransactionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A fractional tax transaction, stored to accurately calculate multi month billing. */
export type FractionalTaxTransactionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A fractional tax transaction, stored to accurately calculate multi month billing. */
export type FractionalTaxTransactionNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A fractional tax transaction, stored to accurately calculate multi month billing. */
export type FractionalTaxTransactionTax_TransactionArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_taxed?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    taxtransactionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxtransactionable_type?: InputMaybe<TaxtransactionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `FractionalTaxTransactionConnection` type. */
export type FractionalTaxTransactionConnection = {
    __typename: 'FractionalTaxTransactionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<FractionalTaxTransaction>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Precision of the costs associated with the funded service. */
export declare enum FundedServiceCostPrecision {
    /** Hundredths. */
    Hundredths = "HUNDREDTHS",
    /** Smallest denomination. */
    SmallestDenomination = "SMALLEST_DENOMINATION"
}
/** A general ledger code. */
export type GeneralLedgerCode = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'GeneralLedgerCode';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A code. */
    code: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A service. */
    services: ServiceConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A general ledger code. */
export type GeneralLedgerCodeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A general ledger code. */
export type GeneralLedgerCodeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A general ledger code. */
export type GeneralLedgerCodeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A general ledger code. */
export type GeneralLedgerCodeServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `GeneralLedgerCodeConnection` type. */
export type GeneralLedgerCodeConnection = {
    __typename: 'GeneralLedgerCodeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GeneralLedgerCode>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `GeneralSearchConnection` type. */
export type GeneralSearchConnection = {
    __typename: 'GeneralSearchConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SearchableInterface>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The general search mode to use. */
export declare enum GeneralSearchMode {
    /** Search in only the root of the query. Root elements will be limited to those that have a match in a string field. */
    Root = "ROOT",
    /** Search through the root of query, and all query relations. Root elements will be limited to those that have a match in themselves or any relation. */
    RootPlusRelations = "ROOT_PLUS_RELATIONS"
}
/** The input object that defines the fields for the generateImportCredentialsFlatfile mutation. */
export type GenerateImportCredentialsFlatfileMutationInput = {
    /** The type of entity to be imported. */
    type: ImportableType;
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssignee = AccessloggableInterface & CustomfielddataableInterface & GenericinventoryitemableInterface & GenericinventoryitemactionloggableInterface & InventoryitemableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'GenericInventoryAssignee';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** A log of an action taken against a set of generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssigneeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssigneeCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssigneeGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssigneeGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssigneeInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssigneeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generic assignee for inventory items. */
export type GenericInventoryAssigneeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `GenericInventoryAssigneeConnection` type. */
export type GenericInventoryAssigneeConnection = {
    __typename: 'GenericInventoryAssigneeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GenericInventoryAssignee>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A generic inventory item. */
export type GenericInventoryItem = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'GenericInventoryItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The entity that this `GenericInventoryItem` is associated with. */
    genericinventoryitemable?: Maybe<GenericinventoryitemableInterface>;
    /** The type of entity that owns this generic `InventoryItem`. */
    genericinventoryitemable_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity that owns this generic `InventoryItem`. */
    genericinventoryitemable_type: InventoryitemableType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A generic inventory item. */
export type GenericInventoryItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generic inventory item. */
export type GenericInventoryItemGenericinventoryitemableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A generic inventory item. */
export type GenericInventoryItemInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A generic inventory item. */
export type GenericInventoryItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A generic inventory item. */
export type GenericInventoryItemNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log of an action taken against a set of generic inventory items. */
export type GenericInventoryItemActionLog = AccessloggableInterface & LoggableInterface & {
    __typename: 'GenericInventoryItemActionLog';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The action that was performed. */
    action: GenericInventoryItemActionLogAction;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The entity that this `GenericInventoryItemActionLog` is associated with. */
    genericinventoryitemactionloggable?: Maybe<GenericinventoryitemactionloggableInterface>;
    /** The ID of the entity that this `GenericInventoryItemActionLog` is for. */
    genericinventoryitemactionloggable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that this `GenericInventoryItemActionLog` is for. */
    genericinventoryitemactionloggable_type: InventoryitemableType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The purchase price of this item. */
    purchase_price?: Maybe<Scalars['Float']['output']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A log of an action taken against a set of generic inventory items. */
export type GenericInventoryItemActionLogAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log of an action taken against a set of generic inventory items. */
export type GenericInventoryItemActionLogGenericinventoryitemactionloggableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A log of an action taken against a set of generic inventory items. */
export type GenericInventoryItemActionLogInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A log of an action taken against a set of generic inventory items. */
export type GenericInventoryItemActionLogLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An action that can be logged in a `GenericInventoryItemActionLog`. */
export declare enum GenericInventoryItemActionLogAction {
    /** Items were assigned. */
    Assigned = "ASSIGNED",
    /** Items were consumed. */
    Consumed = "CONSUMED",
    /** Items were created. */
    Created = "CREATED",
    /** Items were deleted. */
    Deleted = "DELETED"
}
/** The connection wrapper around the `GenericInventoryItemActionLogConnection` type. */
export type GenericInventoryItemActionLogConnection = {
    __typename: 'GenericInventoryItemActionLogConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GenericInventoryItemActionLog>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `GenericInventoryItemConnection` type. */
export type GenericInventoryItemConnection = {
    __typename: 'GenericInventoryItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GenericInventoryItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that can own a `GenericInventoryItem`. */
export type GenericinventoryitemableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An entity that can own a `GenericInventoryItemActionLog`. */
export type GenericinventoryitemactionloggableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A geographical tax zone. */
export type GeoTaxZone = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'GeoTaxZone';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    accounts: AccountConnection;
    /** A city. */
    city?: Maybe<Scalars['String']['output']>;
    /** A two character country code. */
    country?: Maybe<Country>;
    /** A US county. Only used for US addresses. */
    county?: Maybe<UsCounty>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The rate. */
    rate: Scalars['Float']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A state, province, or other country subdivision. */
    subdivision?: Maybe<Subdivision>;
    /** A tax. */
    tax?: Maybe<Tax>;
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A ZIP or postal code. */
    zip?: Maybe<Scalars['String']['output']>;
    /** Whether to match on partial ZIP/postal codes. */
    zip_partial_match: Scalars['Boolean']['output'];
};
/** A geographical tax zone. */
export type GeoTaxZoneAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical tax zone. */
export type GeoTaxZoneAccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A geographical tax zone. */
export type GeoTaxZoneLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical tax zone. */
export type GeoTaxZoneNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical tax zone. */
export type GeoTaxZoneTaxArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `GeoTaxZoneConnection` type. */
export type GeoTaxZoneConnection = {
    __typename: 'GeoTaxZoneConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GeoTaxZone>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A geographical restriction. */
export type Geofence = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Geofence';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A list of polygons. */
    polygons: PolygonConnection;
    /** Availability for `Job`s to be scheduled. */
    schedule_availabilities: ScheduleAvailabilityConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A geographical restriction. */
export type GeofenceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical restriction. */
export type GeofenceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical restriction. */
export type GeofenceNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A geographical restriction. */
export type GeofenceSchedule_AvailabilitiesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    available?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geofence_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The connection wrapper around the `GeofenceConnection` type. */
export type GeofenceConnection = {
    __typename: 'GeofenceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Geofence>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A standardized vehicle. */
export type GetGpsTrackingProviderVehiclesConnection = {
    __typename: 'GetGpsTrackingProviderVehiclesConnection';
    /** A list of the entities provided by this connection. */
    entities?: Maybe<Array<Maybe<StandardizedVehicle>>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Defines the minimum and maximum of an inventory level for all locations per inventory model. */
export type GlobalInventoryModelMinMax = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'GlobalInventoryModelMinMax';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Maximum value */
    maximum?: Maybe<Scalars['Int']['output']>;
    /** Minimum value */
    minimum: Scalars['Int']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Defines the minimum and maximum of an inventory level for all locations per inventory model. */
export type GlobalInventoryModelMinMaxAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Defines the minimum and maximum of an inventory level for all locations per inventory model. */
export type GlobalInventoryModelMinMaxInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Defines the minimum and maximum of an inventory level for all locations per inventory model. */
export type GlobalInventoryModelMinMaxLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Defines the minimum and maximum of an inventory level for all locations per inventory model. */
export type GlobalInventoryModelMinMaxNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `GlobalInventoryModelMinMaxConnection` type. */
export type GlobalInventoryModelMinMaxConnection = {
    __typename: 'GlobalInventoryModelMinMaxConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GlobalInventoryModelMinMax>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A `GpsTrackingProvider`. */
export type GpsTrackingProvider = AccessloggableInterface & LoggableInterface & {
    __typename: 'GpsTrackingProvider';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** `GpsTrackingProvider` credentials. */
    gps_tracking_provider_credentials: GpsTrackingProviderCredentialConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Whether OAuth authentication required. */
    oauth_required: Scalars['Boolean']['output'];
    /** A type of GPS tracking provider. */
    provider: GpsTrackingProviderType;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A vehicle. */
    vehicles: VehicleConnection;
};
/** A `GpsTrackingProvider`. */
export type GpsTrackingProviderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `GpsTrackingProvider`. */
export type GpsTrackingProviderGps_Tracking_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    key?: InputMaybe<GpsTrackingProviderAuthCredential>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A `GpsTrackingProvider`. */
export type GpsTrackingProviderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `GpsTrackingProvider`. */
export type GpsTrackingProviderVehiclesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    gps_tracking_always?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_friday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_monday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_saturday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_sunday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_thursday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_tuesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_wednesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_end_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    gps_tracking_start_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_timezone?: InputMaybe<Timezone>;
    gps_tracking_uid?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    manufacturer?: InputMaybe<Scalars['String']['input']>;
    model?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vin?: InputMaybe<Scalars['String']['input']>;
    year?: InputMaybe<Scalars['Int']['input']>;
};
/** `GpsTrackingProvider` credentials. */
export declare enum GpsTrackingProviderAuthCredential {
    /** Linxup access token */
    Linxupaccesstoken = "LINXUPACCESSTOKEN",
    /** Linxup API access URL */
    LinxupApiurl = "LINXUP_APIURL",
    /** Linxup password */
    LinxupPassword = "LINXUP_PASSWORD",
    /** Linxup username */
    LinxupUsername = "LINXUP_USERNAME",
    /** Test API token generated with correct username and password */
    Testapitoken = "TESTAPITOKEN",
    /** Test password - Use `password` to pass */
    TestPassword = "TEST_PASSWORD",
    /** Test username - Use `test` to pass */
    TestUsername = "TEST_USERNAME",
    /** Track Your Truck access token */
    Trackyourtruckaccesstoken = "TRACKYOURTRUCKACCESSTOKEN",
    /** Track Your Truck client ID */
    TrackyourtruckClientid = "TRACKYOURTRUCK_CLIENTID",
    /** Track Your Truck PIN */
    TrackyourtruckPin = "TRACKYOURTRUCK_PIN",
    /** Verizon Connect OAuth access token */
    Verizonconnectaccesstoken = "VERIZONCONNECTACCESSTOKEN",
    /** Verizon Connect OAuth refresh token */
    Verizonconnectrefreshtoken = "VERIZONCONNECTREFRESHTOKEN",
    /** Verizon Connect client ID */
    VerizonconnectClientid = "VERIZONCONNECT_CLIENTID",
    /** Verizon Connect client secret */
    VerizonconnectClientsecret = "VERIZONCONNECT_CLIENTSECRET",
    /** Zubie OAuth access token */
    Zubieaccesstoken = "ZUBIEACCESSTOKEN",
    /** Zubie OAuth refresh token */
    Zubierefreshtoken = "ZUBIEREFRESHTOKEN",
    /** Zubie client ID */
    ZubieClientid = "ZUBIE_CLIENTID",
    /** Zubie client secret */
    ZubieClientsecret = "ZUBIE_CLIENTSECRET"
}
/** The connection wrapper around the `GpsTrackingProviderConnection` type. */
export type GpsTrackingProviderConnection = {
    __typename: 'GpsTrackingProviderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GpsTrackingProvider>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** `GpsTrackingProvider` credentials. */
export type GpsTrackingProviderCredential = AccessloggableInterface & LoggableInterface & {
    __typename: 'GpsTrackingProviderCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A `GpsTrackingProvider`. */
    gps_tracking_provider?: Maybe<GpsTrackingProvider>;
    /** A `GpsTrackingProvider` ID. */
    gps_tracking_provider_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Key for a specific value. */
    key: GpsTrackingProviderAuthCredential;
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** `GpsTrackingProvider` credentials. */
export type GpsTrackingProviderCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** `GpsTrackingProvider` credentials. */
export type GpsTrackingProviderCredentialGps_Tracking_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    oauth_required?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<GpsTrackingProviderType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** `GpsTrackingProvider` credentials. */
export type GpsTrackingProviderCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `GpsTrackingProviderCredentialConnection` type. */
export type GpsTrackingProviderCredentialConnection = {
    __typename: 'GpsTrackingProviderCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<GpsTrackingProviderCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for the GPS tracking provider. */
export type GpsTrackingProviderCredentialInput = {
    /** `GpsTrackingProvider` Credentials. */
    key: GpsTrackingProviderAuthCredential;
    /** `GpsTrackingProvider` Credential value. */
    value: Scalars['String']['input'];
};
/** A `GpsTrackingProvider` type. */
export declare enum GpsTrackingProviderType {
    /** Linxup */
    Linxup = "LINXUP",
    /** Track Your Truck */
    Trackyourtruck = "TRACKYOURTRUCK",
    /** Verizon Connect */
    Verizonconnect = "VERIZONCONNECT",
    /** Zubie */
    Zubie = "ZUBIE"
}
/** The signature on a contract. */
export type HandwrittenSignature = AccessloggableInterface & FileableInterface & LoggableInterface & {
    __typename: 'HandwrittenSignature';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The email address of the contact that the contract was originally sent to. */
    contact_email_address?: Maybe<Scalars['EmailAddress']['output']>;
    /** The name of the contact that the contract was originally sent to. */
    contact_name: Scalars['String']['output'];
    /** The role of the contact that the contract was originally sent to. */
    contact_role?: Maybe<Scalars['String']['output']>;
    /** A contract. */
    contract?: Maybe<Contract>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The IP address of the contract signatory. */
    signer_ip: Scalars['IP']['output'];
    /** The name provided by the contract signatory. */
    signer_name: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The signature on a contract. */
export type HandwrittenSignatureAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The signature on a contract. */
export type HandwrittenSignatureContractArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_message?: InputMaybe<Scalars['Text']['input']>;
    expiration_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    handwritten_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    unique_link_key?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The signature on a contract. */
export type HandwrittenSignatureFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The signature on a contract. */
export type HandwrittenSignatureLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `HandwrittenSignatureConnection` type. */
export type HandwrittenSignatureConnection = {
    __typename: 'HandwrittenSignatureConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<HandwrittenSignature>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** types.icmp_network_monitoring_result_connection */
export type IcmpNetworkMonitoringResultConnection = {
    __typename: 'IcmpNetworkMonitoringResultConnection';
    /** fields.icmp_results */
    icmp_results: Array<Maybe<IcmpResult>>;
    /** fields.icmp_status_results */
    icmp_status_results: Array<Maybe<IcmpStatusResult>>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** fields.network_monitoring_template */
    network_monitoring_template?: Maybe<NetworkMonitoringTemplate>;
};
/** types.icmp_result */
export type IcmpResult = {
    __typename: 'IcmpResult';
    /** A Unix timestamp in the same timezone as this Sonar instance */
    epoch_system_timezone?: Maybe<Scalars['EpochTimestamp']['output']>;
    /** The high latency. */
    high?: Maybe<Scalars['Float']['output']>;
    /** The loss percentage. */
    loss?: Maybe<Scalars['Float']['output']>;
    /** The low latency. */
    low?: Maybe<Scalars['Float']['output']>;
    /** The median latency. */
    median?: Maybe<Scalars['Float']['output']>;
    /** The time. */
    time?: Maybe<Scalars['Datetime']['output']>;
};
/** types.icmp_status_result */
export type IcmpStatusResult = {
    __typename: 'IcmpStatusResult';
    /** A Unix timestamp in the same timezone as this Sonar instance */
    epoch_system_timezone?: Maybe<Scalars['EpochTimestamp']['output']>;
    /** The reason. */
    reason?: Maybe<Scalars['String']['output']>;
    /** The status. */
    status?: Maybe<Scalars['String']['output']>;
    /** The time. */
    time?: Maybe<Scalars['Datetime']['output']>;
};
/** A simple icon, used in the user interface for quick identification. */
export declare enum Icon {
    /** Activity, Pulse */
    Activity759902 = "ACTIVITY759902",
    /** Add, New, Insert */
    Add759610 = "ADD759610",
    /** Alarm, Add, Notification */
    Addalarm759611 = "ADDALARM759611",
    /** Cart, Add, Shopping */
    Addcart759856 = "ADDCART759856",
    /** Add, Document */
    Addfile759478 = "ADDFILE759478",
    /** Inbox, Add, Mailbox */
    Addinbox759799 = "ADDINBOX759799",
    /** Calendar, Add, Date */
    Addmeeting759787 = "ADDMEETING759787",
    /** Airplane, Plane, Travel */
    Airplane759930 = "AIRPLANE759930",
    /** Airplay */
    Airplay759822 = "AIRPLAY759822",
    /** Alarm, Clock, Time */
    Alarm759357 = "ALARM759357",
    /** Alarm, Notification, Time */
    Alarm759615 = "ALARM759615",
    /** Alert, Warning */
    Alert759619 = "ALERT759619",
    /** Anchor */
    Anchor759433 = "ANCHOR759433",
    /** Broadcast, Tower, Antenna */
    Antenna759818 = "ANTENNA759818",
    /** Apple, Fruit, Healthy */
    Apple759516 = "APPLE759516",
    /** App, Store */
    Appstore759879 = "APPSTORE759879",
    /** Artboard */
    Artboard759449 = "ARTBOARD759449",
    /** Artwork, Frame, Hanging */
    Artwork759814 = "ARTWORK759814",
    /** Nuclear, Energy, Atom */
    Atom759499 = "ATOM759499",
    /** Attachment, Clip */
    Attachment759782 = "ATTACHMENT759782",
    /** Medicine, Bowl, Ayurveda */
    Ayurveda759572 = "AYURVEDA759572",
    /** Backward, Right, Navigation */
    Backward759406 = "BACKWARD759406",
    /** Bandaid, Bandage, Medical */
    Bandaid759557 = "BANDAID759557",
    /** Bandaids, Bandage, Medicine */
    Bandaids759559 = "BANDAIDS759559",
    /** Bank */
    Bank759322 = "BANK759322",
    /** Bank */
    Bank759324 = "BANK759324",
    /** Money, Banknote */
    Banknote759344 = "BANKNOTE759344",
    /** Barcode, Product, Identification */
    Barcode759851 = "BARCODE759851",
    /** Baseball, Bat, Game */
    Baseball759306 = "BASEBALL759306",
    /** Baseball, Ball, Game */
    Baseball759307 = "BASEBALL759307",
    /** Picnic, Basket */
    Basket759535 = "BASKET759535",
    /** Basketball, Ball, Game */
    Basketball759305 = "BASKETBALL759305",
    /** Battery, Charge, Hardware */
    Battery759620 = "BATTERY759620",
    /** Battery, Full, Hardware */
    Battery759621 = "BATTERY759621",
    /** Battery, Empty, Hardware */
    Battery759622 = "BATTERY759622",
    /** Battery, Half, Hardware */
    Battery759624 = "BATTERY759624",
    /** Battery, Time, Timeout */
    Batterytimeout759627 = "BATTERYTIMEOUT759627",
    /** Bikini, Bra, Undergarment */
    Bikini759423 = "BIKINI759423",
    /** Birdhouse, House */
    Birdhouse759900 = "BIRDHOUSE759900",
    /** Bits, Binary, Number */
    Bits759671 = "BITS759671",
    /** Blocks, Alphabet */
    Blocks759663 = "BLOCKS759663",
    /** Boarding, Pass, Travel */
    Boardingpass759428 = "BOARDINGPASS759428",
    /** Dog, Bone, Pet */
    Bone759579 = "BONE759579",
    /** Reading, Book, Education */
    Book759649 = "BOOK759649",
    /** Book, Education, Learning */
    Book759652 = "BOOK759652",
    /** Tag, Label, Bookmark */
    Bookmark759901 = "BOOKMARK759901",
    /** Star, Folder, Collection */
    Bookmarkfolder759475 = "BOOKMARKFOLDER759475",
    /** Bookmarks, Book, Read */
    Bookmarks759905 = "BOOKMARKS759905",
    /** Library, Book, Study */
    Books759654 = "BOOKS759654",
    /** Bowling, Ball, Game */
    Bowling759308 = "BOWLING759308",
    /** Project, Box */
    Box759780 = "BOX759780",
    /** Brainpower, Brainstorming, Thinking */
    Brainpower759651 = "BRAINPOWER759651",
    /** Bread, Breakfast */
    Bread759509 = "BREAD759509",
    /** Briefcase */
    Briefcase759327 = "BRIEFCASE759327",
    /** Brightness, Interface, User */
    Brightness759816 = "BRIGHTNESS759816",
    /** Broken, Bone */
    Brokenbone759560 = "BROKENBONE759560",
    /** Paintbrush, Brush, Tool */
    Brush759464 = "BRUSH759464",
    /** Bug, Virus */
    Bug759666 = "BUG759666",
    /** Bullhorn, Megaphone, Advertising */
    Bullhorn759326 = "BULLHORN759326",
    /** Bullhorn, Megaphone, Advertising */
    Bullhorn759328 = "BULLHORN759328",
    /** Burger, Food, Breakfast */
    Burger759511 = "BURGER759511",
    /** Bus, Transport, Vehicle */
    Bus759933 = "BUS759933",
    /** Butterfly, Insect */
    Butterfly759506 = "BUTTERFLY759506",
    /** Button */
    Button759587 = "BUTTON759587",
    /** Buttons, Large, Menu */
    Buttons759623 = "BUTTONS759623",
    /** Buttons, Medium, Menu */
    Buttons759625 = "BUTTONS759625",
    /** Buttons, Small, Menu */
    Buttons759626 = "BUTTONS759626",
    /** Plus, Minus, Calculation */
    Calculation759351 = "CALCULATION759351",
    /** Math, Calculation */
    Calculation759650 = "CALCULATION759650",
    /** Calculator */
    Calculator759329 = "CALCULATOR759329",
    /** Calendar, Available, Schedule */
    Calendar759785 = "CALENDAR759785",
    /** Calendar, Unavailable, Schedule */
    Calendar759786 = "CALENDAR759786",
    /** Calendar, Schedule, Date */
    Calendar759789 = "CALENDAR759789",
    /** Service, Call, Helpline */
    Callservice759877 = "CALLSERVICE759877",
    /** Camera, Photography, Device */
    Camera759819 = "CAMERA759819",
    /** Flip, Camera, Rotate */
    Camera759827 = "CAMERA759827",
    /** Campfire, Bonfire, Fire */
    Campfire759431 = "CAMPFIRE759431",
    /** Car, Transport, Vehicle */
    Car759939 = "CAR759939",
    /** Car, Battery, Automobile */
    Carbattery759507 = "CARBATTERY759507",
    /** Carrot */
    Carrot759522 = "CARROT759522",
    /** Cash, Money, Finance */
    Cash759858 = "CASH759858",
    /** Bookcase, Speaker, Cd */
    Cd759817 = "CD759817",
    /** Center, Align, Text */
    Centeralign759450 = "CENTERALIGN759450",
    /** Certified, Badge, Sticker */
    Certified759330 = "CERTIFIED759330",
    /** Chalkboard, Study, Board */
    Chalkboard759656 = "CHALKBOARD759656",
    /** Plug, Charging, Energy */
    Charging759502 = "CHARGING759502",
    /** Chat, Chatting, Message */
    Chat759903 = "CHAT759903",
    /** Chat, Chatting, Message */
    Chat759911 = "CHAT759911",
    /** Ask, Question, Chat */
    Chatting759878 = "CHATTING759878",
    /** Chat, Quote, Chatting */
    Chatting759910 = "CHATTING759910",
    /** Checkmark, Box, Checkbox */
    Checkbox759793 = "CHECKBOX759793",
    /** Checkmark, Accept, Verify */
    Checkmark759628 = "CHECKMARK759628",
    /** Checkmark, Accept, Verify */
    Checkmark759790 = "CHECKMARK759790",
    /** Checkmark, Document, Collection */
    Checkmarkfile759479 = "CHECKMARKFILE759479",
    /** Chef, Hat */
    Chefhat759517 = "CHEFHAT759517",
    /** Chopsticks */
    Chopsticks759512 = "CHOPSTICKS759512",
    /** Circle */
    Circle = "CIRCLE",
    /** Clipboard */
    Clipboard759451 = "CLIPBOARD759451",
    /** Clipboard, Todo, Task */
    Clipboard759792 = "CLIPBOARD759792",
    /** Clock, Time, Watch */
    Clock759361 = "CLOCK759361",
    /** Cloud, Weather */
    Cloud759379 = "CLOUD759379",
    /** Code */
    Code759439 = "CODE759439",
    /** Code, Coding, Development */
    Code759452 = "CODE759452",
    /** Html, Doc, Coding */
    Coding759461 = "CODING759461",
    /** Coffee, Mug, Cup */
    Coffeemug759528 = "COFFEEMUG759528",
    /** Coin, Cash, Dollar */
    Coin759333 = "COIN759333",
    /** Coins, Money, Finance */
    Coins759335 = "COINS759335",
    /** Command, Line, Coding */
    Commandline759678 = "COMMANDLINE759678",
    /** Safari, Compass */
    Compass759373 = "COMPASS759373",
    /** Computer, Device, Monitor */
    Computer759675 = "COMPUTER759675",
    /** Computer, Device */
    Computer759681 = "COMPUTER759681",
    /** Contacts, Star, Book */
    Contactbook759907 = "CONTACTBOOK759907",
    /** Contacts, Contact, Book */
    Contactbook759912 = "CONTACTBOOK759912",
    /** Control, Pad, Navigation */
    Control759629 = "CONTROL759629",
    /** Corkscrew */
    Corkscrew759519 = "CORKSCREW759519",
    /** Credit, Card, Debit */
    Creditcard759860 = "CREDITCARD759860",
    /** Crop */
    Crop759453 = "CROP759453",
    /** Crown, King, Royal */
    Crown759585 = "CROWN759585",
    /** Bike, Transportation, Cycle */
    Cycle759927 = "CYCLE759927",
    /** Cyclist, Cycling, Cycle */
    Cyclist759938 = "CYCLIST759938",
    /** Network, Activity, Data */
    Datatransfer759687 = "DATATRANSFER759687",
    /** Network, Activity, Data */
    Datatransfer759688 = "DATATRANSFER759688",
    /** Delete, Document, File */
    Deletefile759481 = "DELETEFILE759481",
    /** Delete, Tag, Label */
    Deletelabel759630 = "DELETELABEL759630",
    /** Delivery, Truck, Transport */
    Deliverytruck759853 = "DELIVERYTRUCK759853",
    /** Desk, Lamp, Light */
    Desklamp759794 = "DESKLAMP759794",
    /** Diamond */
    Diamond759334 = "DIAMOND759334",
    /** Diamond, Ring */
    Diamondring759591 = "DIAMONDRING759591",
    /** Dice, Gambling */
    Dice759284 = "DICE759284",
    /** Fork, Direction, Path */
    Direction759919 = "DIRECTION759919",
    /** Directions, Direction, Board */
    Directionboard759934 = "DIRECTIONBOARD759934",
    /** Percent, Discount */
    Discount759347 = "DISCOUNT759347",
    /** Dislike, Thumbs, Down */
    Dislike759913 = "DISLIKE759913",
    /** Dna, Genetics */
    Dna759561 = "DNA759561",
    /** Document, File */
    Document759480 = "DOCUMENT759480",
    /** Dog, Collar */
    Dogcollar759580 = "DOGCOLLAR759580",
    /** Dog, Food, Bowl */
    Dogfood759583 = "DOGFOOD759583",
    /** Dollar, Euro */
    Dollar759336 = "DOLLAR759336",
    /** Dollar, Sign */
    Dollar759337 = "DOLLAR759337",
    /** Do, Not, Disturb */
    Donotdisturb759676 = "DONOTDISTURB759676",
    /** Door, Open, Entry */
    Door759631 = "DOOR759631",
    /** Door, Entry, Gate */
    Door759636 = "DOOR759636",
    /** Down, Navigation, Direction */
    Down759409 = "DOWN759409",
    /** Down, Arrow, Direction */
    Downarrow759403 = "DOWNARROW759403",
    /** Download, File, Down */
    Download759677 = "DOWNLOAD759677",
    /** Download, Hd, Hard-disk */
    Download759685 = "DOWNLOAD759685",
    /** Download */
    Download759861 = "DOWNLOAD759861",
    /** Book, Download, School */
    Downloadbook759665 = "DOWNLOADBOOK759665",
    /** Download, Folder, Collection */
    Downloadfolder759482 = "DOWNLOADFOLDER759482",
    /** Cloud, Download, Storage */
    Downloadfromcloud759667 = "DOWNLOADFROMCLOUD759667",
    /** Inbox, Mail, Message */
    Downloadinbox759801 = "DOWNLOADINBOX759801",
    /** Navigate, Down */
    Downnavigate759415 = "DOWNNAVIGATE759415",
    /** File, Drawer, Document */
    Drawer759795 = "DRAWER759795",
    /** File, Cabinet */
    Drawer759797 = "DRAWER759797",
    /** Dress, Fashion, Woman */
    Dress759581 = "DRESS759581",
    /** Drink, Glass, Water */
    Drink759521 = "DRINK759521",
    /** Drumstick, Chicken, Leg */
    Drumstick759523 = "DRUMSTICK759523",
    /** Fitness, Dumbbell, Gym */
    Dumbbell759562 = "DUMBBELL759562",
    /** Wastebasket, Basket, Dustbin */
    Dustbin759783 = "DUSTBIN759783",
    /** Earth, Globe, Planet */
    Earth759508 = "EARTH759508",
    /** Egg, Food, Boil */
    Egg759520 = "EGG759520",
    /** Eject, Sign */
    Eject759823 = "EJECT759823",
    /** Elevator, Direction, Arrow */
    Elevatorsign759401 = "ELEVATORSIGN759401",
    /** Email, Message, Mail */
    Email759362 = "EMAIL759362",
    /** Enter, Entry, Login */
    Enter759632 = "ENTER759632",
    /** Eraser */
    Eraser759455 = "ERASER759455",
    /** Exit, Signout */
    Exit759634 = "EXIT759634",
    /** Zoom, Screen */
    Expand759614 = "EXPAND759614",
    /** Red, Eye, Filter */
    Eye759847 = "EYE759847",
    /** Eyedropper, Dropper, Tool */
    Eyedropper759456 = "EYEDROPPER759456",
    /** Factory, Industry, Plant */
    Factory759338 = "FACTORY759338",
    /** In, Love, Face */
    Fallinlove759888 = "FALLINLOVE759888",
    /** Fan */
    Fan759584 = "FAN759584",
    /** Fast, Forward, Sign */
    Fastforward759820 = "FASTFORWARD759820",
    /** Favorites, Folder, Collection */
    Favoritefolder759470 = "FAVORITEFOLDER759470",
    /** Contacts, Favorites, Book */
    Favouritebook759906 = "FAVOURITEBOOK759906",
    /** Chat, Heart, Chatting */
    Favouritemessage759909 = "FAVOURITEMESSAGE759909",
    /** Compose, Tweet, Quill */
    Feather759904 = "FEATHER759904",
    /** Female, Symbol, Gender */
    Femalegender759563 = "FEMALEGENDER759563",
    /** Film, Roll, Video */
    Film759825 = "FILM759825",
    /** Filmstrip, Movie, Film */
    Filmstrip759826 = "FILMSTRIP759826",
    /** Find, Home, Estate */
    Findestate759598 = "FINDESTATE759598",
    /** Fingerprint, Scan, Biometric */
    Fingerprint759679 = "FINGERPRINT759679",
    /** Fire, Escape, Stair */
    Fireescape759405 = "FIREESCAPE759405",
    /** Medical, Bag, First-aid */
    Firstaidbag759569 = "FIRSTAIDBAG759569",
    /** Heart, Monitor, Fitness */
    Fitnesstracker759564 = "FITNESSTRACKER759564",
    /** Pennant, Flag, Checkpoint */
    Flag759300 = "FLAG759300",
    /** Flag */
    Flag759796 = "FLAG759796",
    /** Torch, Flame, Fire */
    Flame759301 = "FLAME759301",
    /** Flashlight, Torch, Light */
    Flashlight759582 = "FLASHLIGHT759582",
    /** Beaker, Flask, Science */
    Flask759664 = "FLASK759664",
    /** Flight, Departure, Plane */
    Flightdeparture759430 = "FLIGHTDEPARTURE759430",
    /** Airplane, Mode, Flight */
    Flightmode759603 = "FLIGHTMODE759603",
    /** Flower, Nature */
    Flower759483 = "FLOWER759483",
    /** Folder, Collection */
    Folder759468 = "FOLDER759468",
    /** Font, Size, Text */
    Font759635 = "FONT759635",
    /** Fonts, Folder, Collection */
    Fontsfolder759471 = "FONTSFOLDER759471",
    /** Football, Rugby, Ball */
    Football759286 = "FOOTBALL759286",
    /** Soccer, Player, Football */
    Football759295 = "FOOTBALL759295",
    /** Sports, Field, Football */
    Footballground759290 = "FOOTBALLGROUND759290",
    /** Forward, Left, Direction */
    Forward759402 = "FORWARD759402",
    /** Navigate, Forward, Navigation */
    Forwardnavigation759411 = "FORWARDNAVIGATION759411",
    /** Fries, French, Food */
    Frenchfries759525 = "FRENCHFRIES759525",
    /** Fried, Egg, Food */
    Friedegg759527 = "FRIEDEGG759527",
    /** Pan, Frying */
    Fryingpan759537 = "FRYINGPAN759537",
    /** Hours, Fullday, Service */
    Fulldayservice759323 = "FULLDAYSERVICE759323",
    /** Effects, Function */
    Function759821 = "FUNCTION759821",
    /** Gauge, Performance, Speedometer */
    Gauge759486 = "GAUGE759486",
    /** Passcode, Gesture, Touchpad */
    Gesture759693 = "GESTURE759693",
    /** Gift, Present */
    Gift759915 = "GIFT759915",
    /** Gift, Certificate, Giftcard */
    Giftcard759863 = "GIFTCARD759863",
    /** Glasses */
    Glasses759800 = "GLASSES759800",
    /** Globe */
    Globe759339 = "GLOBE759339",
    /** Globe, Web, World */
    Globe759358 = "GLOBE759358",
    /** Oven, Mitt, Gloves */
    Gloves759533 = "GLOVES759533",
    /** Golf, Game, Sport */
    Golf759287 = "GOLF759287",
    /** Education, School, Graduate */
    Graduate759653 = "GRADUATE759653",
    /** Grapes, Fruit */
    Grapes759524 = "GRAPES759524",
    /** Bar, Graph, Chart */
    Graph759325 = "GRAPH759325",
    /** Grass, Plant */
    Grass759487 = "GRASS759487",
    /** Grater */
    Grater759531 = "GRATER759531",
    /** Grid, Large */
    Grid759638 = "GRID759638",
    /** Grid, Medium */
    Grid759639 = "GRID759639",
    /** Grid, Small */
    Grid759640 = "GRID759640",
    /** Grill, Tandoor, Cooking */
    Grill759529 = "GRILL759529",
    /** Hamburger, Menu, List */
    Hamburgermenu759641 = "HAMBURGERMENU759641",
    /** Hand, Palm, Gesture */
    Hand759457 = "HAND759457",
    /** Raised, Hand, Gesture */
    Hand759655 = "HAND759655",
    /** Hand, Truck, Hand-truck */
    Handtruck759862 = "HANDTRUCK759862",
    /** Hanger */
    Hanger759586 = "HANGER759586",
    /** Happy, Face, Emoji */
    Happy759916 = "HAPPY759916",
    /** Hashtag */
    Hashtag759917 = "HASHTAG759917",
    /** Haze, Wave, Tide */
    Haze759380 = "HAZE759380",
    /** Headphones, Earphone, Equipment */
    Headphones759829 = "HEADPHONES759829",
    /** Healthy, Heart, Heartbeat */
    Healthy759565 = "HEALTHY759565",
    /** Heart, Love, Valentine */
    Heart759880 = "HEART759880",
    /** Heart, Add, Love */
    Heart759914 = "HEART759914",
    /** Cards, Card, Gambling */
    Heartcard759285 = "HEARTCARD759285",
    /** Heartrate, Heartbeat, Heart */
    Heartrate759566 = "HEARTRATE759566",
    /** Hearts, Love, Valentine */
    Hearts759881 = "HEARTS759881",
    /** Help */
    Help759642 = "HELP759642",
    /** Hide, Eye, Vision */
    Hide759643 = "HIDE759643",
    /** Hide, Keyboard, Interface */
    Hidekeyboard759644 = "HIDEKEYBOARD759644",
    /** Temp, Increase, Temperature */
    Hightemperature759394 = "HIGHTEMPERATURE759394",
    /** Volume, High, Sound */
    Highvolume759811 = "HIGHVOLUME759811",
    /** Hockey, Game, Sport */
    Hockey759288 = "HOCKEY759288",
    /** Hospital, Medical, Plus */
    Hospitalsign759567 = "HOSPITALSIGN759567",
    /** Temp, Drop, Temperature */
    Hot759393 = "HOT759393",
    /** Hot, Fire, Flame */
    Hot759865 = "HOT759865",
    /** Hourglass, Sandclock, Time */
    Hourglass759645 = "HOURGLASS759645",
    /** House, Home, Building */
    House759590 = "HOUSE759590",
    /** Id, Card, Identification */
    Idcard759798 = "IDCARD759798",
    /** Light, Bulb */
    Idea759340 = "IDEA759340",
    /** Employee, Id, Identification */
    Identificationcard759341 = "IDENTIFICATIONCARD759341",
    /** Gallery */
    Imageframe759828 = "IMAGEFRAME759828",
    /** Inbox, Email, Message */
    Inbox759791 = "INBOX759791",
    /** Inbox, Todo */
    Inbox759803 = "INBOX759803",
    /** Inboxes, Mail */
    Inboxes759802 = "INBOXES759802",
    /** Incoming, Call, Communication */
    Incomingcall759363 = "INCOMINGCALL759363",
    /** Syringe, Injection */
    Injection759553 = "INJECTION759553",
    /** Invoice, Bill, Report */
    Invoice759342 = "INVOICE759342",
    /** Invoice, Bill, Receipt */
    Invoice759867 = "INVOICE759867",
    /** Island, Beach, Tree */
    Island759429 = "ISLAND759429",
    /** Jersey, Player, Sport */
    Jersey759299 = "JERSEY759299",
    /** Key, Secure, Lock */
    Key759683 = "KEY759683",
    /** Show, Keyboard, Typing */
    Keyboard759602 = "KEYBOARD759602",
    /** Keyboard, Typing */
    Keyboard759684 = "KEYBOARD759684",
    /** Keyhole, Security, Privacy */
    Keyhole759682 = "KEYHOLE759682",
    /** Keypad */
    Keypad759364 = "KEYPAD759364",
    /** Chess, Horse, Knight */
    Knight759281 = "KNIGHT759281",
    /** Lady, Bug, Ladybug */
    Ladybug759490 = "LADYBUG759490",
    /** Flight, Arrival, Plane */
    Landingflight759432 = "LANDINGFLIGHT759432",
    /** Landscape, Picture, Image */
    Landscape759830 = "LANDSCAPE759830",
    /** Laptop, Device */
    Laptop759689 = "LAPTOP759689",
    /** Layers, Stack, Tool */
    Layers759458 = "LAYERS759458",
    /** Leaf, Nature, Ecology */
    Leaf759492 = "LEAF759492",
    /** Leaf, Nature, Ecology */
    Leaf759494 = "LEAF759494",
    /** Left, Align, Text */
    Leftalign759459 = "LEFTALIGN759459",
    /** Left, Arrow, Direction */
    Leftarrow759404 = "LEFTARROW759404",
    /** Left, Down, Arrow */
    Leftarrow759407 = "LEFTARROW759407",
    /** Navigate, Back, Direction */
    Leftnavigation759419 = "LEFTNAVIGATION759419",
    /** Left, Up, Arrow */
    Leftuparrow759410 = "LEFTUPARROW759410",
    /** Lego, Robot */
    Lego759657 = "LEGO759657",
    /** Lens */
    Lens759832 = "LENS759832",
    /** Lightbulb, Light, Bulb */
    Lightbulb759491 = "LIGHTBULB759491",
    /** Lightbulb, Cfl, Led */
    Lightbulb759493 = "LIGHTBULB759493",
    /** Like, Thumbs, Up */
    Like759882 = "LIKE759882",
    /** Link */
    Link759365 = "LINK759365",
    /** List, Document, File */
    List759473 = "LIST759473",
    /** Bullet, List */
    List759788 = "LIST759788",
    /** Location, Pin, Navigation */
    Locationpin759883 = "LOCATIONPIN759883",
    /** Lock, Security, Protection */
    Lock759686 = "LOCK759686",
    /** Phone, Secure, Lock */
    Lockphone759690 = "LOCKPHONE759690",
    /** Loss, Down, Graph */
    Loss759310 = "LOSS759310",
    /** Loupe, Search, Magnifying */
    Loupe759460 = "LOUPE759460",
    /** Volume, Low, Sound */
    Lowvolume759807 = "LOWVOLUME759807",
    /** Loyalty, Card, Discount */
    Loyaltycard759864 = "LOYALTYCARD759864",
    /** Auto, Correct, Magic */
    Magicwand759815 = "MAGICWAND759815",
    /** Magnet, Attraction */
    Magnet759592 = "MAGNET759592",
    /** Mail, Email, Message */
    Mail759367 = "MAIL759367",
    /** At, Symbol, Mail */
    Mailsign759899 = "MAILSIGN759899",
    /** Male, Symbol, Gender */
    Malegender759571 = "MALEGENDER759571",
    /** Pirate, Map, Navigation */
    Map759920 = "MAP759920",
    /** Map, Street, Location */
    Map759932 = "MAP759932",
    /** Map, Location, Navigation */
    Map759937 = "MAP759937",
    /** Marijuana, Leaf, Ayurveda */
    Marijuana759568 = "MARIJUANA759568",
    /** Full, Screen, Maximize */
    Maximize759637 = "MAXIMIZE759637",
    /** Measuring, Cup, Jar */
    Measuringcup759530 = "MEASURINGCUP759530",
    /** Medal, Award */
    Medal759291 = "MEDAL759291",
    /** Medical, Symbol, Sign */
    Medicalsign759575 = "MEDICALSIGN759575",
    /** Microphone, Mic, Record */
    Microphone759831 = "MICROPHONE759831",
    /** Microphone, Mic, Record */
    Microphone759833 = "MICROPHONE759833",
    /** Exit, Full, Screen */
    Minimize759633 = "MINIMIZE759633",
    /** Minimize, Screen */
    Minimize759647 = "MINIMIZE759647",
    /** Mixer, Adjustment, Control */
    Mixer759836 = "MIXER759836",
    /** Nest, Egg, Money */
    Money759345 = "MONEY759345",
    /** Money, Bag, Finance */
    Moneybag759343 = "MONEYBAG759343",
    /** Clean, Mop */
    Mop759673 = "MOP759673",
    /** Move, Select */
    Move759646 = "MOVE759646",
    /** Mug, Heart, Coffee */
    Mug759805 = "MUG759805",
    /** Music, Note, Tune */
    Music759838 = "MUSIC759838",
    /** Music, Collection, Album */
    Musicalbum759835 = "MUSICALBUM759835",
    /** Music, Folder, Collection */
    Musicfolder759469 = "MUSICFOLDER759469",
    /** Mute, Sound, Volume */
    Mute759840 = "MUTE759840",
    /** Landscape, Nature, Mountainside */
    Nature759489 = "NATURE759489",
    /** Navigation, Alt, Direction */
    Navigation759922 = "NAVIGATION759922",
    /** Navigation, Direction, Pin */
    Navigation759923 = "NAVIGATION759923",
    /** Network, Hierarchy */
    Network759366 = "NETWORK759366",
    /** Neutral, Face, Emoji */
    Neutralface759889 = "NEUTRALFACE759889",
    /** New, Badge, Sticker */
    New759866 = "NEW759866",
    /** News, Newspaper, Media */
    News759890 = "NEWS759890",
    /** Night, Moon, Star */
    Night759381 = "NIGHT759381",
    /** Night, Time, Mode */
    Nightmode759837 = "NIGHTMODE759837",
    /** No, Entry, Sign */
    Noentry759924 = "NOENTRY759924",
    /** North, Arrow, Direction */
    Northdirection759422 = "NORTHDIRECTION759422",
    /** Notifications */
    Notifications759368 = "NOTIFICATIONS759368",
    /** Business, Office */
    Office759331 = "OFFICE759331",
    /** Phone, Off, Communication */
    Offphone759370 = "OFFPHONE759370",
    /** Olive */
    Olive759532 = "OLIVE759532",
    /** Onesy, Baby, Jumper */
    Onesy759589 = "ONESY759589",
    /** Orange, Fruit */
    Orange759536 = "ORANGE759536",
    /** Outbox, Mailbox, Mail */
    Outbox759804 = "OUTBOX759804",
    /** Outgoing, Call, Phone */
    Outgoingcall759369 = "OUTGOINGCALL759369",
    /** Oven, Kitchen, Appliance */
    Oven759534 = "OVEN759534",
    /** Package, Delivery, Box */
    Package759855 = "PACKAGE759855",
    /** Paintbrush, Paint, Brush */
    Paintbrush759463 = "PAINTBRUSH759463",
    /** Paint, Roller */
    Paintroller759462 = "PAINTROLLER759462",
    /** Palette, Color */
    Palette759465 = "PALETTE759465",
    /** Shredder, Paper, Hardware */
    Papershredder759781 = "PAPERSHREDDER759781",
    /** Download, Product, Parcel */
    Parcel759859 = "PARCEL759859",
    /** Partly, Sunny, Cloud */
    Partlysunny759385 = "PARTLYSUNNY759385",
    /** Passport, Visa, Document */
    Passport759427 = "PASSPORT759427",
    /** Pause, Control, Music */
    Pause759839 = "PAUSE759839",
    /** Chess, Pawn, Game */
    Pawn759282 = "PAWN759282",
    /** Peace, Sign, Symbol */
    Peace759597 = "PEACE759597",
    /** Pen */
    Pen759346 = "PEN759346",
    /** Pen */
    Pen759466 = "PEN759466",
    /** Pencil, Design, Tool */
    Pencil759467 = "PENCIL759467",
    /** Gas, Pump, Petrol */
    Petrolpump759485 = "PETROLPUMP759485",
    /** Phone, Communication, Call */
    Phone759371 = "PHONE759371",
    /** Phone, Ringing, Communication */
    Phone759372 = "PHONE759372",
    /** Cell, Tower, Phone */
    Phonesignal759360 = "PHONESIGNAL759360",
    /** Photobook, Scrape, Book */
    Photobook759841 = "PHOTOBOOK759841",
    /** Photos, Album, Photo */
    Photos759842 = "PHOTOS759842",
    /** Piano, Music, Instrument */
    Piano759843 = "PIANO759843",
    /** Picnic, Table, Bench */
    Picnicbench759538 = "PICNICBENCH759538",
    /** Chart, Pie-chart, Graph */
    Piechart759348 = "PIECHART759348",
    /** Chart, Pie-chart, Graph */
    Piechart759349 = "PIECHART759349",
    /** Piggy, Bank */
    Piggybanking759350 = "PIGGYBANKING759350",
    /** Pill, Medicine, Medical */
    Pill759573 = "PILL759573",
    /** Pills, Medicine */
    Pills759574 = "PILLS759574",
    /** Pingpong, Ping, Pong */
    Pingpong759292 = "PINGPONG759292",
    /** Pizza, Food */
    Pizza759539 = "PIZZA759539",
    /** Play, Music, Player */
    Play759844 = "PLAY759844",
    /** Plug, Cable, Power */
    Plug759498 = "PLUG759498",
    /** Pocket, Knife, Tool */
    Pocketknife759425 = "POCKETKNIFE759425",
    /** Podium, Speaker */
    Podium759352 = "PODIUM759352",
    /** Pointer, Up */
    Pointing759416 = "POINTING759416",
    /** Pointer, Right, Direction */
    Pointing759418 = "POINTING759418",
    /** Poop */
    Poop759596 = "POOP759596",
    /** Popsicle, Candy, Ice-cream */
    Popsicle759540 = "POPSICLE759540",
    /** Portfolio */
    Portfolio759353 = "PORTFOLIO759353",
    /** Portrait, Image, Picture */
    Portrait759845 = "PORTRAIT759845",
    /** Standings, Podium, Position */
    Position759297 = "POSITION759297",
    /** Power, On, Off */
    Power759692 = "POWER759692",
    /** Preferences */
    Preferences759599 = "PREFERENCES759599",
    /** Presentation, Board */
    Presentationboard759309 = "PRESENTATIONBOARD759309",
    /** Presentation, Chart, Board */
    Presentationboard759354 = "PRESENTATIONBOARD759354",
    /** Price, Tag, Label */
    Pricetag759854 = "PRICETAG759854",
    /** Print, Printer, Device */
    Printer759774 = "PRINTER759774",
    /** Print, Printer, Device */
    Printer759775 = "PRINTER759775",
    /** Printer, Device, Equipment */
    Printer759776 = "PRINTER759776",
    /** Privacy, Fence, Security */
    Privacy759694 = "PRIVACY759694",
    /** Profile, User */
    Profile759885 = "PROFILE759885",
    /** Profit, Up, Graph */
    Profit759311 = "PROFIT759311",
    /** Profit, Up, Graph */
    Profit759313 = "PROFIT759313",
    /** Stock, Profit, Up */
    Profit759317 = "PROFIT759317",
    /** Puzzle, Piece */
    Puzzle759314 = "PUZZLE759314",
    /** Quote */
    Quote759434 = "QUOTE759434",
    /** Quote */
    Quote759435 = "QUOTE759435",
    /** Radio, Fm */
    Radio759846 = "RADIO759846",
    /** Rain, Water, Drip */
    Rain759382 = "RAIN759382",
    /** Rain, Cloud, Water */
    Rain759386 = "RAIN759386",
    /** Rating, Half */
    Rating759886 = "RATING759886",
    /** Rating, Review, Feedback */
    Rating759891 = "RATING759891",
    /** Ratings, Review, Feedback */
    Ratings759893 = "RATINGS759893",
    /** Reading, Book, Education */
    Reading759658 = "READING759658",
    /** Receipt, Bill, Invoice */
    Receipt759868 = "RECEIPT759868",
    /** Voice, Assistant, Sound */
    Recording759808 = "RECORDING759808",
    /** Refresh, Reload */
    Refresh759600 = "REFRESH759600",
    /** Cloud, Refresh, Reload */
    Refreshcloud759670 = "REFRESHCLOUD759670",
    /** Cart, Remove, Shopping */
    Removecart759857 = "REMOVECART759857",
    /** Medical, Chart, Report */
    Report759570 = "REPORT759570",
    /** Restaurant, Cutlery, Sign */
    Restaurant759541 = "RESTAURANT759541",
    /** Restaurant, Alt, Cutlery */
    Restaurant759542 = "RESTAURANT759542",
    /** Restaurant, Cutlery, Sign */
    Restaurantsign759544 = "RESTAURANTSIGN759544",
    /** Restricted, Ban, Block */
    Restricted759695 = "RESTRICTED759695",
    /** Ribbon, Aids */
    Ribbon759576 = "RIBBON759576",
    /** Right, Align, Text */
    Rightalign759438 = "RIGHTALIGN759438",
    /** Right, Arrow, Direction */
    Rightarrow759412 = "RIGHTARROW759412",
    /** Right, Down, Arrow */
    Rightdownarrow759413 = "RIGHTDOWNARROW759413",
    /** Road, Traffic, Direction */
    Road759935 = "ROAD759935",
    /** Chess, Rook, Game */
    Rook759283 = "ROOK759283",
    /** Route, Navigation, Location */
    Route759577 = "ROUTE759577",
    /** Router, Modem */
    Router759696 = "ROUTER759696",
    /** Ruler */
    Ruler759436 = "RULER759436",
    /** Rulers, Tool, Scale */
    Rulers759440 = "RULERS759440",
    /** Running, Exercise, Health */
    Running759578 = "RUNNING759578",
    /** Sad, Face, Emoji */
    Sad759894 = "SAD759894",
    /** Sale, Badge, Sticker */
    Sale759869 = "SALE759869",
    /** Sandals, Flipflop */
    Sandals759426 = "SANDALS759426",
    /** Sat, Dish, Satellite */
    Satellite759374 = "SATELLITE759374",
    /** Scales, Balance, Justice */
    Scales759315 = "SCALES759315",
    /** Cut, Scissor */
    Scissor759454 = "SCISSOR759454",
    /** Search, Tool, Zoom */
    Search759604 = "SEARCH759604",
    /** Cloud, Secure, Lock */
    Securecloud759668 = "SECURECLOUD759668",
    /** Computer, Secure, Device */
    Securecomputer759680 = "SECURECOMPUTER759680",
    /** Locked, Folder, Collection */
    Securefolder759474 = "SECUREFOLDER759474",
    /** Secure, Home, House */
    Securehome759595 = "SECUREHOME759595",
    /** Phone, Secure, Lock */
    Securephone759691 = "SECUREPHONE759691",
    /** Seeds, Gardening, Garden */
    Seeds759496 = "SEEDS759496",
    /** Send, Mail, Communication */
    Sendmail759375 = "SENDMAIL759375",
    /** Servers, Hard-disk, Database */
    Servers759697 = "SERVERS759697",
    /** Settings, Optimization, Preferences */
    Settings759601 = "SETTINGS759601",
    /** Share */
    Share759607 = "SHARE759607",
    /** Share, Data, File */
    Share759617 = "SHARE759617",
    /** Team, Share */
    Share759777 = "SHARE759777",
    /** Network, Share, Communication */
    Share759884 = "SHARE759884",
    /** Shield, Security, Protection */
    Shield759698 = "SHIELD759698",
    /** Shocked, Face, Emoji */
    Shockedface759892 = "SHOCKEDFACE759892",
    /** Shooting, Star */
    Shootingstar759383 = "SHOOTINGSTAR759383",
    /** Shop, Shopping, Store */
    Shopping759871 = "SHOPPING759871",
    /** Shopping, Bag, Handbag */
    Shoppingbag759872 = "SHOPPINGBAG759872",
    /** Shopping, Tote, Bag */
    Shoppingbag759874 = "SHOPPINGBAG759874",
    /** Shopping, Bag, Heart */
    Shoppingbag759875 = "SHOPPINGBAG759875",
    /** Shopping, Basket, Wishlist */
    Shoppingbasket759873 = "SHOPPINGBASKET759873",
    /** Cart, Shopping, Ecommerce */
    Shoppingcart759852 = "SHOPPINGCART759852",
    /** Secure, Shield, Shopping */
    Shoppinginsurance759870 = "SHOPPINGINSURANCE759870",
    /** Signature */
    Signature759316 = "SIGNATURE759316",
    /** Alarm, Silent, Mute */
    Silent759616 = "SILENT759616",
    /** Skull, Ghost */
    Skull759547 = "SKULL759547",
    /** Sleep, Sleeping */
    Sleep759552 = "SLEEP759552",
    /** Smartphone, Phone, Mobile */
    Smartphone759701 = "SMARTPHONE759701",
    /** Smartwatch, Wristwatch, Time */
    Smartwatch759376 = "SMARTWATCH759376",
    /** Alarm, Snooze, Notification */
    Snoozealarm759618 = "SNOOZEALARM759618",
    /** Snow, Snowfall, Weather */
    Snowfall759387 = "SNOWFALL759387",
    /** Snowflake */
    Snowflake759384 = "SNOWFLAKE759384",
    /** Softdrink, Cup, Drink */
    Softdrink759545 = "SOFTDRINK759545",
    /** Solar, Panel, Energy */
    Solarpanel759497 = "SOLARPANEL759497",
    /** Sound, Wave */
    Soundwave759848 = "SOUNDWAVE759848",
    /** Soup, Bowl */
    Soup759543 = "SOUP759543",
    /** Spatula, Tool, Kitchen */
    Spatula759546 = "SPATULA759546",
    /** Speaker, Music, Sound */
    Speaker759849 = "SPEAKER759849",
    /** Chat, Bolt, Speed */
    Speedchat759908 = "SPEEDCHAT759908",
    /** Splat, Splash */
    Splat759441 = "SPLAT759441",
    /** Sprayer, Spray, Toolcolor */
    Spray759442 = "SPRAY759442",
    /** Square */
    Square = "SQUARE",
    /** Stairs, Down, Steps */
    Stairs759414 = "STAIRS759414",
    /** Stairs, Up */
    Stairs759417 = "STAIRS759417",
    /** Stamp */
    Stamp759443 = "STAMP759443",
    /** Star, Badge */
    Star759813 = "STAR759813",
    /** Rating, Star, Review */
    Star759887 = "STAR759887",
    /** Stars */
    Stars759388 = "STARS759388",
    /** Steps, Foot, Footsteps */
    Steps759548 = "STEPS759548",
    /** Stethoscope, Medical, Tool */
    Stethoscope759550 = "STETHOSCOPE759550",
    /** Post, It, Sticky */
    Stickynotes759779 = "STICKYNOTES759779",
    /** Stop, Sign, Symbol */
    Stop759926 = "STOP759926",
    /** Stoplight, Traffic, Light */
    Stoplight759921 = "STOPLIGHT759921",
    /** Strategy, Tactics */
    Strategy759289 = "STRATEGY759289",
    /** Chess, Piece, Strategy */
    Strategy759332 = "STRATEGY759332",
    /** Strawberry, Fruit, Sweet */
    Strawberry759513 = "STRAWBERRY759513",
    /** Stroller, Baby */
    Stroller759876 = "STROLLER759876",
    /** Student, Study, Education */
    Student759661 = "STUDENT759661",
    /** Suitcase, Briefcase, Luggage */
    Suitcase759424 = "SUITCASE759424",
    /** Sun, Weather, Summer */
    Sun759389 = "SUN759389",
    /** Happy, Sun */
    Sun759488 = "SUN759488",
    /** Sunrise, Nature */
    Sunrise759390 = "SUNRISE759390",
    /** Sunset, Sun, Weather */
    Sunset759395 = "SUNSET759395",
    /** Supplies, Ruler, Tool */
    Supplies759662 = "SUPPLIES759662",
    /** Suv, Car, Transportation */
    Suv759928 = "SUV759928",
    /** Swatch */
    Swatch759437 = "SWATCH759437",
    /** Swatchbook, Color, Theme */
    Swatchbook759444 = "SWATCHBOOK759444",
    /** Swimming, Sport */
    Swimming759549 = "SWIMMING759549",
    /** Swipe, Left, Gesture */
    Swipe759605 = "SWIPE759605",
    /** Off, Switch, Energy */
    Switch759500 = "SWITCH759500",
    /** Switch, Electric */
    Switch759501 = "SWITCH759501",
    /** On, Off, Switch */
    Switch759648 = "SWITCH759648",
    /** Sword, Game */
    Sword759294 = "SWORD759294",
    /** Sync, Folder, Collection */
    Syncfolder759472 = "SYNCFOLDER759472",
    /** Sync, Synchronize */
    Synchronize759608 = "SYNCHRONIZE759608",
    /** Cloud, Sync, Synchronize */
    Synchronizecloud759674 = "SYNCHRONIZECLOUD759674",
    /** Tablet, Device */
    Tablet759699 = "TABLET759699",
    /** Tag, Label */
    Tag759895 = "TAG759895",
    /** Tags, Label, Bookmark */
    Tags759850 = "TAGS759850",
    /** Coffee, Cup, Takeaway */
    Takeawaycoffee759518 = "TAKEAWAYCOFFEE759518",
    /** Tally */
    Tally759296 = "TALLY759296",
    /** Target, Aim, Goal */
    Target759293 = "TARGET759293",
    /** Location, Target */
    Target759918 = "TARGET759918",
    /** Taxi, Cab */
    Taxi759925 = "TAXI759925",
    /** Temperature, Weather, Forecast */
    Temperature759551 = "TEMPERATURE759551",
    /** Tennis, Ball, Game */
    Tennisball759298 = "TENNISBALL759298",
    /** Text, Tool, Font */
    Text759445 = "TEXT759445",
    /** Text, Document, File */
    Text759476 = "TEXT759476",
    /** Thermometer, Temperature, Weather */
    Thermometer759392 = "THERMOMETER759392",
    /** Thermometer, Temperature */
    Thermometer759396 = "THERMOMETER759396",
    /** Thought, Bubble, Thinking */
    Thinking759660 = "THINKING759660",
    /** Pin, Thumbpin */
    Thumbpin759778 = "THUMBPIN759778",
    /** Thunder, Cloud, Weather */
    Thunder759391 = "THUNDER759391",
    /** Lightning, Bolt, Thunder */
    Thunder759484 = "THUNDER759484",
    /** Tie */
    Tie759319 = "TIE759319",
    /** Camera, Timer */
    Timer759824 = "TIMER759824",
    /** Toolbox, Tool, Kit */
    Toolbox759594 = "TOOLBOX759594",
    /** Tools, Construction, Repair */
    Tools759700 = "TOOLS759700",
    /** Tornado, Storm */
    Tornado759397 = "TORNADO759397",
    /** Toy, Car, Vehicle */
    Toycar759659 = "TOYCAR759659",
    /** Tractor, Transport, Vehicle */
    Tractor759929 = "TRACTOR759929",
    /** Train, Transport, Railway */
    Train759931 = "TRAIN759931",
    /** Transfer, Up, Down */
    Transfer759318 = "TRANSFER759318",
    /** Trashcan, Trash, Can */
    Trashcan759784 = "TRASHCAN759784",
    /** Tree, Pine, Nature */
    Tree759495 = "TREE759495",
    /** Tree, Nature, Plant */
    Tree759503 = "TREE759503",
    /** Trending, Up, Profit */
    Trending759320 = "TRENDING759320",
    /** Trending, Progress, Growth */
    Trending759896 = "TRENDING759896",
    /** Trophy, Winner, Prize */
    Trophy759303 = "TROPHY759303",
    /** Truck, Vehicle, Transport */
    Truck759936 = "TRUCK759936",
    /** Tshirt, Cloth, Wear */
    Tshirt759588 = "TSHIRT759588",
    /** Tweet, Social, Message */
    Tweet759897 = "TWEET759897",
    /** Umbrella, Protection, Safety */
    Umbrella759398 = "UMBRELLA759398",
    /** Unlocked, Unlock, Security */
    Unlock759702 = "UNLOCK759702",
    /** Up, Direction, Arrow */
    Up759400 = "UP759400",
    /** Up, Right, Arrow */
    Up759420 = "UP759420",
    /** Navigate, Up, Direction */
    Uparrow759408 = "UPARROW759408",
    /** Up, Arrow, Direction */
    Uparrow759421 = "UPARROW759421",
    /** Upload, File, Data */
    Upload759703 = "UPLOAD759703",
    /** Upload, Folder, Collection */
    Uploadfolder759477 = "UPLOADFOLDER759477",
    /** Cloud, Upload, Data */
    Uploadtocloud759669 = "UPLOADTOCLOUD759669",
    /** Usa, Flag, Country */
    Usaflag759593 = "USAFLAG759593",
    /** Safe, Vault, Locker */
    Vault759312 = "VAULT759312",
    /** Vector, Tool */
    Vector759446 = "VECTOR759446",
    /** Video, Camera, Multimedia */
    Videocamera759806 = "VIDEOCAMERA759806",
    /** Video, Camera, Multimedia */
    Videocamera759809 = "VIDEOCAMERA759809",
    /** Movie, Camera, Video */
    Videocamera759834 = "VIDEOCAMERA759834",
    /** Video, Chat */
    Videochat759359 = "VIDEOCHAT759359",
    /** View, Eye, Filter */
    View759447 = "VIEW759447",
    /** View, Eye, Vision */
    View759606 = "VIEW759606",
    /** Voicemail, Record */
    Voicemail759356 = "VOICEMAIL759356",
    /** Volleyball, Ball, Game */
    Volleyball759302 = "VOLLEYBALL759302",
    /** Volume, Audio, Speaker */
    Volume759810 = "VOLUME759810",
    /** Wallet, Purse */
    Wallet759321 = "WALLET759321",
    /** Water, Drop */
    Waterdrop759504 = "WATERDROP759504",
    /** Watermellon, Fruit, Sweet */
    Watermellon759514 = "WATERMELLON759514",
    /** Camera, Video, Webcam */
    Webcam759355 = "WEBCAM759355",
    /** Weight, Scale, Kg */
    Weight759555 = "WEIGHT759555",
    /** Food, Scale, Weight */
    Weightscale759526 = "WEIGHTSCALE759526",
    /** Weight, Scale, Measurement */
    Weightscale759554 = "WEIGHTSCALE759554",
    /** Wheelchair, Active, Disabled */
    Wheelchair759556 = "WHEELCHAIR759556",
    /** Whistle */
    Whistle759304 = "WHISTLE759304",
    /** Wind, Weather */
    Wind759399 = "WIND759399",
    /** Windsock, Wind, Direction */
    Winddirection759377 = "WINDDIRECTION759377",
    /** Wind, Turbine, Windmill */
    Windmill759505 = "WINDMILL759505",
    /** Wine, Drink, Glass */
    Wine759515 = "WINE759515",
    /** Wink, Face, Emoji */
    Wink759898 = "WINK759898",
    /** Winter, Water, Drop */
    Winter759378 = "WINTER759378",
    /** Wisk, Mixer */
    Wisk759510 = "WISK759510",
    /** Wrench, Tool, Repair */
    Wrench759609 = "WRENCH759609",
    /** Watch, Wristwatch, Clock */
    Wristwatch759672 = "WRISTWATCH759672",
    /** Ying, Yang, Spinner */
    Yingyang759558 = "YINGYANG759558",
    /** Youtube, Video */
    Youtube759812 = "YOUTUBE759812",
    /** Zoom, Search, Tool */
    Zoom759448 = "ZOOM759448",
    /** Zoom, In, Zoomin */
    Zoomin759613 = "ZOOMIN759613",
    /** Zoom, Out, Zoomout */
    Zoomout759612 = "ZOOMOUT759612"
}
/** An identity provider. */
export type IdentityProvider = AccessloggableInterface & LoggableInterface & {
    __typename: 'IdentityProvider';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The Auth0 connection ID. */
    auth0_connection_id?: Maybe<Scalars['String']['output']>;
    /** Name of connection in Auth0. */
    auth0_connection_name?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The display name. */
    display_name: Scalars['String']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Details regarding an ActiveDirectory `IdentityProvider`. */
    identity_provider_active_directory_detail?: Maybe<IdentityProviderActiveDirectoryDetail>;
    /** Details regarding a Google `IdentityProvider`. */
    identity_provider_google_detail?: Maybe<IdentityProviderGoogleDetail>;
    /** Details regarding a Microsoft `IdentityProvider`. */
    identity_provider_microsoft_detail?: Maybe<IdentityProviderMicrosoftDetail>;
    /** Details regarding a SAML `IdentityProvider`. */
    identity_provider_saml_detail?: Maybe<IdentityProviderSamlDetail>;
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The type. */
    type: IdentityProviderType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An identity provider. */
export type IdentityProviderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An identity provider. */
export type IdentityProviderIdentity_Provider_Active_Directory_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    cert_auth?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disable_cache?: InputMaybe<Scalars['Boolean']['input']>;
    domain_aliases?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon_url?: InputMaybe<Scalars['URL']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ips?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    kerberos?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_url?: InputMaybe<Scalars['URL']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An identity provider. */
export type IdentityProviderIdentity_Provider_Google_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    client_id?: InputMaybe<Scalars['String']['input']>;
    client_secret?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An identity provider. */
export type IdentityProviderIdentity_Provider_Microsoft_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    client_id?: InputMaybe<Scalars['String']['input']>;
    client_secret?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An identity provider. */
export type IdentityProviderIdentity_Provider_Saml_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth_domains?: InputMaybe<Scalars['String']['input']>;
    certificate?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debug?: InputMaybe<Scalars['Boolean']['input']>;
    digest_algorithm?: InputMaybe<SamlDigestAlgorithm>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    protocol_binding?: InputMaybe<SamlProtocolBinding>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sign_in_endpoint?: InputMaybe<Scalars['URL']['input']>;
    sign_out_endpoint?: InputMaybe<Scalars['URL']['input']>;
    sign_saml_request?: InputMaybe<Scalars['Boolean']['input']>;
    signature_algorithm?: InputMaybe<SamlSignatureAlgorithm>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id_attribute?: InputMaybe<Scalars['URL']['input']>;
};
/** An identity provider. */
export type IdentityProviderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding an ActiveDirectory `IdentityProvider`. */
export type IdentityProviderActiveDirectoryDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'IdentityProviderActiveDirectoryDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether to use client SSL certificate authentication or not. */
    cert_auth: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether to disable the cache or not. */
    disable_cache: Scalars['Boolean']['output'];
    /** The list of domains that can be authenticated. */
    domain_aliases?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
    /** The ActiveDirectory icon URL. */
    icon_url?: Maybe<Scalars['URL']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An identity provider. */
    identity_provider?: Maybe<IdentityProvider>;
    /** The ID of an `IdentityProvider`. */
    identity_provider_id: Scalars['Int64Bit']['output'];
    /** The range of IPs with which to use Windows Integrated Auth (Kerberos). */
    ips?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
    /** Whether to use Windows Integrated Auth (Kerberos) or not. */
    kerberos: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The ActiveDirectory provisioning ticket URL. */
    ticket_url?: Maybe<Scalars['URL']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Details regarding an ActiveDirectory `IdentityProvider`. */
export type IdentityProviderActiveDirectoryDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding an ActiveDirectory `IdentityProvider`. */
export type IdentityProviderActiveDirectoryDetailIdentity_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth0_connection_id?: InputMaybe<Scalars['String']['input']>;
    auth0_connection_name?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_name?: InputMaybe<Scalars['String']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<IdentityProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Details regarding an ActiveDirectory `IdentityProvider`. */
export type IdentityProviderActiveDirectoryDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding an ActiveDirectory `IdentityProvider`. */
export type IdentityProviderActiveDirectoryDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `IdentityProviderActiveDirectoryDetailConnection` type. */
export type IdentityProviderActiveDirectoryDetailConnection = {
    __typename: 'IdentityProviderActiveDirectoryDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IdentityProviderActiveDirectoryDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `IdentityProviderConnection` type. */
export type IdentityProviderConnection = {
    __typename: 'IdentityProviderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IdentityProvider>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details regarding a Google `IdentityProvider`. */
export type IdentityProviderGoogleDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'IdentityProviderGoogleDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The client ID for this identity provider. */
    client_id: Scalars['String']['output'];
    /** The client secret for this identity provider. */
    client_secret: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An identity provider. */
    identity_provider?: Maybe<IdentityProvider>;
    /** The ID of an `IdentityProvider`. */
    identity_provider_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Details regarding a Google `IdentityProvider`. */
export type IdentityProviderGoogleDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a Google `IdentityProvider`. */
export type IdentityProviderGoogleDetailIdentity_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth0_connection_id?: InputMaybe<Scalars['String']['input']>;
    auth0_connection_name?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_name?: InputMaybe<Scalars['String']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<IdentityProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Details regarding a Google `IdentityProvider`. */
export type IdentityProviderGoogleDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a Google `IdentityProvider`. */
export type IdentityProviderGoogleDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `IdentityProviderGoogleDetailConnection` type. */
export type IdentityProviderGoogleDetailConnection = {
    __typename: 'IdentityProviderGoogleDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IdentityProviderGoogleDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details regarding a Microsoft `IdentityProvider`. */
export type IdentityProviderMicrosoftDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'IdentityProviderMicrosoftDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The client ID for this identity provider. */
    client_id: Scalars['String']['output'];
    /** The client secret for this identity provider. */
    client_secret: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An identity provider. */
    identity_provider?: Maybe<IdentityProvider>;
    /** The ID of an `IdentityProvider`. */
    identity_provider_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Details regarding a Microsoft `IdentityProvider`. */
export type IdentityProviderMicrosoftDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a Microsoft `IdentityProvider`. */
export type IdentityProviderMicrosoftDetailIdentity_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth0_connection_id?: InputMaybe<Scalars['String']['input']>;
    auth0_connection_name?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_name?: InputMaybe<Scalars['String']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<IdentityProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Details regarding a Microsoft `IdentityProvider`. */
export type IdentityProviderMicrosoftDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a Microsoft `IdentityProvider`. */
export type IdentityProviderMicrosoftDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `IdentityProviderMicrosoftDetailConnection` type. */
export type IdentityProviderMicrosoftDetailConnection = {
    __typename: 'IdentityProviderMicrosoftDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IdentityProviderMicrosoftDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details regarding a SAML `IdentityProvider`. */
export type IdentityProviderSamlDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'IdentityProviderSamlDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Authentication domains. */
    auth_domains: Scalars['String']['output'];
    /** The X.509 signing certificate contents. */
    certificate: Scalars['Text']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether to include more verbose logging during the authentication process or not. */
    debug: Scalars['Boolean']['output'];
    /** The sign request algorithm digest. */
    digest_algorithm: SamlDigestAlgorithm;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An identity provider. */
    identity_provider?: Maybe<IdentityProvider>;
    /** The ID of an `IdentityProvider`. */
    identity_provider_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The SAML protocol binding. */
    protocol_binding: SamlProtocolBinding;
    /** The SAML sign in URL. */
    sign_in_endpoint: Scalars['URL']['output'];
    /** The SAML sign out URL. */
    sign_out_endpoint?: Maybe<Scalars['URL']['output']>;
    /** Whether to sign the SAML request or not. */
    sign_saml_request: Scalars['Boolean']['output'];
    /** The sign request algorithm. */
    signature_algorithm: SamlSignatureAlgorithm;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The attribute in the SAML token that will be mapped to the user_id property. */
    user_id_attribute?: Maybe<Scalars['URL']['output']>;
};
/** Details regarding a SAML `IdentityProvider`. */
export type IdentityProviderSamlDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a SAML `IdentityProvider`. */
export type IdentityProviderSamlDetailIdentity_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth0_connection_id?: InputMaybe<Scalars['String']['input']>;
    auth0_connection_name?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_name?: InputMaybe<Scalars['String']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<IdentityProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Details regarding a SAML `IdentityProvider`. */
export type IdentityProviderSamlDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a SAML `IdentityProvider`. */
export type IdentityProviderSamlDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `IdentityProviderSamlDetailConnection` type. */
export type IdentityProviderSamlDetailConnection = {
    __typename: 'IdentityProviderSamlDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IdentityProviderSamlDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of identity provider. */
export declare enum IdentityProviderType {
    /** Active Directory. */
    ActiveDirectory = "ACTIVE_DIRECTORY",
    /** Google. */
    Google = "GOOGLE",
    /** Microsoft. */
    Microsoft = "MICROSOFT",
    /** SAML. */
    Saml = "SAML"
}
/** An import. */
export type Import = AccessloggableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'Import';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The last date and time this entity was updated, or was the subject of a log. */
    global_updated_at?: Maybe<Scalars['Datetime']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The recipe for this `Import`. */
    importrecipeable?: Maybe<ImportrecipeableInterface>;
    /** The ID of the entity that owns this import. */
    importrecipeable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that owns this import. */
    importrecipeable_type: ImportrecipeableType;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An import. */
export type ImportAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import. */
export type ImportImportrecipeableArgs = {
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import. */
export type ImportLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import. */
export type ImportNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import. */
export type ImportNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `ImportConnection` type. */
export type ImportConnection = {
    __typename: 'ImportConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Import>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Import credentials for use with Flatfile. */
export type ImportCredentialsFlatfile = {
    __typename: 'ImportCredentialsFlatfile';
    /** A JSON Web Token. */
    jwt: Scalars['Text']['output'];
    /** The type of entity to be imported. */
    type: ImportableType;
};
/** The status of an import. */
export declare enum ImportStatus {
    /** The import is a duplicate of a previously completed import. */
    Duplicate = "DUPLICATE",
    /** The import has failed. */
    Failed = "FAILED",
    /** The import is not valid. */
    Invalid = "INVALID",
    /** The import is running. */
    InProgress = "IN_PROGRESS",
    /** The import is pending. */
    Pending = "PENDING",
    /** The import is queued for processing. */
    Queued = "QUEUED",
    /** The import has successfully completed. */
    Successful = "SUCCESSFUL",
    /** The user is not authorized to access this data. */
    Unauthorized = "UNAUTHORIZED"
}
/** The type of entity to be imported. */
export declare enum ImportableType {
    /** A call detail record (CDR). */
    CallDetailRecord = "CallDetailRecord",
    /** A direct inward dial (DID). */
    Did = "Did",
    /** A voice provider rate. */
    VoiceProviderRate = "VoiceProviderRate"
}
/** An entity that defines the recipe for an `Import`. */
export type ImportrecipeableInterface = {
    /** How many records passed validation checks during import. */
    clean_records?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Any errors encountered for this import. */
    errors?: Maybe<Scalars['Clob']['output']>;
    /** How many records did not pass validation checks during import. */
    failed_records?: Maybe<Scalars['Int']['output']>;
    /** The identifier of a unique batch at Flatfile. */
    flatfile_batch_identifier?: Maybe<Scalars['String']['output']>;
    /** A hash of the data content of an import. */
    hash?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The progress of an import as a percentage. */
    progress?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start date and time for the import. */
    start_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** The status. */
    status: ImportStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** The entity that this `Import` is associated with. */
export declare enum ImportrecipeableType {
    /** A recipe for importing call detail records (CDRs). */
    CallDetailRecordImportRecipe = "CallDetailRecordImportRecipe",
    /** A recipe for importing DIDs. */
    DidImportRecipe = "DidImportRecipe",
    /** A recipe for importing voice provider rates. */
    VoiceProviderRateImportRecipe = "VoiceProviderRateImportRecipe"
}
/** An inbound mailbox. */
export type InboundMailbox = AccessloggableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'InboundMailbox';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether or not to append a signature. */
    append_signature: Scalars['Boolean']['output'];
    /** The auto reply to send. */
    auto_reply?: Maybe<Scalars['Text']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email domain. */
    email_domain?: Maybe<EmailDomain>;
    /** The ID of an `EmailDomain`. */
    email_domain_id: Scalars['Int64Bit']['output'];
    /** Whether or not to enable Slack integration. */
    enable_slack_integration: Scalars['Boolean']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The mailbox email is sent from. */
    from_mailbox: Scalars['String']['output'];
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The inbound mailbox. */
    inbound_mailbox: Scalars['String']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** Whether the email body should be posted to Slack, or just the email subject. */
    post_email_body_to_slack?: Maybe<Scalars['Boolean']['output']>;
    /** The priority of this item. */
    priority: TicketPriority;
    /** Whether or not an auto reply should be sent. */
    send_auto_reply: Scalars['Boolean']['output'];
    /** The signature to append. You can include `[PUBLIC_NAME]` as a variable to insert the user's public name when the signature is appended. */
    signature?: Maybe<Scalars['Text']['output']>;
    /** The URL of a Slack webhook. You can generate one at https://my.slack.com/services/new/incoming-webhook. */
    slack_webhook_url?: Maybe<Scalars['URL']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The ID of a `TicketGroup`. */
    ticket_group_id: Scalars['Int64Bit']['output'];
    /** A ticket. */
    tickets: TicketConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An inbound mailbox. */
export type InboundMailboxAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inbound mailbox. */
export type InboundMailboxEmail_DomainArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dkim?: InputMaybe<Scalars['Boolean']['input']>;
    dns_requirements?: InputMaybe<Scalars['String']['input']>;
    domain?: InputMaybe<Scalars['DomainName']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ready_for_migration?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spf?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    verified?: InputMaybe<Scalars['Boolean']['input']>;
};
/** An inbound mailbox. */
export type InboundMailboxLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inbound mailbox. */
export type InboundMailboxNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inbound mailbox. */
export type InboundMailboxNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inbound mailbox. */
export type InboundMailboxTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InboundMailboxConnection` type. */
export type InboundMailboxConnection = {
    __typename: 'InboundMailboxConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InboundMailbox>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An indexed model type. */
export declare enum IndexedModelType {
    AccessLog = "AccessLog",
    Account = "Account",
    AccountBillingParameter = "AccountBillingParameter",
    AccountCalixServiceDetail = "AccountCalixServiceDetail",
    AccountEvent = "AccountEvent",
    AccountGroup = "AccountGroup",
    AccountService = "AccountService",
    AccountStatus = "AccountStatus",
    AccountType = "AccountType",
    AccountVoiceServiceDetail = "AccountVoiceServiceDetail",
    AchBatch = "AchBatch",
    Address = "Address",
    AddressList = "AddressList",
    AddressStatus = "AddressStatus",
    AdjustmentServiceDetail = "AdjustmentServiceDetail",
    AlertingRotation = "AlertingRotation",
    AlertingRotationDay = "AlertingRotationDay",
    AlertingRotationInventoryItem = "AlertingRotationInventoryItem",
    ApplicationFirewallRule = "ApplicationFirewallRule",
    AuthProvider = "AuthProvider",
    AvalaraTaxCategory = "AvalaraTaxCategory",
    AvalaraTaxDefinition = "AvalaraTaxDefinition",
    BankAccount = "BankAccount",
    BankAccountProcessor = "BankAccountProcessor",
    BankAccountProcessorCredential = "BankAccountProcessorCredential",
    BillingDefault = "BillingDefault",
    BillingService = "BillingService",
    BillingSetting = "BillingSetting",
    CableModemProvisioner = "CableModemProvisioner",
    CableModemProvisionerCredential = "CableModemProvisionerCredential",
    CalendarIcal = "CalendarIcal",
    CalixIntegration = "CalixIntegration",
    CallDataRecord = "CallDataRecord",
    CallDataRecordImport = "CallDataRecordImport",
    CallDetailRecord = "CallDetailRecord",
    CallDetailRecordImport = "CallDetailRecordImport",
    CallDetailRecordImportRecipe = "CallDetailRecordImportRecipe",
    CallLog = "CallLog",
    CannedReply = "CannedReply",
    CannedReplyCategory = "CannedReplyCategory",
    Company = "Company",
    CompanyDepartment = "CompanyDepartment",
    Contact = "Contact",
    Contract = "Contract",
    ContractTemplate = "ContractTemplate",
    Credit = "Credit",
    CreditCard = "CreditCard",
    CreditCardProcessor = "CreditCardProcessor",
    CreditCardProcessorCredential = "CreditCardProcessorCredential",
    CustomField = "CustomField",
    CustomFieldData = "CustomFieldData",
    DailyAggregateValue = "DailyAggregateValue",
    DataServiceDetail = "DataServiceDetail",
    DataUsageHistory = "DataUsageHistory",
    DataUsageTopOff = "DataUsageTopOff",
    Debit = "Debit",
    DelinquencyExclusion = "DelinquencyExclusion",
    Department = "Department",
    DeploymentType = "DeploymentType",
    DepositSlip = "DepositSlip",
    DeviceInterfaceMapping = "DeviceInterfaceMapping",
    DhcpServer = "DhcpServer",
    DhcpServerCredential = "DhcpServerCredential",
    DhcpServerIdentifier = "DhcpServerIdentifier",
    Did = "Did",
    DidAssignment = "DidAssignment",
    DidAssignmentHistory = "DidAssignmentHistory",
    DidImportRecipe = "DidImportRecipe",
    Disbursement = "Disbursement",
    DisbursementDetail = "DisbursementDetail",
    DisconnectionLog = "DisconnectionLog",
    Discount = "Discount",
    Email = "Email",
    EmailCategory = "EmailCategory",
    EmailClick = "EmailClick",
    EmailDomain = "EmailDomain",
    EmailLocation = "EmailLocation",
    EmailMessage = "EmailMessage",
    EmailMessageContent = "EmailMessageContent",
    EmailOpen = "EmailOpen",
    Epc = "Epc",
    ExpiringServiceDetail = "ExpiringServiceDetail",
    ExternalMarketingProvider = "ExternalMarketingProvider",
    ExternalMarketingProviderCredential = "ExternalMarketingProviderCredential",
    FccForm477Report = "FccForm477Report",
    FibermapIntegration = "FibermapIntegration",
    FibermapPlan = "FibermapPlan",
    FibermapServiceLocation = "FibermapServiceLocation",
    File = "File",
    FractionalDebit = "FractionalDebit",
    FractionalTaxTransaction = "FractionalTaxTransaction",
    GeneralLedgerCode = "GeneralLedgerCode",
    GenericInventoryAssignee = "GenericInventoryAssignee",
    GenericInventoryItem = "GenericInventoryItem",
    GenericInventoryItemActionLog = "GenericInventoryItemActionLog",
    GeoTaxZone = "GeoTaxZone",
    Geofence = "Geofence",
    GlobalInventoryModelMinMax = "GlobalInventoryModelMinMax",
    GpsTrackingProvider = "GpsTrackingProvider",
    GpsTrackingProviderCredential = "GpsTrackingProviderCredential",
    HandwrittenSignature = "HandwrittenSignature",
    IdentityProvider = "IdentityProvider",
    IdentityProviderActiveDirectoryDetail = "IdentityProviderActiveDirectoryDetail",
    IdentityProviderGoogleDetail = "IdentityProviderGoogleDetail",
    IdentityProviderMicrosoftDetail = "IdentityProviderMicrosoftDetail",
    IdentityProviderSamlDetail = "IdentityProviderSamlDetail",
    Import = "Import",
    InboundMailbox = "InboundMailbox",
    InlineDevice = "InlineDevice",
    InlineDeviceCredential = "InlineDeviceCredential",
    InstanceManagementRequest = "InstanceManagementRequest",
    IntegrationFieldMapping = "IntegrationFieldMapping",
    IntegrationServiceMapping = "IntegrationServiceMapping",
    InternalLocation = "InternalLocation",
    InventoryItem = "InventoryItem",
    InventoryItemEvent = "InventoryItemEvent",
    InventoryLocation = "InventoryLocation",
    InventoryModel = "InventoryModel",
    InventoryModelCategory = "InventoryModelCategory",
    InventoryModelField = "InventoryModelField",
    InventoryModelFieldData = "InventoryModelFieldData",
    InventoryModelMinMax = "InventoryModelMinMax",
    Invoice = "Invoice",
    InvoiceAttachment = "InvoiceAttachment",
    InvoiceMessage = "InvoiceMessage",
    IpAssignment = "IpAssignment",
    IpAssignmentHistory = "IpAssignmentHistory",
    IpPool = "IpPool",
    Job = "Job",
    JobCheckIn = "JobCheckIn",
    JobService = "JobService",
    JobType = "JobType",
    LocalPrefix = "LocalPrefix",
    Log = "Log",
    LookerExploreLicense = "LookerExploreLicense",
    LookerViewLicense = "LookerViewLicense",
    LteProvider = "LteProvider",
    LteProviderCredential = "LteProviderCredential",
    Manufacturer = "Manufacturer",
    MapOverlay = "MapOverlay",
    MassEmail = "MassEmail",
    MessageCategory = "MessageCategory",
    MonthlyBillingCompletion = "MonthlyBillingCompletion",
    NetflowAllowedSubnet = "NetflowAllowedSubnet",
    NetflowEndpoint = "NetflowEndpoint",
    NetflowWhitelist = "NetflowWhitelist",
    NetworkMonitoringGraph = "NetworkMonitoringGraph",
    NetworkMonitoringTemplate = "NetworkMonitoringTemplate",
    NetworkSite = "NetworkSite",
    NetworkSiteServiceableAddressList = "NetworkSiteServiceableAddressList",
    NonInventoryItem = "NonInventoryItem",
    Note = "Note",
    Notification = "Notification",
    NotificationSetting = "NotificationSetting",
    OrderGroup = "OrderGroup",
    OrderGroupUser = "OrderGroupUser",
    OverageServiceDetail = "OverageServiceDetail",
    Package = "Package",
    PackageService = "PackageService",
    PasswordPolicy = "PasswordPolicy",
    PayPalCredential = "PayPalCredential",
    Payment = "Payment",
    PhoneNumber = "PhoneNumber",
    PhoneNumberType = "PhoneNumberType",
    Poller = "Poller",
    PollerSetting = "PollerSetting",
    Preseem = "Preseem",
    PrintToMailBatch = "PrintToMailBatch",
    PrintToMailOrder = "PrintToMailOrder",
    PrintToMailOrderError = "PrintToMailOrderError",
    PrintToMailSetting = "PrintToMailSetting",
    PrintedInvoiceBatch = "PrintedInvoiceBatch",
    PurchaseOrder = "PurchaseOrder",
    PurchaseOrderItem = "PurchaseOrderItem",
    RadiusAccount = "RadiusAccount",
    RadiusGroup = "RadiusGroup",
    RadiusGroupReplyAttribute = "RadiusGroupReplyAttribute",
    RadiusServer = "RadiusServer",
    RadiusServerCredential = "RadiusServerCredential",
    RadiusSessionHistory = "RadiusSessionHistory",
    RateCenter = "RateCenter",
    RecentItem = "RecentItem",
    RecurringServiceDetail = "RecurringServiceDetail",
    RefundedPayment = "RefundedPayment",
    ReversedPayment = "ReversedPayment",
    Role = "Role",
    SavedMessageCategory = "SavedMessageCategory",
    ScheduleAddress = "ScheduleAddress",
    ScheduleAvailability = "ScheduleAvailability",
    ScheduleAvailabilityDayTime = "ScheduleAvailabilityDayTime",
    ScheduleBlocker = "ScheduleBlocker",
    ScheduleBlockerDayTime = "ScheduleBlockerDayTime",
    ScheduleBlockerOverride = "ScheduleBlockerOverride",
    ScheduleTimeOff = "ScheduleTimeOff",
    ScheduledEvent = "ScheduledEvent",
    ScheduledEventAccountVoiceServiceDetail = "ScheduledEventAccountVoiceServiceDetail",
    SearchFilter = "SearchFilter",
    SendgridDynamicTemplateExternalReference = "SendgridDynamicTemplateExternalReference",
    Service = "Service",
    ServiceMetadata = "ServiceMetadata",
    ServiceMetadataValue = "ServiceMetadataValue",
    ServiceTax = "ServiceTax",
    ServiceTaxDefinition = "ServiceTaxDefinition",
    ServiceableAddressAccountAssignmentHistory = "ServiceableAddressAccountAssignmentHistory",
    Signature = "Signature",
    SmsMessage = "SmsMessage",
    SmsMessageContent = "SmsMessageContent",
    SmsOutboundMessage = "SmsOutboundMessage",
    SmsSetting = "SmsSetting",
    SmtpEvent = "SmtpEvent",
    SnmpOid = "SnmpOid",
    SnmpOidThreshold = "SnmpOidThreshold",
    SnmpOidThresholdViolation = "SnmpOidThresholdViolation",
    SnmpOverride = "SnmpOverride",
    StoredFilter = "StoredFilter",
    StoredGroup = "StoredGroup",
    StoredView = "StoredView",
    StoredViewUser = "StoredViewUser",
    Subnet = "Subnet",
    Subscription = "Subscription",
    Supernet = "Supernet",
    SystemBackup = "SystemBackup",
    SystemBackupDestination = "SystemBackupDestination",
    SystemBackupDestinationCredential = "SystemBackupDestinationCredential",
    SystemBackupExport = "SystemBackupExport",
    SystemBackupSetting = "SystemBackupSetting",
    SystemSetting = "SystemSetting",
    Task = "Task",
    TaskTemplate = "TaskTemplate",
    TaskTemplateItem = "TaskTemplateItem",
    Tax = "Tax",
    TaxExemption = "TaxExemption",
    TaxOverride = "TaxOverride",
    TaxProvider = "TaxProvider",
    TaxProviderCredential = "TaxProviderCredential",
    TaxTransaction = "TaxTransaction",
    Ticket = "Ticket",
    TicketCategory = "TicketCategory",
    TicketComment = "TicketComment",
    TicketGroup = "TicketGroup",
    TicketRecipient = "TicketRecipient",
    TicketReply = "TicketReply",
    TicketingSetting = "TicketingSetting",
    TowercoverageConfiguration = "TowercoverageConfiguration",
    TowercoverageSubmission = "TowercoverageSubmission",
    TriggeredEmail = "TriggeredEmail",
    TriggeredMessage = "TriggeredMessage",
    UninventoriedMacAddress = "UninventoriedMacAddress",
    UsageBasedBillingPolicy = "UsageBasedBillingPolicy",
    UsageBasedBillingPolicyFreePeriod = "UsageBasedBillingPolicyFreePeriod",
    User = "User",
    UserPreference = "UserPreference",
    Vehicle = "Vehicle",
    VehicleLocationHistory = "VehicleLocationHistory",
    Vendor = "Vendor",
    VendorItem = "VendorItem",
    VoiceProvider = "VoiceProvider",
    VoiceProviderRate = "VoiceProviderRate",
    VoiceProviderRateImport = "VoiceProviderRateImport",
    VoiceProviderRateImportRecipe = "VoiceProviderRateImportRecipe",
    VoiceServiceDetail = "VoiceServiceDetail",
    VoiceServiceGenericParameter = "VoiceServiceGenericParameter",
    VoiceServiceGenericParameterTax = "VoiceServiceGenericParameterTax",
    VoiceServiceGenericParameterTaxDefinition = "VoiceServiceGenericParameterTaxDefinition",
    WebhookEndpoint = "WebhookEndpoint",
    WebhookEndpointEvent = "WebhookEndpointEvent",
    WebhookEndpointEventDispatch = "WebhookEndpointEventDispatch",
    WebhookEndpointEventDispatchAttempt = "WebhookEndpointEventDispatchAttempt"
}
/** The input object that defines the fields for the createInventoryItems mutation. */
export type IndividualInventoryItemFieldsMutationInput = {
    /** The ID of an `InventoryModelField`. */
    inventory_model_field_id: Scalars['Int64Bit']['input'];
    /** The value for the field. */
    value?: InputMaybe<Scalars['Text']['input']>;
};
/** A device that sits inline with customer traffic to impose network policy. */
export type InlineDevice = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InlineDevice';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether this device should write entries for all subnets or not. */
    all_subnets: Scalars['Boolean']['output'];
    /** Whether or not a bandwidth collection request is queued. */
    bandwidth_collection_queued: Scalars['Boolean']['output'];
    /** The date/time that bandwidth collection started. */
    bandwidth_collection_start?: Maybe<Scalars['Datetime']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inline device credential. */
    inline_device_credentials: InlineDeviceCredentialConnection;
    /** An IPv4/IPv6 address. */
    ip_address: Scalars['IP']['output'];
    /** The date and time this device was last synchronized. */
    last_synchronized?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A TCP port. */
    port?: Maybe<Scalars['Port']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status?: Maybe<ProvisioningDeviceStatus>;
    /** A message describing what caused the current status of this device. */
    status_message?: Maybe<Scalars['String']['output']>;
    /** An IPv4/IPv6 subnet. */
    subnets: SubnetConnection;
    /** Whether or not a synchronization request is queued. */
    synchronization_queued: Scalars['Boolean']['output'];
    /** The date/time that synchronization started. */
    synchronization_start?: Maybe<Scalars['Datetime']['output']>;
    /** The type. */
    type: InlineDeviceType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A device that sits inline with customer traffic to impose network policy. */
export type InlineDeviceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A device that sits inline with customer traffic to impose network policy. */
export type InlineDeviceInline_Device_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<InlineDeviceAuthenticationCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inline_device_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A device that sits inline with customer traffic to impose network policy. */
export type InlineDeviceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A device that sits inline with customer traffic to impose network policy. */
export type InlineDeviceNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A device that sits inline with customer traffic to impose network policy. */
export type InlineDeviceSubnetsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    supernet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<SubnetType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inline device authentication credential. */
export declare enum InlineDeviceAuthenticationCredential {
    /** MikroTik password. */
    MikrotikPassword = "MIKROTIK_PASSWORD",
    /** MikroTik username. */
    MikrotikUsername = "MIKROTIK_USERNAME",
    /** PacketLogic master object name. */
    PacketlogicMasterObjectName = "PACKETLOGIC_MASTER_OBJECT_NAME",
    /** PacketLogic password. */
    PacketlogicPassword = "PACKETLOGIC_PASSWORD",
    /** PacketLogic username. */
    PacketlogicUsername = "PACKETLOGIC_USERNAME"
}
/** Provides credentials for an inline device. */
export type InlineDeviceAuthenticationCredentialMutationInput = {
    /** An individual credential to authenticate to an inline device. */
    credential: InlineDeviceAuthenticationCredential;
    /** The credential value (e.g. username, password, etc.) */
    value: Scalars['String']['input'];
};
/** The connection wrapper around the `InlineDeviceConnection` type. */
export type InlineDeviceConnection = {
    __typename: 'InlineDeviceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InlineDevice>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An inline device credential. */
export type InlineDeviceCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InlineDeviceCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An individual credential to authenticate to an inline device. */
    credential: InlineDeviceAuthenticationCredential;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A device that sits inline with customer traffic to impose network policy. */
    inline_device?: Maybe<InlineDevice>;
    /** The ID of an `InlineDevice`. */
    inline_device_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The credential value (e.g. username, password, etc.) */
    value: Scalars['String']['output'];
};
/** An inline device credential. */
export type InlineDeviceCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inline device credential. */
export type InlineDeviceCredentialInline_DeviceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_subnets?: InputMaybe<Scalars['Boolean']['input']>;
    bandwidth_collection_queued?: InputMaybe<Scalars['Boolean']['input']>;
    bandwidth_collection_start?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<InlineDeviceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inline device credential. */
export type InlineDeviceCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inline device credential. */
export type InlineDeviceCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InlineDeviceCredentialConnection` type. */
export type InlineDeviceCredentialConnection = {
    __typename: 'InlineDeviceCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InlineDeviceCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of inline device. */
export declare enum InlineDeviceType {
    /** MikroTik. */
    Mikrotik = "MIKROTIK",
    /** Procera/Sandvine PacketLogic. */
    Packetlogic = "PACKETLOGIC"
}
/** Requests from Sonar staff to access your Sonar instance. */
export type InstanceManagementRequest = AccessloggableInterface & LoggableInterface & {
    __typename: 'InstanceManagementRequest';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date until which the authorization is valid. */
    authorization_valid_until?: Maybe<Scalars['Date']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The reason. */
    reason: Scalars['Text']['output'];
    /** The date and time responded. */
    responded_at?: Maybe<Scalars['Datetime']['output']>;
    /** A `User`. */
    responded_by_user?: Maybe<User>;
    /** The id of the `User` that responded to the request. */
    responded_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Requests from Sonar staff to access your Sonar instance. */
export type InstanceManagementRequestAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Requests from Sonar staff to access your Sonar instance. */
export type InstanceManagementRequestLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Requests from Sonar staff to access your Sonar instance. */
export type InstanceManagementRequestResponded_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `InstanceManagementRequestConnection` type. */
export type InstanceManagementRequestConnection = {
    __typename: 'InstanceManagementRequestConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InstanceManagementRequest>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** types.instance_service_fund_auto_pay */
export type InstanceServiceFundAutoPay = {
    __typename: 'InstanceServiceFundAutoPay';
    /** Whether the instance service is paid for automatically. */
    auto_pay: Scalars['Boolean']['output'];
    /** The instance service fund type. */
    instance_service_fund_type: InstanceServiceFundType;
};
/** The instance service fund type */
export declare enum InstanceServiceFundType {
    /** Print To Mail */
    PrintToMail = "PRINT_TO_MAIL",
    /** SMS */
    Sms = "SMS"
}
/** types.instance_service_funds */
export type InstanceServiceFunds = {
    __typename: 'InstanceServiceFunds';
    /** Whether the instance service is paid for automatically. */
    auto_pay?: Maybe<Scalars['Boolean']['output']>;
    /** The amount of funds currently available for the instance service. Stored as one hundredth of the smallest currency value (e.g. cents, pence, pesos.) */
    available_funds_in_hundredths: Scalars['Int']['output'];
    /** The service ID in core used to fund the instance service. */
    core_service_id: Scalars['Int64Bit']['output'];
    /** The precision used for the costs associated with this funded service. */
    cost_precision?: Maybe<FundedServiceCostPrecision>;
    /** The instance service fund type. */
    instance_service_fund_type?: Maybe<InstanceServiceFundType>;
};
/** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
export type IntegrationFieldMapping = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'IntegrationFieldMapping';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The vendor specific type for field. */
    integration_field_type: IntegrationFieldType;
    /** The owner of the integration mapping */
    integrationconfigurable?: Maybe<IntegrationconfigurableInterface>;
    /** The ID of the configuration entity which owns this mapping. */
    integrationconfigurable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of the configuration entity which owns this mapping. */
    integrationconfigurable_type?: Maybe<Scalars['String']['output']>;
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** A field on an inventory model. */
    inventory_model_field?: Maybe<InventoryModelField>;
    /** The ID of an `InventoryModelField`. */
    inventory_model_field_id: Scalars['Int64Bit']['output'];
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
export type IntegrationFieldMappingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
export type IntegrationFieldMappingIntegrationconfigurableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
export type IntegrationFieldMappingInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
export type IntegrationFieldMappingInventory_Model_FieldArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    regexp?: InputMaybe<Scalars['String']['input']>;
    required?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_type?: InputMaybe<InventoryModelFieldSecondaryType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<InventoryModelFieldType>;
    unique?: InputMaybe<Uniqueness>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
export type IntegrationFieldMappingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
export type IntegrationFieldMappingNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `IntegrationFieldMappingConnection` type. */
export type IntegrationFieldMappingConnection = {
    __typename: 'IntegrationFieldMappingConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IntegrationFieldMapping>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Input of an integration field mapping */
export type IntegrationFieldMappingInput = {
    /** The vendor specific type for field. */
    integration_field_type: IntegrationFieldType;
    /** The ID of an `InventoryModelField`. */
    inventory_model_field_id: Scalars['Int64Bit']['input'];
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['input'];
};
/** A vendor specific field type that is used by Sonar */
export declare enum IntegrationFieldType {
    /** ONT ID */
    OntId = "ONT_ID",
    /** Profile ID */
    ProfileId = "PROFILE_ID",
    /** Serial number */
    SerialNumber = "SERIAL_NUMBER"
}
/** An entity which maps a service to a vendor specific service name */
export type IntegrationServiceMapping = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'IntegrationServiceMapping';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The owner of the integration mapping */
    integrationconfigurable?: Maybe<IntegrationconfigurableInterface>;
    /** The ID of the configuration entity which owns this mapping. */
    integrationconfigurable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of the configuration entity which owns this mapping. */
    integrationconfigurable_type?: Maybe<Scalars['String']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** Policy Map. */
    policy_map?: Maybe<Scalars['String']['output']>;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** The service name in vendor system this mapping refers to. */
    service_template_name: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An entity which maps a service to a vendor specific service name */
export type IntegrationServiceMappingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An entity which maps a service to a vendor specific service name */
export type IntegrationServiceMappingIntegrationconfigurableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An entity which maps a service to a vendor specific service name */
export type IntegrationServiceMappingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An entity which maps a service to a vendor specific service name */
export type IntegrationServiceMappingNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An entity which maps a service to a vendor specific service name */
export type IntegrationServiceMappingServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `IntegrationServiceMappingConnection` type. */
export type IntegrationServiceMappingConnection = {
    __typename: 'IntegrationServiceMappingConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IntegrationServiceMapping>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the  mutation. */
export type IntegrationServiceMappingInput = {
    /** Policy Map. */
    policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['input'];
    /** The service name in vendor system this mapping refers to. */
    service_template_name: Scalars['String']['input'];
};
/** The owner of the integration mapping */
export type IntegrationconfigurableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An interface metric. */
export declare enum InterfaceMetric {
    /** Inbound discards */
    Indiscards = "INDISCARDS",
    /** Inbound errors */
    Inerrors = "INERRORS",
    /** Inbound bytes */
    Inoctets = "INOCTETS",
    /** Inbound packets */
    Inpackets = "INPACKETS",
    /** Outbound discards */
    Outdiscards = "OUTDISCARDS",
    /** Outbound errors */
    Outerrors = "OUTERRORS",
    /** Outbound bytes */
    Outoctets = "OUTOCTETS",
    /** Outbound packets */
    Outpackets = "OUTPACKETS"
}
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocation = AccessloggableInterface & GenericinventoryitemableInterface & GenericinventoryitemactionloggableInterface & InventoryitemableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InternalLocation';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A log of an action taken against a set of generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** A location that inventory is stored in. */
    inventory_location?: Maybe<InventoryLocation>;
    /** The ID of an `InventoryLocation`. */
    inventory_location_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocationGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocationGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocationInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocationInventory_LocationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_shipping_location?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
export type InternalLocationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InternalLocationConnection` type. */
export type InternalLocationConnection = {
    __typename: 'InternalLocationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InternalLocation>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An inventory item. */
export type InventoryItem = AccessloggableInterface & FileableInterface & IpassignmentableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & RecentitemableInterface & TaskableInterface & {
    __typename: 'InventoryItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An `InventoryItem` associated with an `AlertingRotation`. */
    alerting_rotation_inventory_item?: Maybe<AlertingRotationInventoryItem>;
    /** An `InventoryItem` associated with an `AlertingRotation`. */
    alerting_rotation_inventory_items: AlertingRotationInventoryItemConnection;
    /** The child `InventoryItem`s. */
    child_inventory_items: InventoryItemConnection;
    /** The user that claimed this `InventoryItem`. */
    claimed_user?: Maybe<User>;
    /** The ID of the `User` that claimed this. */
    claimed_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The mode that an inventory item is deployed in. */
    deployment_type?: Maybe<DeploymentType>;
    /** The ID of a `DeploymentType`. */
    deployment_type_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The interfaces on a device. */
    device_interface_mappings: DeviceInterfaceMappingConnection;
    /** A file. */
    files: FileConnection;
    /** Whether this inventory item is flapping or not. */
    flapping: Scalars['Boolean']['output'];
    /** The current ICMP monitoring status of an `InventoryItem`. */
    icmp_device_status?: Maybe<InventoryItemDeviceStatus>;
    /** The number of times the ICMP status has flapped. */
    icmp_status_flap_count: Scalars['Int']['output'];
    /** The timestamp of when the ICMP status last changed. */
    icmp_status_last_change?: Maybe<Scalars['Datetime']['output']>;
    /** The ICMP monitoring threshold violation type. */
    icmp_threshold_violation?: Maybe<InventoryItemIcmpThresholdViolation>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A tracked event that has occurred for an `InventoryItem`. */
    inventory_item_events: InventoryItemEventConnection;
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** Data contained within an inventory item field. */
    inventory_model_field_data: InventoryModelFieldDataConnection;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** The entity that this `InventoryItem` is associated with. */
    inventoryitemable?: Maybe<InventoryitemableInterface>;
    /** The ID of the entity that this inventory item is assigned to. */
    inventoryitemable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that this inventory item is assigned to. */
    inventoryitemable_type: InventoryitemableType;
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** A decimal latitude. */
    latitude?: Maybe<Scalars['Latitude']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude?: Maybe<Scalars['Longitude']['output']>;
    /** The metadata. */
    metadata?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** The overall status of an `InventoryItem` (the worse of ICMP/SNMP status). */
    overall_status?: Maybe<InventoryItemDeviceStatus>;
    /** The parent `InventoryItem`. */
    parent_inventory_item?: Maybe<InventoryItem>;
    /** The ID of the parent `InventoryItem`. */
    parent_inventory_item_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The status of the device, as read from Preseem. */
    preseem_status?: Maybe<PreseemStatus>;
    /** A line item on a purchase order. */
    purchase_order_item?: Maybe<PurchaseOrderItem>;
    /** The ID of a purchase order item */
    purchase_order_item_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The purchase price of this item. */
    purchase_price?: Maybe<Scalars['Int']['output']>;
    /** The current SNMP monitoring status of an `InventoryItem`. */
    snmp_device_status?: Maybe<InventoryItemDeviceStatus>;
    /** An `SnmpOidThresholdViolation`. */
    snmp_oid_threshold_violations: SnmpOidThresholdViolationConnection;
    /** An `SnmpOverride`. */
    snmp_override?: Maybe<SnmpOverride>;
    /** The number of times the SNMP status has flapped. */
    snmp_status_flap_count: Scalars['Int']['output'];
    /** The timestamp of when the SNMP status last changed. */
    snmp_status_last_change?: Maybe<Scalars['Datetime']['output']>;
    /** The SNMP monitoring status message. */
    snmp_status_message?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The physical status of this item. */
    status: InventoryItemStatus;
    /** A task. */
    tasks: TaskConnection;
    /** A ticket. */
    tickets: TicketConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An inventory item. */
export type InventoryItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inventory item. */
export type InventoryItemAlerting_Rotation_Inventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alerting_rotation_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_alerted_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    last_overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    last_status_change_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    next_alert_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemAlerting_Rotation_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alerting_rotation_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_alerted_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    last_overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    last_status_change_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    next_alert_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemChild_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemClaimed_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** An inventory item. */
export type InventoryItemDeployment_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemDevice_Interface_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mac_address?: InputMaybe<Scalars['MacAddress']['input']>;
    metadata?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    speed_mbps_in?: InputMaybe<Scalars['Int']['input']>;
    speed_mbps_out?: InputMaybe<Scalars['Int']['input']>;
    type?: InputMaybe<Scalars['String']['input']>;
    up?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inventory item. */
export type InventoryItemInventory_Item_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    event?: InputMaybe<InventoryItemUpdateEvent>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemInventory_Model_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** An inventory item. */
export type InventoryItemInventoryitemableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inventory item. */
export type InventoryItemNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inventory item. */
export type InventoryItemNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inventory item. */
export type InventoryItemParent_Inventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemPurchase_Order_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calculated_tax?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic_quantity_received?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderItemStatus>;
    units?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inventory item. */
export type InventoryItemSnmp_Oid_Threshold_ViolationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_oid_threshold_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemSnmp_OverrideArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp3_auth_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    snmp3_context_engineid?: InputMaybe<Scalars['Text']['input']>;
    snmp3_context_name?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    snmp_community?: InputMaybe<Scalars['Text']['input']>;
    snmp_version?: InputMaybe<SnmpVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An inventory item. */
export type InventoryItemTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An inventory item. */
export type InventoryItemTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InventoryItemConnection` type. */
export type InventoryItemConnection = {
    __typename: 'InventoryItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The monitoring status of an `InventoryItem`. */
export declare enum InventoryItemDeviceStatus {
    /** The device is down. */
    Down = "DOWN",
    /** The device is in a healthy state. */
    Good = "GOOD",
    /** The device is in a warning state. */
    Warning = "WARNING"
}
/** A tracked event that has occurred for an `InventoryItem`. */
export type InventoryItemEvent = AccessloggableInterface & LoggableInterface & {
    __typename: 'InventoryItemEvent';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Current data. */
    current: Scalars['Text']['output'];
    /** An event. */
    event: InventoryItemUpdateEvent;
    /** The date and time of an event sent from Mandrill */
    event_datetime: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_item?: Maybe<InventoryItem>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Previous data. */
    previous?: Maybe<Scalars['Text']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A tracked event that has occurred for an `InventoryItem`. */
export type InventoryItemEventAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tracked event that has occurred for an `InventoryItem`. */
export type InventoryItemEventInventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tracked event that has occurred for an `InventoryItem`. */
export type InventoryItemEventLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InventoryItemEventConnection` type. */
export type InventoryItemEventConnection = {
    __typename: 'InventoryItemEventConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryItemEvent>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the createInventoryItems mutation. */
export type InventoryItemFieldsMutationInput = {
    /** The fields for each inventory item being added. */
    individual_inventory_item_fields?: InputMaybe<Array<InputMaybe<IndividualInventoryItemFieldsMutationInput>>>;
    /** A decimal latitude. */
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    /** A decimal latitude. */
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    /** The purchase price of this item. */
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    /** The physical status of this item. */
    status?: InputMaybe<InventoryItemStatus>;
};
/** The ICMP monitoring threshold violation type of an `InventoryItem`. */
export declare enum InventoryItemIcmpThresholdViolation {
    /** ICMP latency threshold violated. */
    LatencyThresholdViolated = "LATENCY_THRESHOLD_VIOLATED",
    /** ICMP loss and latency thresholds violated. */
    LossAndLatencyThresholdViolated = "LOSS_AND_LATENCY_THRESHOLD_VIOLATED",
    /** ICMP loss threshold violated. */
    LossThresholdViolated = "LOSS_THRESHOLD_VIOLATED",
    /** Total packet loss. */
    TotalPacketLoss = "TOTAL_PACKET_LOSS"
}
/** The physical status of an inventory item. */
export declare enum InventoryItemStatus {
    /** Failed. */
    Failed = "FAILED",
    /** Functional. */
    Functional = "FUNCTIONAL",
    /** Lost. */
    Lost = "LOST"
}
/** An inventory item update event. */
export declare enum InventoryItemUpdateEvent {
    /** Inventory item assignment updated */
    Assigned = "ASSIGNED"
}
/** A location that inventory is stored in. */
export type InventoryLocation = AccessloggableInterface & AddressableInterface & GenericinventoryitemableInterface & GenericinventoryitemactionloggableInterface & InventoryitemableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InventoryLocation';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A geographical address. */
    addresses: AddressConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Marks this inventory location as the default shipping location for purchase orders. */
    default_shipping_location: Scalars['Boolean']['output'];
    /** A log of an action taken against a set of generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** A geo-point. */
    geopoint?: Maybe<Scalars['Geopoint']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
    internal_locations: InternalLocationConnection;
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** Defines the minimum and maximum of an inventory level per location per inventory model. */
    inventory_model_min_maxes: InventoryModelMinMaxConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A purchase order for items from a third party vendor. */
    purchase_orders: PurchaseOrderConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A location that inventory is stored in. */
export type InventoryLocationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationInternal_LocationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationInventory_Model_Min_MaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    maximum?: InputMaybe<Scalars['Int']['input']>;
    minimum?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A location that inventory is stored in. */
export type InventoryLocationPurchase_OrdersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    approved_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    canceled_at?: InputMaybe<Scalars['Datetime']['input']>;
    canceled_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    currency?: InputMaybe<Currency>;
    external_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_paid?: InputMaybe<Scalars['Boolean']['input']>;
    last_status_change?: InputMaybe<Scalars['Datetime']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    order_number?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendor_name?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `InventoryLocationConnection` type. */
export type InventoryLocationConnection = {
    __typename: 'InventoryLocationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryLocation>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A type of item stored in inventory. */
export type InventoryModel = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & VendoritemableInterface & {
    __typename: 'InventoryModel';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An alerting rotation. */
    alerting_rotations: AlertingRotationConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The default vendor that should be used for restocking this inventory model. */
    default_vendor?: Maybe<Vendor>;
    /** Sets the default vendor to be used for purchasing this inventory model. */
    default_vendor_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The mode that an inventory item is deployed in. */
    deployment_types: DeploymentTypeConnection;
    /** The type of inventory model. */
    device_type: InventoryModelDeviceType;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** A file. */
    files: FileConnection;
    /** Whether or not this is generic. */
    generic: Scalars['Boolean']['output'];
    /** A log of an action taken against a set of generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** Defines the minimum and maximum of an inventory level for all locations per inventory model. */
    global_inventory_model_min_maxes: GlobalInventoryModelMinMaxConnection;
    /** An icon. */
    icon: Icon;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
    integration_field_mappings: IntegrationFieldMappingConnection;
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** A category of item stored in inventory. */
    inventory_model_category?: Maybe<InventoryModelCategory>;
    /** The ID of an InventoryModelCategory. */
    inventory_model_category_id: Scalars['Int64Bit']['output'];
    /** A field on an inventory model. */
    inventory_model_fields: InventoryModelFieldConnection;
    /** Defines the minimum and maximum of an inventory level per location per inventory model. */
    inventory_model_min_maxes: InventoryModelMinMaxConnection;
    /** A log entry. */
    logs: LogConnection;
    /** If this is a SIM card for LTE provisioning, which provider this SIM is for. */
    lte_sim_type?: Maybe<LteProviderType>;
    /** A manufacturer of an item stored in inventory. */
    manufacturer?: Maybe<Manufacturer>;
    /** The ID of a Manufacturer. */
    manufacturer_id: Scalars['Int64Bit']['output'];
    /** The actual model name/part number. */
    model_name?: Maybe<Scalars['String']['output']>;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A `NetworkMonitoringTemplate`. */
    network_monitoring_template?: Maybe<NetworkMonitoringTemplate>;
    /** The ID of a `NetworkMonitoringTemplate`. */
    network_monitoring_template_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** The TCP port that the web interface of this type of device is available on. */
    port?: Maybe<Scalars['Int']['output']>;
    /** The protocol used to access the web interface. */
    protocol?: Maybe<Protocol>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** An item that can be purchased from a particular vendor. */
    vendor_items: VendorItemConnection;
};
/** A type of item stored in inventory. */
export type InventoryModelAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelAlerting_RotationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelDefault_VendorArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    automate_approved_purchase_orders?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    currency?: InputMaybe<Currency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelDeployment_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelGlobal_Inventory_Model_Min_MaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    maximum?: InputMaybe<Scalars['Int']['input']>;
    minimum?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelIntegration_Field_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integration_field_type?: InputMaybe<IntegrationFieldType>;
    integrationconfigurable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_type?: InputMaybe<Scalars['String']['input']>;
    inventory_model_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelInventory_Model_CategoryArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelInventory_Model_FieldsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    regexp?: InputMaybe<Scalars['String']['input']>;
    required?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_type?: InputMaybe<InventoryModelFieldSecondaryType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<InventoryModelFieldType>;
    unique?: InputMaybe<Uniqueness>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelInventory_Model_Min_MaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    maximum?: InputMaybe<Scalars['Int']['input']>;
    minimum?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelManufacturerArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelNetwork_Monitoring_TemplateArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    collect_interface_statistics?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_latency_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_loss_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_monitoring?: InputMaybe<Scalars['Boolean']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp3_auth_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    snmp3_context_engineid?: InputMaybe<Scalars['Text']['input']>;
    snmp3_context_name?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    snmp_community?: InputMaybe<Scalars['Text']['input']>;
    snmp_version?: InputMaybe<SnmpVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A type of item stored in inventory. */
export type InventoryModelVendor_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_type?: InputMaybe<VendoritemableType>;
};
/** A category of item stored in inventory. */
export type InventoryModelCategory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InventoryModelCategory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A general ledger code. */
    general_ledger_code?: Maybe<GeneralLedgerCode>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An icon. */
    icon: Icon;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A type of item stored in inventory. */
    inventory_models: InventoryModelConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A category of item stored in inventory. */
export type InventoryModelCategoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A category of item stored in inventory. */
export type InventoryModelCategoryGeneral_Ledger_CodeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    code?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A category of item stored in inventory. */
export type InventoryModelCategoryInventory_ModelsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A category of item stored in inventory. */
export type InventoryModelCategoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A category of item stored in inventory. */
export type InventoryModelCategoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InventoryModelCategoryConnection` type. */
export type InventoryModelCategoryConnection = {
    __typename: 'InventoryModelCategoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryModelCategory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `InventoryModelConnection` type. */
export type InventoryModelConnection = {
    __typename: 'InventoryModelConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryModel>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An inventory model device type. */
export declare enum InventoryModelDeviceType {
    /** Cable Modem */
    CableModem = "CABLE_MODEM",
    /** Other */
    Other = "OTHER"
}
/** A field on an inventory model. */
export type InventoryModelField = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InventoryModelField';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
    integration_field_mappings: IntegrationFieldMappingConnection;
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** Data contained within an inventory item field. */
    inventory_model_field_data: InventoryModelFieldDataConnection;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A single inventory model field can be set to be the primary field. This will be used as the primary identifier for items of this model throughout Sonar. */
    primary: Scalars['Boolean']['output'];
    /** A PCRE regular expression. Omit the leading and closing /. */
    regexp?: Maybe<Scalars['String']['output']>;
    /** Whether or not this field is required. */
    required: Scalars['Boolean']['output'];
    /** Secondary types that inventory model fields can be set to. */
    secondary_type?: Maybe<InventoryModelFieldSecondaryType>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Types that inventory model fields can be set to. */
    type: InventoryModelFieldType;
    /** Whether or not the field contents must be unique. */
    unique: Uniqueness;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A field on an inventory model. */
export type InventoryModelFieldAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A field on an inventory model. */
export type InventoryModelFieldIntegration_Field_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integration_field_type?: InputMaybe<IntegrationFieldType>;
    integrationconfigurable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_type?: InputMaybe<Scalars['String']['input']>;
    inventory_model_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A field on an inventory model. */
export type InventoryModelFieldInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A field on an inventory model. */
export type InventoryModelFieldInventory_Model_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A field on an inventory model. */
export type InventoryModelFieldLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A field on an inventory model. */
export type InventoryModelFieldNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InventoryModelFieldConnection` type. */
export type InventoryModelFieldConnection = {
    __typename: 'InventoryModelFieldConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryModelField>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Data contained within an inventory item field. */
export type InventoryModelFieldData = AccessloggableInterface & IpassignmentableInterface & LoggableInterface & SearchableInterface & {
    __typename: 'InventoryModelFieldData';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_item?: Maybe<InventoryItem>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** A field on an inventory model. */
    inventory_model_field?: Maybe<InventoryModelField>;
    /** The ID of an `InventoryModelField`. */
    inventory_model_field_id: Scalars['Int64Bit']['output'];
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** Data contained within an inventory item field. */
export type InventoryModelFieldDataAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Data contained within an inventory item field. */
export type InventoryModelFieldDataInventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Data contained within an inventory item field. */
export type InventoryModelFieldDataInventory_Model_FieldArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    regexp?: InputMaybe<Scalars['String']['input']>;
    required?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_type?: InputMaybe<InventoryModelFieldSecondaryType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<InventoryModelFieldType>;
    unique?: InputMaybe<Uniqueness>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Data contained within an inventory item field. */
export type InventoryModelFieldDataIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Data contained within an inventory item field. */
export type InventoryModelFieldDataLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InventoryModelFieldDataConnection` type. */
export type InventoryModelFieldDataConnection = {
    __typename: 'InventoryModelFieldDataConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryModelFieldData>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The secondary type of an inventory model field. */
export declare enum InventoryModelFieldSecondaryType {
    /** The MAC address used for provisioning a cable modem. */
    CableModemProvisioning = "CABLE_MODEM_PROVISIONING"
}
/** The type of an inventory model field. */
export declare enum InventoryModelFieldType {
    /** A number that can have a decimal place, but is not required to. */
    Decimal = "DECIMAL",
    /** IMSI */
    Imsi = "IMSI",
    /** An authentication key used for LTE. Should only be used for specific LTE integrations that require it. */
    Lteauthkey = "LTEAUTHKEY",
    /** MAC address. */
    MacAddress = "MAC_ADDRESS",
    /** An integer. */
    Number = "NUMBER",
    /** An OP/OPc value used for LTE. Should only be used for specific LTE integrations that require it. */
    Opopc = "OPOPC",
    /** A PCRE regular expression is applied to this field to validate it. */
    RegularExpression = "REGULAR_EXPRESSION",
    /** Text. */
    Text = "TEXT"
}
/** Defines the minimum and maximum of an inventory level per location per inventory model. */
export type InventoryModelMinMax = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InventoryModelMinMax';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A location that inventory is stored in. */
    inventory_location?: Maybe<InventoryLocation>;
    /** The ID of an `InventoryLocation`. */
    inventory_location_id: Scalars['Int64Bit']['output'];
    /** A type of item stored in inventory. */
    inventory_model?: Maybe<InventoryModel>;
    /** The ID of an `InventoryModel`. */
    inventory_model_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Maximum value */
    maximum?: Maybe<Scalars['Int']['output']>;
    /** Minimum value */
    minimum: Scalars['Int']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Defines the minimum and maximum of an inventory level per location per inventory model. */
export type InventoryModelMinMaxAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Defines the minimum and maximum of an inventory level per location per inventory model. */
export type InventoryModelMinMaxInventory_LocationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_shipping_location?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Defines the minimum and maximum of an inventory level per location per inventory model. */
export type InventoryModelMinMaxInventory_ModelArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Defines the minimum and maximum of an inventory level per location per inventory model. */
export type InventoryModelMinMaxLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Defines the minimum and maximum of an inventory level per location per inventory model. */
export type InventoryModelMinMaxNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InventoryModelMinMaxConnection` type. */
export type InventoryModelMinMaxConnection = {
    __typename: 'InventoryModelMinMaxConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InventoryModelMinMax>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that can own an `InventoryItem`. */
export type InventoryitemableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The entity that owns an `InventoryItem`. */
export declare enum InventoryitemableType {
    /** A serviceable `Address`. */
    Address = "Address",
    /** A `GenericInventoryAssignee`. */
    GenericInventoryAssignee = "GenericInventoryAssignee",
    /** An `InternalLocation`. */
    InternalLocation = "InternalLocation",
    /** An `InventoryLocation`. */
    InventoryLocation = "InventoryLocation",
    /** A `NetworkSite`. */
    NetworkSite = "NetworkSite",
    /** A `User`. */
    User = "User",
    /** A `Vehicle`. */
    Vehicle = "Vehicle"
}
/** An invoice. */
export type Invoice = AccessloggableInterface & LoggableInterface & {
    __typename: 'Invoice';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The number of times that auto pay has been attempted. */
    auto_pay_attempts: Scalars['Int']['output'];
    /** The date that auto pay will be attempted. */
    auto_pay_date?: Maybe<Scalars['Date']['output']>;
    /** The sum of all due amounts on child invoices. */
    child_invoice_remaining_due: Scalars['Int']['output'];
    /** A list of `Invoice`s that this `Invoice` is a parent of. */
    child_invoices: InvoiceConnection;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The application of a `Discount` or `Payment` against an `Invoice`. */
    credits: CreditConnection;
    /** A date */
    date: Scalars['Date']['output'];
    /** A debit. */
    debits: DebitConnection;
    /** The date that this became delinquent. */
    delinquency_date?: Maybe<Scalars['Date']['output']>;
    /** Whether or not this entity is delinquent. */
    delinquent: Scalars['Boolean']['output'];
    /** The date this invoice is due by. */
    due_date: Scalars['Date']['output'];
    /** The date that this ends. */
    end_date: Scalars['Date']['output'];
    /** If an invoice is frozen, payments will not be automatically applied to it, and it cannot be modified. */
    frozen: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether or not a late fee has been applied. */
    late_fee_applied: Scalars['Boolean']['output'];
    /** Whether or not the invoice includes only late fees. */
    late_fee_only: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The message. */
    message?: Maybe<Scalars['Text']['output']>;
    /** A record of a monthly billing cycle. */
    monthly_billing_completion?: Maybe<MonthlyBillingCompletion>;
    /** The number of months of service this invoice was billed for. */
    number_of_months: Scalars['Int']['output'];
    /** The `Invoice` that is the parent of this `Invoice`. */
    parent_invoice?: Maybe<Invoice>;
    /** The ID of the `Invoice` that is this `Invoice`s master. */
    parent_invoice_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Used by system to indicate the invoice has been marked to be sent to email contacts. */
    pending_email: Scalars['Boolean']['output'];
    /** A batch of invoices to mail and print. */
    print_to_mail_batches: PrintToMailBatchConnection;
    /** An error associated with the print to mail order. */
    print_to_mail_order_errors: PrintToMailOrderErrorConnection;
    /** The amount remaining to be paid. */
    remaining_due: Scalars['Int']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The phase of the invoice moving through creation. */
    status: Scalars['String']['output'];
    /** Whether this entity's taxes have been committed or not. */
    tax_committed: Scalars['Boolean']['output'];
    /** A tax provider. */
    tax_provider?: Maybe<TaxProvider>;
    /** The ID of an `TaxProvider`. */
    tax_provider_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The sum of all debits that make up this invoice. */
    total_debits: Scalars['Int']['output'];
    /** The sum of all taxes on debits that make up this invoice. */
    total_taxes: Scalars['Int']['output'];
    /** A message that is sent when a specific event occurs. */
    triggered_messages: TriggeredMessageConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Whether or not this entity has been voided. */
    void: Scalars['Boolean']['output'];
    /** When this was voided. */
    voided_at?: Maybe<Scalars['Datetime']['output']>;
};
/** An invoice. */
export type InvoiceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An invoice. */
export type InvoiceAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoiceChild_InvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoiceCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** An invoice. */
export type InvoiceCreditsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creditable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    creditable_type?: InputMaybe<CreditableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoiceDebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An invoice. */
export type InvoiceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An invoice. */
export type InvoiceMonthly_Billing_CompletionArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoiceParent_InvoiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoicePrint_To_Mail_BatchesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    batch_type?: InputMaybe<PrintToMailBatchType>;
    billing_completion_date?: InputMaybe<Scalars['Date']['input']>;
    cost?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_method?: InputMaybe<PrintToMailPrintMethod>;
    print_type?: InputMaybe<PrintToMailPrintType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PrintToMailBatchStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoicePrint_To_Mail_Order_ErrorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    error_message?: InputMaybe<Scalars['String']['input']>;
    error_type?: InputMaybe<PrintToMailOrderErrorType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_to_mail_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    resolved?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoiceTax_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    type?: InputMaybe<TaxProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An invoice. */
export type InvoiceTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A PDF to attach to invoices. */
export type InvoiceAttachment = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InvoiceAttachment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The date to stop attaching this PDF to invoices. */
    end?: Maybe<Scalars['Date']['output']>;
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The date to start attaching this PDF to invoices. */
    start?: Maybe<Scalars['Date']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A PDF to attach to invoices. */
export type InvoiceAttachmentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A PDF to attach to invoices. */
export type InvoiceAttachmentFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A PDF to attach to invoices. */
export type InvoiceAttachmentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A PDF to attach to invoices. */
export type InvoiceAttachmentNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InvoiceAttachmentConnection` type. */
export type InvoiceAttachmentConnection = {
    __typename: 'InvoiceAttachmentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InvoiceAttachment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `InvoiceConnection` type. */
export type InvoiceConnection = {
    __typename: 'InvoiceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Invoice>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A message that is appended to specific invoices. */
export type InvoiceMessage = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'InvoiceMessage';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The account type. */
    account_types: AccountTypeConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The message. */
    message: Scalars['String']['output'];
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A message that is appended to specific invoices. */
export type InvoiceMessageAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A message that is appended to specific invoices. */
export type InvoiceMessageAccount_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is appended to specific invoices. */
export type InvoiceMessageLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A message that is appended to specific invoices. */
export type InvoiceMessageNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `InvoiceMessageConnection` type. */
export type InvoiceMessageConnection = {
    __typename: 'InvoiceMessageConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<InvoiceMessage>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An IP address assignment. */
export type IpAssignment = AccessloggableInterface & LoggableInterface & NoteableInterface & SearchableInterface & {
    __typename: 'IpAssignment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
    ip_pool?: Maybe<IpPool>;
    /** The ID of an `IpPool`. */
    ip_pool_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The owner of this `IpAssignment`. */
    ipassignmentable?: Maybe<IpassignmentableInterface>;
    /** The ID of the owner of this `IpAssignment`. */
    ipassignmentable_id: Scalars['Int64Bit']['output'];
    /** The owner of this `IpAssignment`. */
    ipassignmentable_type: IpassignmentableType;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The `Subnet` this IP assignment falls within. */
    parent_subnet?: Maybe<Subnet>;
    /** Some reference data regarding this IP assignment. */
    reference?: Maybe<Scalars['Text']['output']>;
    /** If this IP was assigned automatically (e.g. via DHCP or RADIUS) then it will be marked as a soft assignment. */
    soft: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['output'];
    /** The ID of a `Subnet`. */
    subnet_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An IP address assignment. */
export type IpAssignmentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IP address assignment. */
export type IpAssignmentIp_PoolArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_range?: InputMaybe<Scalars['IpRange']['input']>;
    ips_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IP address assignment. */
export type IpAssignmentIpassignmentableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IP address assignment. */
export type IpAssignmentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IP address assignment. */
export type IpAssignmentNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IP address assignment. */
export type IpAssignmentParent_SubnetArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    supernet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<SubnetType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `IpAssignmentConnection` type. */
export type IpAssignmentConnection = {
    __typename: 'IpAssignmentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IpAssignment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A historical record of an IP assignment. */
export type IpAssignmentHistory = AccessloggableInterface & LoggableInterface & {
    __typename: 'IpAssignmentHistory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time of assignment. */
    assigned_datetime: Scalars['Datetime']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IP address assignment. */
    ip_assignment?: Maybe<IpAssignment>;
    /** The ID of an `IpAssignment`. */
    ip_assignment_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The owner of this `IpAssignment`. */
    ipassignmentable?: Maybe<IpassignmentableInterface>;
    /** The ID of the owner of this `IpAssignment`. */
    ipassignmentable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The owner of this `IpAssignment`. */
    ipassignmentable_type: IpassignmentableType;
    /** The parent of the `IpAssignment` referenced by the `IpAssignmentHistory`. */
    ipassignmenthistoryable?: Maybe<IpassignmenthistoryableInterface>;
    /** The ID of the entity that the IP address was assigned to. */
    ipassignmenthistoryable_id: Scalars['Int64Bit']['output'];
    /** The parent entity that the IP address was assigned to (e.g. `Account`, `NetworkSite`.) */
    ipassignmenthistoryable_type: IpassignmenthistoryableType;
    /** A log entry. */
    logs: LogConnection;
    /** Some reference data regarding this IP assignment. */
    reference?: Maybe<Scalars['Text']['output']>;
    /** The date and time of removal. */
    removed_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** If this IP was assigned automatically (e.g. via DHCP or RADIUS) then it will be marked as a soft assignment. */
    soft: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['output'];
    /** Some unique identifier that was related to the IP (e.g. a MAC address, IMSI, RADIUS username.) */
    unique_identifier?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A historical record of an IP assignment. */
export type IpAssignmentHistoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A historical record of an IP assignment. */
export type IpAssignmentHistoryIp_AssignmentArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A historical record of an IP assignment. */
export type IpAssignmentHistoryIpassignmentableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A historical record of an IP assignment. */
export type IpAssignmentHistoryIpassignmenthistoryableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A historical record of an IP assignment. */
export type IpAssignmentHistoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `IpAssignmentHistoryConnection` type. */
export type IpAssignmentHistoryConnection = {
    __typename: 'IpAssignmentHistoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IpAssignmentHistory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPool = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'IpPool';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A specific identifier for a DHCP server. */
    dhcp_server_identifier?: Maybe<DhcpServerIdentifier>;
    /** The ID of a `DhcpServerIdentifier`. */
    dhcp_server_identifier_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A DHCP server. */
    dhcp_servers: DhcpServerConnection;
    /** An LTE EPC. */
    epcs: EpcConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** A range of IPv4 addresses. */
    ip_range: Scalars['IpRange']['output'];
    /** The number of IP addresses available. */
    ips_available: Scalars['Int']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet?: Maybe<Subnet>;
    /** The ID of a `Subnet`. */
    subnet_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolDhcp_Server_IdentifierArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolDhcp_ServersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    api_key?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serves_all_pools?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<DhcpServerType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    use_source_mac_address?: InputMaybe<Scalars['Boolean']['input']>;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolEpcsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identifier?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
export type IpPoolSubnetArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    supernet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<SubnetType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `IpPoolConnection` type. */
export type IpPoolConnection = {
    __typename: 'IpPoolConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<IpPool>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that has an `IpAssignment` associated with it. */
export type IpassignmentableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The owner of an `IpAssignment`. */
export declare enum IpassignmentableType {
    /** An `Account`. */
    Account = "Account",
    /** An `InventoryItem`. */
    InventoryItem = "InventoryItem",
    /** An `InventoryModelFieldData`. */
    InventoryModelFieldData = "InventoryModelFieldData",
    /** A `NetworkSite`. */
    NetworkSite = "NetworkSite",
    /** A `RadiusAccount`. */
    RadiusAccount = "RadiusAccount",
    /** An `UninventoriedMacAddress`. */
    UninventoriedMacAddress = "UninventoriedMacAddress"
}
/** An entity that has an `IpAssignmentHistory` associated with it. */
export type IpassignmenthistoryableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The owner of an `IPAssignmentHistory`. */
export declare enum IpassignmenthistoryableType {
    /** An `Account`. */
    Account = "Account",
    /** A `NetworkSite`. */
    NetworkSite = "NetworkSite"
}
/** The ISP type of a `Company`. */
export declare enum IspType {
    /** CLEC */
    Clec = "CLEC",
    /** ILEC */
    Ilec = "ILEC",
    /** ISP */
    Isp = "ISP",
    /** IXC */
    Ixc = "IXC",
    /** Retail Sales */
    RetailSales = "RETAIL_SALES",
    /** VOIP */
    Voip = "VOIP",
    /** Wireless */
    Wireless = "WIRELESS"
}
/** A job, typically in the field. */
export type Job = AccessloggableInterface & CustomfielddataableInterface & FileableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & RecentitemableInterface & TaskableInterface & {
    __typename: 'Job';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether or not this is complete. */
    complete: Scalars['Boolean']['output'];
    /** The user that completed this `Job`. */
    completed_by_user?: Maybe<User>;
    /** The `User` that completed this. */
    completed_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Whether this `Job` was completed successfully or not. */
    completed_successfully?: Maybe<Scalars['Boolean']['output']>;
    /** The date and time this `Job` was completed. */
    completion_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** Any notes entered when this `Job` was completed. */
    completion_notes?: Maybe<Scalars['Text']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The record of a check in to a `Job`. */
    job_check_ins: JobCheckInConnection;
    /** A `Service` associated with a `Job`. */
    job_services: JobServiceConnection;
    /** The type of a `Job`. */
    job_type?: Maybe<JobType>;
    /** The ID of a `JobType`. */
    job_type_id: Scalars['Int64Bit']['output'];
    /** The entity that this `Job` is associated with. */
    jobbable?: Maybe<JobbableInterface>;
    /** The ID of the entity that this `Job` is associated with. */
    jobbable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that this `Job` is associated with. */
    jobbable_type: JobbableType;
    /** The length in minutes for this `Job`. */
    length_in_minutes: Scalars['Int']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** The date and time this `Job` is scheduled for. */
    scheduled_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** Indicates this entity has skipped the validations which would normally apply. */
    skips_validation: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A task. */
    tasks: TaskConnection;
    /** A ticket. */
    ticket?: Maybe<Ticket>;
    /** The ID of a `Ticket`. */
    ticket_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
};
/** A job, typically in the field. */
export type JobAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobCompleted_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A job, typically in the field. */
export type JobCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A job, typically in the field. */
export type JobFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobJob_Check_InsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    check_in_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    check_out_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    checked_in_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    checked_out_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobJob_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A job, typically in the field. */
export type JobJob_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A job, typically in the field. */
export type JobJobbableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A job, typically in the field. */
export type JobLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobTicketArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A job, typically in the field. */
export type JobUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** types.job_available_times */
export type JobAvailableTimes = {
    __typename: 'JobAvailableTimes';
    /** A list of `DateTimeRange`s which indicate the available times. */
    available_times?: Maybe<Array<Maybe<DateTimeRange>>>;
    /** IDs of `User`s. */
    user_ids?: Maybe<Array<Maybe<Scalars['Int64Bit']['output']>>>;
};
/** The record of a check in to a `Job`. */
export type JobCheckIn = AccessloggableInterface & LoggableInterface & {
    __typename: 'JobCheckIn';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time that this `Job` was checked into. */
    check_in_datetime: Scalars['Datetime']['output'];
    /** The date and time that this `Job` was checked out of. */
    check_out_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** The `User` that created a `JobCheckIn`. */
    checked_in_by_user?: Maybe<User>;
    /** The ID of the `User` that created this check in. */
    checked_in_by_user_id: Scalars['Int64Bit']['output'];
    /** The `User` that checked out a `JobCheckIn`. */
    checked_out_by_user?: Maybe<User>;
    /** The ID of the `User` that updated this check in with a check out date and time. */
    checked_out_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A job, typically in the field. */
    job?: Maybe<Job>;
    /** The ID of a `Job`. */
    job_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** The record of a check in to a `Job`. */
export type JobCheckInAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The record of a check in to a `Job`. */
export type JobCheckInChecked_In_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The record of a check in to a `Job`. */
export type JobCheckInChecked_Out_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The record of a check in to a `Job`. */
export type JobCheckInJobArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completed_successfully?: InputMaybe<Scalars['Boolean']['input']>;
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_type?: InputMaybe<JobbableType>;
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    skips_validation?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The record of a check in to a `Job`. */
export type JobCheckInLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The record of a check in to a `Job`. */
export type JobCheckInUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `JobCheckInConnection` type. */
export type JobCheckInConnection = {
    __typename: 'JobCheckInConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<JobCheckIn>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `JobConnection` type. */
export type JobConnection = {
    __typename: 'JobConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Job>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A `Service` associated with a `Job`. */
export type JobService = AccessloggableInterface & LoggableInterface & {
    __typename: 'JobService';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The ID of a `Job`. */
    job_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax. */
    tax?: Maybe<Tax>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A `Service` associated with a `Job`. */
export type JobServiceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `Service` associated with a `Job`. */
export type JobServiceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `Service` associated with a `Job`. */
export type JobServiceServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `Service` associated with a `Job`. */
export type JobServiceTaxArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `JobServiceConnection` type. */
export type JobServiceConnection = {
    __typename: 'JobServiceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<JobService>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of a `Job`. */
export type JobType = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'JobType';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The status that an `Account` will be changed to upon successful completion. */
    account_status_completion?: Maybe<AccountStatus>;
    /** The status that an `Account` will be changed to upon unsuccessful completion. */
    account_status_failure?: Maybe<AccountStatus>;
    /** If this is set, any `Job` using this `JobType` that is completed successfully while associated with an `Account` will change the `Account` to this `AccountStatus`. */
    account_status_id_completion?: Maybe<Scalars['Int64Bit']['output']>;
    /** If this is set, any `Job` using this `JobType` that is completed unsuccessfully while associated with an `Account` will change the `Account` to this `AccountStatus`. */
    account_status_id_failure?: Maybe<Scalars['Int64Bit']['output']>;
    /** Completion ticket action. */
    action_on_completion: JobTypeAction;
    /** Failure ticket action. */
    action_on_failure: JobTypeAction;
    /** Whether or not this `JobType` is valid for all `Companies`. */
    all_companies: Scalars['Boolean']['output'];
    /** Whether `Job`s associated with this `JobType` should be able to be completed with incomplete tasks. */
    allow_completion_with_incomplete_tasks: Scalars['Boolean']['output'];
    /** Color. */
    color: Scalars['HtmlHexColor']['output'];
    /** A company you do business as. */
    companies: CompanyConnection;
    /** A contract template. */
    contract_template?: Maybe<ContractTemplate>;
    /** The ID of a `ContractTemplate`. */
    contract_template_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The default length for a `Job` created using this `JobType`. */
    default_length_in_minutes: Scalars['Int']['output'];
    /** If this is set, any `Job` using this `JobType` that is completed successfully while associated with an `Account` will trigger the disconnection of the `Account`. */
    disconnects_account?: Maybe<Scalars['Boolean']['output']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** An icon. */
    icon: Icon;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A job, typically in the field. */
    jobs: JobConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** Availability for `Job`s to be scheduled. */
    schedule_availabilities: ScheduleAvailabilityConnection;
    /** A service. */
    services: ServiceConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A `task template`. */
    task_template?: Maybe<TaskTemplate>;
    /** The ID of a `TaskTemplate`. */
    task_template_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The `TicketGroup` for a `Ticket` created upon successful completion. */
    ticket_group_completion?: Maybe<TicketGroup>;
    /** The `TicketGroup` for a `Ticket` created upon unsuccessful completion. */
    ticket_group_failure?: Maybe<TicketGroup>;
    /** If this is set, any `Job` using this `JobType` that is completed successfully will create a `Ticket` and assign it to this `TicketGroup`. */
    ticket_group_id_completion?: Maybe<Scalars['Int64Bit']['output']>;
    /** If this is set, any `Job` using this `JobType` that is completed unsuccessfully will create a `Ticket` and assign it to this `TicketGroup`. */
    ticket_group_id_failure?: Maybe<Scalars['Int64Bit']['output']>;
    /** Ticket status on completion. */
    ticket_status_on_completion: TicketStatus;
    /** Ticket status on failure. */
    ticket_status_on_failure: TicketStatus;
    /** A message that is sent when a specific event occurs. */
    triggered_messages: TriggeredMessageConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of a `Job`. */
export type JobTypeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The type of a `Job`. */
export type JobTypeAccount_Status_CompletionArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeAccount_Status_FailureArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeCompaniesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** The type of a `Job`. */
export type JobTypeContract_TemplateArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeJobsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completed_successfully?: InputMaybe<Scalars['Boolean']['input']>;
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_type?: InputMaybe<JobbableType>;
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    skips_validation?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The type of a `Job`. */
export type JobTypeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The type of a `Job`. */
export type JobTypeSchedule_AvailabilitiesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    available?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geofence_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The type of a `Job`. */
export type JobTypeServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeTask_TemplateArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeTicket_Group_CompletionArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    private?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeTicket_Group_FailureArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    private?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The type of a `Job`. */
export type JobTypeTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The action taken on a job completion or failure. */
export declare enum JobTypeAction {
    /** Create new ticket */
    CreateNewTicket = "CREATE_NEW_TICKET",
    /** None */
    None = "NONE",
    /** Update linked ticket, create new ticket if no ticket linked */
    UpdateTicketOrAdd = "UPDATE_TICKET_OR_ADD"
}
/** The connection wrapper around the `JobTypeConnection` type. */
export type JobTypeConnection = {
    __typename: 'JobTypeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<JobType>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The entity that has a `Job` associated with it. */
export type JobbableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of entity that owns this `Job`. */
export declare enum JobbableType {
    /** An `Account`. */
    Account = "Account",
    /** A `NetworkSite`. */
    NetworkSite = "NetworkSite"
}
/** Languages. */
export declare enum Language {
    /** English */
    En = "en",
    /** French */
    Fr = "fr"
}
/** Late fee application mode. */
export declare enum LateFeeMode {
    /** Late fee is applied as a fixed charge, based on the amount associated with the late fee service. */
    Flat = "FLAT",
    /** Late fee is applied as a percentage of the delinquent balance, or as the amount of the late fee service, whichever is higher. */
    Percentage = "PERCENTAGE"
}
/** The input object that defines the fields for the linkAccounts mutation. */
export type LinkAccountsMutationInput = {
    /** The ID of a child `Account`. */
    child_account_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the linkEntityToTicket mutation. */
export type LinkEntityToTicketMutationInput = {
    /** The entity ID to link. */
    linked_entityable_id: Scalars['Int64Bit']['input'];
    /** The entity type to link. */
    linked_entityable_type: TicketLinkableEntityType;
};
/** The input object that defines the fields for the linkFibermapPlanToNetworkSite mutation. */
export type LinkFibermapPlanToNetworkSiteMutationInput = {
    /** FiberMap plan ID */
    fibermap_plan_id: Scalars['Int64Bit']['input'];
    /** Network site id. */
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the linkFibermapServiceLocationToAddress mutation. */
export type LinkFibermapServiceLocationToAddressMutationInput = {
    /** The ID of the address. */
    address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Scalars['String']['input']>;
    /** Fibermap service location ID. */
    fibermap_service_location_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the linkFileToEntity mutation. */
export type LinkFileToEntityMutationInput = {
    /** The ID of the entity that owns this file. */
    fileable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that owns this file. */
    fileable_type: FileableType;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
};
/** The input object that defines the fields for the linkInvoices mutation. */
export type LinkInvoicesMutationInput = {
    /** The ID of a child `Invoice`. */
    child_invoice_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the linkTowercoverageSubmissionToServiceableAddress mutation. */
export type LinkTowercoverageSubmissionToServiceableAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** A decimal latitude. */
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal latitude. */
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** Setting this value to `true` will set `line2` to null. */
    unset_line2?: InputMaybe<Scalars['Boolean']['input']>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The status for each of the linked addresses created during the createLinkedAddresses mutation. */
export declare enum LinkedAddressesStatus {
    /** Address already linked to anchor */
    Anchored = "ANCHORED",
    /** Linked address created */
    Created = "CREATED",
    /** Serviceable address exists */
    Exists = "EXISTS"
}
/** A local prefix for a voice service. */
export type LocalPrefix = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'LocalPrefix';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A telephone number prefix. */
    prefix: Scalars['Numeric']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Details regarding a specific voice `Service`. */
    voice_service_detail?: Maybe<VoiceServiceDetail>;
    /** The ID of the `VoiceServiceDetail`. */
    voice_service_detail_id: Scalars['Int64Bit']['output'];
};
/** A local prefix for a voice service. */
export type LocalPrefixAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A local prefix for a voice service. */
export type LocalPrefixLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A local prefix for a voice service. */
export type LocalPrefixNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A local prefix for a voice service. */
export type LocalPrefixVoice_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_local_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_long_distance_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    first_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_toll_free_rate_per_minute_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    local_minutes?: InputMaybe<Scalars['Int']['input']>;
    long_distance_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollup_generic_parameters?: InputMaybe<Scalars['Boolean']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    show_call_detail_records_on_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    sub_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    sub_type?: InputMaybe<VoiceServiceDetailSubType>;
    unlimited_local_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    unlimited_long_distance_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `LocalPrefixConnection` type. */
export type LocalPrefixConnection = {
    __typename: 'LocalPrefixConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<LocalPrefix>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A log entry. */
export type Log = AccessloggableInterface & LoggableInterface & {
    __typename: 'Log';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Current data. */
    current: Scalars['Text']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether or not this log was transferred from a Sonar v1 instance. If so, the formatting will not match current version logs. */
    legacy: Scalars['Boolean']['output'];
    /** A title which is only populated on logs that were imported from Sonar v1. */
    legacy_title?: Maybe<Scalars['String']['output']>;
    /** The severity level. */
    level: LogLevel;
    /** The entity that this `Log` entry was generated for. */
    loggable?: Maybe<LoggableInterface>;
    /** The ID of the entity that this log is attached to. */
    loggable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that this log is attached to. */
    loggable_type: Scalars['String']['output'];
    /** The entity ID that triggered the log. */
    logged_entity_id: Scalars['Int64Bit']['output'];
    /** The entity that triggered the log. */
    logged_entity_type: Scalars['String']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The message. */
    message?: Maybe<Scalars['Text']['output']>;
    /** Previous data. */
    previous?: Maybe<Scalars['Text']['output']>;
    /** Data from objects related to this change. */
    relation_data?: Maybe<Scalars['Text']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The type. */
    type: LogType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A log entry. */
export type LogAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log entry. */
export type LogLoggableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A log entry. */
export type LogLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log entry. */
export type LogUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `LogConnection` type. */
export type LogConnection = {
    __typename: 'LogConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Log>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The level of severity of a `Log` entry. */
export declare enum LogLevel {
    /** A critical message is one where an underlying Sonar process failed in an unexpected or unallowed manner. Notifications of this level automatically notify Sonar support */
    Critical = "CRITICAL",
    /** An error message is one where an error occurred that was unexpected or could not be resolved by the underlying process, and a log has been stored for future reference */
    Error = "ERROR",
    /** An informational message is one where the normal operation of the system has been observed, and some information has been stored for future reference */
    Info = "INFO"
}
/** A type of `Log` entry. */
export declare enum LogType {
    /** An entity was attached to another */
    Attached = "ATTACHED",
    /** Entity was created */
    Created = "CREATED",
    /** Entity was deleted */
    Deleted = "DELETED",
    /** An entity was detached from another */
    Detached = "DETACHED",
    /** A log entry that doesn't match another log type. */
    Other = "OTHER",
    /** A system log entry. */
    System = "SYSTEM",
    /** Entity was updated */
    Updated = "UPDATED"
}
/** An entity that has `Log` entries associated with it. */
export type LoggableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A report builder license. */
export type LookerExploreLicense = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'LookerExploreLicense';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A report builder license. */
export type LookerExploreLicenseAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A report builder license. */
export type LookerExploreLicenseLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A report builder license. */
export type LookerExploreLicenseNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A report builder license. */
export type LookerExploreLicenseUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `LookerExploreLicenseConnection` type. */
export type LookerExploreLicenseConnection = {
    __typename: 'LookerExploreLicenseConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<LookerExploreLicense>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A report viewer license. */
export type LookerViewLicense = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'LookerViewLicense';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A report viewer license. */
export type LookerViewLicenseAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A report viewer license. */
export type LookerViewLicenseLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A report viewer license. */
export type LookerViewLicenseNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A report viewer license. */
export type LookerViewLicenseUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `LookerViewLicenseConnection` type. */
export type LookerViewLicenseConnection = {
    __typename: 'LookerViewLicenseConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<LookerViewLicense>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A provider of LTE provisioning. */
export type LteProvider = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'LteProvider';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Automatically detach UE when account is changed to delinquency status. */
    deactivate_on_delinquency: Scalars['Boolean']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** Whether or not a floating license model is used with BreezeVIEW. */
    floating_license: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The date and time this device was last synchronized. */
    last_synchronized?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** Credentials for an `LteProvider`. */
    lte_provider_credentials: LteProviderCredentialConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status?: Maybe<ProvisioningDeviceStatus>;
    /** A message describing what caused the current status of this device. */
    status_message?: Maybe<Scalars['String']['output']>;
    /** Whether or not a synchronization request is queued. */
    synchronization_queued: Scalars['Boolean']['output'];
    /** The date/time that synchronization started. */
    synchronization_start?: Maybe<Scalars['Datetime']['output']>;
    /** The type. */
    type: LteProviderType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Write PDN address allocation into BreezeVIEW. */
    write_pdn_address_allocation: Scalars['Boolean']['output'];
};
/** A provider of LTE provisioning. */
export type LteProviderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A provider of LTE provisioning. */
export type LteProviderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A provider of LTE provisioning. */
export type LteProviderLte_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<LteProviderAuthenticationCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A provider of LTE provisioning. */
export type LteProviderNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An authentication credential for an LTE provider. */
export declare enum LteProviderAuthenticationCredential {
    /** Baicells REST API cloud key. */
    BaicellsCloudKey = "BAICELLS_CLOUD_KEY",
    /** Baicells REST API password. */
    BaicellsPassword = "BAICELLS_PASSWORD",
    /** Baicells REST API username. */
    BaicellsUsername = "BAICELLS_USERNAME",
    /** Telrad REST API IP address. */
    TelradIpAddress = "TELRAD_IP_ADDRESS",
    /** Telrad REST API password. */
    TelradPassword = "TELRAD_PASSWORD",
    /** Telrad REST API port. */
    TelradPort = "TELRAD_PORT",
    /** Telrad REST API username. */
    TelradUsername = "TELRAD_USERNAME"
}
/** Credentials for an LTE provider. */
export type LteProviderAuthenticationCredentialMutationInput = {
    /** An individual credential to authenticate to an LTE provider. */
    credential: LteProviderAuthenticationCredential;
    /** The credential value (e.g. username, password, etc.) */
    value: Scalars['String']['input'];
};
/** The connection wrapper around the `LteProviderConnection` type. */
export type LteProviderConnection = {
    __typename: 'LteProviderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<LteProvider>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for an `LteProvider`. */
export type LteProviderCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'LteProviderCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The credential name. */
    credential: LteProviderAuthenticationCredential;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A provider of LTE provisioning. */
    lte_provider?: Maybe<LteProvider>;
    /** The ID of an `LteProvider`. */
    lte_provider_id: Scalars['Int64Bit']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** Credentials for an `LteProvider`. */
export type LteProviderCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Credentials for an `LteProvider`. */
export type LteProviderCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Credentials for an `LteProvider`. */
export type LteProviderCredentialLte_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deactivate_on_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    floating_license?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<LteProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    write_pdn_address_allocation?: InputMaybe<Scalars['Boolean']['input']>;
};
/** Credentials for an `LteProvider`. */
export type LteProviderCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `LteProviderCredentialConnection` type. */
export type LteProviderCredentialConnection = {
    __typename: 'LteProviderCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<LteProviderCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of LTE provider. */
export declare enum LteProviderType {
    /** Baicells. */
    Baicells = "BAICELLS",
    /** Telrad. */
    Telrad = "TELRAD",
    /** Telrad RESTCONF. */
    TelradRestconf = "TELRAD_RESTCONF"
}
/** A manufacturer of an item stored in inventory. */
export type Manufacturer = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Manufacturer';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A type of item stored in inventory. */
    inventory_models: InventoryModelConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A manufacturer of an item stored in inventory. */
export type ManufacturerAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A manufacturer of an item stored in inventory. */
export type ManufacturerInventory_ModelsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A manufacturer of an item stored in inventory. */
export type ManufacturerLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A manufacturer of an item stored in inventory. */
export type ManufacturerNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `ManufacturerConnection` type. */
export type ManufacturerConnection = {
    __typename: 'ManufacturerConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Manufacturer>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Map Overlay. */
export type MapOverlay = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'MapOverlay';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Map Overlay Language (KML) file contents. */
    contents: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** FiberMap plan. */
    fibermap_plans: FibermapPlanConnection;
    /** file type */
    file_type: MapOverlayFileType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['output'];
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A network site. */
    network_site?: Maybe<NetworkSite>;
    /** Network site id. */
    network_site_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** Radius in KM. */
    radius: Scalars['Float']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Map Overlay. */
export type MapOverlayAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Map Overlay. */
export type MapOverlayFibermap_PlansArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    build?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    drop?: InputMaybe<Scalars['String']['input']>;
    fibermap_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_plan_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_name?: InputMaybe<Scalars['String']['input']>;
    fibermap_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    height_in_meters?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    map_overlay_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mapped_at?: InputMaybe<Scalars['Datetime']['input']>;
    mapping_user?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Map Overlay. */
export type MapOverlayLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Map Overlay. */
export type MapOverlayNetwork_SiteArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    height_in_meters?: InputMaybe<Scalars['Float']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Map Overlay. */
export type MapOverlayNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `MapOverlayConnection` type. */
export type MapOverlayConnection = {
    __typename: 'MapOverlayConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<MapOverlay>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The file type of the contents of a map overlay. */
export declare enum MapOverlayFileType {
    /** KML */
    Kml = "KML",
    /** GeoJSON */
    ZippedGeojson = "ZIPPED_GEOJSON"
}
/** A mass email communication. */
export type MassEmail = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'MassEmail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A contact person. */
    contacts: ContactConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A file. */
    files: FileConnection;
    /** The email address to send from when using this email message. If `null`, then the system default will be used. */
    from_email_address: Scalars['EmailAddress']['output'];
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A short sentence that will be shown as a preview in compatible email clients. */
    inbox_preview?: Maybe<Scalars['String']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** The message. */
    message: Scalars['Text']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The subject. */
    subject: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A mass email communication. */
export type MassEmailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A mass email communication. */
export type MassEmailContactsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A mass email communication. */
export type MassEmailFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A mass email communication. */
export type MassEmailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A mass email communication. */
export type MassEmailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A mass email communication. */
export type MassEmailUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `MassEmailConnection` type. */
export type MassEmailConnection = {
    __typename: 'MassEmailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<MassEmail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** You! */
export type Me = {
    __typename: 'Me';
    /** An email address. */
    email_address: Scalars['EmailAddress']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The preferred language for this user. If none is set, then the system default will be used. This will affect the interface, as well as communications sent to this user. */
    language: Language;
    /** A mobile phone number. This will be used to send SMS messages. */
    mobile_number?: Maybe<Scalars['Numeric']['output']>;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** Your personal notification settings. */
    notification_settings: NotificationSettingConnection;
    /** The publicly viewable name of this user. */
    public_name: Scalars['String']['output'];
    /** A list of `RecentItem`s that you've viewed. */
    recent_items: RecentItemConnection;
    /** Whether or not a report builder license is granted. */
    report_builder: Scalars['Boolean']['output'];
    /** Whether or not a report viewer license is granted. */
    report_viewer: Scalars['Boolean']['output'];
    /** A role defines the permission set that a user has. */
    role?: Maybe<Role>;
    /** The ID of a Role. */
    role_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Super admins receive all system permissions automatically, regardless of their role. */
    super_admin: Scalars['Boolean']['output'];
    /** Your personal preferences. Affects the look and behavior of Sonar specifically for you. */
    user_preferences: UserPreference;
    /** A username, used for authentication. */
    username: Scalars['String']['output'];
    /** A vehicle. */
    vehicles: VehicleConnection;
};
/** You! */
export type MeNotification_SettingsArgs = {
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
};
/** You! */
export type MeRecent_ItemsArgs = {
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
};
/** You! */
export type MeVehiclesArgs = {
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
};
/** The input object that defines the fields for the mergeSubnets mutation. */
export type MergeSubnetsMutationInput = {
    /** The first subnet. */
    subnet_1_id: Scalars['Int64Bit']['input'];
    /** The second subnet. */
    subnet_2_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the mergeTickets mutation. */
export type MergeTicketsMutationInput = {
    /** The ticket IDs to merge into the parent ticket. */
    merged_ticket_ids: Array<Scalars['Int64Bit']['input']>;
};
/** A categorization of a message by type. */
export type MessageCategory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'MessageCategory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A contact person. */
    contacts: ContactConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this entity is a default entry. */
    default: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An `Email` that is sent when a particular event occurs. */
    triggered_emails: TriggeredEmailConnection;
    /** A message that is sent when a specific event occurs. */
    triggered_messages: TriggeredMessageConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A categorization of a message by type. */
export type MessageCategoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A categorization of a message by type. */
export type MessageCategoryContactsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A categorization of a message by type. */
export type MessageCategoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A categorization of a message by type. */
export type MessageCategoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A categorization of a message by type. */
export type MessageCategoryTriggered_EmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<EmailTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A categorization of a message by type. */
export type MessageCategoryTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `MessageCategoryConnection` type. */
export type MessageCategoryConnection = {
    __typename: 'MessageCategoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<MessageCategory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The event that triggers a specific message. */
export declare enum MessageTrigger {
    /** An account hits X% of their bandwidth cap */
    AccountAtXPercentageOfBandwidthCap = "ACCOUNT_AT_X_PERCENTAGE_OF_BANDWIDTH_CAP",
    /** An account becomes delinquent */
    AccountBecomesDelinquent = "ACCOUNT_BECOMES_DELINQUENT",
    /** An account is activated for the first time */
    AccountFirstActivated = "ACCOUNT_FIRST_ACTIVATED",
    /** An automatic payment fails */
    AutopayFailure = "AUTOPAY_FAILURE",
    /** An automatic payment succeeds */
    AutopaySuccess = "AUTOPAY_SUCCESS",
    /** A credit card is expiring */
    CreditCardExpiring = "CREDIT_CARD_EXPIRING",
    /** An invoice is manually emailed to a contact */
    EmailInvoice = "EMAIL_INVOICE",
    /** An initial invoice is generated for a newly activated account */
    InitialInvoice = "INITIAL_INVOICE",
    /** An invoice has been delinquent for X days */
    InvoiceDelinquentForXDays = "INVOICE_DELINQUENT_FOR_X_DAYS",
    /** An invoice will become delinquent in X days */
    InvoiceDelinquentInXDays = "INVOICE_DELINQUENT_IN_X_DAYS",
    /** An invoice is due in X days */
    InvoiceDueInXDays = "INVOICE_DUE_IN_X_DAYS",
    /** An invoice is past due for X days. */
    InvoicePastDueForXDays = "INVOICE_PAST_DUE_FOR_X_DAYS",
    /** A job is scheduled */
    JobScheduled = "JOB_SCHEDULED",
    /** A late fee is applied to an account */
    LateFeeApplied = "LATE_FEE_APPLIED",
    /** Billing runs successfully for an account */
    MonthlyBilling = "MONTHLY_BILLING",
    /** A new user is created */
    NewUserCreated = "NEW_USER_CREATED",
    /** A payment failed */
    PaymentFailure = "PAYMENT_FAILURE",
    /** A receipt for a payment. */
    PaymentReceipt = "PAYMENT_RECEIPT",
    /** A credit card or bank account payment is refunded */
    PaymentRefunded = "PAYMENT_REFUNDED",
    /** A payment succeeded */
    PaymentSuccess = "PAYMENT_SUCCESS",
    /** A signed contract is emailed to a contact */
    SendSignedContract = "SEND_SIGNED_CONTRACT",
    /** A contract pending signature is emailed to a contact */
    SendUnsignedContract = "SEND_UNSIGNED_CONTRACT",
    /** A user forgets their password and requests a new one */
    UserForgotPassword = "USER_FORGOT_PASSWORD"
}
/** A record of a monthly billing cycle. */
export type MonthlyBillingCompletion = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'MonthlyBillingCompletion';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** A call detail record (CDR). */
    call_detail_records: CallDetailRecordConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date */
    date: Scalars['Date']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoice?: Maybe<Invoice>;
    /** The ID of an `Invoice`. */
    invoice_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A record of a monthly billing cycle. */
export type MonthlyBillingCompletionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record of a monthly billing cycle. */
export type MonthlyBillingCompletionAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A record of a monthly billing cycle. */
export type MonthlyBillingCompletionCall_Detail_RecordsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Float']['input']>;
    charge_rate?: InputMaybe<Scalars['Float']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    direction?: InputMaybe<CallDetailRecordDirection>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    length_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    matched_prefix?: InputMaybe<Scalars['String']['input']>;
    monthly_billing_completion_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    originating_number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix_type?: InputMaybe<CallDetailRecordPrefixType>;
    receiving_number?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    started_at?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record of a monthly billing cycle. */
export type MonthlyBillingCompletionInvoiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A record of a monthly billing cycle. */
export type MonthlyBillingCompletionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record of a monthly billing cycle. */
export type MonthlyBillingCompletionNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `MonthlyBillingCompletionConnection` type. */
export type MonthlyBillingCompletionConnection = {
    __typename: 'MonthlyBillingCompletionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<MonthlyBillingCompletion>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
export type Mutation = {
    __typename: 'Mutation';
    /** Make additional funds available to the instance service fund. */
    addInstanceServiceFunds: InstanceServiceFunds;
    /** Add a package to an account. */
    addPackageToAccount?: Maybe<Array<Maybe<AccountService>>>;
    /** Add a recurring or expiring service to an account. */
    addServiceToAccount?: Maybe<AccountService>;
    /** Allocate a report builder license to a user. */
    allocateLookerExploreLicenseToUser?: Maybe<LookerExploreLicense>;
    /** Allocate a report viewer license to a user. */
    allocateLookerViewLicenseToUser?: Maybe<LookerViewLicense>;
    /** Apply a credit to an invoice with a due balance. */
    applyCreditToInvoice?: Maybe<Invoice>;
    /** Assign generic inventory items to an assignee. */
    assignGenericInventoryItems?: Maybe<GenericInventoryItem>;
    /** Assign one or more inventory items to a new assignee. */
    assignInventoryItems?: Maybe<Array<Maybe<InventoryItem>>>;
    /** Cancel a print to mail batch. */
    cancelPrintToMailBatch?: Maybe<SuccessResponse>;
    /** Check in to a job. */
    checkInToJob?: Maybe<JobCheckIn>;
    /** Check out of a job. */
    checkOutOfJob?: Maybe<JobCheckIn>;
    /** Claim one or many inventory items. */
    claimInventoryItems?: Maybe<SuccessResponse>;
    /** Complete a task that requires a file for a completion type. */
    completeFileTask?: Maybe<Task>;
    /** Complete a job. */
    completeJob?: Maybe<Job>;
    /** Complete or uncomplete a task. */
    completeTask?: Maybe<Task>;
    /** Consume generic inventory items. */
    consumeGenericInventoryItems?: Maybe<GenericInventoryItem>;
    /** Create an access log entry on an entity for the current user. */
    createAccessLog?: Maybe<AccessLog>;
    /** Create a new account. */
    createAccount?: Maybe<Account>;
    /** Create a one time transaction from an adjustment service for an account. */
    createAccountAdjustmentTransaction?: Maybe<TransactionInterface>;
    /** Create an account calix service detail. */
    createAccountCalixServiceDetail?: Maybe<AccountCalixServiceDetail>;
    /** Create a new account group. */
    createAccountGroup?: Maybe<AccountGroup>;
    /** Create a one time transaction for an account. */
    createAccountOneTimeTransaction?: Maybe<Array<Maybe<TransactionInterface>>>;
    /** Create a new account status. */
    createAccountStatus?: Maybe<AccountStatus>;
    /** Create a new account type. */
    createAccountType?: Maybe<AccountType>;
    /** Create a new ACH batch. */
    createAchBatch: Array<Maybe<AchBatch>>;
    /** Create an address list. */
    createAddressList?: Maybe<AddressList>;
    /** Create a new address status. */
    createAddressStatus?: Maybe<AddressStatus>;
    /** Create a new adjustment service. */
    createAdjustmentService?: Maybe<Service>;
    /** Create a new alerting rotation. */
    createAlertingRotation?: Maybe<AlertingRotation>;
    /** Create a new alerting rotation day. */
    createAlertingRotationDay?: Maybe<AlertingRotationDay>;
    /** Create a new application firewall rule. */
    createApplicationFirewallRule?: Maybe<ApplicationFirewallRule>;
    /** Create an Avalara bundled tax definition. */
    createAvalaraTaxDefinition?: Maybe<AvalaraTaxDefinition>;
    /** Create a new bank account. */
    createBankAccount?: Maybe<BankAccount>;
    /** Create a payment using a bank account. */
    createBankAccountPayment?: Maybe<Payment>;
    /** Create a new bank account processor. */
    createBankAccountProcessor?: Maybe<BankAccountProcessor>;
    /** Create a new billing default. */
    createBillingDefault?: Maybe<BillingDefault>;
    /** Create a cable modem provisioner. */
    createCableModemProvisioner?: Maybe<CableModemProvisioner>;
    /** Create a calendar - iCalendar. */
    createCalendarIcal?: Maybe<CalendarIcal>;
    /** Create a Calix integration */
    createCalixIntegration?: Maybe<CalixIntegration>;
    /** Create a call detail record (CDR). */
    createCallDetailRecord?: Maybe<CallDetailRecord>;
    /** Create a Flatfile import of call detail records (CDRs). */
    createCallDetailRecordImportFlatfile?: Maybe<CallDetailRecordImportRecipe>;
    /** Create a call log. */
    createCallLog?: Maybe<CallLog>;
    /** Create a new canned reply. */
    createCannedReply?: Maybe<CannedReply>;
    /** Create a new canned reply category. */
    createCannedReplyCategory?: Maybe<CannedReplyCategory>;
    /** Create a new company. */
    createCompany?: Maybe<Company>;
    /** Create a new contact. */
    createContact?: Maybe<Contact>;
    /** Create a new contract. */
    createContract?: Maybe<Contract>;
    /** Create a new contract template. */
    createContractTemplate?: Maybe<ContractTemplate>;
    /** Create a Core credit card. */
    createCoreCreditCard?: Maybe<CoreCreditCard>;
    /** Create a Core payment. */
    createCorePayment?: Maybe<CorePayment>;
    /** Create a new credit card. */
    createCreditCard?: Maybe<CreditCard>;
    /** Create a credit card. */
    createCreditCardPayment?: Maybe<Payment>;
    /** Create a new credit card processor. */
    createCreditCardProcessor?: Maybe<CreditCardProcessor>;
    /** Create a new custom field. */
    createCustomField?: Maybe<CustomField>;
    /** Create a data service. */
    createDataService?: Maybe<Service>;
    /** Create a data usage top off. */
    createDataUsageTopOff?: Maybe<DataUsageTopOff>;
    /** Create data usage entries.  This will also update each account last aggregation date to the earliest datetime in the submitted recordset.  */
    createDataUsages?: Maybe<SuccessResponse>;
    /** Create a delinquency exclusion. */
    createDelinquencyExclusion?: Maybe<DelinquencyExclusion>;
    /** Create a department. */
    createDepartment?: Maybe<Department>;
    /** Create a new deployment type. */
    createDeploymentType?: Maybe<DeploymentType>;
    /** Create a new deposit slip. */
    createDepositSlip?: Maybe<DepositSlip>;
    /** Create a DHCP server. */
    createDhcpServer?: Maybe<DhcpServer>;
    /** Create a DHCP server identifier. */
    createDhcpServerIdentifier?: Maybe<DhcpServerIdentifier>;
    /** Create a DID. */
    createDid?: Maybe<Did>;
    /** Create a DID assignment. */
    createDidAssignment?: Maybe<DidAssignment>;
    /** Create a Flatfile import of DIDs. */
    createDidImportFlatfile?: Maybe<DidImportRecipe>;
    /** Create a new messaging category. */
    createEmailCategory?: Maybe<EmailCategory>;
    /** Create a new email domain. */
    createEmailDomain?: Maybe<EmailDomain>;
    /** Create a new saved message. */
    createEmailMessage?: Maybe<EmailMessage>;
    /** Create new saved message contents. */
    createEmailMessageContent?: Maybe<EmailMessageContent>;
    /** Create an LTE EPC. */
    createEpc?: Maybe<Epc>;
    /** Create a new expiring service. */
    createExpiringService?: Maybe<Service>;
    /** Create an external marketing integration. */
    createExternalMarketingProvider?: Maybe<ExternalMarketingProvider>;
    /** Create a FCC Form 477 report. */
    createFccForm477Report?: Maybe<FccForm477Report>;
    /** Create a FiberMap Integration. */
    createFibermapIntegration?: Maybe<FibermapIntegration>;
    /** Create a new general ledger code. */
    createGeneralLedgerCode?: Maybe<GeneralLedgerCode>;
    /** Create a generic inventory assignee. */
    createGenericInventoryAssignee?: Maybe<GenericInventoryAssignee>;
    /** Create new generic inventory items. */
    createGenericInventoryItems?: Maybe<GenericInventoryItem>;
    /** Create a new geo tax zone. */
    createGeoTaxZone?: Maybe<GeoTaxZone>;
    /** Create a geofence. */
    createGeofence?: Maybe<Geofence>;
    /** Create a Global Inventory Model Min/Max. */
    createGlobalInventoryModelMinMax?: Maybe<GlobalInventoryModelMinMax>;
    /** Create a GPS tracking provider. */
    createGpsTrackingProvider?: Maybe<GpsTrackingProvider>;
    /** Create an ActiveDirectory identity provider. */
    createIdentityProviderActiveDirectory?: Maybe<IdentityProvider>;
    /** Create a Google identity provider. */
    createIdentityProviderGoogle?: Maybe<IdentityProvider>;
    /** Create a Microsoft identity provider. */
    createIdentityProviderMicrosoft?: Maybe<IdentityProvider>;
    /** Create a SAML identity provider. */
    createIdentityProviderSaml?: Maybe<IdentityProvider>;
    /** Create a new inbound mailbox. */
    createInboundMailbox?: Maybe<InboundMailbox>;
    /** Create an inline device. */
    createInlineDevice?: Maybe<InlineDevice>;
    /** Create a new internal location. */
    createInternalLocation?: Maybe<InternalLocation>;
    /** Create an internal ticket. */
    createInternalTicket?: Maybe<Ticket>;
    /** Create one or many inventory items. */
    createInventoryItems?: Maybe<Array<Maybe<InventoryItem>>>;
    /** Create a new inventory location. */
    createInventoryLocation?: Maybe<InventoryLocation>;
    /** Create a new inventory model. */
    createInventoryModel?: Maybe<InventoryModel>;
    /** Create a new inventory model category. */
    createInventoryModelCategory?: Maybe<InventoryModelCategory>;
    /** Create a new inventory model field. */
    createInventoryModelField?: Maybe<InventoryModelField>;
    /** Create an Inventory Model Min/Max. */
    createInventoryModelMinMax?: Maybe<InventoryModelMinMax>;
    /** Create a new invoice. */
    createInvoice?: Maybe<Invoice>;
    /** Create an invoice attachment. */
    createInvoiceAttachment?: Maybe<InvoiceAttachment>;
    /** Create an invoice message. */
    createInvoiceMessage?: Maybe<InvoiceMessage>;
    /** Create a new IP assignment. */
    createIpAssignment?: Maybe<IpAssignment>;
    /** Create a new IP assignment from a MAC/IP address pair. */
    createIpAssignmentFromDhcpReservation?: Maybe<SuccessResponse>;
    /** Create a new IP pool. */
    createIpPool?: Maybe<IpPool>;
    /** Create a job. */
    createJob?: Maybe<Job>;
    /** Associate a service with a job. */
    createJobService?: Maybe<JobService>;
    /** Create a job type. */
    createJobType?: Maybe<JobType>;
    /** Create linked addresses in bulk. */
    createLinkedAddresses?: Maybe<CreateLinkedAddressesResponse>;
    /** Create a new local prefix. */
    createLocalPrefix?: Maybe<LocalPrefix>;
    /** Create an LTE provider. */
    createLteProvider?: Maybe<LteProvider>;
    /** Create a new account mailing address. */
    createMailingAddress?: Maybe<Address>;
    /** Create a new manufacturer. */
    createManufacturer?: Maybe<Manufacturer>;
    /** Create a map overlay. */
    createMapOverlay?: Maybe<MapOverlay>;
    /** Create a mass email communication. */
    createMassEmail?: Maybe<MassEmail>;
    /** Create a mass message communication. */
    createMassMessage?: Maybe<SuccessResponseWithId>;
    /** Create a messaging category. */
    createMessageCategory?: Maybe<MessageCategory>;
    /** Create a Netflow allowed subnet. */
    createNetflowAllowedSubnet?: Maybe<NetflowAllowedSubnet>;
    /** Create a Netflow endpoint. */
    createNetflowEndpoint?: Maybe<NetflowEndpoint>;
    /** Create a Netflow whitelist. */
    createNetflowWhitelist?: Maybe<NetflowWhitelist>;
    /** Create a Network Monitoring Graph. */
    createNetworkMonitoringGraph?: Maybe<NetworkMonitoringGraph>;
    /** Create a Network Monitoring Template. */
    createNetworkMonitoringTemplate?: Maybe<NetworkMonitoringTemplate>;
    /** Create a network site. */
    createNetworkSite?: Maybe<NetworkSite>;
    /** Create a non-inventory item. */
    createNonInventoryItem?: Maybe<NonInventoryItem>;
    /** Create a new note. */
    createNote?: Maybe<Note>;
    /** Create a new one time service. */
    createOneTimeService?: Maybe<Service>;
    /** Create an order group. */
    createOrderGroup?: Maybe<OrderGroup>;
    /** Create an overage service. */
    createOverageService?: Maybe<Service>;
    /** Create a package. */
    createPackage?: Maybe<Package>;
    /** Create a new PayPal credential. */
    createPayPalCredential?: Maybe<PayPalCredential>;
    /** Create a new payment without a payment method. */
    createPayment?: Maybe<Payment>;
    /** Create a multiple new payment without a payment method. */
    createPayments: PaymentResultConnection;
    /** Create a personal access token. */
    createPersonalAccessToken?: Maybe<PersonalAccessToken>;
    /** Create a new phone number. */
    createPhoneNumber?: Maybe<PhoneNumber>;
    /** Create a new phone number type. */
    createPhoneNumberType?: Maybe<PhoneNumberType>;
    /** Create a poller. */
    createPoller?: Maybe<Poller>;
    /** Create a new printed invoice batch. */
    createPrintedInvoiceBatch?: Maybe<SuccessResponse>;
    /** Create a public ticket. */
    createPublicTicket?: Maybe<Ticket>;
    /** Create a purchase order. */
    createPurchaseOrder?: Maybe<PurchaseOrder>;
    /** Create a new RADIUS account. */
    createRadiusAccount?: Maybe<RadiusAccount>;
    /** Create a RADIUS group. */
    createRadiusGroup?: Maybe<RadiusGroup>;
    /** Create a RADIUS group reply attribute. */
    createRadiusGroupReplyAttribute?: Maybe<RadiusGroupReplyAttribute>;
    /** Create a RADIUS server. */
    createRadiusServer?: Maybe<RadiusServer>;
    /** Create a rate center. */
    createRateCenter?: Maybe<RateCenter>;
    /** Add an entity to your recent items list. */
    createRecentItem?: Maybe<Array<Maybe<RecentItem>>>;
    /** Create a new recurring service. */
    createRecurringService?: Maybe<Service>;
    /** Create a report. */
    createReport?: Maybe<AvailableReport>;
    /** Create a new role. */
    createRole?: Maybe<Role>;
    /** Create a saved message category. */
    createSavedMessageCategory?: Maybe<SavedMessageCategory>;
    /** Create a schedule address. */
    createScheduleAddress?: Maybe<ScheduleAddress>;
    /** Create a schedule availability. */
    createScheduleAvailability?: Maybe<ScheduleAvailability>;
    /** Create a schedule availability day/time. */
    createScheduleAvailabilityDayTime?: Maybe<ScheduleAvailabilityDayTime>;
    /** Create a schedule blocker. */
    createScheduleBlocker?: Maybe<ScheduleBlocker>;
    /** Create a schedule blocker day/time. */
    createScheduleBlockerDayTime?: Maybe<ScheduleBlockerDayTime>;
    /** Create a schedule time off. */
    createScheduleTimeOff?: Maybe<ScheduleTimeOff>;
    /** Create a scheduled event. */
    createScheduledEvent?: Maybe<ScheduledEvent>;
    /** Create a saved search filter for the current user. */
    createSearchFilter?: Maybe<SearchFilter>;
    /** Create service metadata. */
    createServiceMetadata?: Maybe<ServiceMetadata>;
    /** Create a new serviceable address. */
    createServiceableAddress?: Maybe<Address>;
    /** Create a Signature. */
    createSignature?: Maybe<Signature>;
    /** Create an SNMP OID. */
    createSnmpOid?: Maybe<SnmpOid>;
    /** Create an SNMP OID threshold. */
    createSnmpOidThreshold?: Maybe<SnmpOidThreshold>;
    /** Create an SNMP override. */
    createSnmpOverride?: Maybe<SnmpOverride>;
    /** Create a stored view. */
    createStoredView?: Maybe<StoredView>;
    /** Create a new subnet. */
    createSubnet?: Maybe<Subnet>;
    /** Create a subscription. */
    createSubscription?: Maybe<Subscription>;
    /** Create a new supernet. */
    createSupernet?: Maybe<Supernet>;
    /** Directly trigger a system backup of all database tables. */
    createSystemBackup?: Maybe<SystemBackup>;
    /** Create a destination that system backups can be exported to. */
    createSystemBackupDestination?: Maybe<SystemBackupDestination>;
    /** Create a new task. */
    createTask?: Maybe<Task>;
    /** Create a task template. */
    createTaskTemplate?: Maybe<TaskTemplate>;
    /** Create a task template item. */
    createTaskTemplateItem?: Maybe<TaskTemplateItem>;
    /** Create a new tax. */
    createTax?: Maybe<Tax>;
    /** Create a tax exemption. */
    createTaxExemption?: Maybe<TaxExemption>;
    /** Create a tax override. */
    createTaxOverride?: Maybe<TaxOverride>;
    /** Create a tax provider. */
    createTaxProvider?: Maybe<TaxProvider>;
    /** Create a new ticket category. */
    createTicketCategory?: Maybe<TicketCategory>;
    /** Create a ticket comment. */
    createTicketComment?: Maybe<TicketComment>;
    /** Create a new ticket group. */
    createTicketGroup?: Maybe<TicketGroup>;
    /** Create a ticket recipient. */
    createTicketRecipient?: Maybe<TicketRecipient>;
    /** Create a new ticket reply. */
    createTicketReply?: Maybe<TicketReply>;
    /** Create a new bank account that has already been tokenized. */
    createTokenizedBankAccount?: Maybe<BankAccount>;
    /** Create a new credit card that has already been tokenized. */
    createTokenizedCreditCard?: Maybe<CreditCard>;
    /** DEPRECATED: Create a new triggered email. See createTriggeredMessageMutation. */
    createTriggeredEmail?: Maybe<TriggeredEmail>;
    /** Create a triggered message. */
    createTriggeredMessage?: Maybe<TriggeredMessage>;
    /** Create a new uninventoried MAC address. */
    createUninventoriedMacAddress?: Maybe<UninventoriedMacAddress>;
    /** Create a usage based billing policy. */
    createUsageBasedBillingPolicy?: Maybe<UsageBasedBillingPolicy>;
    /** Create a free period in a `UsageBasedBillingPolicy`. */
    createUsageBasedBillingPolicyFreePeriod?: Maybe<UsageBasedBillingPolicyFreePeriod>;
    /** Create a new user. The user will be sent an email with a temporary password after creation. */
    createUser?: Maybe<User>;
    /** Create a new vehicle. */
    createVehicle?: Maybe<Vehicle>;
    /** Create a vendor. */
    createVendor?: Maybe<Vendor>;
    /** Create a vendor item. */
    createVendorItem?: Maybe<VendorItem>;
    /** Create a voice provider. */
    createVoiceProvider?: Maybe<VoiceProvider>;
    /** Create a voice provider rate. */
    createVoiceProviderRate?: Maybe<VoiceProviderRate>;
    /** Create a Flatfile import of voice provider rates. */
    createVoiceProviderRateImportFlatfile?: Maybe<VoiceProviderRateImportRecipe>;
    /** Create a voice service. */
    createVoiceService?: Maybe<Service>;
    /** Create a single voice service configuration parameter. */
    createVoiceServiceGenericParameter?: Maybe<VoiceServiceGenericParameter>;
    /** Create a webhook endpoint. */
    createWebhookEndpoint?: Maybe<WebhookEndpoint>;
    /** Create a webhook endpoint event. */
    createWebhookEndpointEvent?: Maybe<WebhookEndpointEvent>;
    /** Delete an account calix service detail. */
    deleteAccountCalixServiceDetail?: Maybe<SuccessResponse>;
    /** Delete an account group. */
    deleteAccountGroup?: Maybe<SuccessResponse>;
    /** Delete a package from an account. */
    deleteAccountPackage?: Maybe<SuccessResponse>;
    /** Delete a service from an account. */
    deleteAccountService?: Maybe<SuccessResponse>;
    /** Delete an account status. */
    deleteAccountStatus?: Maybe<SuccessResponse>;
    /** Delete an account type. */
    deleteAccountType?: Maybe<SuccessResponse>;
    /** Delete an account voice service detail. */
    deleteAccountVoiceServiceDetail?: Maybe<SuccessResponse>;
    /** Delete an ACH batch. */
    deleteAchBatch?: Maybe<SuccessResponse>;
    /** Delete an address list. */
    deleteAddressList?: Maybe<SuccessResponse>;
    /** Delete an address status. */
    deleteAddressStatus?: Maybe<SuccessResponse>;
    /** Delete an alerting rotation. */
    deleteAlertingRotation?: Maybe<SuccessResponse>;
    /** Delete an alerting rotation day. */
    deleteAlertingRotationDay?: Maybe<SuccessResponse>;
    /** Delete an application firewall rule. */
    deleteApplicationFirewallRule?: Maybe<SuccessResponse>;
    /** Delete a bank account. */
    deleteBankAccount?: Maybe<SuccessResponse>;
    /** Delete a bank account processor. */
    deleteBankAccountProcessor?: Maybe<SuccessResponse>;
    /** Delete a billing default. */
    deleteBillingDefault?: Maybe<SuccessResponse>;
    /** Delete a cable modem provisioner. */
    deleteCableModemProvisioner?: Maybe<SuccessResponse>;
    /** Delete a calendar - iCalendar. */
    deleteCalendarIcal?: Maybe<SuccessResponse>;
    /** Delete a Calix integration */
    deleteCalixIntegration?: Maybe<SuccessResponse>;
    /** Delete a call detail record (CDR). */
    deleteCallDetailRecord?: Maybe<SuccessResponse>;
    /** Delete a call log. */
    deleteCallLog?: Maybe<SuccessResponse>;
    /** Delete a canned reply. */
    deleteCannedReply?: Maybe<SuccessResponse>;
    /** Delete a canned reply category. */
    deleteCannedReplyCategory?: Maybe<SuccessResponse>;
    /** Delete a contact. */
    deleteContact?: Maybe<SuccessResponse>;
    /** Delete an unsigned contract. */
    deleteContract?: Maybe<SuccessResponse>;
    /** Delete a contract template. */
    deleteContractTemplate?: Maybe<SuccessResponse>;
    /** Delete a credit card. */
    deleteCreditCard?: Maybe<SuccessResponse>;
    /** Delete a credit card processor. */
    deleteCreditCardProcessor?: Maybe<SuccessResponse>;
    /** Delete a custom field. */
    deleteCustomField?: Maybe<SuccessResponse>;
    /** Delete a debit. */
    deleteDebit?: Maybe<SuccessResponse>;
    /** Delete a delinquency exclusion. */
    deleteDelinquencyExclusion?: Maybe<SuccessResponse>;
    /** Delete a department. */
    deleteDepartment?: Maybe<SuccessResponse>;
    /** Delete a deployment type. */
    deleteDeploymentType?: Maybe<SuccessResponse>;
    /** Delete a deposit slip. */
    deleteDepositSlip?: Maybe<SuccessResponse>;
    /** Delete a DHCP server. */
    deleteDhcpServer?: Maybe<SuccessResponse>;
    /** Delete a DHCP server identifier. */
    deleteDhcpServerIdentifier?: Maybe<SuccessResponse>;
    /** Delete a DID. */
    deleteDid?: Maybe<SuccessResponse>;
    /** Delete a DID assignment. */
    deleteDidAssignment?: Maybe<SuccessResponse>;
    /** Delete a discount. */
    deleteDiscount?: Maybe<SuccessResponse>;
    /** Delete n messaging category. */
    deleteEmailCategory?: Maybe<SuccessResponse>;
    /** Delete an email domain. */
    deleteEmailDomain?: Maybe<SuccessResponse>;
    /** Delete a saved message. */
    deleteEmailMessage?: Maybe<SuccessResponse>;
    /** Delete saved message contents. */
    deleteEmailMessageContent?: Maybe<SuccessResponse>;
    /** Delete an LTE EPC. */
    deleteEpc?: Maybe<SuccessResponse>;
    /** Delete an external marketing integration. */
    deleteExternalMarketingProvider?: Maybe<SuccessResponse>;
    /** Delete a FiberMap Integration. */
    deleteFibermapIntegration?: Maybe<SuccessResponse>;
    /** Delete a file. */
    deleteFile?: Maybe<SuccessResponse>;
    /** Delete a general ledger code. */
    deleteGeneralLedgerCode?: Maybe<SuccessResponse>;
    /** Delete a generic inventory assignee. */
    deleteGenericInventoryAssignee?: Maybe<SuccessResponse>;
    /** Delete generic inventory items. */
    deleteGenericInventoryItems?: Maybe<GenericInventoryItem>;
    /** Delete a geo tax zone. */
    deleteGeoTaxZone?: Maybe<SuccessResponse>;
    /** Delete a geofence. */
    deleteGeofence?: Maybe<SuccessResponse>;
    /** Delete a Global Inventory Model Min/Max. */
    deleteGlobalInventoryModelMinMax?: Maybe<SuccessResponse>;
    /** Delete a GPS tracking provider. */
    deleteGpsTrackingProvider?: Maybe<SuccessResponse>;
    /** Delete an identity provider. */
    deleteIdentityProvider?: Maybe<SuccessResponse>;
    /** Delete an inbound mailbox. */
    deleteInboundMailbox?: Maybe<SuccessResponse>;
    /** Delete an inline device. */
    deleteInlineDevice?: Maybe<SuccessResponse>;
    /** Delete an internal location. */
    deleteInternalLocation?: Maybe<SuccessResponse>;
    /** Delete an inventory item. */
    deleteInventoryItem?: Maybe<SuccessResponse>;
    /** Delete an inventory location. */
    deleteInventoryLocation?: Maybe<SuccessResponse>;
    /** Delete an inventory model. */
    deleteInventoryModel?: Maybe<SuccessResponse>;
    /** Delete an inventory model category. */
    deleteInventoryModelCategory?: Maybe<SuccessResponse>;
    /** Delete an inventory model field. */
    deleteInventoryModelField?: Maybe<SuccessResponse>;
    /** Delete an Inventory Model Min/Max. */
    deleteInventoryModelMinMax?: Maybe<SuccessResponse>;
    /** Delete an invoice. */
    deleteInvoice?: Maybe<SuccessResponse>;
    /** Delete an invoice attachment. */
    deleteInvoiceAttachment?: Maybe<SuccessResponse>;
    /** Delete an invoice message. */
    deleteInvoiceMessage?: Maybe<SuccessResponse>;
    /** Delete an IP assignment. */
    deleteIpAssignment?: Maybe<SuccessResponse>;
    /** Delete an IP pool. */
    deleteIpPool?: Maybe<SuccessResponse>;
    /** Delete a job. */
    deleteJob?: Maybe<SuccessResponse>;
    /** Delete a service from a job. */
    deleteJobService?: Maybe<SuccessResponse>;
    /** Delete a job type. */
    deleteJobType?: Maybe<SuccessResponse>;
    /** Delete a local prefix. */
    deleteLocalPrefix?: Maybe<SuccessResponse>;
    /** Delete an LTE provider. */
    deleteLteProvider?: Maybe<SuccessResponse>;
    /** Delete an account mailing address. */
    deleteMailingAddress?: Maybe<SuccessResponse>;
    /** Delete a manufacturer. */
    deleteManufacturer?: Maybe<SuccessResponse>;
    /** Delete a map overlay. */
    deleteMapOverlay?: Maybe<SuccessResponse>;
    /** Delete a messaging category. */
    deleteMessageCategory?: Maybe<SuccessResponse>;
    /** Delete a Netflow allowed subnet. */
    deleteNetflowAllowedSubnet?: Maybe<SuccessResponse>;
    /** Delete a Netflow endpoint. */
    deleteNetflowEndpoint?: Maybe<SuccessResponse>;
    /** Delete a Netflow whitelist. */
    deleteNetflowWhitelist?: Maybe<SuccessResponse>;
    /** Delete a Network Monitoring Graph. */
    deleteNetworkMonitoringGraph?: Maybe<SuccessResponse>;
    /** Delete a Network Monitoring Template. */
    deleteNetworkMonitoringTemplate?: Maybe<SuccessResponse>;
    /** Delete a network site. */
    deleteNetworkSite?: Maybe<SuccessResponse>;
    /** Delete a non-inventory item. */
    deleteNonInventoryItem?: Maybe<SuccessResponse>;
    /** Delete a note. */
    deleteNote?: Maybe<SuccessResponse>;
    /** Delete an order group. */
    deleteOrderGroup?: Maybe<SuccessResponse>;
    /** Delete a package. */
    deletePackage?: Maybe<SuccessResponse>;
    /** Delete a PayPal credential. */
    deletePayPalCredential?: Maybe<SuccessResponse>;
    /** Delete a payment that was created without a payment method. */
    deletePayment?: Maybe<SuccessResponse>;
    /** Delete a personal access token. */
    deletePersonalAccessToken?: Maybe<SuccessResponse>;
    /** Delete a phone number. */
    deletePhoneNumber?: Maybe<SuccessResponse>;
    /** Delete a phone number type. */
    deletePhoneNumberType?: Maybe<SuccessResponse>;
    /** Delete a poller. */
    deletePoller?: Maybe<SuccessResponse>;
    /** Delete a RADIUS account. */
    deleteRadiusAccount?: Maybe<SuccessResponse>;
    /** Delete a RADIUS group. */
    deleteRadiusGroup?: Maybe<SuccessResponse>;
    /** Delete a RADIUS group reply attribute. */
    deleteRadiusGroupReplyAttribute?: Maybe<SuccessResponse>;
    /** Delete a RADIUS server. */
    deleteRadiusServer?: Maybe<SuccessResponse>;
    /** Delete a rate center. */
    deleteRateCenter?: Maybe<SuccessResponse>;
    /** Delete a refunded payment. */
    deleteRefundedPayment?: Maybe<SuccessResponse>;
    /** Delete a reversed payment. */
    deleteReversedPayment?: Maybe<SuccessResponse>;
    /** Delete a role. */
    deleteRole?: Maybe<SuccessResponse>;
    /** Delete a saved message category. */
    deleteSavedMessageCategory?: Maybe<SuccessResponse>;
    /** Delete a schedule address. */
    deleteScheduleAddress?: Maybe<SuccessResponse>;
    /** Delete a schedule availability. */
    deleteScheduleAvailability?: Maybe<SuccessResponse>;
    /** Delete a schedule availability day/time. */
    deleteScheduleAvailabilityDayTime?: Maybe<SuccessResponse>;
    /** Delete a schedule blocker. */
    deleteScheduleBlocker?: Maybe<SuccessResponse>;
    /** Delete a schedule blocker day/time. */
    deleteScheduleBlockerDayTime?: Maybe<SuccessResponse>;
    /** Delete a schedule time off. */
    deleteScheduleTimeOff?: Maybe<SuccessResponse>;
    /** Delete a scheduled event. */
    deleteScheduledEvent?: Maybe<SuccessResponse>;
    /** Delete a saved search filter for the current user. */
    deleteSearchFilter?: Maybe<SuccessResponse>;
    /** Delete a service. */
    deleteService?: Maybe<SuccessResponse>;
    /** Delete service metadata. */
    deleteServiceMetadata?: Maybe<SuccessResponse>;
    /** Delete a serviceable address. */
    deleteServiceableAddress?: Maybe<SuccessResponse>;
    /** Delete a Signature. */
    deleteSignature?: Maybe<SuccessResponse>;
    /** Delete an SNMP OID. */
    deleteSnmpOid?: Maybe<SuccessResponse>;
    /** Delete an SNMP OID threshold. */
    deleteSnmpOidThreshold?: Maybe<SuccessResponse>;
    /** Delete an SNMP override. */
    deleteSnmpOverride?: Maybe<SuccessResponse>;
    /** Delete a stored view. */
    deleteStoredView?: Maybe<SuccessResponse>;
    /** Delete a subnet. */
    deleteSubnet?: Maybe<SuccessResponse>;
    /** Delete a subscription. */
    deleteSubscription?: Maybe<SuccessResponse>;
    /** Delete a supernet. */
    deleteSupernet?: Maybe<SuccessResponse>;
    /** Delete a system backup destination. */
    deleteSystemBackupDestination?: Maybe<SuccessResponse>;
    /** Delete a task. */
    deleteTask?: Maybe<SuccessResponse>;
    /** Delete a task template. */
    deleteTaskTemplate?: Maybe<SuccessResponse>;
    /** Delete a task template item. */
    deleteTaskTemplateItem?: Maybe<SuccessResponse>;
    /** Delete a tax. */
    deleteTax?: Maybe<SuccessResponse>;
    /** Delete a tax exemption. */
    deleteTaxExemption?: Maybe<SuccessResponse>;
    /** Delete a tax override. */
    deleteTaxOverride?: Maybe<SuccessResponse>;
    /** Delete a tax provider. */
    deleteTaxProvider?: Maybe<SuccessResponse>;
    /** Delete a ticket. */
    deleteTicket?: Maybe<SuccessResponse>;
    /** Delete a ticket category. */
    deleteTicketCategory?: Maybe<SuccessResponse>;
    /** Delete a ticket comment. */
    deleteTicketComment?: Maybe<SuccessResponse>;
    /** Delete a ticket group. */
    deleteTicketGroup?: Maybe<SuccessResponse>;
    /** Delete a ticket recipient. */
    deleteTicketRecipient?: Maybe<SuccessResponse>;
    /** Delete multiple tickets. */
    deleteTickets?: Maybe<SuccessResponse>;
    /** DEPRECATED: Delete a triggered email. See deleteTriggeredMessageMutation. */
    deleteTriggeredEmail?: Maybe<SuccessResponse>;
    /** Delete a triggered message. */
    deleteTriggeredMessage?: Maybe<SuccessResponse>;
    /** Delete an uninventoried MAC address. */
    deleteUninventoriedMacAddress?: Maybe<SuccessResponse>;
    /** Delete a usage based billing policy. */
    deleteUsageBasedBillingPolicy?: Maybe<SuccessResponse>;
    /** Delete a usage based billing policy free period. */
    deleteUsageBasedBillingPolicyFreePeriod?: Maybe<SuccessResponse>;
    /** Delete a vehicle. */
    deleteVehicle?: Maybe<SuccessResponse>;
    /** Delete a vendor item. */
    deleteVendorItem?: Maybe<SuccessResponse>;
    /** Delete a voice provider. */
    deleteVoiceProvider?: Maybe<SuccessResponse>;
    /** Delete a voice provider rate. */
    deleteVoiceProviderRate?: Maybe<SuccessResponse>;
    /** Delete a single voice service configuration parameter. */
    deleteVoiceServiceGenericParameter?: Maybe<SuccessResponse>;
    /** Delete a webhook endpoint. */
    deleteWebhookEndpoint?: Maybe<SuccessResponse>;
    /** Delete a webhook endpoint event. */
    deleteWebhookEndpointEvent?: Maybe<SuccessResponse>;
    /** Disconnect an account. */
    disconnectAccount?: Maybe<Account>;
    /** Disconnect a RADIUS session. */
    disconnectRadiusSession?: Maybe<RadiusSessionHistory>;
    /** Resend emailed invoices. */
    emailInvoiceBatch?: Maybe<SuccessResponse>;
    /** Email an invoice to a contact manually. */
    emailInvoiceToContact?: Maybe<SuccessResponse>;
    /** Email an approved purchase order to its vendor. */
    emailPurchaseOrderToVendor?: Maybe<SuccessResponse>;
    /** Generate import credentials for use with Flatfile. */
    generateImportCredentialsFlatfile?: Maybe<ImportCredentialsFlatfile>;
    /** Generate Splice Report from Vetro FiberMap. */
    generateSpliceReport?: Maybe<SuccessResponse>;
    /** mutations.generateTestWebhookMutation */
    generateTestWebhook?: Maybe<WebhookTestResponse>;
    /** Link a parent and child account. */
    linkAccounts?: Maybe<Account>;
    /** Link an entity to a ticket. */
    linkEntityToTicket?: Maybe<Ticket>;
    /** Link Fibermap Plan To Network Site */
    linkFibermapPlanToNetworkSite?: Maybe<NetworkSite>;
    /** Link Fibermap Service Location To Address */
    linkFibermapServiceLocationToAddress?: Maybe<Address>;
    /** Link a file to an entity. */
    linkFileToEntity?: Maybe<FileableInterface>;
    /** Link a parent and child invoice. */
    linkInvoices?: Maybe<Invoice>;
    /** Link a TowerCoverage submission to a new or existing serviceable address. */
    linkTowercoverageSubmissionToServiceableAddressMutation?: Maybe<TowercoverageSubmission>;
    /** Merge two subnets together. */
    mergeSubnets?: Maybe<Subnet>;
    /** Merge multiple tickets into one. */
    mergeTickets?: Maybe<Ticket>;
    /** Publish a report. */
    publishReport?: Maybe<AvailableReport>;
    /** Forced reboot of an inventory item */
    rebootInventoryItem?: Maybe<InventoryItem>;
    /** Receive a list of purchase order items into an inventory location. */
    receivePurchaseOrderItems?: Maybe<Array<Maybe<InventoryItem>>>;
    /** Refund a payment. */
    refundPayment?: Maybe<RefundedPayment>;
    /** Reindex a model in elastic. */
    reindexModel?: Maybe<SuccessResponse>;
    /** Reschedule a schedule blocker. */
    rescheduleScheduleBlocker?: Maybe<ScheduleBlockerOverride>;
    /** Resend a copy of a contract. */
    resendContract?: Maybe<SuccessResponse>;
    /** Resend a failed print to mail batch. */
    resendPrintToMailBatch?: Maybe<SuccessResponse>;
    /** Resend the initial setup email to a newly created user. */
    resendUserCreationEmail?: Maybe<SuccessResponse>;
    /** Software reset connection of an inventory item */
    resetInventoryItem?: Maybe<InventoryItem>;
    /** Respond to an instance management request. */
    respondToInstanceManagementRequest?: Maybe<InstanceManagementRequest>;
    /** Retries the creation of an address from a specific unmapped Vetro Fibermap Service location. */
    resyncFibermapServiceLocationToAddress?: Maybe<FibermapServiceLocation>;
    /** Reverse a debit. */
    reverseDebit?: Maybe<Debit>;
    /** Reverse a discount. */
    reverseDiscount?: Maybe<Discount>;
    /** Reverse a payment. */
    reversePayment?: Maybe<ReversedPayment>;
    /** Schedule many jobs and schedule blocker overrides at the same time. */
    scheduleManyJobsAndScheduleBlockerOverrides?: Maybe<SuccessResponse>;
    /** Schedule jobs and schedule blocker overrides and skip scheduling validations */
    scheduleManyJobsAndScheduleBlockerOverridesSkipsValidation?: Maybe<SuccessResponse>;
    /** Send an email to verify an email domain. */
    sendEmailDomainVerificationEmail?: Maybe<SuccessResponse>;
    /** mutations.sendTestEmailMutation */
    sendTestEmail?: Maybe<SuccessResponse>;
    /** mutations.sendTestTriggeredEmailMutation */
    sendTestTriggeredEmail?: Maybe<SuccessResponse>;
    /** Set the active stored view. */
    setActiveStoredView?: Maybe<SuccessResponse>;
    /** Split a subnet in half. */
    splitSubnet?: Maybe<Array<Maybe<Subnet>>>;
    /** Synchronize a cable modem provisioner. */
    synchronizeCableModemProvisioner?: Maybe<CableModemProvisioner>;
    /** Full synchronization of a Calix integration */
    synchronizeCalixIntegration?: Maybe<CalixIntegration>;
    /** Removes all existing leases and writes new ones based on existing IP assignments. */
    synchronizeDhcpServer?: Maybe<DhcpServer>;
    /** Synchronize a Fibermap Integration */
    synchronizeFibermapIntegration?: Maybe<FibermapIntegration>;
    /** Synchronize an inline device. */
    synchronizeInlineDevice?: Maybe<InlineDevice>;
    /** Synchronize an LTE provider. */
    synchronizeLteProvider?: Maybe<LteProvider>;
    /** Synchronize a RADIUS server. */
    synchronizeRadiusServer?: Maybe<RadiusServer>;
    /** Toggle all notifications as read or unread. */
    toggleAllNotifications?: Maybe<SuccessResponse>;
    /** Toggle notifications as read or unread. */
    toggleNotifications?: Maybe<SuccessResponse>;
    /** Unclaim one or many inventory items. */
    unclaimInventoryItems?: Maybe<SuccessResponse>;
    /** Unlink a parent and child account. */
    unlinkAccounts?: Maybe<Account>;
    /** Unlink an entity from a ticket. */
    unlinkEntityFromTicket?: Maybe<Ticket>;
    /** Unlink a parent and child invoice. */
    unlinkInvoices?: Maybe<Invoice>;
    /** Update an account. */
    updateAccount?: Maybe<Account>;
    /** Update a variety of account billing parameters. */
    updateAccountBillingParameter?: Maybe<AccountBillingParameter>;
    /** Update an account calix service detail. */
    updateAccountCalixServiceDetail?: Maybe<AccountCalixServiceDetail>;
    /** Update an account group. */
    updateAccountGroup?: Maybe<AccountGroup>;
    /** Update an account service. */
    updateAccountService?: Maybe<AccountService>;
    /** Update an account status. */
    updateAccountStatus?: Maybe<AccountStatus>;
    /** Update an account type. */
    updateAccountType?: Maybe<AccountType>;
    /** Update an account voice service detail. */
    updateAccountVoiceServiceDetail?: Maybe<AccountVoiceServiceDetail>;
    /** Update an address list. */
    updateAddressList?: Maybe<AddressList>;
    /** Update an address status. */
    updateAddressStatus?: Maybe<AddressStatus>;
    /** Update an adjustment service. */
    updateAdjustmentService?: Maybe<Service>;
    /** Update an alerting rotation. */
    updateAlertingRotation?: Maybe<AlertingRotation>;
    /** Update an alerting rotation day. */
    updateAlertingRotationDay?: Maybe<AlertingRotationDay>;
    /** Update an application firewall rule. */
    updateApplicationFirewallRule?: Maybe<ApplicationFirewallRule>;
    /** Update an auth provider. */
    updateAuthProvider?: Maybe<AuthProvider>;
    /** Update an Avalara bundled tax definition. */
    updateAvalaraTaxDefinition?: Maybe<AvalaraTaxDefinition>;
    /** Update a bank account. */
    updateBankAccount?: Maybe<BankAccount>;
    /** Update a bank account processor. */
    updateBankAccountProcessor?: Maybe<BankAccountProcessor>;
    /** Update a billing default. */
    updateBillingDefault?: Maybe<BillingDefault>;
    /** Update the system billing settings. */
    updateBillingSettings?: Maybe<BillingSetting>;
    /** Update a cable modem provisioner. */
    updateCableModemProvisioner?: Maybe<CableModemProvisioner>;
    /** Update a calendar - iCalendar. */
    updateCalendarIcal?: Maybe<CalendarIcal>;
    /** Update a iCalendar calendar token */
    updateCalendarIcalToken?: Maybe<CalendarIcal>;
    /** Update system settings related to calendars. */
    updateCalendarSystemSettings?: Maybe<SystemSetting>;
    /** Update a Calix integration */
    updateCalixIntegration?: Maybe<CalixIntegration>;
    /** Update a call detail record (CDR). */
    updateCallDetailRecord?: Maybe<CallDetailRecord>;
    /** Update a call log. */
    updateCallLog?: Maybe<CallLog>;
    /** Update a canned reply. */
    updateCannedReply?: Maybe<CannedReply>;
    /** Update a canned reply category. */
    updateCannedReplyCategory?: Maybe<CannedReplyCategory>;
    /** Update a company. */
    updateCompany?: Maybe<Company>;
    /** Update a contact. */
    updateContact?: Maybe<Contact>;
    /** Update a contract. */
    updateContract?: Maybe<Contract>;
    /** Update a contract template. */
    updateContractTemplate?: Maybe<ContractTemplate>;
    /** Update a credit card. */
    updateCreditCard?: Maybe<CreditCard>;
    /** Update a credit card processor. */
    updateCreditCardProcessor?: Maybe<CreditCardProcessor>;
    /** Update a custom field. */
    updateCustomField?: Maybe<CustomField>;
    /** Update a data service. */
    updateDataService?: Maybe<Service>;
    /** Update a data usage history record. */
    updateDataUsageHistory?: Maybe<DataUsageHistory>;
    /** Update a debit. */
    updateDebit?: Maybe<Debit>;
    /** Update a delinquency exclusion. */
    updateDelinquencyExclusion?: Maybe<DelinquencyExclusion>;
    /** Update a department. */
    updateDepartment?: Maybe<Department>;
    /** Update a deployment type. */
    updateDeploymentType?: Maybe<DeploymentType>;
    /** Update a deposit slip. */
    updateDepositSlip?: Maybe<DepositSlip>;
    /** Update a DHCP server. */
    updateDhcpServer?: Maybe<DhcpServer>;
    /** Update a DHCP server identifier. */
    updateDhcpServerIdentifier?: Maybe<DhcpServerIdentifier>;
    /** Update a DID. */
    updateDid?: Maybe<Did>;
    /** Update a DID assignment. */
    updateDidAssignment?: Maybe<DidAssignment>;
    /** Update a discount. */
    updateDiscount?: Maybe<Discount>;
    /** Update the assigned drivers on a vehicle. */
    updateDrivers?: Maybe<Vehicle>;
    /** Update a messaging category. */
    updateEmailCategory?: Maybe<EmailCategory>;
    /** Update a saved message. */
    updateEmailMessage?: Maybe<EmailMessage>;
    /** Update saved message contents. */
    updateEmailMessageContent?: Maybe<EmailMessageContent>;
    /** Update the custom fields on an entity. */
    updateEntityCustomFields?: Maybe<Array<Maybe<CustomFieldData>>>;
    /** Update an LTE EPC. */
    updateEpc?: Maybe<Epc>;
    /** Update an expiring service. */
    updateExpiringService?: Maybe<Service>;
    /** Update an external marketing integration. */
    updateExternalMarketingProvider?: Maybe<ExternalMarketingProvider>;
    /** Update a FiberMap Integration. */
    updateFibermapIntegration?: Maybe<FibermapIntegration>;
    /** Update a Fibermap Plan. */
    updateFibermapPlan?: Maybe<FibermapPlan>;
    /** Update a Fibermap Service Location. */
    updateFibermapServiceLocation?: Maybe<FibermapServiceLocation>;
    /** Update a file. */
    updateFile?: Maybe<File>;
    /** Update a general ledger code. */
    updateGeneralLedgerCode?: Maybe<GeneralLedgerCode>;
    /** Update a generic inventory assignee. */
    updateGenericInventoryAssignee?: Maybe<GenericInventoryAssignee>;
    /** Update a geo tax zone. */
    updateGeoTaxZone?: Maybe<GeoTaxZone>;
    /** Update a geofence. */
    updateGeofence?: Maybe<Geofence>;
    /** Update a Global Inventory Model Min/Max. */
    updateGlobalInventoryModelMinMax?: Maybe<GlobalInventoryModelMinMax>;
    /** Update a GPS tracking provider. */
    updateGpsTrackingProvider?: Maybe<GpsTrackingProvider>;
    /** Update an ActiveDirectory identity provider. */
    updateIdentityProviderActiveDirectory?: Maybe<IdentityProvider>;
    /** Update a Google identity provider. */
    updateIdentityProviderGoogle?: Maybe<IdentityProvider>;
    /** Update a Microsoft identity provider. */
    updateIdentityProviderMicrosoft?: Maybe<IdentityProvider>;
    /** Update a SAML identity provider. */
    updateIdentityProviderSaml?: Maybe<IdentityProvider>;
    /** Update an inbound mailbox. */
    updateInboundMailbox?: Maybe<InboundMailbox>;
    /** Update an inline device. */
    updateInlineDevice?: Maybe<InlineDevice>;
    /** Update the auto pay setting for an instance service fund. */
    updateInstanceServiceFundAutoPay: InstanceServiceFundAutoPay;
    /** Update an internal location. */
    updateInternalLocation?: Maybe<InternalLocation>;
    /** Update an inventory item. */
    updateInventoryItem?: Maybe<InventoryItem>;
    /** Update the contents of inventory item model fields. */
    updateInventoryItemFields?: Maybe<InventoryItem>;
    /** Update one or more inventory items. */
    updateInventoryItems?: Maybe<Array<Maybe<InventoryItem>>>;
    /** Update an inventory location. */
    updateInventoryLocation?: Maybe<InventoryLocation>;
    /** Update an inventory model. */
    updateInventoryModel?: Maybe<InventoryModel>;
    /** Update an inventory model category. */
    updateInventoryModelCategory?: Maybe<InventoryModelCategory>;
    /** Update an inventory model field. */
    updateInventoryModelField?: Maybe<InventoryModelField>;
    /** Update an Inventory Model Min/Max. */
    updateInventoryModelMinMax?: Maybe<InventoryModelMinMax>;
    /** Update an invoice. */
    updateInvoice?: Maybe<Invoice>;
    /** Update an invoice attachment. */
    updateInvoiceAttachment?: Maybe<InvoiceAttachment>;
    /** Update an invoice message. */
    updateInvoiceMessage?: Maybe<InvoiceMessage>;
    /** Update an IP assignment. */
    updateIpAssignment?: Maybe<IpAssignment>;
    /** Update an IP pool. */
    updateIpPool?: Maybe<IpPool>;
    /** Update a job. */
    updateJob?: Maybe<Job>;
    /** Update the quantity of a service associated with a job. */
    updateJobService?: Maybe<JobService>;
    /** Update a job skipping validation. */
    updateJobSkipsValidation?: Maybe<Job>;
    /** Update a job type. */
    updateJobType?: Maybe<JobType>;
    /** Update a local prefix. */
    updateLocalPrefix?: Maybe<LocalPrefix>;
    /** Update a report builder license. */
    updateLookerExploreLicense?: Maybe<LookerExploreLicense>;
    /** Update a report viewer license. */
    updateLookerViewLicense?: Maybe<LookerViewLicense>;
    /** Update an LTE provider. */
    updateLteProvider?: Maybe<LteProvider>;
    /** Update an account mailing address. */
    updateMailingAddress?: Maybe<Address>;
    /** Update a manufacturer. */
    updateManufacturer?: Maybe<Manufacturer>;
    /** Update a map overlay. */
    updateMapOverlay?: Maybe<MapOverlay>;
    /** Update your user profile. */
    updateMe?: Maybe<Me>;
    /** Update a messaging category. */
    updateMessageCategory?: Maybe<MessageCategory>;
    /** Update a Netflow allowed subnet. */
    updateNetflowAllowedSubnet?: Maybe<NetflowAllowedSubnet>;
    /** Update a Netflow endpoint. */
    updateNetflowEndpoint?: Maybe<NetflowEndpoint>;
    /** Update a Netflow whitelist. */
    updateNetflowWhitelist?: Maybe<NetflowWhitelist>;
    /** Update a Network Monitoring Graph. */
    updateNetworkMonitoringGraph?: Maybe<NetworkMonitoringGraph>;
    /** Update a Network Monitoring Template. */
    updateNetworkMonitoringTemplate?: Maybe<NetworkMonitoringTemplate>;
    /** Update a network site. */
    updateNetworkSite?: Maybe<NetworkSite>;
    /** Update a non-inventory item. */
    updateNonInventoryItem?: Maybe<NonInventoryItem>;
    /** Update a note. */
    updateNote?: Maybe<Note>;
    /** Update a one time service. */
    updateOneTimeService?: Maybe<Service>;
    /** Update an order group. */
    updateOrderGroup?: Maybe<OrderGroup>;
    /** Update an overage service. */
    updateOverageService?: Maybe<Service>;
    /** Update a package. */
    updatePackage?: Maybe<Package>;
    /** Update the password policy that is applied to users. */
    updatePasswordPolicy?: Maybe<PasswordPolicy>;
    /** Update a PayPal credential. */
    updatePayPalCredential?: Maybe<PayPalCredential>;
    /** Update a payment that was created without a payment method. */
    updatePayment?: Maybe<Payment>;
    /** Update a phone number. */
    updatePhoneNumber?: Maybe<PhoneNumber>;
    /** Update a phone number type. */
    updatePhoneNumberType?: Maybe<PhoneNumberType>;
    /** Update a poller. */
    updatePoller?: Maybe<Poller>;
    /** Update the system poller settings. */
    updatePollerSettings?: Maybe<PollerSetting>;
    /** Update the Preseem integration. */
    updatePreseem?: Maybe<Preseem>;
    /** Update a print to mail order error. */
    updatePrintToMailOrderError?: Maybe<PrintToMailOrderError>;
    /** Update the print to mail settings. */
    updatePrintToMailSettings?: Maybe<PrintToMailSetting>;
    /** Update a purchase order. */
    updatePurchaseOrder?: Maybe<PurchaseOrder>;
    /** Update system settings related to purchase orders. */
    updatePurchaseOrderSystemSettings?: Maybe<SuccessResponse>;
    /** Update a RADIUS account. */
    updateRadiusAccount?: Maybe<RadiusAccount>;
    /** Update a RADIUS group. */
    updateRadiusGroup?: Maybe<RadiusGroup>;
    /** Update a RADIUS group reply attribute. */
    updateRadiusGroupReplyAttribute?: Maybe<RadiusGroupReplyAttribute>;
    /** Update a RADIUS server. */
    updateRadiusServer?: Maybe<RadiusServer>;
    /** Update a rate center. */
    updateRateCenter?: Maybe<RateCenter>;
    /** Update a recurring service. */
    updateRecurringService?: Maybe<Service>;
    /** Update a role. */
    updateRole?: Maybe<Role>;
    /** Update a saved message category. */
    updateSavedMessageCategory?: Maybe<SavedMessageCategory>;
    /** Update a schedule address. */
    updateScheduleAddress?: Maybe<ScheduleAddress>;
    /** Update a schedule availability. */
    updateScheduleAvailability?: Maybe<ScheduleAvailability>;
    /** Update a schedule availability day/time. */
    updateScheduleAvailabilityDayTime?: Maybe<ScheduleAvailabilityDayTime>;
    /** Update a schedule blocker. */
    updateScheduleBlocker?: Maybe<ScheduleBlocker>;
    /** Update a schedule blocker day/time. */
    updateScheduleBlockerDayTime?: Maybe<ScheduleBlockerDayTime>;
    /** Update a schedule time off. */
    updateScheduleTimeOff?: Maybe<ScheduleTimeOff>;
    /** Update a scheduled event. */
    updateScheduledEvent?: Maybe<ScheduledEvent>;
    /** Update a saved search filter for the current user, or enable it for all users (superadmin only). */
    updateSearchFilter?: Maybe<SearchFilter>;
    /** Update service metadata. */
    updateServiceMetadata?: Maybe<ServiceMetadata>;
    /** Update a serviceable address. */
    updateServiceableAddress?: Maybe<Address>;
    /** Update a Signature. */
    updateSignature?: Maybe<Signature>;
    /** Update the SMS settings. */
    updateSmsSettings?: Maybe<SmsSetting>;
    /** Update an SNMP OID. */
    updateSnmpOid?: Maybe<SnmpOid>;
    /** Update an SNMP OID threshold. */
    updateSnmpOidThreshold?: Maybe<SnmpOidThreshold>;
    /** Update an SNMP override. */
    updateSnmpOverride?: Maybe<SnmpOverride>;
    /** Update a stored view. */
    updateStoredView?: Maybe<StoredView>;
    /** Update a subnet. */
    updateSubnet?: Maybe<Subnet>;
    /** Update supernet mutation. */
    updateSupernet?: Maybe<Supernet>;
    /** Update a system backup destination. */
    updateSystemBackupDestination?: Maybe<SystemBackupDestination>;
    /** Update settings for system backups. */
    updateSystemBackupSettings?: Maybe<SystemBackupSetting>;
    /** Update system configuration. */
    updateSystemSettings?: Maybe<SystemSetting>;
    /** Update a task. */
    updateTask?: Maybe<Task>;
    /** Update a task template. */
    updateTaskTemplate?: Maybe<TaskTemplate>;
    /** Update a task template item. */
    updateTaskTemplateItem?: Maybe<TaskTemplateItem>;
    /** Update a tax. */
    updateTax?: Maybe<Tax>;
    /** Update a tax exemption. */
    updateTaxExemption?: Maybe<TaxExemption>;
    /** Update a tax override. */
    updateTaxOverride?: Maybe<TaxOverride>;
    /** Update a tax provider. */
    updateTaxProvider?: Maybe<TaxProvider>;
    /** Update a ticket. */
    updateTicket?: Maybe<Ticket>;
    /** Update a ticket category. */
    updateTicketCategory?: Maybe<TicketCategory>;
    /** Update a ticket comment. */
    updateTicketComment?: Maybe<TicketComment>;
    /** Update a ticket group. */
    updateTicketGroup?: Maybe<TicketGroup>;
    /** Update a ticket recipient. */
    updateTicketRecipient?: Maybe<TicketRecipient>;
    /** Update the ticketing settings. */
    updateTicketingSettings?: Maybe<TicketingSetting>;
    /** Update the TowerCoverage integration. */
    updateTowercoverageConfiguration?: Maybe<TowercoverageConfiguration>;
    /** DEPRECATED: Update a triggered email. See updateTriggeredMessageMutation. */
    updateTriggeredEmail?: Maybe<TriggeredEmail>;
    /** Update a triggered message. */
    updateTriggeredMessage?: Maybe<TriggeredMessage>;
    /** Update an uninventoried MAC address. */
    updateUninventoriedMacAddress?: Maybe<UninventoriedMacAddress>;
    /** Update a usage based billing policy. */
    updateUsageBasedBillingPolicy?: Maybe<UsageBasedBillingPolicy>;
    /** Update a usage based billing policy free period. */
    updateUsageBasedBillingPolicyFreePeriod?: Maybe<UsageBasedBillingPolicyFreePeriod>;
    /** Update a user. */
    updateUser?: Maybe<User>;
    /** Update a vehicle. */
    updateVehicle?: Maybe<Vehicle>;
    /** Update a vendor. */
    updateVendor?: Maybe<Vendor>;
    /** Update a vendor item. */
    updateVendorItem?: Maybe<VendorItem>;
    /** Update a voice provider. */
    updateVoiceProvider?: Maybe<VoiceProvider>;
    /** Update a voice provider rate. */
    updateVoiceProviderRate?: Maybe<VoiceProviderRate>;
    /** Update the charge percent for all rates of a voice provider. */
    updateVoiceProviderRateChargePercentMutation?: Maybe<SuccessResponse>;
    /** Update a voice service. */
    updateVoiceService?: Maybe<Service>;
    /** Create a single voice service configuration parameter. */
    updateVoiceServiceGenericParameter?: Maybe<VoiceServiceGenericParameter>;
    /** Update a webhook endpoint. */
    updateWebhookEndpoint?: Maybe<WebhookEndpoint>;
    /** Validate the credentials for a cable modem provisioner. This will update the `status` of the cable modem provisioner. */
    validateCableModemProvisionerCredentials?: Maybe<CredentialValidationResponse>;
    /** Validate credentials of a Calix integration */
    validateCalixCredentials?: Maybe<CredentialValidationResponse>;
    /** Validate the entered DHCP server credentials. This will update the `status` of the DHCP server. */
    validateDhcpServerCredentials?: Maybe<CredentialValidationResponse>;
    /** Validate an email domain's DNS records and email verification status. */
    validateEmailDomain?: Maybe<EmailDomain>;
    /** Validate GPS tracking provider credentials validate against external provider. */
    validateGpsTrackingProviderCredentials?: Maybe<CredentialValidationResponse>;
    /** Validate the credentials for an inline device. This will update the `status` of the inline device. */
    validateInlineDeviceCredentials?: Maybe<CredentialValidationResponse>;
    /** Validate the entered LTE provider credentials. This will update the `status` of the LTE provider. */
    validateLteProviderCredentials?: Maybe<CredentialValidationResponse>;
    /** Validate the entered RADIUS server credentials. This will update the `status` of the RADIUS server. */
    validateRadiusServerCredentials?: Maybe<CredentialValidationResponse>;
    /** Validate the entered tax provider credentials. */
    validateTaxProviderCredentials?: Maybe<CredentialValidationResponse>;
    /** Verify the credentials for a system backup destination. */
    verifySystemBackupDestinationConnection?: Maybe<SuccessResponse>;
    /** Void a credit on an invoice. */
    voidCredit?: Maybe<Credit>;
    /** Void an invoice. */
    voidInvoice?: Maybe<Invoice>;
};
export type MutationAddInstanceServiceFundsArgs = {
    input?: InputMaybe<AddInstanceServiceFundsMutationInput>;
};
export type MutationAddPackageToAccountArgs = {
    input?: InputMaybe<AddPackageToAccountMutationInput>;
};
export type MutationAddServiceToAccountArgs = {
    input?: InputMaybe<AddServiceToAccountMutationInput>;
};
export type MutationAllocateLookerExploreLicenseToUserArgs = {
    input?: InputMaybe<AllocateLookerExploreLicenseToUserMutationInput>;
};
export type MutationAllocateLookerViewLicenseToUserArgs = {
    input?: InputMaybe<AllocateLookerViewLicenseToUserMutationInput>;
};
export type MutationApplyCreditToInvoiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<ApplyCreditToInvoiceMutationInput>;
};
export type MutationAssignGenericInventoryItemsArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<AssignGenericInventoryItemsMutationInput>;
};
export type MutationAssignInventoryItemsArgs = {
    ids: Array<Scalars['Int64Bit']['input']>;
    input?: InputMaybe<AssignInventoryItemsMutationInput>;
};
export type MutationCancelPrintToMailBatchArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationCheckInToJobArgs = {
    input?: InputMaybe<CheckInToJobMutationInput>;
};
export type MutationCheckOutOfJobArgs = {
    input?: InputMaybe<CheckOutOfJobMutationInput>;
};
export type MutationClaimInventoryItemsArgs = {
    input?: InputMaybe<ClaimInventoryItemsMutationInput>;
};
export type MutationCompleteFileTaskArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<CompleteFileTaskMutationInput>;
};
export type MutationCompleteJobArgs = {
    input?: InputMaybe<CompleteJobMutationInput>;
};
export type MutationCompleteTaskArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<CompleteTaskMutationInput>;
};
export type MutationConsumeGenericInventoryItemsArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<ConsumeGenericInventoryItemsMutationInput>;
};
export type MutationCreateAccessLogArgs = {
    input?: InputMaybe<CreateAccessLogMutationInput>;
};
export type MutationCreateAccountArgs = {
    input?: InputMaybe<CreateAccountMutationInput>;
};
export type MutationCreateAccountAdjustmentTransactionArgs = {
    input?: InputMaybe<CreateAccountAdjustmentTransactionMutationInput>;
};
export type MutationCreateAccountCalixServiceDetailArgs = {
    input?: InputMaybe<CreateAccountCalixServiceDetailMutationInput>;
};
export type MutationCreateAccountGroupArgs = {
    input?: InputMaybe<CreateAccountGroupMutationInput>;
};
export type MutationCreateAccountOneTimeTransactionArgs = {
    input?: InputMaybe<CreateAccountOneTimeTransactionMutationInput>;
};
export type MutationCreateAccountStatusArgs = {
    input?: InputMaybe<CreateAccountStatusMutationInput>;
};
export type MutationCreateAccountTypeArgs = {
    input?: InputMaybe<CreateAccountTypeMutationInput>;
};
export type MutationCreateAchBatchArgs = {
    input?: InputMaybe<CreateAchBatchMutationInput>;
};
export type MutationCreateAddressListArgs = {
    input?: InputMaybe<CreateAddressListMutationInput>;
};
export type MutationCreateAddressStatusArgs = {
    input?: InputMaybe<CreateAddressStatusMutationInput>;
};
export type MutationCreateAdjustmentServiceArgs = {
    input?: InputMaybe<CreateAdjustmentServiceMutationInput>;
};
export type MutationCreateAlertingRotationArgs = {
    input?: InputMaybe<CreateAlertingRotationMutationInput>;
};
export type MutationCreateAlertingRotationDayArgs = {
    input?: InputMaybe<CreateAlertingRotationDayMutationInput>;
};
export type MutationCreateApplicationFirewallRuleArgs = {
    input?: InputMaybe<CreateApplicationFirewallRuleMutationInput>;
};
export type MutationCreateAvalaraTaxDefinitionArgs = {
    input?: InputMaybe<CreateAvalaraTaxDefinitionMutationInput>;
};
export type MutationCreateBankAccountArgs = {
    input?: InputMaybe<CreateBankAccountMutationInput>;
};
export type MutationCreateBankAccountPaymentArgs = {
    input?: InputMaybe<CreateBankAccountPaymentMutationInput>;
};
export type MutationCreateBankAccountProcessorArgs = {
    input?: InputMaybe<CreateBankAccountProcessorMutationInput>;
};
export type MutationCreateBillingDefaultArgs = {
    input?: InputMaybe<CreateBillingDefaultMutationInput>;
};
export type MutationCreateCableModemProvisionerArgs = {
    input?: InputMaybe<CreateCableModemProvisionerMutationInput>;
};
export type MutationCreateCalendarIcalArgs = {
    input?: InputMaybe<CreateCalendarIcalMutationInput>;
};
export type MutationCreateCalixIntegrationArgs = {
    input?: InputMaybe<CreateCalixIntegrationMutationInput>;
};
export type MutationCreateCallDetailRecordArgs = {
    input?: InputMaybe<CreateCallDetailRecordMutationInput>;
};
export type MutationCreateCallDetailRecordImportFlatfileArgs = {
    input?: InputMaybe<CreateCallDetailRecordImportFlatfileMutationInput>;
};
export type MutationCreateCallLogArgs = {
    input?: InputMaybe<CreateCallLogMutationInput>;
};
export type MutationCreateCannedReplyArgs = {
    input?: InputMaybe<CreateCannedReplyMutationInput>;
};
export type MutationCreateCannedReplyCategoryArgs = {
    input?: InputMaybe<CreateCannedReplyCategoryMutationInput>;
};
export type MutationCreateCompanyArgs = {
    input?: InputMaybe<CreateCompanyMutationInput>;
};
export type MutationCreateContactArgs = {
    input?: InputMaybe<CreateContactMutationInput>;
};
export type MutationCreateContractArgs = {
    input?: InputMaybe<CreateContractMutationInput>;
};
export type MutationCreateContractTemplateArgs = {
    input?: InputMaybe<CreateContractTemplateMutationInput>;
};
export type MutationCreateCoreCreditCardArgs = {
    input?: InputMaybe<CreateCoreCreditCardMutationInput>;
};
export type MutationCreateCorePaymentArgs = {
    input?: InputMaybe<CreateCorePaymentMutationInput>;
};
export type MutationCreateCreditCardArgs = {
    input?: InputMaybe<CreateCreditCardMutationInput>;
};
export type MutationCreateCreditCardPaymentArgs = {
    input?: InputMaybe<CreateCreditCardPaymentMutationInput>;
};
export type MutationCreateCreditCardProcessorArgs = {
    input?: InputMaybe<CreateCreditCardProcessorMutationInput>;
};
export type MutationCreateCustomFieldArgs = {
    input?: InputMaybe<CreateCustomFieldMutationInput>;
};
export type MutationCreateDataServiceArgs = {
    input?: InputMaybe<CreateDataServiceMutationInput>;
};
export type MutationCreateDataUsageTopOffArgs = {
    input?: InputMaybe<CreateDataUsageTopOffMutationInput>;
};
export type MutationCreateDataUsagesArgs = {
    input?: InputMaybe<Array<InputMaybe<CreateDataUsageMutationInput>>>;
};
export type MutationCreateDelinquencyExclusionArgs = {
    input?: InputMaybe<CreateDelinquencyExclusionMutationInput>;
};
export type MutationCreateDepartmentArgs = {
    input?: InputMaybe<CreateDepartmentMutationInput>;
};
export type MutationCreateDeploymentTypeArgs = {
    input?: InputMaybe<CreateDeploymentTypeMutationInput>;
};
export type MutationCreateDepositSlipArgs = {
    input?: InputMaybe<CreateDepositSlipMutationInput>;
};
export type MutationCreateDhcpServerArgs = {
    input?: InputMaybe<CreateDhcpServerMutationInput>;
};
export type MutationCreateDhcpServerIdentifierArgs = {
    input?: InputMaybe<CreateDhcpServerIdentifierMutationInput>;
};
export type MutationCreateDidArgs = {
    input?: InputMaybe<CreateDidMutationInput>;
};
export type MutationCreateDidAssignmentArgs = {
    input?: InputMaybe<CreateDidAssignmentMutationInput>;
};
export type MutationCreateDidImportFlatfileArgs = {
    input?: InputMaybe<CreateDidImportFlatfileMutationInput>;
};
export type MutationCreateEmailCategoryArgs = {
    input?: InputMaybe<CreateEmailCategoryMutationInput>;
};
export type MutationCreateEmailDomainArgs = {
    input?: InputMaybe<CreateEmailDomainMutationInput>;
};
export type MutationCreateEmailMessageArgs = {
    input?: InputMaybe<CreateEmailMessageMutationInput>;
};
export type MutationCreateEmailMessageContentArgs = {
    input?: InputMaybe<CreateEmailMessageContentMutationInput>;
};
export type MutationCreateEpcArgs = {
    input?: InputMaybe<CreateEpcMutationInput>;
};
export type MutationCreateExpiringServiceArgs = {
    input?: InputMaybe<CreateExpiringServiceMutationInput>;
};
export type MutationCreateExternalMarketingProviderArgs = {
    input?: InputMaybe<CreateExternalMarketingProviderMutationInput>;
};
export type MutationCreateFccForm477ReportArgs = {
    input?: InputMaybe<CreateFccForm477ReportMutationInput>;
};
export type MutationCreateFibermapIntegrationArgs = {
    input?: InputMaybe<CreateFibermapIntegrationMutationInput>;
};
export type MutationCreateGeneralLedgerCodeArgs = {
    input?: InputMaybe<CreateGeneralLedgerCodeMutationInput>;
};
export type MutationCreateGenericInventoryAssigneeArgs = {
    input?: InputMaybe<CreateGenericInventoryAssigneeMutationInput>;
};
export type MutationCreateGenericInventoryItemsArgs = {
    input?: InputMaybe<CreateGenericInventoryItemsMutationInput>;
};
export type MutationCreateGeoTaxZoneArgs = {
    input?: InputMaybe<CreateGeoTaxZoneMutationInput>;
};
export type MutationCreateGeofenceArgs = {
    input?: InputMaybe<CreateGeofenceMutationInput>;
};
export type MutationCreateGlobalInventoryModelMinMaxArgs = {
    input?: InputMaybe<CreateGlobalInventoryModelMinMaxMutationInput>;
};
export type MutationCreateGpsTrackingProviderArgs = {
    input?: InputMaybe<CreateGpsTrackingProviderMutationInput>;
};
export type MutationCreateIdentityProviderActiveDirectoryArgs = {
    input?: InputMaybe<CreateIdentityProviderActiveDirectoryMutationInput>;
};
export type MutationCreateIdentityProviderGoogleArgs = {
    input?: InputMaybe<CreateIdentityProviderGoogleMutationInput>;
};
export type MutationCreateIdentityProviderMicrosoftArgs = {
    input?: InputMaybe<CreateIdentityProviderMicrosoftMutationInput>;
};
export type MutationCreateIdentityProviderSamlArgs = {
    input?: InputMaybe<CreateIdentityProviderSamlMutationInput>;
};
export type MutationCreateInboundMailboxArgs = {
    input?: InputMaybe<CreateInboundMailboxMutationInput>;
};
export type MutationCreateInlineDeviceArgs = {
    input?: InputMaybe<CreateInlineDeviceMutationInput>;
};
export type MutationCreateInternalLocationArgs = {
    input?: InputMaybe<CreateInternalLocationMutationInput>;
};
export type MutationCreateInternalTicketArgs = {
    input?: InputMaybe<CreateInternalTicketMutationInput>;
};
export type MutationCreateInventoryItemsArgs = {
    input?: InputMaybe<CreateInventoryItemsMutationInput>;
};
export type MutationCreateInventoryLocationArgs = {
    input?: InputMaybe<CreateInventoryLocationMutationInput>;
};
export type MutationCreateInventoryModelArgs = {
    input?: InputMaybe<CreateInventoryModelMutationInput>;
};
export type MutationCreateInventoryModelCategoryArgs = {
    input?: InputMaybe<CreateInventoryModelCategoryMutationInput>;
};
export type MutationCreateInventoryModelFieldArgs = {
    input?: InputMaybe<CreateInventoryModelFieldMutationInput>;
};
export type MutationCreateInventoryModelMinMaxArgs = {
    input?: InputMaybe<CreateInventoryModelMinMaxMutationInput>;
};
export type MutationCreateInvoiceArgs = {
    input?: InputMaybe<CreateInvoiceMutationInput>;
};
export type MutationCreateInvoiceAttachmentArgs = {
    input?: InputMaybe<CreateInvoiceAttachmentMutationInput>;
};
export type MutationCreateInvoiceMessageArgs = {
    input?: InputMaybe<CreateInvoiceMessageMutationInput>;
};
export type MutationCreateIpAssignmentArgs = {
    input?: InputMaybe<CreateIpAssignmentMutationInput>;
};
export type MutationCreateIpAssignmentFromDhcpReservationArgs = {
    input?: InputMaybe<CreateIpAssignmentFromDhcpReservationMutationInput>;
};
export type MutationCreateIpPoolArgs = {
    input?: InputMaybe<CreateIpPoolMutationInput>;
};
export type MutationCreateJobArgs = {
    input?: InputMaybe<CreateJobMutationInput>;
};
export type MutationCreateJobServiceArgs = {
    input?: InputMaybe<CreateJobServiceMutationInput>;
};
export type MutationCreateJobTypeArgs = {
    input?: InputMaybe<CreateJobTypeMutationInput>;
};
export type MutationCreateLinkedAddressesArgs = {
    input?: InputMaybe<CreateLinkedAddressesMutationInput>;
};
export type MutationCreateLocalPrefixArgs = {
    input?: InputMaybe<CreateLocalPrefixMutationInput>;
};
export type MutationCreateLteProviderArgs = {
    input?: InputMaybe<CreateLteProviderMutationInput>;
};
export type MutationCreateMailingAddressArgs = {
    input?: InputMaybe<CreateMailingAddressMutationInput>;
};
export type MutationCreateManufacturerArgs = {
    input?: InputMaybe<CreateManufacturerMutationInput>;
};
export type MutationCreateMapOverlayArgs = {
    input?: InputMaybe<CreateMapOverlayMutationInput>;
};
export type MutationCreateMassEmailArgs = {
    input?: InputMaybe<CreateMassEmailMutationInput>;
};
export type MutationCreateMassMessageArgs = {
    input?: InputMaybe<CreateMassMessageMutationInput>;
};
export type MutationCreateMessageCategoryArgs = {
    input?: InputMaybe<CreateMessageCategoryMutationInput>;
};
export type MutationCreateNetflowAllowedSubnetArgs = {
    input?: InputMaybe<CreateNetflowAllowedSubnetMutationInput>;
};
export type MutationCreateNetflowEndpointArgs = {
    input?: InputMaybe<CreateNetflowEndpointMutationInput>;
};
export type MutationCreateNetflowWhitelistArgs = {
    input?: InputMaybe<CreateNetflowWhitelistMutationInput>;
};
export type MutationCreateNetworkMonitoringGraphArgs = {
    input?: InputMaybe<CreateNetworkMonitoringGraphMutationInput>;
};
export type MutationCreateNetworkMonitoringTemplateArgs = {
    input?: InputMaybe<CreateNetworkMonitoringTemplateMutationInput>;
};
export type MutationCreateNetworkSiteArgs = {
    input?: InputMaybe<CreateNetworkSiteMutationInput>;
};
export type MutationCreateNonInventoryItemArgs = {
    input?: InputMaybe<CreateNonInventoryItemMutationInput>;
};
export type MutationCreateNoteArgs = {
    input?: InputMaybe<CreateNoteMutationInput>;
};
export type MutationCreateOneTimeServiceArgs = {
    input?: InputMaybe<CreateOneTimeServiceMutationInput>;
};
export type MutationCreateOrderGroupArgs = {
    input?: InputMaybe<CreateOrderGroupMutationInput>;
};
export type MutationCreateOverageServiceArgs = {
    input?: InputMaybe<CreateOverageServiceMutationInput>;
};
export type MutationCreatePackageArgs = {
    input?: InputMaybe<CreatePackageMutationInput>;
};
export type MutationCreatePayPalCredentialArgs = {
    input?: InputMaybe<CreatePayPalCredentialMutationInput>;
};
export type MutationCreatePaymentArgs = {
    input?: InputMaybe<CreatePaymentMutationInput>;
};
export type MutationCreatePaymentsArgs = {
    input?: InputMaybe<CreatePaymentsMutationInput>;
};
export type MutationCreatePersonalAccessTokenArgs = {
    input?: InputMaybe<CreatePersonalAccessTokenMutationInput>;
};
export type MutationCreatePhoneNumberArgs = {
    input?: InputMaybe<CreateContactPhoneNumberMutationInput>;
};
export type MutationCreatePhoneNumberTypeArgs = {
    input?: InputMaybe<CreatePhoneNumberTypeMutationInput>;
};
export type MutationCreatePollerArgs = {
    input?: InputMaybe<CreatePollerMutationInput>;
};
export type MutationCreatePrintedInvoiceBatchArgs = {
    input?: InputMaybe<CreatePrintedInvoiceBatchMutationInput>;
};
export type MutationCreatePublicTicketArgs = {
    input?: InputMaybe<CreatePublicTicketMutationInput>;
};
export type MutationCreatePurchaseOrderArgs = {
    input?: InputMaybe<CreatePurchaseOrderMutationInput>;
};
export type MutationCreateRadiusAccountArgs = {
    input?: InputMaybe<CreateRadiusAccountMutationInput>;
};
export type MutationCreateRadiusGroupArgs = {
    input?: InputMaybe<CreateRadiusGroupMutationInput>;
};
export type MutationCreateRadiusGroupReplyAttributeArgs = {
    input?: InputMaybe<CreateRadiusGroupReplyAttributeMutationInput>;
};
export type MutationCreateRadiusServerArgs = {
    input?: InputMaybe<CreateRadiusServerMutationInput>;
};
export type MutationCreateRateCenterArgs = {
    input?: InputMaybe<CreateRateCenterMutationInput>;
};
export type MutationCreateRecentItemArgs = {
    input?: InputMaybe<CreateRecentItemMutationInput>;
};
export type MutationCreateRecurringServiceArgs = {
    input?: InputMaybe<CreateRecurringServiceMutationInput>;
};
export type MutationCreateReportArgs = {
    input?: InputMaybe<CreateReportMutationInput>;
};
export type MutationCreateRoleArgs = {
    input?: InputMaybe<CreateRoleMutationInput>;
};
export type MutationCreateSavedMessageCategoryArgs = {
    input?: InputMaybe<CreateSavedMessageCategoryMutationInput>;
};
export type MutationCreateScheduleAddressArgs = {
    input?: InputMaybe<CreateScheduleAddressMutationInput>;
};
export type MutationCreateScheduleAvailabilityArgs = {
    input?: InputMaybe<CreateScheduleAvailabilityMutationInput>;
};
export type MutationCreateScheduleAvailabilityDayTimeArgs = {
    input?: InputMaybe<CreateScheduleAvailabilityDayTimeMutationInput>;
};
export type MutationCreateScheduleBlockerArgs = {
    input?: InputMaybe<CreateScheduleBlockerMutationInput>;
};
export type MutationCreateScheduleBlockerDayTimeArgs = {
    input?: InputMaybe<CreateScheduleBlockerDayTimeMutationInput>;
};
export type MutationCreateScheduleTimeOffArgs = {
    input?: InputMaybe<CreateScheduleTimeOffMutationInput>;
};
export type MutationCreateScheduledEventArgs = {
    input?: InputMaybe<CreateScheduledEventMutationInput>;
};
export type MutationCreateSearchFilterArgs = {
    input?: InputMaybe<CreateSearchFilterMutationInput>;
};
export type MutationCreateServiceMetadataArgs = {
    input?: InputMaybe<CreateServiceMetadataMutationInput>;
};
export type MutationCreateServiceableAddressArgs = {
    input?: InputMaybe<CreateServiceableAddressMutationInput>;
};
export type MutationCreateSignatureArgs = {
    input?: InputMaybe<CreateSignatureMutationInput>;
};
export type MutationCreateSnmpOidArgs = {
    input?: InputMaybe<CreateSnmpOidMutationInput>;
};
export type MutationCreateSnmpOidThresholdArgs = {
    input?: InputMaybe<CreateSnmpOidThresholdMutationInput>;
};
export type MutationCreateSnmpOverrideArgs = {
    input?: InputMaybe<CreateSnmpOverrideMutationInput>;
};
export type MutationCreateStoredViewArgs = {
    input?: InputMaybe<CreateStoredViewMutationInput>;
};
export type MutationCreateSubnetArgs = {
    input?: InputMaybe<CreateSubnetMutationInput>;
};
export type MutationCreateSubscriptionArgs = {
    input?: InputMaybe<CreateSubscriptionMutationInput>;
};
export type MutationCreateSupernetArgs = {
    input?: InputMaybe<CreateSupernetMutationInput>;
};
export type MutationCreateSystemBackupArgs = {
    input?: InputMaybe<CreateSystemBackupMutationInput>;
};
export type MutationCreateSystemBackupDestinationArgs = {
    input?: InputMaybe<CreateSystemBackupDestinationMutationInput>;
};
export type MutationCreateTaskArgs = {
    input?: InputMaybe<CreateTaskMutationInput>;
};
export type MutationCreateTaskTemplateArgs = {
    input?: InputMaybe<CreateTaskTemplateMutationInput>;
};
export type MutationCreateTaskTemplateItemArgs = {
    input?: InputMaybe<CreateTaskTemplateItemMutationInput>;
};
export type MutationCreateTaxArgs = {
    input?: InputMaybe<CreateTaxMutationInput>;
};
export type MutationCreateTaxExemptionArgs = {
    input?: InputMaybe<CreateTaxExemptionMutationInput>;
};
export type MutationCreateTaxOverrideArgs = {
    input?: InputMaybe<CreateTaxOverrideMutationInput>;
};
export type MutationCreateTaxProviderArgs = {
    input?: InputMaybe<CreateTaxProviderMutationInput>;
};
export type MutationCreateTicketCategoryArgs = {
    input?: InputMaybe<CreateTicketCategoryMutationInput>;
};
export type MutationCreateTicketCommentArgs = {
    input?: InputMaybe<CreateTicketCommentMutationInput>;
};
export type MutationCreateTicketGroupArgs = {
    input?: InputMaybe<CreateTicketGroupMutationInput>;
};
export type MutationCreateTicketRecipientArgs = {
    input?: InputMaybe<CreateTicketRecipientMutationInput>;
};
export type MutationCreateTicketReplyArgs = {
    input?: InputMaybe<CreateTicketReplyMutationInput>;
};
export type MutationCreateTokenizedBankAccountArgs = {
    input?: InputMaybe<CreateTokenizedBankAccountMutationInput>;
};
export type MutationCreateTokenizedCreditCardArgs = {
    input?: InputMaybe<CreateTokenizedCreditCardMutationInput>;
};
export type MutationCreateTriggeredEmailArgs = {
    input?: InputMaybe<CreateTriggeredEmailMutationInput>;
};
export type MutationCreateTriggeredMessageArgs = {
    input?: InputMaybe<CreateTriggeredMessageMutationInput>;
};
export type MutationCreateUninventoriedMacAddressArgs = {
    input?: InputMaybe<CreateUninventoriedMacAddressMutationInput>;
};
export type MutationCreateUsageBasedBillingPolicyArgs = {
    input?: InputMaybe<CreateUsageBasedBillingPolicyMutationInput>;
};
export type MutationCreateUsageBasedBillingPolicyFreePeriodArgs = {
    input?: InputMaybe<CreateUsageBasedBillingPolicyFreePeriodMutationInput>;
};
export type MutationCreateUserArgs = {
    input?: InputMaybe<CreateUserMutationInput>;
};
export type MutationCreateVehicleArgs = {
    input?: InputMaybe<CreateVehicleMutationInput>;
};
export type MutationCreateVendorArgs = {
    input?: InputMaybe<CreateVendorMutationInput>;
};
export type MutationCreateVendorItemArgs = {
    input?: InputMaybe<CreateVendorItemMutationInput>;
};
export type MutationCreateVoiceProviderArgs = {
    input?: InputMaybe<CreateVoiceProviderMutationInput>;
};
export type MutationCreateVoiceProviderRateArgs = {
    input?: InputMaybe<CreateVoiceProviderRateMutationInput>;
};
export type MutationCreateVoiceProviderRateImportFlatfileArgs = {
    input?: InputMaybe<CreateVoiceProviderRateImportFlatfileMutationInput>;
};
export type MutationCreateVoiceServiceArgs = {
    input?: InputMaybe<CreateVoiceServiceMutationInput>;
};
export type MutationCreateVoiceServiceGenericParameterArgs = {
    input?: InputMaybe<CreateVoiceServiceGenericParameterMutationInput>;
};
export type MutationCreateWebhookEndpointArgs = {
    input?: InputMaybe<CreateWebhookEndpointMutationInput>;
};
export type MutationCreateWebhookEndpointEventArgs = {
    input?: InputMaybe<CreateWebhookEndpointEventMutationInput>;
};
export type MutationDeleteAccountCalixServiceDetailArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAccountGroupArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAccountPackageArgs = {
    input?: InputMaybe<DeleteAccountServiceMutationInput>;
    unique_package_relationship_id: Scalars['String']['input'];
};
export type MutationDeleteAccountServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DeleteAccountServiceMutationInput>;
};
export type MutationDeleteAccountStatusArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAccountTypeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAccountVoiceServiceDetailArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAchBatchArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAddressListArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAddressStatusArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAlertingRotationArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteAlertingRotationDayArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteApplicationFirewallRuleArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteBankAccountArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteBankAccountProcessorArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteBillingDefaultArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCableModemProvisionerArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCalendarIcalArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCalixIntegrationArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCallDetailRecordArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCallLogArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCannedReplyArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCannedReplyCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteContactArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteContractArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteContractTemplateArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCreditCardArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCreditCardProcessorArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteCustomFieldArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDebitArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DeleteTransactionMutationInput>;
};
export type MutationDeleteDelinquencyExclusionArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDepartmentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDeploymentTypeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDepositSlipArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDhcpServerArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDhcpServerIdentifierArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDidArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDidAssignmentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteDiscountArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DeleteTransactionMutationInput>;
};
export type MutationDeleteEmailCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteEmailDomainArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteEmailMessageArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteEmailMessageContentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteEpcArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteExternalMarketingProviderArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteFibermapIntegrationArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteFileArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteGeneralLedgerCodeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteGenericInventoryAssigneeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteGenericInventoryItemsArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DeleteGenericInventoryItemsMutationInput>;
};
export type MutationDeleteGeoTaxZoneArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteGeofenceArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteGlobalInventoryModelMinMaxArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteGpsTrackingProviderArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteIdentityProviderArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInboundMailboxArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInlineDeviceArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInternalLocationArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInventoryItemArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInventoryLocationArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInventoryModelArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInventoryModelCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInventoryModelFieldArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInventoryModelMinMaxArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInvoiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DeleteTransactionMutationInput>;
};
export type MutationDeleteInvoiceAttachmentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteInvoiceMessageArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteIpAssignmentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteIpPoolArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteJobArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteJobServiceArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteJobTypeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteLocalPrefixArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteLteProviderArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteMailingAddressArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteManufacturerArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteMapOverlayArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteMessageCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNetflowAllowedSubnetArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNetflowEndpointArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNetflowWhitelistArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNetworkMonitoringGraphArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNetworkMonitoringTemplateArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNetworkSiteArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNonInventoryItemArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteNoteArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteOrderGroupArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeletePackageArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeletePayPalCredentialArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeletePaymentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeletePersonalAccessTokenArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeletePhoneNumberArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeletePhoneNumberTypeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeletePollerArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteRadiusAccountArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteRadiusGroupArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteRadiusGroupReplyAttributeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteRadiusServerArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteRateCenterArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteRefundedPaymentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteReversedPaymentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DeleteReversedPaymentMutationInput>;
};
export type MutationDeleteRoleArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSavedMessageCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteScheduleAddressArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteScheduleAvailabilityArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteScheduleAvailabilityDayTimeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteScheduleBlockerArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteScheduleBlockerDayTimeArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteScheduleTimeOffArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteScheduledEventArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSearchFilterArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteServiceArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteServiceMetadataArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteServiceableAddressArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSignatureArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSnmpOidArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSnmpOidThresholdArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSnmpOverrideArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteStoredViewArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSubnetArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSubscriptionArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSupernetArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteSystemBackupDestinationArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTaskArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTaskTemplateArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTaskTemplateItemArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTaxArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTaxExemptionArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTaxOverrideArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTaxProviderArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTicketArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTicketCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTicketCommentArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTicketGroupArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTicketRecipientArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTicketsArgs = {
    ids: Array<Scalars['Int64Bit']['input']>;
};
export type MutationDeleteTriggeredEmailArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteTriggeredMessageArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteUninventoriedMacAddressArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteUsageBasedBillingPolicyArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteUsageBasedBillingPolicyFreePeriodArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteVehicleArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteVendorItemArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteVoiceProviderArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteVoiceProviderRateArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteVoiceServiceGenericParameterArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DeleteVoiceServiceGenericParameterMutationInput>;
};
export type MutationDeleteWebhookEndpointArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDeleteWebhookEndpointEventArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationDisconnectAccountArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<DisconnectAccountMutationInput>;
};
export type MutationDisconnectRadiusSessionArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationEmailInvoiceBatchArgs = {
    input?: InputMaybe<EmailInvoiceBatchMutationInput>;
};
export type MutationEmailInvoiceToContactArgs = {
    input?: InputMaybe<EmailInvoiceToContactMutationInput>;
};
export type MutationEmailPurchaseOrderToVendorArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationGenerateImportCredentialsFlatfileArgs = {
    input?: InputMaybe<GenerateImportCredentialsFlatfileMutationInput>;
};
export type MutationGenerateSpliceReportArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationGenerateTestWebhookArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationLinkAccountsArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<LinkAccountsMutationInput>;
};
export type MutationLinkEntityToTicketArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<LinkEntityToTicketMutationInput>;
};
export type MutationLinkFibermapPlanToNetworkSiteArgs = {
    input?: InputMaybe<LinkFibermapPlanToNetworkSiteMutationInput>;
};
export type MutationLinkFibermapServiceLocationToAddressArgs = {
    input?: InputMaybe<LinkFibermapServiceLocationToAddressMutationInput>;
};
export type MutationLinkFileToEntityArgs = {
    input?: InputMaybe<LinkFileToEntityMutationInput>;
};
export type MutationLinkInvoicesArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<LinkInvoicesMutationInput>;
};
export type MutationLinkTowercoverageSubmissionToServiceableAddressMutationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<LinkTowercoverageSubmissionToServiceableAddressMutationInput>;
};
export type MutationMergeSubnetsArgs = {
    input?: InputMaybe<MergeSubnetsMutationInput>;
};
export type MutationMergeTicketsArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<MergeTicketsMutationInput>;
};
export type MutationPublishReportArgs = {
    dashboard_id: Scalars['String']['input'];
};
export type MutationRebootInventoryItemArgs = {
    inventory_item_id: Scalars['Int64Bit']['input'];
};
export type MutationReceivePurchaseOrderItemsArgs = {
    input?: InputMaybe<ReceivePurchaseOrderItemsMutationInput>;
};
export type MutationRefundPaymentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<RefundPaymentMutationInput>;
};
export type MutationReindexModelArgs = {
    input?: InputMaybe<ReindexModelMutationInput>;
};
export type MutationRescheduleScheduleBlockerArgs = {
    input?: InputMaybe<RescheduleScheduleBlockerMutationInput>;
};
export type MutationResendContractArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationResendPrintToMailBatchArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationResendUserCreationEmailArgs = {
    user_id: Scalars['Int64Bit']['input'];
};
export type MutationResetInventoryItemArgs = {
    inventory_item_id: Scalars['Int64Bit']['input'];
};
export type MutationRespondToInstanceManagementRequestArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<RespondToInstanceManagementRequestMutationInput>;
};
export type MutationResyncFibermapServiceLocationToAddressArgs = {
    input?: InputMaybe<ResyncFibermapServiceLocationToAddressMutationInput>;
};
export type MutationReverseDebitArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<ReverseTransactionMutationInput>;
};
export type MutationReverseDiscountArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<ReverseTransactionMutationInput>;
};
export type MutationReversePaymentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<ReversePaymentMutationInput>;
};
export type MutationScheduleManyJobsAndScheduleBlockerOverridesArgs = {
    input?: InputMaybe<ScheduleManyJobsAndScheduleBlockerOverridesMutationInput>;
};
export type MutationScheduleManyJobsAndScheduleBlockerOverridesSkipsValidationArgs = {
    input?: InputMaybe<ScheduleManyJobsAndScheduleBlockerOverridesMutationInput>;
};
export type MutationSendEmailDomainVerificationEmailArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<SendEmailDomainVerificationEmailMutationInput>;
};
export type MutationSendTestEmailArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<SendTestEmailMutationInput>;
};
export type MutationSendTestTriggeredEmailArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<SendTestTriggeredEmailMutationInput>;
};
export type MutationSetActiveStoredViewArgs = {
    input?: InputMaybe<SetActiveStoredViewMutationInput>;
};
export type MutationSplitSubnetArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationSynchronizeCableModemProvisionerArgs = {
    input?: InputMaybe<SynchronizeCableModemProvisionerMutationInput>;
};
export type MutationSynchronizeCalixIntegrationArgs = {
    calix_integration_id: Scalars['Int64Bit']['input'];
};
export type MutationSynchronizeDhcpServerArgs = {
    input?: InputMaybe<SynchronizeDhcpServerMutationInput>;
};
export type MutationSynchronizeFibermapIntegrationArgs = {
    fibermap_integration_id: Scalars['Int64Bit']['input'];
};
export type MutationSynchronizeInlineDeviceArgs = {
    input?: InputMaybe<SynchronizeInlineDeviceMutationInput>;
};
export type MutationSynchronizeLteProviderArgs = {
    input?: InputMaybe<SynchronizeLteProviderMutationInput>;
};
export type MutationSynchronizeRadiusServerArgs = {
    input?: InputMaybe<SynchronizeRadiusServerMutationInput>;
};
export type MutationToggleAllNotificationsArgs = {
    input?: InputMaybe<ToggleAllNotificationsMutationInput>;
};
export type MutationToggleNotificationsArgs = {
    input?: InputMaybe<ToggleNotificationsMutationInput>;
};
export type MutationUnclaimInventoryItemsArgs = {
    input?: InputMaybe<UnclaimInventoryItemsMutationInput>;
};
export type MutationUnlinkAccountsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationUnlinkEntityFromTicketArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UnlinkEntityFromTicketMutationInput>;
};
export type MutationUnlinkInvoicesArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationUpdateAccountArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountMutationInput>;
};
export type MutationUpdateAccountBillingParameterArgs = {
    account_id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountBillingParameterMutationInput>;
};
export type MutationUpdateAccountCalixServiceDetailArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountCalixServiceDetailMutationInput>;
};
export type MutationUpdateAccountGroupArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountGroupMutationInput>;
};
export type MutationUpdateAccountServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountServiceMutationInput>;
};
export type MutationUpdateAccountStatusArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountStatusMutationInput>;
};
export type MutationUpdateAccountTypeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountTypeMutationInput>;
};
export type MutationUpdateAccountVoiceServiceDetailArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAccountVoiceServiceDetailMutationInput>;
};
export type MutationUpdateAddressListArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAddressListMutationInput>;
};
export type MutationUpdateAddressStatusArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAddressStatusMutationInput>;
};
export type MutationUpdateAdjustmentServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAdjustmentServiceMutationInput>;
};
export type MutationUpdateAlertingRotationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAlertingRotationMutationInput>;
};
export type MutationUpdateAlertingRotationDayArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAlertingRotationDayMutationInput>;
};
export type MutationUpdateApplicationFirewallRuleArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateApplicationFirewallRuleMutationInput>;
};
export type MutationUpdateAuthProviderArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAuthProviderMutationInput>;
};
export type MutationUpdateAvalaraTaxDefinitionArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateAvalaraTaxDefinitionMutationInput>;
};
export type MutationUpdateBankAccountArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateBankAccountMutationInput>;
};
export type MutationUpdateBankAccountProcessorArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateBankAccountProcessorMutationInput>;
};
export type MutationUpdateBillingDefaultArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateBillingDefaultMutationInput>;
};
export type MutationUpdateBillingSettingsArgs = {
    input?: InputMaybe<UpdateBillingSettingsMutationInput>;
};
export type MutationUpdateCableModemProvisionerArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCableModemProvisionerMutationInput>;
};
export type MutationUpdateCalendarIcalArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCalendarIcalMutationInput>;
};
export type MutationUpdateCalendarIcalTokenArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationUpdateCalendarSystemSettingsArgs = {
    input?: InputMaybe<UpdateCalendarSystemSettingsMutationInput>;
};
export type MutationUpdateCalixIntegrationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCalixIntegrationMutationInput>;
};
export type MutationUpdateCallDetailRecordArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCallDetailRecordMutationInput>;
};
export type MutationUpdateCallLogArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCallLogMutationInput>;
};
export type MutationUpdateCannedReplyArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCannedReplyMutationInput>;
};
export type MutationUpdateCannedReplyCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCannedReplyCategoryMutationInput>;
};
export type MutationUpdateCompanyArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCompanyMutationInput>;
};
export type MutationUpdateContactArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateContactMutationInput>;
};
export type MutationUpdateContractArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateContractMutationInput>;
};
export type MutationUpdateContractTemplateArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateContractTemplateMutationInput>;
};
export type MutationUpdateCreditCardArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCreditCardMutationInput>;
};
export type MutationUpdateCreditCardProcessorArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCreditCardProcessorMutationInput>;
};
export type MutationUpdateCustomFieldArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateCustomFieldMutationInput>;
};
export type MutationUpdateDataServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDataServiceMutationInput>;
};
export type MutationUpdateDataUsageHistoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDataUsageHistoryMutationInput>;
};
export type MutationUpdateDebitArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDebitMutationInput>;
};
export type MutationUpdateDelinquencyExclusionArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDelinquencyExclusionMutationInput>;
};
export type MutationUpdateDepartmentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDepartmentMutationInput>;
};
export type MutationUpdateDeploymentTypeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDeploymentTypeMutationInput>;
};
export type MutationUpdateDepositSlipArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDepositSlipMutationInput>;
};
export type MutationUpdateDhcpServerArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDhcpServerMutationInput>;
};
export type MutationUpdateDhcpServerIdentifierArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDhcpServerIdentifierMutationInput>;
};
export type MutationUpdateDidArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDidMutationInput>;
};
export type MutationUpdateDidAssignmentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDidAssignmentMutationInput>;
};
export type MutationUpdateDiscountArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDiscountMutationInput>;
};
export type MutationUpdateDriversArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateDriversMutationInput>;
};
export type MutationUpdateEmailCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateEmailCategoryMutationInput>;
};
export type MutationUpdateEmailMessageArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateEmailMessageMutationInput>;
};
export type MutationUpdateEmailMessageContentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateEmailMessageContentMutationInput>;
};
export type MutationUpdateEntityCustomFieldsArgs = {
    customfielddataable_id: Scalars['Int64Bit']['input'];
    customfielddataable_type: CustomfielddataableType;
    input?: InputMaybe<UpdateEntityCustomFieldsMutationInput>;
};
export type MutationUpdateEpcArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateEpcMutationInput>;
};
export type MutationUpdateExpiringServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateExpiringServiceMutationInput>;
};
export type MutationUpdateExternalMarketingProviderArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateExternalMarketingProviderMutationInput>;
};
export type MutationUpdateFibermapIntegrationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateFibermapIntegrationMutationInput>;
};
export type MutationUpdateFibermapPlanArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateFibermapPlanMutationInput>;
};
export type MutationUpdateFibermapServiceLocationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateFibermapServiceLocationMutationInput>;
};
export type MutationUpdateFileArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateFileMutationInput>;
};
export type MutationUpdateGeneralLedgerCodeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateGeneralLedgerCodeMutationInput>;
};
export type MutationUpdateGenericInventoryAssigneeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateGenericInventoryAssigneeMutationInput>;
};
export type MutationUpdateGeoTaxZoneArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateGeoTaxZoneMutationInput>;
};
export type MutationUpdateGeofenceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateGeofenceMutationInput>;
};
export type MutationUpdateGlobalInventoryModelMinMaxArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateGlobalInventoryModelMinMaxMutationInput>;
};
export type MutationUpdateGpsTrackingProviderArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateGpsTrackingProviderMutationInput>;
};
export type MutationUpdateIdentityProviderActiveDirectoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateIdentityProviderActiveDirectoryMutationInput>;
};
export type MutationUpdateIdentityProviderGoogleArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateIdentityProviderGoogleMutationInput>;
};
export type MutationUpdateIdentityProviderMicrosoftArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateIdentityProviderMicrosoftMutationInput>;
};
export type MutationUpdateIdentityProviderSamlArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateIdentityProviderSamlMutationInput>;
};
export type MutationUpdateInboundMailboxArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInboundMailboxMutationInput>;
};
export type MutationUpdateInlineDeviceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInlineDeviceMutationInput>;
};
export type MutationUpdateInstanceServiceFundAutoPayArgs = {
    input?: InputMaybe<UpdateInstanceServiceFundAutoPayMutationInput>;
};
export type MutationUpdateInternalLocationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInternalLocationMutationInput>;
};
export type MutationUpdateInventoryItemArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInventoryItemsMutationInput>;
};
export type MutationUpdateInventoryItemFieldsArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInventoryItemFieldsMutationInput>;
};
export type MutationUpdateInventoryItemsArgs = {
    ids: Array<Scalars['Int64Bit']['input']>;
    input?: InputMaybe<UpdateInventoryItemsMutationInput>;
};
export type MutationUpdateInventoryLocationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInventoryLocationMutationInput>;
};
export type MutationUpdateInventoryModelArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInventoryModelMutationInput>;
};
export type MutationUpdateInventoryModelCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInventoryModelCategoryMutationInput>;
};
export type MutationUpdateInventoryModelFieldArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInventoryModelFieldMutationInput>;
};
export type MutationUpdateInventoryModelMinMaxArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInventoryModelMinMaxMutationInput>;
};
export type MutationUpdateInvoiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInvoiceMutationInput>;
};
export type MutationUpdateInvoiceAttachmentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInvoiceAttachmentMutationInput>;
};
export type MutationUpdateInvoiceMessageArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateInvoiceMessageMutationInput>;
};
export type MutationUpdateIpAssignmentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateIpAssignmentMutationInput>;
};
export type MutationUpdateIpPoolArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateIpPoolMutationInput>;
};
export type MutationUpdateJobArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateJobMutationInput>;
};
export type MutationUpdateJobServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateJobServiceMutationInput>;
};
export type MutationUpdateJobSkipsValidationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateJobMutationInput>;
};
export type MutationUpdateJobTypeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateJobTypeMutationInput>;
};
export type MutationUpdateLocalPrefixArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateLocalPrefixMutationInput>;
};
export type MutationUpdateLookerExploreLicenseArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateLookerExploreLicenseMutationInput>;
};
export type MutationUpdateLookerViewLicenseArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateLookerViewLicenseMutationInput>;
};
export type MutationUpdateLteProviderArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateLteProviderMutationInput>;
};
export type MutationUpdateMailingAddressArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateMailingAddressMutationInput>;
};
export type MutationUpdateManufacturerArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateManufacturerMutationInput>;
};
export type MutationUpdateMapOverlayArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateMapOverlayMutationInput>;
};
export type MutationUpdateMeArgs = {
    input?: InputMaybe<UpdateMeMutationInput>;
};
export type MutationUpdateMessageCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateMessageCategoryMutationInput>;
};
export type MutationUpdateNetflowAllowedSubnetArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNetflowAllowedSubnetMutationInput>;
};
export type MutationUpdateNetflowEndpointArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNetflowEndpointMutationInput>;
};
export type MutationUpdateNetflowWhitelistArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNetflowWhitelistMutationInput>;
};
export type MutationUpdateNetworkMonitoringGraphArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNetworkMonitoringGraphMutationInput>;
};
export type MutationUpdateNetworkMonitoringTemplateArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNetworkMonitoringTemplateMutationInput>;
};
export type MutationUpdateNetworkSiteArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNetworkSiteMutationInput>;
};
export type MutationUpdateNonInventoryItemArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNonInventoryItemMutationInput>;
};
export type MutationUpdateNoteArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateNoteMutationInput>;
};
export type MutationUpdateOneTimeServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateOneTimeServiceMutationInput>;
};
export type MutationUpdateOrderGroupArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateOrderGroupMutationInput>;
};
export type MutationUpdateOverageServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateOverageServiceMutationInput>;
};
export type MutationUpdatePackageArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePackageMutationInput>;
};
export type MutationUpdatePasswordPolicyArgs = {
    input?: InputMaybe<UpdatePasswordPolicyMutationInput>;
};
export type MutationUpdatePayPalCredentialArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePayPalCredentialInput>;
};
export type MutationUpdatePaymentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePaymentMutationInput>;
};
export type MutationUpdatePhoneNumberArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePhoneNumberMutationInput>;
};
export type MutationUpdatePhoneNumberTypeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePhoneNumberTypeMutationInput>;
};
export type MutationUpdatePollerArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePollerMutationInput>;
};
export type MutationUpdatePollerSettingsArgs = {
    input?: InputMaybe<UpdatePollerSettingsMutationInput>;
};
export type MutationUpdatePreseemArgs = {
    input?: InputMaybe<UpdatePreseemMutationInput>;
};
export type MutationUpdatePrintToMailOrderErrorArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePrintToMailOrderErrorMutationInput>;
};
export type MutationUpdatePrintToMailSettingsArgs = {
    input?: InputMaybe<UpdatePrintToMailSettingsMutationInput>;
};
export type MutationUpdatePurchaseOrderArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdatePurchaseOrderMutationInput>;
};
export type MutationUpdatePurchaseOrderSystemSettingsArgs = {
    input?: InputMaybe<UpdatePurchaseOrderSystemSettingsInput>;
};
export type MutationUpdateRadiusAccountArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateRadiusAccountMutationInput>;
};
export type MutationUpdateRadiusGroupArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateRadiusGroupMutationInput>;
};
export type MutationUpdateRadiusGroupReplyAttributeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateRadiusGroupReplyAttributeMutationInput>;
};
export type MutationUpdateRadiusServerArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateRadiusServerMutationInput>;
};
export type MutationUpdateRateCenterArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateRateCenterMutationInput>;
};
export type MutationUpdateRecurringServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateRecurringServiceMutationInput>;
};
export type MutationUpdateRoleArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateRoleMutationInput>;
};
export type MutationUpdateSavedMessageCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSavedMessageCategoryMutationInput>;
};
export type MutationUpdateScheduleAddressArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateScheduleAddressMutationInput>;
};
export type MutationUpdateScheduleAvailabilityArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateScheduleAvailabilityMutationInput>;
};
export type MutationUpdateScheduleAvailabilityDayTimeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateScheduleAvailabilityDayTimeMutationInput>;
};
export type MutationUpdateScheduleBlockerArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateScheduleBlockerMutationInput>;
};
export type MutationUpdateScheduleBlockerDayTimeArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateScheduleBlockerDayTimeMutationInput>;
};
export type MutationUpdateScheduleTimeOffArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateScheduleTimeOffMutationInput>;
};
export type MutationUpdateScheduledEventArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateScheduledEventMutationInput>;
};
export type MutationUpdateSearchFilterArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSearchFilterMutationInput>;
};
export type MutationUpdateServiceMetadataArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateServiceMetadataMutationInput>;
};
export type MutationUpdateServiceableAddressArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateServiceableAddressMutationInput>;
};
export type MutationUpdateSignatureArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSignatureMutationInput>;
};
export type MutationUpdateSmsSettingsArgs = {
    input?: InputMaybe<UpdateSmsSettingsMutationInput>;
};
export type MutationUpdateSnmpOidArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSnmpOidMutationInput>;
};
export type MutationUpdateSnmpOidThresholdArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSnmpOidThresholdMutationInput>;
};
export type MutationUpdateSnmpOverrideArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSnmpOverrideMutationInput>;
};
export type MutationUpdateStoredViewArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateStoredViewMutationInput>;
};
export type MutationUpdateSubnetArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSubnetMutationInput>;
};
export type MutationUpdateSupernetArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSupernetMutationInput>;
};
export type MutationUpdateSystemBackupDestinationArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateSystemBackupDestinationMutationInput>;
};
export type MutationUpdateSystemBackupSettingsArgs = {
    input?: InputMaybe<UpdateSystemBackupSettingsMutationInput>;
};
export type MutationUpdateSystemSettingsArgs = {
    input?: InputMaybe<UpdateSystemSettingsMutationInput>;
};
export type MutationUpdateTaskArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTaskMutationInput>;
};
export type MutationUpdateTaskTemplateArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTaskTemplateMutationInput>;
};
export type MutationUpdateTaskTemplateItemArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTaskTemplateItemMutationInput>;
};
export type MutationUpdateTaxArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTaxMutationInput>;
};
export type MutationUpdateTaxExemptionArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTaxExemptionMutationInput>;
};
export type MutationUpdateTaxOverrideArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTaxOverrideMutationInput>;
};
export type MutationUpdateTaxProviderArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTaxProviderMutationInput>;
};
export type MutationUpdateTicketArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTicketMutationInput>;
};
export type MutationUpdateTicketCategoryArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTicketCategoryMutationInput>;
};
export type MutationUpdateTicketCommentArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTicketCommentMutationInput>;
};
export type MutationUpdateTicketGroupArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTicketGroupMutationInput>;
};
export type MutationUpdateTicketRecipientArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTicketRecipientMutationInput>;
};
export type MutationUpdateTicketingSettingsArgs = {
    input?: InputMaybe<UpdateTicketingSettingsMutationInput>;
};
export type MutationUpdateTowercoverageConfigurationArgs = {
    input?: InputMaybe<UpdateTowercoverageConfigurationInput>;
};
export type MutationUpdateTriggeredEmailArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTriggeredEmailMutationInput>;
};
export type MutationUpdateTriggeredMessageArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateTriggeredMessageMutationInput>;
};
export type MutationUpdateUninventoriedMacAddressArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateUninventoriedMacAddressMutationInput>;
};
export type MutationUpdateUsageBasedBillingPolicyArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateUsageBasedBillingPolicyMutationInput>;
};
export type MutationUpdateUsageBasedBillingPolicyFreePeriodArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateUsageBasedBillingPolicyFreePeriodMutationInput>;
};
export type MutationUpdateUserArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateUserMutationInput>;
};
export type MutationUpdateVehicleArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateVehicleMutationInput>;
};
export type MutationUpdateVendorArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateVendorMutationInput>;
};
export type MutationUpdateVendorItemArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateVendorItemMutationInput>;
};
export type MutationUpdateVoiceProviderArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateVoiceProviderMutationInput>;
};
export type MutationUpdateVoiceProviderRateArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateVoiceProviderRateMutationInput>;
};
export type MutationUpdateVoiceProviderRateChargePercentMutationArgs = {
    input?: InputMaybe<UpdateVoiceProviderRateChargePercentMutationInput>;
};
export type MutationUpdateVoiceServiceArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateVoiceServiceMutationInput>;
};
export type MutationUpdateVoiceServiceGenericParameterArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateVoiceServiceGenericParameterMutationInput>;
};
export type MutationUpdateWebhookEndpointArgs = {
    id: Scalars['Int64Bit']['input'];
    input?: InputMaybe<UpdateWebhookEndpointMutationInput>;
};
export type MutationValidateCableModemProvisionerCredentialsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationValidateCalixCredentialsArgs = {
    calix_integration_id: Scalars['Int64Bit']['input'];
};
export type MutationValidateDhcpServerCredentialsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationValidateEmailDomainArgs = {
    check_for_migration?: InputMaybe<Scalars['Boolean']['input']>;
    id: Scalars['Int64Bit']['input'];
};
export type MutationValidateGpsTrackingProviderCredentialsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationValidateInlineDeviceCredentialsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationValidateLteProviderCredentialsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationValidateRadiusServerCredentialsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationValidateTaxProviderCredentialsArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationVerifySystemBackupDestinationConnectionArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationVoidCreditArgs = {
    id: Scalars['Int64Bit']['input'];
};
export type MutationVoidInvoiceArgs = {
    id: Scalars['Int64Bit']['input'];
};
/** Your IP address. */
export type MyIpAddress = {
    __typename: 'MyIpAddress';
    /** An IPv4/IPv6 address. */
    ip: Scalars['IP']['output'];
};
/** A subnet allowed to send data to a Netflow endpoint. */
export type NetflowAllowedSubnet = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'NetflowAllowedSubnet';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A Netflow endpoint. */
    netflow_endpoint?: Maybe<NetflowEndpoint>;
    /** The ID of a `NetflowEndpoint`. */
    netflow_endpoint_id: Scalars['Int64Bit']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A subnet allowed to send data to a Netflow endpoint. */
export type NetflowAllowedSubnetAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A subnet allowed to send data to a Netflow endpoint. */
export type NetflowAllowedSubnetLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A subnet allowed to send data to a Netflow endpoint. */
export type NetflowAllowedSubnetNetflow_EndpointArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hostname?: InputMaybe<Scalars['DomainName']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    whitelist_mode?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A subnet allowed to send data to a Netflow endpoint. */
export type NetflowAllowedSubnetNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `NetflowAllowedSubnetConnection` type. */
export type NetflowAllowedSubnetConnection = {
    __typename: 'NetflowAllowedSubnetConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NetflowAllowedSubnet>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A Netflow endpoint. */
export type NetflowEndpoint = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'NetflowEndpoint';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Hostname. */
    hostname: Scalars['DomainName']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A subnet allowed to send data to a Netflow endpoint. */
    netflow_allowed_subnets: NetflowAllowedSubnetConnection;
    /** A whitelisted subnet for a Netflow endpoint. */
    netflow_whitelists: NetflowWhitelistConnection;
    /** A note. */
    notes: NoteConnection;
    /** A TCP port. */
    port: Scalars['Port']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Whitelist mode. */
    whitelist_mode: Scalars['Boolean']['output'];
};
/** A Netflow endpoint. */
export type NetflowEndpointAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A Netflow endpoint. */
export type NetflowEndpointLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A Netflow endpoint. */
export type NetflowEndpointNetflow_Allowed_SubnetsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    netflow_endpoint_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A Netflow endpoint. */
export type NetflowEndpointNetflow_WhitelistsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    netflow_endpoint_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A Netflow endpoint. */
export type NetflowEndpointNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `NetflowEndpointConnection` type. */
export type NetflowEndpointConnection = {
    __typename: 'NetflowEndpointConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NetflowEndpoint>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A whitelisted subnet for a Netflow endpoint. */
export type NetflowWhitelist = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'NetflowWhitelist';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A Netflow endpoint. */
    netflow_endpoint?: Maybe<NetflowEndpoint>;
    /** The ID of a `NetflowEndpoint`. */
    netflow_endpoint_id: Scalars['Int64Bit']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A whitelisted subnet for a Netflow endpoint. */
export type NetflowWhitelistAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A whitelisted subnet for a Netflow endpoint. */
export type NetflowWhitelistLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A whitelisted subnet for a Netflow endpoint. */
export type NetflowWhitelistNetflow_EndpointArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hostname?: InputMaybe<Scalars['DomainName']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    whitelist_mode?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A whitelisted subnet for a Netflow endpoint. */
export type NetflowWhitelistNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `NetflowWhitelistConnection` type. */
export type NetflowWhitelistConnection = {
    __typename: 'NetflowWhitelistConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NetflowWhitelist>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A `NetworkMonitoringGraph`. */
export type NetworkMonitoringGraph = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'NetworkMonitoringGraph';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A `NetworkMonitoringTemplate`. */
    network_monitoring_template?: Maybe<NetworkMonitoringTemplate>;
    /** The ID of a `NetworkMonitoringTemplate`. */
    network_monitoring_template_id: Scalars['Int64Bit']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An `SnmpOid`. */
    snmp_oids: SnmpOidConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Stacked */
    stacked: Scalars['Boolean']['output'];
    /** The type. */
    type: NetworkMonitoringGraphType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A `NetworkMonitoringGraph`. */
export type NetworkMonitoringGraphAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `NetworkMonitoringGraph`. */
export type NetworkMonitoringGraphLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `NetworkMonitoringGraph`. */
export type NetworkMonitoringGraphNetwork_Monitoring_TemplateArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    collect_interface_statistics?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_latency_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_loss_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_monitoring?: InputMaybe<Scalars['Boolean']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp3_auth_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    snmp3_context_engineid?: InputMaybe<Scalars['Text']['input']>;
    snmp3_context_name?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    snmp_community?: InputMaybe<Scalars['Text']['input']>;
    snmp_version?: InputMaybe<SnmpVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `NetworkMonitoringGraph`. */
export type NetworkMonitoringGraphNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `NetworkMonitoringGraph`. */
export type NetworkMonitoringGraphSnmp_OidsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_scale?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_as_table?: InputMaybe<Scalars['Boolean']['input']>;
    divide_by?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_graph_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    oid?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unit_of_measurement?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `NetworkMonitoringGraphConnection` type. */
export type NetworkMonitoringGraphConnection = {
    __typename: 'NetworkMonitoringGraphConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NetworkMonitoringGraph>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A `NetworkMonitoringGraph` type. */
export declare enum NetworkMonitoringGraphType {
    /** Area Graph. */
    Area = "AREA",
    /** Bar Graph. */
    Bar = "BAR",
    /** Line Graph. */
    Line = "LINE"
}
/** A `NetworkMonitoringTemplate`. */
export type NetworkMonitoringTemplate = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'NetworkMonitoringTemplate';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether or not to collect interface statistics. */
    collect_interface_statistics: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The mode that an inventory item is deployed in. */
    deployment_types: DeploymentTypeConnection;
    /** ICMP latency threshold (ms). */
    icmp_latency_threshold?: Maybe<Scalars['Int']['output']>;
    /** ICMP loss threshold (%). */
    icmp_loss_threshold?: Maybe<Scalars['Int']['output']>;
    /** Whether or not ICMP monitoring is enabled. */
    icmp_monitoring: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A type of item stored in inventory. */
    inventory_models: InventoryModelConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A `NetworkMonitoringGraph`. */
    network_monitoring_graphs: NetworkMonitoringGraphConnection;
    /** A note. */
    notes: NoteConnection;
    /** SNMPv3 auth passphrase */
    snmp3_auth_passphrase?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 auth protocol */
    snmp3_auth_protocol?: Maybe<Snmp3AuthProtocol>;
    /** SNMPv3 context engine ID */
    snmp3_context_engineid?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 context name */
    snmp3_context_name?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 privacy passphrase */
    snmp3_priv_passphrase?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 privacy protocol */
    snmp3_priv_protocol?: Maybe<Snmp3PrivProtocol>;
    /** SNMPv3 security level */
    snmp3_sec_level?: Maybe<Snmp3SecurityLevel>;
    /** SNMP community/securityName */
    snmp_community?: Maybe<Scalars['Text']['output']>;
    /** SNMP version */
    snmp_version?: Maybe<SnmpVersion>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A `NetworkMonitoringTemplate`. */
export type NetworkMonitoringTemplateAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `NetworkMonitoringTemplate`. */
export type NetworkMonitoringTemplateDeployment_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `NetworkMonitoringTemplate`. */
export type NetworkMonitoringTemplateInventory_ModelsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `NetworkMonitoringTemplate`. */
export type NetworkMonitoringTemplateLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `NetworkMonitoringTemplate`. */
export type NetworkMonitoringTemplateNetwork_Monitoring_GraphsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stacked?: InputMaybe<Scalars['Boolean']['input']>;
    type?: InputMaybe<NetworkMonitoringGraphType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `NetworkMonitoringTemplate`. */
export type NetworkMonitoringTemplateNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `NetworkMonitoringTemplateConnection` type. */
export type NetworkMonitoringTemplateConnection = {
    __typename: 'NetworkMonitoringTemplateConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NetworkMonitoringTemplate>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A network site. */
export type NetworkSite = AccessloggableInterface & AddressableInterface & ContactableInterface & CustomfielddataableInterface & EmailableInterface & FileableInterface & GenericinventoryitemableInterface & GenericinventoryitemactionloggableInterface & InventoryitemableInterface & IpassignmentableInterface & IpassignmenthistoryableInterface & JobbableInterface & LoggableInterface & NoteableInterface & RecentitemableInterface & SearchableInterface & TaskableInterface & TicketableInterface & {
    __typename: 'NetworkSite';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A geographical address. */
    addresses: AddressConnection;
    /** An alerting rotation. */
    alerting_rotations: AlertingRotationConnection;
    /** A contact person. */
    contacts: ContactConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** An email. */
    emails: EmailConnection;
    /** FiberMap plan. */
    fibermap_plans: FibermapPlanConnection;
    /** A file. */
    files: FileConnection;
    /** A log of an action taken against a set of generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** A geo-point. */
    geopoint?: Maybe<Scalars['Geopoint']['output']>;
    /** Height in meters. */
    height_in_meters: Scalars['Float']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** A historical record of an IP assignment. */
    ip_assignment_histories: IpAssignmentHistoryConnection;
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** A job, typically in the field. */
    jobs: JobConnection;
    /** Tickets that are linked to this item. */
    linked_tickets: TicketConnection;
    /** A log entry. */
    logs: LogConnection;
    /** Map Overlay. */
    map_overlays: MapOverlayConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** Network site serviceable address list. */
    network_site_serviceable_address_list?: Maybe<NetworkSiteServiceableAddressList>;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A task. */
    tasks: TaskConnection;
    /** A ticket. */
    tickets: TicketConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A network site. */
export type NetworkSiteAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A network site. */
export type NetworkSiteAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A network site. */
export type NetworkSiteAlerting_RotationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** A network site. */
export type NetworkSiteContactsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A network site. */
export type NetworkSiteCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A network site. */
export type NetworkSiteEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteFibermap_PlansArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    build?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    drop?: InputMaybe<Scalars['String']['input']>;
    fibermap_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_plan_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_name?: InputMaybe<Scalars['String']['input']>;
    fibermap_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    height_in_meters?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    map_overlay_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mapped_at?: InputMaybe<Scalars['Datetime']['input']>;
    mapping_user?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A network site. */
export type NetworkSiteGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A network site. */
export type NetworkSiteGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteIp_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    ipassignmenthistoryable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmenthistoryable_type?: InputMaybe<IpassignmenthistoryableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    unique_identifier?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteJobsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completed_successfully?: InputMaybe<Scalars['Boolean']['input']>;
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_type?: InputMaybe<JobbableType>;
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    skips_validation?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteLinked_TicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A network site. */
export type NetworkSiteLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A network site. */
export type NetworkSiteMap_OverlaysArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contents?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    file_type?: InputMaybe<MapOverlayFileType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    radius?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteNetwork_Site_Serviceable_Address_ListArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A network site. */
export type NetworkSiteNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A network site. */
export type NetworkSiteTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A network site. */
export type NetworkSiteTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `NetworkSiteConnection` type. */
export type NetworkSiteConnection = {
    __typename: 'NetworkSiteConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NetworkSite>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Network site serviceable address list. */
export type NetworkSiteServiceableAddressList = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'NetworkSiteServiceableAddressList';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A geographical address. */
    addresses: AddressConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A network site. */
    network_site?: Maybe<NetworkSite>;
    /** Network site id. */
    network_site_id: Scalars['Int64Bit']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Network site serviceable address list. */
export type NetworkSiteServiceableAddressListAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Network site serviceable address list. */
export type NetworkSiteServiceableAddressListAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** Network site serviceable address list. */
export type NetworkSiteServiceableAddressListLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Network site serviceable address list. */
export type NetworkSiteServiceableAddressListNetwork_SiteArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    height_in_meters?: InputMaybe<Scalars['Float']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Network site serviceable address list. */
export type NetworkSiteServiceableAddressListNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `NetworkSiteServiceableAddressListConnection` type. */
export type NetworkSiteServiceableAddressListConnection = {
    __typename: 'NetworkSiteServiceableAddressListConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NetworkSiteServiceableAddressList>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** types.next_ip_address */
export type NextIpAddress = {
    __typename: 'NextIpAddress';
    /** An IPv4/IPv6 address. */
    ip_address?: Maybe<Scalars['IP']['output']>;
};
/** types.next_subnet */
export type NextSubnet = {
    __typename: 'NextSubnet';
    /** An IPv4/IPv6 subnet. */
    subnet?: Maybe<Scalars['SubnetScalar']['output']>;
};
/** An item purchasable from vendors that does not have an `Inventory Model` associated with it */
export type NonInventoryItem = AccessloggableInterface & LoggableInterface & NoteableInterface & VendoritemableInterface & {
    __typename: 'NonInventoryItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A general ledger code. */
    general_ledger_code?: Maybe<GeneralLedgerCode>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** An item that can be purchased from a particular vendor. */
    vendor_items: VendorItemConnection;
};
/** An item purchasable from vendors that does not have an `Inventory Model` associated with it */
export type NonInventoryItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An item purchasable from vendors that does not have an `Inventory Model` associated with it */
export type NonInventoryItemGeneral_Ledger_CodeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    code?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An item purchasable from vendors that does not have an `Inventory Model` associated with it */
export type NonInventoryItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An item purchasable from vendors that does not have an `Inventory Model` associated with it */
export type NonInventoryItemNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An item purchasable from vendors that does not have an `Inventory Model` associated with it */
export type NonInventoryItemVendor_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_type?: InputMaybe<VendoritemableType>;
};
/** The connection wrapper around the `NonInventoryItemConnection` type. */
export type NonInventoryItemConnection = {
    __typename: 'NonInventoryItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NonInventoryItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A type of `Payment` that can only be made without using a payment method (like a credit card, or bank account.) */
export declare enum NonPaymentMethodPaymentType {
    /** Cash */
    Cash = "CASH",
    /** Check */
    Check = "CHECK",
    /** Other */
    Other = "OTHER",
    /** PayPal */
    Paypal = "PAYPAL",
    /** Wire */
    Wire = "WIRE"
}
/** A note. */
export type Note = AccessloggableInterface & LoggableInterface & {
    __typename: 'Note';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The message. */
    message: Scalars['Text']['output'];
    /** The owner of this `Note`. */
    noteable?: Maybe<NoteableInterface>;
    /** The ID of the entity that owns this note. */
    noteable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that owns this note. */
    noteable_type: NoteableType;
    /** The priority of this item. */
    priority: NotePriority;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A note. */
export type NoteAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A note. */
export type NoteLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A note. */
export type NoteNoteableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A note. */
export type NoteUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `NoteConnection` type. */
export type NoteConnection = {
    __typename: 'NoteConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Note>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Allows the addition of a note to the parent entity. */
export type NoteMutationInput = {
    /** The message. */
    message: Scalars['Text']['input'];
    /** The priority of the note. */
    priority: NotePriority;
};
/** The priority of the `Note`. Sticky forces it to the top of the note list. Popup forces the note to popup on the screen. */
export declare enum NotePriority {
    /** A normal priority */
    Normal = "NORMAL",
    /** A sticky note is forced to the top of the list */
    Sticky = "STICKY",
    /** Popup notes will popup immediately when the owning entity is accessed */
    StickyWithConfirmation = "STICKY_WITH_CONFIRMATION"
}
/** An entity that can have `Note`s. */
export type NoteableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An entity that can have a `Note` associated with it. */
export declare enum NoteableType {
    /** An access log history on an entity. */
    AccessLog = "AccessLog",
    /** A customer account. */
    Account = "Account",
    /** A tracked event that has occurred for an `Account`. */
    AccountEvent = "AccountEvent",
    /** An account group. */
    AccountGroup = "AccountGroup",
    /** The status of an account. */
    AccountStatus = "AccountStatus",
    /** The account type. */
    AccountType = "AccountType",
    /** A voice service configuration that links a service parameter to an account. */
    AccountVoiceServiceDetail = "AccountVoiceServiceDetail",
    /** An ACH batch file. */
    AchBatch = "AchBatch",
    /** An address list defines some criteria by which to group accounts for network policy enforcement. */
    AddressList = "AddressList",
    /** An address status. */
    AddressStatus = "AddressStatus",
    /** An alerting rotation. */
    AlertingRotation = "AlertingRotation",
    /** An alerting rotation day. */
    AlertingRotationDay = "AlertingRotationDay",
    /** An application firewall IP address or subnet rule. */
    ApplicationFirewallRule = "ApplicationFirewallRule",
    /** A tax category defined by Avalara. */
    AvalaraTaxCategory = "AvalaraTaxCategory",
    /** A bank account. */
    BankAccount = "BankAccount",
    /** A credential used when processing bank account payments. */
    BankAccountProcessorCredential = "BankAccountProcessorCredential",
    /** A cable modem provisioner. */
    CableModemProvisioner = "CableModemProvisioner",
    /** A cable modem provisioner credential. */
    CableModemProvisionerCredential = "CableModemProvisionerCredential",
    /** A configuration for a specific Calix SMx endpoint. */
    CalixIntegration = "CalixIntegration",
    /** An import of call data records (CDRs). */
    CallDataRecordImport = "CallDataRecordImport",
    /** An import of call detail records (CDRs). */
    CallDetailRecordImport = "CallDetailRecordImport",
    /** A recipe for importing call detail records (CDRs). */
    CallDetailRecordImportRecipe = "CallDetailRecordImportRecipe",
    /** A canned reply. */
    CannedReply = "CannedReply",
    /** A canned reply category. */
    CannedReplyCategory = "CannedReplyCategory",
    /** A company you do business as. */
    Company = "Company",
    /** A contact person. */
    Contact = "Contact",
    /** A contract. */
    Contract = "Contract",
    /** A contract template. */
    ContractTemplate = "ContractTemplate",
    /** A credit card. */
    CreditCard = "CreditCard",
    /** A user defined field. */
    CustomField = "CustomField",
    /** Details regarding a specific data `Service`. */
    DataServiceDetail = "DataServiceDetail",
    /** A data usage history entry. */
    DataUsageHistory = "DataUsageHistory",
    /** A data usage top off. */
    DataUsageTopOff = "DataUsageTopOff",
    /** A period of time when invoices are not evaluated for delinquency. */
    DelinquencyExclusion = "DelinquencyExclusion",
    /** A department. */
    Department = "Department",
    /** The mode that an inventory item is deployed in. */
    DeploymentType = "DeploymentType",
    /** A deposit slip. */
    DepositSlip = "DepositSlip",
    /** A DHCP server. */
    DhcpServer = "DhcpServer",
    /** A specific identifier for a DHCP server. */
    DhcpServerIdentifier = "DhcpServerIdentifier",
    /** A direct inward dial (DID). */
    Did = "Did",
    /** A direct inward dial (DID) assignment. */
    DidAssignment = "DidAssignment",
    /** A recipe for importing DIDs. */
    DidImportRecipe = "DidImportRecipe",
    /** A disbursement. */
    Disbursement = "Disbursement",
    /** A disbursement detail. */
    DisbursementDetail = "DisbursementDetail",
    /** The `Account` disconnections log. */
    DisconnectionLog = "DisconnectionLog",
    /** A categorization of an `Email` by type. */
    EmailCategory = "EmailCategory",
    /** An email domain. */
    EmailDomain = "EmailDomain",
    /** An email message. */
    EmailMessage = "EmailMessage",
    /** An LTE EPC. */
    Epc = "Epc",
    /** The `ExternalMarketingProvider` credentials for integration. */
    ExternalMarketingProviderCredential = "ExternalMarketingProviderCredential",
    /** FiberMap integration. */
    FibermapIntegration = "FibermapIntegration",
    /** FiberMap plan. */
    FibermapPlan = "FibermapPlan",
    /** FiberMap service location. */
    FibermapServiceLocation = "FibermapServiceLocation",
    /** A fractional debit, stored to accurately calculate multi month billing. */
    FractionalDebit = "FractionalDebit",
    /** A fractional tax transaction, stored to accurately calculate multi month billing. */
    FractionalTaxTransaction = "FractionalTaxTransaction",
    /** A general ledger code. */
    GeneralLedgerCode = "GeneralLedgerCode",
    /** A generic assignee for inventory items. */
    GenericInventoryAssignee = "GenericInventoryAssignee",
    /** A generic inventory item. */
    GenericInventoryItem = "GenericInventoryItem",
    /** A geographical tax zone. */
    GeoTaxZone = "GeoTaxZone",
    /** A geographical restriction. */
    Geofence = "Geofence",
    /** Defines the minimum and maximum of an inventory level for all locations per inventory model. */
    GlobalInventoryModelMinMax = "GlobalInventoryModelMinMax",
    /** Details regarding an ActiveDirectory `IdentityProvider`. */
    IdentityProviderActiveDirectoryDetail = "IdentityProviderActiveDirectoryDetail",
    /** Details regarding a Google `IdentityProvider`. */
    IdentityProviderGoogleDetail = "IdentityProviderGoogleDetail",
    /** Details regarding a Microsoft `IdentityProvider`. */
    IdentityProviderMicrosoftDetail = "IdentityProviderMicrosoftDetail",
    /** Details regarding a SAML `IdentityProvider`. */
    IdentityProviderSamlDetail = "IdentityProviderSamlDetail",
    /** An import. */
    Import = "Import",
    /** An inbound mailbox. */
    InboundMailbox = "InboundMailbox",
    /** A device that sits inline with customer traffic to impose network policy. */
    InlineDevice = "InlineDevice",
    /** An inline device credential. */
    InlineDeviceCredential = "InlineDeviceCredential",
    /** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
    IntegrationFieldMapping = "IntegrationFieldMapping",
    /** An entity which maps a service to a vendor specific service name */
    IntegrationServiceMapping = "IntegrationServiceMapping",
    /** A location inside an `InventoryLocation` (e.g. a shelf or a room.) */
    InternalLocation = "InternalLocation",
    /** An inventory item. */
    InventoryItem = "InventoryItem",
    /** A location that inventory is stored in. */
    InventoryLocation = "InventoryLocation",
    /** A type of item stored in inventory. */
    InventoryModel = "InventoryModel",
    /** A category of item stored in inventory. */
    InventoryModelCategory = "InventoryModelCategory",
    /** A field on an inventory model. */
    InventoryModelField = "InventoryModelField",
    /** Defines the minimum and maximum of an inventory level per location per inventory model. */
    InventoryModelMinMax = "InventoryModelMinMax",
    /** A PDF to attach to invoices. */
    InvoiceAttachment = "InvoiceAttachment",
    /** A message that is appended to specific invoices. */
    InvoiceMessage = "InvoiceMessage",
    /** An IP address assignment. */
    IpAssignment = "IpAssignment",
    /** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
    IpPool = "IpPool",
    /** A job, typically in the field. */
    Job = "Job",
    /** The type of a `Job`. */
    JobType = "JobType",
    /** A local prefix for a voice service. */
    LocalPrefix = "LocalPrefix",
    /** A report builder license. */
    LookerExploreLicense = "LookerExploreLicense",
    /** A report viewer license. */
    LookerViewLicense = "LookerViewLicense",
    /** A provider of LTE provisioning. */
    LteProvider = "LteProvider",
    /** Credentials for an `LteProvider`. */
    LteProviderCredential = "LteProviderCredential",
    /** A manufacturer of an item stored in inventory. */
    Manufacturer = "Manufacturer",
    /** Map Overlay. */
    MapOverlay = "MapOverlay",
    /** A mass email communication. */
    MassEmail = "MassEmail",
    /** A categorization of a message by type. */
    MessageCategory = "MessageCategory",
    /** A record of a monthly billing cycle. */
    MonthlyBillingCompletion = "MonthlyBillingCompletion",
    /** A subnet allowed to send data to a Netflow endpoint. */
    NetflowAllowedSubnet = "NetflowAllowedSubnet",
    /** A Netflow endpoint. */
    NetflowEndpoint = "NetflowEndpoint",
    /** A whitelisted subnet for a Netflow endpoint. */
    NetflowWhitelist = "NetflowWhitelist",
    /** A `NetworkMonitoringGraph`. */
    NetworkMonitoringGraph = "NetworkMonitoringGraph",
    /** A `NetworkMonitoringTemplate`. */
    NetworkMonitoringTemplate = "NetworkMonitoringTemplate",
    /** A network site. */
    NetworkSite = "NetworkSite",
    /** Network site serviceable address list. */
    NetworkSiteServiceableAddressList = "NetworkSiteServiceableAddressList",
    /** An item purchasable from vendors that does not have an `Inventory Model` associated with it */
    NonInventoryItem = "NonInventoryItem",
    /** An order group. */
    OrderGroup = "OrderGroup",
    /** Details regarding a specific overage `Service`. */
    OverageServiceDetail = "OverageServiceDetail",
    /** A collection of `Service`s. */
    Package = "Package",
    /** Paypal credentials for external payments. */
    PayPalCredential = "PayPalCredential",
    /** An access token for the API. */
    PersonalAccessToken = "PersonalAccessToken",
    /** A `Poller`. */
    Poller = "Poller",
    /** Poller configuration settings. */
    PollerSetting = "PollerSetting",
    /** Preseem integration. */
    Preseem = "Preseem",
    /** A single PDF containing multiple invoices for printing. */
    PrintedInvoiceBatch = "PrintedInvoiceBatch",
    /** A purchase order for items from a third party vendor. */
    PurchaseOrder = "PurchaseOrder",
    /** A line item on a purchase order. */
    PurchaseOrderItem = "PurchaseOrderItem",
    /** A RADIUS account. */
    RadiusAccount = "RadiusAccount",
    /** A RADIUS group. */
    RadiusGroup = "RadiusGroup",
    /** A RADIUS group reply attribute. */
    RadiusGroupReplyAttribute = "RadiusGroupReplyAttribute",
    /** A RADIUS server. */
    RadiusServer = "RadiusServer",
    /** The history of a RADIUS session. */
    RadiusSessionHistory = "RadiusSessionHistory",
    /** A rate center. */
    RateCenter = "RateCenter",
    /** A record of a refund applied to a `Payment`. */
    RefundedPayment = "RefundedPayment",
    /** A record a `Payment` reversal. */
    ReversedPayment = "ReversedPayment",
    /** A role defines the permission set that a user has. */
    Role = "Role",
    /** Saved message category. */
    SavedMessageCategory = "SavedMessageCategory",
    /** The geographical point that a technician starts or ends their day at. */
    ScheduleAddress = "ScheduleAddress",
    /** Availability for `Job`s to be scheduled. */
    ScheduleAvailability = "ScheduleAvailability",
    /** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
    ScheduleBlocker = "ScheduleBlocker",
    /** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
    ScheduleBlockerOverride = "ScheduleBlockerOverride",
    /** Time off that removes availability from a `ScheduleAvailability`. */
    ScheduleTimeOff = "ScheduleTimeOff",
    /** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
    ScheduledEventAccountVoiceServiceDetail = "ScheduledEventAccountVoiceServiceDetail",
    /** A service. */
    Service = "Service",
    /** A signature. */
    Signature = "Signature",
    /** An SMS message. */
    SmsMessage = "SmsMessage",
    /** An SMS message content. */
    SmsMessageContent = "SmsMessageContent",
    /** SMS configuration settings. */
    SmsSetting = "SmsSetting",
    /** An `SnmpOid`. */
    SnmpOid = "SnmpOid",
    /** An `SnmpOidThreshold`. */
    SnmpOidThreshold = "SnmpOidThreshold",
    /** An `SnmpOverride`. */
    SnmpOverride = "SnmpOverride",
    /** A saved view. */
    StoredView = "StoredView",
    /** An IPv4/IPv6 subnet. */
    Subnet = "Subnet",
    /** The largest example of a unique subnet on your network. A supernet contains many subnets. An example of a supernet is 10.0.0.0/8. */
    Supernet = "Supernet",
    /** A backup of your Sonar instance's data. */
    SystemBackup = "SystemBackup",
    /** A configured destination to export system backups to. */
    SystemBackupDestination = "SystemBackupDestination",
    /** A credential used to authenticate against configured destinations to export system backups to. */
    SystemBackupDestinationCredential = "SystemBackupDestinationCredential",
    /** A log of a system backup export attempt. */
    SystemBackupExport = "SystemBackupExport",
    /** The settings for system backups in your Sonar instance. */
    SystemBackupSetting = "SystemBackupSetting",
    /** A tax. */
    Tax = "Tax",
    /** A tax exemption. */
    TaxExemption = "TaxExemption",
    /** An override to the default taxation rate. */
    TaxOverride = "TaxOverride",
    /** A tax provider. */
    TaxProvider = "TaxProvider",
    /** Credentials for a `TaxProvider`. */
    TaxProviderCredential = "TaxProviderCredential",
    /** types.test_read_only_file_model */
    TestReadOnlyFileModel = "TestReadOnlyFileModel",
    /** A ticket category. */
    TicketCategory = "TicketCategory",
    /** A ticket group. */
    TicketGroup = "TicketGroup",
    /** A ticket recipient. */
    TicketRecipient = "TicketRecipient",
    /** TowerCoverage integration. */
    TowercoverageConfiguration = "TowercoverageConfiguration",
    /** A TowerCoverage submission. */
    TowercoverageSubmission = "TowercoverageSubmission",
    /** An `Email` that is sent when a particular event occurs. */
    TriggeredEmail = "TriggeredEmail",
    /** A message that is sent when a specific event occurs. */
    TriggeredMessage = "TriggeredMessage",
    /** A MAC address that is not recorded in the inventory system. */
    UninventoriedMacAddress = "UninventoriedMacAddress",
    /** A usage based billing policy. */
    UsageBasedBillingPolicy = "UsageBasedBillingPolicy",
    /** A period of free time in a `UsageBasedBillingPolicy`. */
    UsageBasedBillingPolicyFreePeriod = "UsageBasedBillingPolicyFreePeriod",
    /** A vehicle. */
    Vehicle = "Vehicle",
    /** A third party vendor of inventory models. */
    Vendor = "Vendor",
    /** An item that can be purchased from a particular vendor. */
    VendorItem = "VendorItem",
    /** A `VoiceProvider`. */
    VoiceProvider = "VoiceProvider",
    /** An import of voice provider rates. */
    VoiceProviderRateImport = "VoiceProviderRateImport",
    /** A recipe for importing voice provider rates. */
    VoiceProviderRateImportRecipe = "VoiceProviderRateImportRecipe",
    /** Details regarding a specific voice `Service`. */
    VoiceServiceDetail = "VoiceServiceDetail",
    /** A configurable attribute for a voice service. */
    VoiceServiceGenericParameter = "VoiceServiceGenericParameter",
    /** A URL to an endpoint that a webhook can be sent to. */
    WebhookEndpoint = "WebhookEndpoint",
    /** An event on a model that can fire a webhook */
    WebhookEndpointEvent = "WebhookEndpointEvent",
    /** A webhook for a model and event that has been queued to be sent. */
    WebhookEndpointEventDispatch = "WebhookEndpointEventDispatch",
    /** A send attempt of a dispatched webhook for a model and event. */
    WebhookEndpointEventDispatchAttempt = "WebhookEndpointEventDispatchAttempt"
}
/** An entity that can have `Notification`s */
export type NotifiableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of entity that is related to this `Notification`. */
export declare enum NotifiableType {
    /** A `CallDetailRecordImport`. */
    CallDetailRecordImport = "CallDetailRecordImport",
    /** A `Fibermap Plan`. */
    FibermapPlan = "FibermapPlan",
    /** An `Import`. */
    Import = "Import",
    /** An `InboundMailbox`. */
    InboundMailbox = "InboundMailbox",
    /** An `InventoryItem`. */
    InventoryItem = "InventoryItem",
    /** A `Job`. */
    Job = "Job",
    /** A `Print to mail batch`. */
    PrintToMailBatch = "PrintToMailBatch",
    /** A `PurchaseOrder`. */
    PurchaseOrder = "PurchaseOrder",
    /** A `SystemBackup`. */
    SystemBackup = "SystemBackup",
    /** A `SystemBackupExport`. */
    SystemBackupExport = "SystemBackupExport",
    /** A `Task`. */
    Task = "Task",
    /** A `Ticket`. */
    Ticket = "Ticket",
    /** A `VoiceProviderRateImport`. */
    VoiceProviderRateImport = "VoiceProviderRateImport"
}
/** A `Notification`. */
export type Notification = AccessloggableInterface & LoggableInterface & {
    __typename: 'Notification';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether this notification is read or unread. */
    is_read: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The entity that is related to this `Notification`. */
    notifiable?: Maybe<NotifiableInterface>;
    /** The ID of the entity that the notification is related to. */
    notifiable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that the notification is related to. */
    notifiable_type?: Maybe<NotifiableType>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The type. */
    type: NotificationType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A `Notification`. */
export type NotificationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `Notification`. */
export type NotificationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `Notification`. */
export type NotificationNotifiableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `Notification`. */
export type NotificationUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A notification channel. */
export declare enum NotificationChannel {
    /** Email Me */
    Email = "EMAIL",
    /** SMS */
    Sms = "SMS",
    /** In-App Notification */
    Socket = "SOCKET"
}
/** The connection wrapper around the `NotificationConnection` type. */
export type NotificationConnection = {
    __typename: 'NotificationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Notification>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A user's notification setting. */
export type NotificationSetting = AccessloggableInterface & LoggableInterface & {
    __typename: 'NotificationSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The notification channels. */
    channels: Array<Maybe<NotificationChannel>>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The type of notification. */
    notification_type: NotificationType;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A user's notification setting. */
export type NotificationSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user's notification setting. */
export type NotificationSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user's notification setting. */
export type NotificationSettingUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `NotificationSettingConnection` type. */
export type NotificationSettingConnection = {
    __typename: 'NotificationSettingConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<NotificationSetting>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** User settings for a `Notification` type. */
export type NotificationSettingMutationInput = {
    /** The notification channels. */
    channels?: InputMaybe<Array<InputMaybe<NotificationChannel>>>;
    /** The type of notification. */
    notification_type: NotificationType;
};
/** The type of notification. */
export declare enum NotificationType {
    /** When a Plan is imported from Vetro FiberMap */
    FibermapPlansCreated = "FIBERMAP_PLANS_CREATED",
    /** When an import completes successfully */
    ImportCompleted = "IMPORT_COMPLETED",
    /** When an import fails */
    ImportFailed = "IMPORT_FAILED",
    /** When an inbound mailbox slack integration is disabled due to repeated failures */
    InboundMailboxSlackDisabled = "INBOUND_MAILBOX_SLACK_DISABLED",
    /** When a job is assigned to me */
    JobAssigned = "JOB_ASSIGNED",
    /** When a job assigned to me is completed successfully */
    JobCompleted = "JOB_COMPLETED",
    /** When a job assigned to me is completed unsuccessfully */
    JobFailed = "JOB_FAILED",
    /** When a job assigned to me is rescheduled */
    JobRescheduled = "JOB_RESCHEDULED",
    /** When a network alert is generated for one of my alerting rotations */
    NetworkAlert = "NETWORK_ALERT",
    /** When a purchase order created by me is approved */
    OwnPurchaseOrderApproved = "OWN_PURCHASE_ORDER_APPROVED",
    /** When a print to mail batch has completed */
    PrintToMailBatchCompleted = "PRINT_TO_MAIL_BATCH_COMPLETED",
    /** When a print to mail batch fails */
    PrintToMailBatchFailed = "PRINT_TO_MAIL_BATCH_FAILED",
    /** When there are insufficient funds available to send a print to mail batch */
    PrintToMailBatchInsufficientFunds = "PRINT_TO_MAIL_BATCH_INSUFFICIENT_FUNDS",
    /** When the funds available for print to mail fall below the configured threshold */
    PrintToMailFundsBelowThreshold = "PRINT_TO_MAIL_FUNDS_BELOW_THRESHOLD",
    /** When a product request is created and needs approval */
    ProductRequestCreated = "PRODUCT_REQUEST_CREATED",
    /** When a purchase order created by me is rejected */
    ProductRequestRejected = "PRODUCT_REQUEST_REJECTED",
    /** When any purchase order is approved */
    PurchaseOrderApproved = "PURCHASE_ORDER_APPROVED",
    /** When a purchase order is canceled */
    PurchaseOrderCanceled = "PURCHASE_ORDER_CANCELED",
    /** When any purchase order is marked as complete */
    PurchaseOrderComplete = "PURCHASE_ORDER_COMPLETE",
    /** When a purchase order I approved or created could not be emailed to its vendor */
    PurchaseOrderFailedToEmailVendor = "PURCHASE_ORDER_FAILED_TO_EMAIL_VENDOR",
    /** When the funds available for SMS messages fall below the configured threshold */
    SmsFundsBelowThreshold = "SMS_FUNDS_BELOW_THRESHOLD",
    /** When there are insufficient funds available to send an SMS message */
    SmsInsufficientFunds = "SMS_INSUFFICIENT_FUNDS",
    /** When a system backup fails */
    SystemBackupFailed = "SYSTEM_BACKUP_FAILED",
    /** When a task is assigned to me */
    TaskAssigned = "TASK_ASSIGNED",
    /** When a task assigned to me is due soon */
    TaskDueSoon = "TASK_DUE_SOON",
    /** When a task assigned to me is past due */
    TaskPastDue = "TASK_PAST_DUE",
    /** When a ticket is assigned to me or a group I belong to */
    TicketAssigned = "TICKET_ASSIGNED",
    /** When a ticket assigned to me receives a comment */
    TicketCommented = "TICKET_COMMENTED",
    /** When a ticket assigned to me receives a reply */
    TicketReplied = "TICKET_REPLIED"
}
/** Metadata values for the metadata fields on the associated service. */
export type OneTimeTransactionAccountVoiceServiceDetailMutationInput = {
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: InputMaybe<Scalars['Int']['input']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id: Scalars['Int64Bit']['input'];
};
/** An order group. */
export type OrderGroup = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'OrderGroup';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The threshold at which requesters require approval of their purchase orders. */
    automatic_approval_threshold: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Disabled order groups cannot be assigned users or used to create purchase orders. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The name of an order group. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The relationship between an order group and a user. */
    order_group_users: OrderGroupUserConnection;
    /** A purchase order for items from a third party vendor. */
    purchase_orders: PurchaseOrderConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An order group. */
export type OrderGroupAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An order group. */
export type OrderGroupLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An order group. */
export type OrderGroupNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An order group. */
export type OrderGroupOrder_Group_UsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_approver?: InputMaybe<Scalars['Boolean']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An order group. */
export type OrderGroupPurchase_OrdersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    approved_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    canceled_at?: InputMaybe<Scalars['Datetime']['input']>;
    canceled_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    currency?: InputMaybe<Currency>;
    external_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_paid?: InputMaybe<Scalars['Boolean']['input']>;
    last_status_change?: InputMaybe<Scalars['Datetime']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    order_number?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendor_name?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `OrderGroupConnection` type. */
export type OrderGroupConnection = {
    __typename: 'OrderGroupConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<OrderGroup>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The relationship between an order group and a user. */
export type OrderGroupUser = AccessloggableInterface & LoggableInterface & {
    __typename: 'OrderGroupUser';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether a user is authorized to approve purchase orders created in this order group. */
    is_approver: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An order group. */
    order_group?: Maybe<OrderGroup>;
    /** The ID of an order group. */
    order_group_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** The relationship between an order group and a user. */
export type OrderGroupUserAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between an order group and a user. */
export type OrderGroupUserLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between an order group and a user. */
export type OrderGroupUserOrder_GroupArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    automatic_approval_threshold?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The relationship between an order group and a user. */
export type OrderGroupUserUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `OrderGroupUserConnection` type. */
export type OrderGroupUserConnection = {
    __typename: 'OrderGroupUserConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<OrderGroupUser>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details regarding a specific overage `Service`. */
export type OverageServiceDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'OverageServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A value in gigabytes. */
    gigabytes: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Details regarding a specific overage `Service`. */
export type OverageServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific overage `Service`. */
export type OverageServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific overage `Service`. */
export type OverageServiceDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific overage `Service`. */
export type OverageServiceDetailServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `OverageServiceDetailConnection` type. */
export type OverageServiceDetailConnection = {
    __typename: 'OverageServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<OverageServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A collection of `Service`s. */
export type Package = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Package';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The relationship between an `Account` and a `Service`. */
    account_services: AccountServiceConnection;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The relationship between a `Package` and a `Service`. */
    package_services: PackageServiceConnection;
    /** Setting to indicate if services in this package should be rolled up into a package total when this package is displayed. */
    rollup_services: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A collection of `Service`s. */
export type PackageAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A collection of `Service`s. */
export type PackageAccount_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A collection of `Service`s. */
export type PackageCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A collection of `Service`s. */
export type PackageLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A collection of `Service`s. */
export type PackageNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A collection of `Service`s. */
export type PackagePackage_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PackageConnection` type. */
export type PackageConnection = {
    __typename: 'PackageConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Package>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The relationship between a `Package` and a `Service`. */
export type PackageService = AccessloggableInterface & LoggableInterface & {
    __typename: 'PackageService';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A collection of `Service`s. */
    package?: Maybe<Package>;
    /** The ID of a `Package`. */
    package_id: Scalars['Int64Bit']['output'];
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The relationship between a `Package` and a `Service`. */
export type PackageServiceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `Package` and a `Service`. */
export type PackageServiceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `Package` and a `Service`. */
export type PackageServicePackageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollup_services?: InputMaybe<Scalars['Boolean']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    valid_for_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `Package` and a `Service`. */
export type PackageServiceServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PackageServiceConnection` type. */
export type PackageServiceConnection = {
    __typename: 'PackageServiceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PackageService>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A service in a package. */
export type PackageServiceMutationInput = {
    /** The quantity for this service. */
    quantity?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['input'];
};
/** An object that provides information about the current page of results. */
export type PageInfo = {
    __typename: 'PageInfo';
    /** The current page of results. */
    page: Scalars['Int']['output'];
    /** The number of records displayed per page. */
    records_per_page: Scalars['Int']['output'];
    /** The total number of records available. */
    total_count: Scalars['Int']['output'];
    /** The total number of pages available. */
    total_pages: Scalars['Int']['output'];
};
/** Used to paginate through results. */
export type Paginator = {
    /** The page of results to display. */
    page: Scalars['Int']['input'];
    /** The number of records displayed per page. */
    records_per_page: Scalars['Int']['input'];
};
/** A password policy that defines password requirements. */
export type PasswordPolicy = AccessloggableInterface & LoggableInterface & {
    __typename: 'PasswordPolicy';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The minimum length a password must be. */
    minimum_length: Scalars['Int']['output'];
    /** A score for the zxcvbn password strength estimation library that this password must match. 0 allows all passwords, 4 requires a very strong password. See https://github.com/dropbox/zxcvbn for details. */
    minimum_password_strength: Scalars['Int']['output'];
    /** Must a password be alpha-numeric (contain at least one letter and one number) or can it have any combination of characters? */
    requires_alpha_numeric: Scalars['Boolean']['output'];
    /** Does a password require at least one special (non alpha-numeric) character? */
    requires_at_least_one_special_character: Scalars['Boolean']['output'];
    /** Does a password require both upper and lower case characters? */
    requires_upper_and_lower_case_characters: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A password policy that defines password requirements. */
export type PasswordPolicyAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A password policy that defines password requirements. */
export type PasswordPolicyLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Paypal credentials for external payments. */
export type PayPalCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'PayPalCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The client ID for PayPal. */
    client_id: Scalars['String']['output'];
    /** The client secret for PayPal. */
    client_secret: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Paypal credentials for external payments. */
export type PayPalCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Paypal credentials for external payments. */
export type PayPalCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Paypal credentials for external payments. */
export type PayPalCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `PayPalCredentialConnection` type. */
export type PayPalCredentialConnection = {
    __typename: 'PayPalCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PayPalCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A payment. */
export type Payment = AccessloggableInterface & CreditableInterface & DisbursableInterface & LoggableInterface & {
    __typename: 'Payment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The amount of the payment, in the smallest currency value. */
    amount: Scalars['Int']['output'];
    /** The amount remaining that can be used. */
    amount_remaining: Scalars['Int']['output'];
    /** A bank account. */
    bank_account?: Maybe<BankAccount>;
    /** The ID of a BankAccount. */
    bank_account_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A token sent to the payment provider during payment creation. */
    creation_token?: Maybe<Scalars['String']['output']>;
    /** A credit card. */
    credit_card?: Maybe<CreditCard>;
    /** The ID of a CreditCard. */
    credit_card_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The application of a `Discount` or `Payment` against an `Invoice`. */
    credits: CreditConnection;
    /** A deposit slip. */
    deposit_slip?: Maybe<DepositSlip>;
    /** The deposit slip ID. */
    deposit_slip_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A description of the payment, used for internal reference. */
    description?: Maybe<Scalars['String']['output']>;
    /** A disbursement detail. */
    disbursement_details: DisbursementDetailConnection;
    /** The fee for this transaction. */
    fee?: Maybe<Scalars['Int']['output']>;
    /** The fee for this transaction in fractional cents */
    fractional_fee?: Maybe<Scalars['Int']['output']>;
    /** The entire response back from the company that processed the transaction. Not typically human readable. */
    full_processor_response?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The date and time the payment was made. */
    payment_datetime: Scalars['Datetime']['output'];
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: Maybe<Scalars['String']['output']>;
    /** The type of payment (e.g. cash, credit card.) */
    payment_type: PaymentType;
    /** The message returned back from the company that processed the transaction. */
    processor_message?: Maybe<Scalars['String']['output']>;
    /** The status of the payment provided by the payment processor. */
    processor_status?: Maybe<Scalars['String']['output']>;
    /** A payment reference like a check number, or wire transfer confirmation number. */
    reference?: Maybe<Scalars['String']['output']>;
    /** A record of a refund applied to a `Payment`. */
    refunded_payments: RefundedPaymentConnection;
    /** A record a `Payment` reversal. */
    reversed_payments: ReversedPaymentConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether or not this was successful. */
    successful: Scalars['Boolean']['output'];
    /** The transaction ID from the credit card provider. */
    transaction_id?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A payment. */
export type PaymentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A payment. */
export type PaymentAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A payment. */
export type PaymentBank_AccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    bank_account_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    bank_account_type?: InputMaybe<BankAccountType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_account_number?: InputMaybe<Scalars['String']['input']>;
    name_on_account?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    routing_number?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A payment. */
export type PaymentCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A payment. */
export type PaymentCredit_CardArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credit_card_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    credit_card_type?: InputMaybe<CreditCardType>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    expiration_month?: InputMaybe<Scalars['Int']['input']>;
    expiration_year?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_number?: InputMaybe<Scalars['String']['input']>;
    name_on_card?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A payment. */
export type PaymentCreditsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creditable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    creditable_type?: InputMaybe<CreditableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A payment. */
export type PaymentDeposit_SlipArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    bank_account_line?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    memo?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A payment. */
export type PaymentDisbursement_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_used?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disbursable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    disbursable_type?: InputMaybe<DisbursableType>;
    disbursement_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event?: InputMaybe<DisbursementDetailEvent>;
    external_id?: InputMaybe<Scalars['String']['input']>;
    fractional_amount?: InputMaybe<Scalars['Int']['input']>;
    fractional_amount_used?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_fee?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A payment. */
export type PaymentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A payment. */
export type PaymentRefunded_PaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    processor_response_message?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A payment. */
export type PaymentReversed_PaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `PaymentConnection` type. */
export type PaymentConnection = {
    __typename: 'PaymentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Payment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A payment. */
export type PaymentResult = {
    __typename: 'PaymentResult';
    /** The value. */
    value: Scalars['String']['output'];
};
/** Payment Result Connection */
export type PaymentResultConnection = {
    __typename: 'PaymentResultConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PaymentResult>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Expected timeframe for payment */
export declare enum PaymentTerm {
    /** Cash concentration and disbursement */
    CashConcDisb = "CASH_CONC_DISB",
    /** Cash in advance */
    CashInAdvance = "CASH_IN_ADVANCE",
    /** Cash on delivery */
    CashOnDelivery = "CASH_ON_DELIVERY",
    /** End of month */
    EndOfMonth = "END_OF_MONTH",
    /** Payment net 30 days */
    Net_30 = "NET_30",
    /** Payment net 60 days */
    Net_60 = "NET_60",
    /** Payment net 90 days */
    Net_90 = "NET_90"
}
/** The type of `Payment` made. */
export declare enum PaymentType {
    /** Bank */
    Bankaccount = "BANKACCOUNT",
    /** Cash */
    Cash = "CASH",
    /** Check */
    Check = "CHECK",
    /** Credit card */
    Creditcard = "CREDITCARD",
    /** Other */
    Other = "OTHER",
    /** PayPal */
    Paypal = "PAYPAL",
    /** Wire */
    Wire = "WIRE"
}
/** A permission associated with a `Role`. */
export declare enum Permission {
    /** Can alter Files created by other users */
    AlterOthersFiles = "ALTER_OTHERS_FILES",
    /** Can alter notes created by other users */
    AlterOthersNotes = "ALTER_OTHERS_NOTES",
    /** Can assign inventory to accounts, yourself, or a vehicle you drive */
    AssignAccountInventory = "ASSIGN_ACCOUNT_INVENTORY",
    /** Cancel a print to mail batch. */
    CancelPrintToMailBatch = "CANCEL_PRINT_TO_MAIL_BATCH",
    /** Allows a user to check anyone in to a job */
    CheckInAnyJob = "CHECK_IN_ANY_JOB",
    /** Allows a user to check themselves in to a job */
    CheckInOwnJob = "CHECK_IN_OWN_JOB",
    /** Change claim status of inventory items */
    ClaimInventoryItem = "CLAIM_INVENTORY_ITEM",
    /** Allows a user to complete any job */
    CompleteAnyJob = "COMPLETE_ANY_JOB",
    /** Whether a user can complete tasks that are not assigned to them */
    CompleteOthersTasks = "COMPLETE_OTHERS_TASKS",
    /** Allows a user to complete their own job */
    CompleteOwnJob = "COMPLETE_OWN_JOB",
    /** Create an entry in the access log. */
    CreateAccessLog = "CREATE_ACCESS_LOG",
    /** Create a new account, and related entities */
    CreateAccount = "CREATE_ACCOUNT",
    /** Create account calix service detail. */
    CreateAccountCalixServiceDetail = "CREATE_ACCOUNT_CALIX_SERVICE_DETAIL",
    /** Create a new account group. */
    CreateAccountGroup = "CREATE_ACCOUNT_GROUP",
    /** Create a new account status. */
    CreateAccountStatus = "CREATE_ACCOUNT_STATUS",
    /** Perform an action that creates an account transaction (e.g. a payment, debit, discount.) */
    CreateAccountTransactions = "CREATE_ACCOUNT_TRANSACTIONS",
    /** Create a new account type. */
    CreateAccountType = "CREATE_ACCOUNT_TYPE",
    /** Create an ACH batch */
    CreateAchBatch = "CREATE_ACH_BATCH",
    /** Create an address list */
    CreateAddressList = "CREATE_ADDRESS_LIST",
    /** Create address status. */
    CreateAddressStatus = "CREATE_ADDRESS_STATUS",
    /** Create an alerting rotation */
    CreateAlertingRotation = "CREATE_ALERTING_ROTATION",
    /** Create an application firewall rule */
    CreateApplicationFirewallRule = "CREATE_APPLICATION_FIREWALL_RULE",
    /** Create a new set of billing defaults */
    CreateBillingDefault = "CREATE_BILLING_DEFAULT",
    /** Create a cable modem provisioner */
    CreateCableModemProvisioner = "CREATE_CABLE_MODEM_PROVISIONER",
    /** Create calendar settings. */
    CreateCalendar = "CREATE_CALENDAR",
    /** Create a Calix integration */
    CreateCalixIntegration = "CREATE_CALIX_INTEGRATION",
    /** Create a call detail record (CDR). */
    CreateCallDetailRecord = "CREATE_CALL_DETAIL_RECORD",
    /** Create a call detail record (CDR) import. */
    CreateCallDetailRecordImportRecipe = "CREATE_CALL_DETAIL_RECORD_IMPORT_RECIPE",
    /** Create a call log */
    CreateCallLog = "CREATE_CALL_LOG",
    /** Create a new canned reply */
    CreateCannedReply = "CREATE_CANNED_REPLY",
    /** Create a new company */
    CreateCompany = "CREATE_COMPANY",
    /** Create a new contact */
    CreateContact = "CREATE_CONTACT",
    /** Create a contract */
    CreateContract = "CREATE_CONTRACT",
    /** Create a contract template */
    CreateContractTemplate = "CREATE_CONTRACT_TEMPLATE",
    /** Create a new custom field. */
    CreateCustomField = "CREATE_CUSTOM_FIELD",
    /** Create data usage entries */
    CreateDataUsage = "CREATE_DATA_USAGE",
    /** Create a data usage top off */
    CreateDataUsageTopOff = "CREATE_DATA_USAGE_TOP_OFF",
    /** Create a new delinquency exclusion */
    CreateDelinquencyExclusion = "CREATE_DELINQUENCY_EXCLUSION",
    /** Create a deposit slip */
    CreateDepositSlip = "CREATE_DEPOSIT_SLIP",
    /** Create a DHCP server */
    CreateDhcpServer = "CREATE_DHCP_SERVER",
    /** Create a DID. */
    CreateDid = "CREATE_DID",
    /** Create a DID assignment. */
    CreateDidAssignment = "CREATE_DID_ASSIGNMENT",
    /** Create a DID import. */
    CreateDidImportRecipe = "CREATE_DID_IMPORT_RECIPE",
    /** Create an email domain */
    CreateEmailDomain = "CREATE_EMAIL_DOMAIN",
    /** Create a new saved message */
    CreateEmailMessage = "CREATE_EMAIL_MESSAGE",
    /** Create an external marketing integration */
    CreateExternalMarketing = "CREATE_EXTERNAL_MARKETING",
    /** Create a FCC Form 477 report */
    CreateFccForm_477Report = "CREATE_FCC_FORM_477_REPORT",
    /** Create a FiberMap Integration */
    CreateFibermapIntegration = "CREATE_FIBERMAP_INTEGRATION",
    /** Create a FiberMap plan */
    CreateFibermapPlan = "CREATE_FIBERMAP_PLAN",
    /** Create a new File */
    CreateFile = "CREATE_FILE",
    /** Create a new general ledger code */
    CreateGeneralLedgerCode = "CREATE_GENERAL_LEDGER_CODE",
    /** Create a generic inventory assignee */
    CreateGenericInventoryAssignee = "CREATE_GENERIC_INVENTORY_ASSIGNEE",
    /** Create a geofence */
    CreateGeofence = "CREATE_GEOFENCE",
    /** Create a global inventory model min/max */
    CreateGlobalInventoryModelMinMax = "CREATE_GLOBAL_INVENTORY_MODEL_MIN_MAX",
    /** Create a global stored view. */
    CreateGlobalStoredView = "CREATE_GLOBAL_STORED_VIEW",
    /** Create a gps tracking provider */
    CreateGpsTrackingProvider = "CREATE_GPS_TRACKING_PROVIDER",
    /** Create an identity provider */
    CreateIdentityProvider = "CREATE_IDENTITY_PROVIDER",
    /** Create an inbound mailbox */
    CreateInboundMailbox = "CREATE_INBOUND_MAILBOX",
    /** Create an inline device */
    CreateInlineDevice = "CREATE_INLINE_DEVICE",
    /** Create an integration field mapping */
    CreateIntegrationFieldMapping = "CREATE_INTEGRATION_FIELD_MAPPING",
    /** Create an integration service mapping */
    CreateIntegrationServiceMapping = "CREATE_INTEGRATION_SERVICE_MAPPING",
    /** Create a new inventory item */
    CreateInventoryItem = "CREATE_INVENTORY_ITEM",
    /** Create a new inventory location */
    CreateInventoryLocation = "CREATE_INVENTORY_LOCATION",
    /** Create a new inventory model */
    CreateInventoryModel = "CREATE_INVENTORY_MODEL",
    /** Create a new inventory model category */
    CreateInventoryModelCategory = "CREATE_INVENTORY_MODEL_CATEGORY",
    /** Create an invoice attachment */
    CreateInvoiceAttachment = "CREATE_INVOICE_ATTACHMENT",
    /** Create an invoice message */
    CreateInvoiceMessage = "CREATE_INVOICE_MESSAGE",
    /** Create an element in IPAM */
    CreateIpamElement = "CREATE_IPAM_ELEMENT",
    /** Create an IP assignment */
    CreateIpAssignment = "CREATE_IP_ASSIGNMENT",
    /** Create a job */
    CreateJob = "CREATE_JOB",
    /** Create a job type */
    CreateJobType = "CREATE_JOB_TYPE",
    /** Create an LTE provider */
    CreateLteProvider = "CREATE_LTE_PROVIDER",
    /** Create a new manufacturer */
    CreateManufacturer = "CREATE_MANUFACTURER",
    /** Create a map overlay */
    CreateMapOverlay = "CREATE_MAP_OVERLAY",
    /** Create a mass email communication */
    CreateMassEmail = "CREATE_MASS_EMAIL",
    /** Create a new messaging category */
    CreateMessageCategory = "CREATE_MESSAGE_CATEGORY",
    /** Create a Netflow endpoint */
    CreateNetflowEndpoint = "CREATE_NETFLOW_ENDPOINT",
    /** Create a network monitoring template */
    CreateNetworkMonitoringTemplate = "CREATE_NETWORK_MONITORING_TEMPLATE",
    /** Create a new network site */
    CreateNetworkSite = "CREATE_NETWORK_SITE",
    /** Create a non-inventory item. */
    CreateNonInventoryItem = "CREATE_NON_INVENTORY_ITEM",
    /** Create a new note */
    CreateNote = "CREATE_NOTE",
    /** Create a order group. */
    CreateOrderGroup = "CREATE_ORDER_GROUP",
    /** Create a package */
    CreatePackage = "CREATE_PACKAGE",
    /** Create a new payment */
    CreatePayment = "CREATE_PAYMENT",
    /** Create a new payment method (e.g. credit card.) */
    CreatePaymentMethod = "CREATE_PAYMENT_METHOD",
    /** Create a new payment processor */
    CreatePaymentProcessor = "CREATE_PAYMENT_PROCESSOR",
    /** Create a new phone number type. */
    CreatePhoneNumberType = "CREATE_PHONE_NUMBER_TYPE",
    /** Create a poller */
    CreatePoller = "CREATE_POLLER",
    /** Create a printed invoice batch */
    CreatePrintedInvoiceBatch = "CREATE_PRINTED_INVOICE_BATCH",
    /** Create a purchase order. */
    CreatePurchaseOrder = "CREATE_PURCHASE_ORDER",
    /** Create a RADIUS account */
    CreateRadiusAccount = "CREATE_RADIUS_ACCOUNT",
    /** Create a RADIUS group */
    CreateRadiusGroup = "CREATE_RADIUS_GROUP",
    /** Create a RADIUS server */
    CreateRadiusServer = "CREATE_RADIUS_SERVER",
    /** Create a Rate Center. */
    CreateRateCenter = "CREATE_RATE_CENTER",
    /** Create a new saved message category. */
    CreateSavedMessageCategory = "CREATE_SAVED_MESSAGE_CATEGORY",
    /** Create a scheduled event */
    CreateScheduledEvent = "CREATE_SCHEDULED_EVENT",
    /** Create a schedule address */
    CreateScheduleAddress = "CREATE_SCHEDULE_ADDRESS",
    /** Create a schedule availability */
    CreateScheduleAvailability = "CREATE_SCHEDULE_AVAILABILITY",
    /** Create a schedule blocker */
    CreateScheduleBlocker = "CREATE_SCHEDULE_BLOCKER",
    /** Create a schedule time off */
    CreateScheduleTimeOff = "CREATE_SCHEDULE_TIME_OFF",
    /** Create a saved search filter. */
    CreateSearchFilter = "CREATE_SEARCH_FILTER",
    /** Create a new service */
    CreateService = "CREATE_SERVICE",
    /** Create a new serviceable address */
    CreateServiceableAddress = "CREATE_SERVICEABLE_ADDRESS",
    /** Create a new SMS message */
    CreateSmsMessage = "CREATE_SMS_MESSAGE",
    /** Create SNMP override */
    CreateSnmpOverride = "CREATE_SNMP_OVERRIDE",
    /** Create a new task */
    CreateTask = "CREATE_TASK",
    /** Create a task template */
    CreateTaskTemplate = "CREATE_TASK_TEMPLATE",
    /** Create a new tax */
    CreateTax = "CREATE_TAX",
    /** Create a new tax exemption */
    CreateTaxExemption = "CREATE_TAX_EXEMPTION",
    /** Create a tax override */
    CreateTaxOverride = "CREATE_TAX_OVERRIDE",
    /** Create a new tax provider */
    CreateTaxProvider = "CREATE_TAX_PROVIDER",
    /** Create a ticket */
    CreateTicket = "CREATE_TICKET",
    /** Create a ticket category */
    CreateTicketCategory = "CREATE_TICKET_CATEGORY",
    /** Create a ticket group */
    CreateTicketGroup = "CREATE_TICKET_GROUP",
    /** Create a new triggered email */
    CreateTriggeredEmail = "CREATE_TRIGGERED_EMAIL",
    /** Create a new triggered SMS message */
    CreateTriggeredSmsMessage = "CREATE_TRIGGERED_SMS_MESSAGE",
    /** Create an uninventoried MAC address */
    CreateUninventoriedMacAddress = "CREATE_UNINVENTORIED_MAC_ADDRESS",
    /** Create a new vehicle */
    CreateVehicle = "CREATE_VEHICLE",
    /** Create a vendor. */
    CreateVendor = "CREATE_VENDOR",
    /** Create a vendor item. */
    CreateVendorItem = "CREATE_VENDOR_ITEM",
    /** Create a Voice Provider. */
    CreateVoiceProvider = "CREATE_VOICE_PROVIDER",
    /** Create a Voice Provider Rate. */
    CreateVoiceProviderRate = "CREATE_VOICE_PROVIDER_RATE",
    /** Create a Voice Provider Rate import. */
    CreateVoiceProviderRateImportRecipe = "CREATE_VOICE_PROVIDER_RATE_IMPORT_RECIPE",
    /** Create a voice service details generic parameter. */
    CreateVoiceServiceGenericParameter = "CREATE_VOICE_SERVICE_GENERIC_PARAMETER",
    /** Create a webhook endpoint. */
    CreateWebhookEndpoint = "CREATE_WEBHOOK_ENDPOINT",
    /** Create a webhook endpoint event. */
    CreateWebhookEndpointEvent = "CREATE_WEBHOOK_ENDPOINT_EVENT",
    /** Delete account calix service detail. */
    DeleteAccountCalixServiceDetail = "DELETE_ACCOUNT_CALIX_SERVICE_DETAIL",
    /** Delete an account group. */
    DeleteAccountGroup = "DELETE_ACCOUNT_GROUP",
    /** Delete an account status. */
    DeleteAccountStatus = "DELETE_ACCOUNT_STATUS",
    /** Delete an account transaction */
    DeleteAccountTransactions = "DELETE_ACCOUNT_TRANSACTIONS",
    /** Delete an account type. */
    DeleteAccountType = "DELETE_ACCOUNT_TYPE",
    /** Delete an ACH batch */
    DeleteAchBatch = "DELETE_ACH_BATCH",
    /** Delete an address list */
    DeleteAddressList = "DELETE_ADDRESS_LIST",
    /** Delete address status. */
    DeleteAddressStatus = "DELETE_ADDRESS_STATUS",
    /** Delete an alerting rotation */
    DeleteAlertingRotation = "DELETE_ALERTING_ROTATION",
    /** Delete an application firewall rule */
    DeleteApplicationFirewallRule = "DELETE_APPLICATION_FIREWALL_RULE",
    /** Delete a set billing default */
    DeleteBillingDefault = "DELETE_BILLING_DEFAULT",
    /** Delete a cable modem provisioner */
    DeleteCableModemProvisioner = "DELETE_CABLE_MODEM_PROVISIONER",
    /** Delete your calendar settings. */
    DeleteCalendar = "DELETE_CALENDAR",
    /** Delete a Calix integration */
    DeleteCalixIntegration = "DELETE_CALIX_INTEGRATION",
    /** Delete a call detail record (CDR). */
    DeleteCallDetailRecord = "DELETE_CALL_DETAIL_RECORD",
    /** Delete a call log */
    DeleteCallLog = "DELETE_CALL_LOG",
    /** Delete a canned reply */
    DeleteCannedReply = "DELETE_CANNED_REPLY",
    /** Delete a contact */
    DeleteContact = "DELETE_CONTACT",
    /** Delete a contract */
    DeleteContract = "DELETE_CONTRACT",
    /** Delete a contract template */
    DeleteContractTemplate = "DELETE_CONTRACT_TEMPLATE",
    /** Delete a custom field. */
    DeleteCustomField = "DELETE_CUSTOM_FIELD",
    /** Delete a delinquency exclusion */
    DeleteDelinquencyExclusion = "DELETE_DELINQUENCY_EXCLUSION",
    /** Delete a department */
    DeleteDepartment = "DELETE_DEPARTMENT",
    /** Delete a deposit slip */
    DeleteDepositSlip = "DELETE_DEPOSIT_SLIP",
    /** Delete a DHCP server */
    DeleteDhcpServer = "DELETE_DHCP_SERVER",
    /** Delete a DID. */
    DeleteDid = "DELETE_DID",
    /** Delete a DID assignment. */
    DeleteDidAssignment = "DELETE_DID_ASSIGNMENT",
    /** Delete an email domain */
    DeleteEmailDomain = "DELETE_EMAIL_DOMAIN",
    /** Delete a saved message */
    DeleteEmailMessage = "DELETE_EMAIL_MESSAGE",
    /** Delete an external marketing integration */
    DeleteExternalMarketing = "DELETE_EXTERNAL_MARKETING",
    /** Delete a FiberMap Integration */
    DeleteFibermapIntegration = "DELETE_FIBERMAP_INTEGRATION",
    /** Delete a FiberMap plan */
    DeleteFibermapPlan = "DELETE_FIBERMAP_PLAN",
    /** Delete a File */
    DeleteFile = "DELETE_FILE",
    /** Delete a general ledger code */
    DeleteGeneralLedgerCode = "DELETE_GENERAL_LEDGER_CODE",
    /** Delete a generic inventory assignee */
    DeleteGenericInventoryAssignee = "DELETE_GENERIC_INVENTORY_ASSIGNEE",
    /** Delete a geofence */
    DeleteGeofence = "DELETE_GEOFENCE",
    /** Delete a global inventory model min/max */
    DeleteGlobalInventoryModelMinMax = "DELETE_GLOBAL_INVENTORY_MODEL_MIN_MAX",
    /** Delete a global stored view. */
    DeleteGlobalStoredView = "DELETE_GLOBAL_STORED_VIEW",
    /** Delete a gps tracking provider */
    DeleteGpsTrackingProvider = "DELETE_GPS_TRACKING_PROVIDER",
    /** Delete an identity provider */
    DeleteIdentityProvider = "DELETE_IDENTITY_PROVIDER",
    /** Delete an inbound mailbox */
    DeleteInboundMailbox = "DELETE_INBOUND_MAILBOX",
    /** Delete an inline device */
    DeleteInlineDevice = "DELETE_INLINE_DEVICE",
    /** Delete an integration field mapping */
    DeleteIntegrationFieldMapping = "DELETE_INTEGRATION_FIELD_MAPPING",
    /** Delete an integration service mapping */
    DeleteIntegrationServiceMapping = "DELETE_INTEGRATION_SERVICE_MAPPING",
    /** Delete an inventory item */
    DeleteInventoryItem = "DELETE_INVENTORY_ITEM",
    /** Delete an inventory location */
    DeleteInventoryLocation = "DELETE_INVENTORY_LOCATION",
    /** Delete an inventory model */
    DeleteInventoryModel = "DELETE_INVENTORY_MODEL",
    /** Delete an inventory model category */
    DeleteInventoryModelCategory = "DELETE_INVENTORY_MODEL_CATEGORY",
    /** Delete an invoice attachment */
    DeleteInvoiceAttachment = "DELETE_INVOICE_ATTACHMENT",
    /** Delete an invoice message */
    DeleteInvoiceMessage = "DELETE_INVOICE_MESSAGE",
    /** Delete an element in IPAM */
    DeleteIpamElement = "DELETE_IPAM_ELEMENT",
    /** Delete an IP assignment */
    DeleteIpAssignment = "DELETE_IP_ASSIGNMENT",
    /** Delete a job */
    DeleteJob = "DELETE_JOB",
    /** Delete a job type */
    DeleteJobType = "DELETE_JOB_TYPE",
    /** Delete an LTE provider */
    DeleteLteProvider = "DELETE_LTE_PROVIDER",
    /** Delete a manufacturer */
    DeleteManufacturer = "DELETE_MANUFACTURER",
    /** Delete a map overlay */
    DeleteMapOverlay = "DELETE_MAP_OVERLAY",
    /** Delete a messaging category */
    DeleteMessageCategory = "DELETE_MESSAGE_CATEGORY",
    /** Delete a Netflow endpoint */
    DeleteNetflowEndpoint = "DELETE_NETFLOW_ENDPOINT",
    /** Delete a network monitoring template */
    DeleteNetworkMonitoringTemplate = "DELETE_NETWORK_MONITORING_TEMPLATE",
    /** Delete a network site */
    DeleteNetworkSite = "DELETE_NETWORK_SITE",
    /** Delete an existing non-inventory item. */
    DeleteNonInventoryItem = "DELETE_NON_INVENTORY_ITEM",
    /** Delete a note */
    DeleteNote = "DELETE_NOTE",
    /** Delete an existing order group. */
    DeleteOrderGroup = "DELETE_ORDER_GROUP",
    /** Delete a package */
    DeletePackage = "DELETE_PACKAGE",
    /** Delete a payment method */
    DeletePaymentMethod = "DELETE_PAYMENT_METHOD",
    /** Delete a payment processor */
    DeletePaymentProcessor = "DELETE_PAYMENT_PROCESSOR",
    /** Delete a phone number type. */
    DeletePhoneNumberType = "DELETE_PHONE_NUMBER_TYPE",
    /** Delete a poller */
    DeletePoller = "DELETE_POLLER",
    /** Delete a RADIUS account */
    DeleteRadiusAccount = "DELETE_RADIUS_ACCOUNT",
    /** Delete a RADIUS group */
    DeleteRadiusGroup = "DELETE_RADIUS_GROUP",
    /** Delete a RADIUS server */
    DeleteRadiusServer = "DELETE_RADIUS_SERVER",
    /** Delete a Rate Center. */
    DeleteRateCenter = "DELETE_RATE_CENTER",
    /** Delete a saved message category. */
    DeleteSavedMessageCategory = "DELETE_SAVED_MESSAGE_CATEGORY",
    /** Delete a scheduled event */
    DeleteScheduledEvent = "DELETE_SCHEDULED_EVENT",
    /** Delete a schedule address */
    DeleteScheduleAddress = "DELETE_SCHEDULE_ADDRESS",
    /** Delete a schedule availability */
    DeleteScheduleAvailability = "DELETE_SCHEDULE_AVAILABILITY",
    /** Delete a schedule blocker */
    DeleteScheduleBlocker = "DELETE_SCHEDULE_BLOCKER",
    /** Delete a schedule time off */
    DeleteScheduleTimeOff = "DELETE_SCHEDULE_TIME_OFF",
    /** Delete an existing search filter. */
    DeleteSearchFilter = "DELETE_SEARCH_FILTER",
    /** Delete a service */
    DeleteService = "DELETE_SERVICE",
    /** Delete a serviceable address */
    DeleteServiceableAddress = "DELETE_SERVICEABLE_ADDRESS",
    /** Delete a SMS message */
    DeleteSmsMessage = "DELETE_SMS_MESSAGE",
    /** Delete SNMP override */
    DeleteSnmpOverride = "DELETE_SNMP_OVERRIDE",
    /** Delete a task */
    DeleteTask = "DELETE_TASK",
    /** Delete a task template */
    DeleteTaskTemplate = "DELETE_TASK_TEMPLATE",
    /** Delete a tax */
    DeleteTax = "DELETE_TAX",
    /** Delete a tax exemption */
    DeleteTaxExemption = "DELETE_TAX_EXEMPTION",
    /** Delete a tax override */
    DeleteTaxOverride = "DELETE_TAX_OVERRIDE",
    /** Delete a tax provider */
    DeleteTaxProvider = "DELETE_TAX_PROVIDER",
    /** Delete a ticket */
    DeleteTicket = "DELETE_TICKET",
    /** Delete a ticket category */
    DeleteTicketCategory = "DELETE_TICKET_CATEGORY",
    /** Delete a ticket group */
    DeleteTicketGroup = "DELETE_TICKET_GROUP",
    /** Delete a triggered email */
    DeleteTriggeredEmail = "DELETE_TRIGGERED_EMAIL",
    /** Delete a triggered SMS message */
    DeleteTriggeredSmsMessage = "DELETE_TRIGGERED_SMS_MESSAGE",
    /** Delete an uninventoried MAC address */
    DeleteUninventoriedMacAddress = "DELETE_UNINVENTORIED_MAC_ADDRESS",
    /** Delete a vehicle */
    DeleteVehicle = "DELETE_VEHICLE",
    /** Delete an existing vendor item. */
    DeleteVendorItem = "DELETE_VENDOR_ITEM",
    /** Delete a Voice Provider. */
    DeleteVoiceProvider = "DELETE_VOICE_PROVIDER",
    /** Delete a Voice Provider Rate. */
    DeleteVoiceProviderRate = "DELETE_VOICE_PROVIDER_RATE",
    /** Delete a voice service details generic parameter. */
    DeleteVoiceServiceGenericParameter = "DELETE_VOICE_SERVICE_GENERIC_PARAMETER",
    /** Delete a webhook endpoint. */
    DeleteWebhookEndpoint = "DELETE_WEBHOOK_ENDPOINT",
    /** Delete a webhook endpoint event. */
    DeleteWebhookEndpointEvent = "DELETE_WEBHOOK_ENDPOINT_EVENT",
    /** Modify purchase order items after they have been received. */
    EditReceivedPurchaseOrder = "EDIT_RECEIVED_PURCHASE_ORDER",
    /** Resend an email invoice batch */
    EmailInvoiceBatch = "EMAIL_INVOICE_BATCH",
    /** Manage Sonar billing */
    ManageSonarBilling = "MANAGE_SONAR_BILLING",
    /** Add and remove account services */
    ModifyAccountServices = "MODIFY_ACCOUNT_SERVICES",
    /** Whether a user can override the default proration on account status change */
    OverrideAccountStatusProration = "OVERRIDE_ACCOUNT_STATUS_PRORATION",
    /** Receive a purchase order and create inventory items. */
    PurchaseOrderReceiving = "PURCHASE_ORDER_RECEIVING",
    /** View all access logs. */
    ReadAccessLog = "READ_ACCESS_LOG",
    /** View accounts and related entities */
    ReadAccount = "READ_ACCOUNT",
    /** Read account calix service detail. */
    ReadAccountCalixServiceDetail = "READ_ACCOUNT_CALIX_SERVICE_DETAIL",
    /** View account groups. */
    ReadAccountGroup = "READ_ACCOUNT_GROUP",
    /** View account reports. */
    ReadAccountReports = "READ_ACCOUNT_REPORTS",
    /** View account statuses. */
    ReadAccountStatus = "READ_ACCOUNT_STATUS",
    /** View all account transactions */
    ReadAccountTransactions = "READ_ACCOUNT_TRANSACTIONS",
    /** View account types. */
    ReadAccountType = "READ_ACCOUNT_TYPE",
    /** View all ACH batches */
    ReadAchBatch = "READ_ACH_BATCH",
    /** View all address lists */
    ReadAddressList = "READ_ADDRESS_LIST",
    /** Read address status. */
    ReadAddressStatus = "READ_ADDRESS_STATUS",
    /** View all alerting rotations */
    ReadAlertingRotation = "READ_ALERTING_ROTATION",
    /** View all inventory */
    ReadAllInventory = "READ_ALL_INVENTORY",
    /** View all log files, regardless of the entity they are attached to */
    ReadAllLogs = "READ_ALL_LOGS",
    /** View all application firewall rules */
    ReadApplicationFirewallRule = "READ_APPLICATION_FIREWALL_RULE",
    /** View all Auth providers */
    ReadAuthProvider = "READ_AUTH_PROVIDER",
    /** View billing defaults */
    ReadBillingDefault = "READ_BILLING_DEFAULT",
    /** View all cable modem provisioners */
    ReadCableModemProvisioner = "READ_CABLE_MODEM_PROVISIONER",
    /** View all of your calendar settings. */
    ReadCalendar = "READ_CALENDAR",
    /** View all Calix integrations */
    ReadCalixIntegration = "READ_CALIX_INTEGRATION",
    /** View all call detail records (CDRs). */
    ReadCallDetailRecord = "READ_CALL_DETAIL_RECORD",
    /** View all call detail record (CDR) imports. */
    ReadCallDetailRecordImport = "READ_CALL_DETAIL_RECORD_IMPORT",
    /** View all call detail record (CDR) imports. */
    ReadCallDetailRecordImportRecipe = "READ_CALL_DETAIL_RECORD_IMPORT_RECIPE",
    /** View all call logs */
    ReadCallLog = "READ_CALL_LOG",
    /** View all canned replies */
    ReadCannedReply = "READ_CANNED_REPLY",
    /** View all contracts */
    ReadContract = "READ_CONTRACT",
    /** View all contract templates */
    ReadContractTemplate = "READ_CONTRACT_TEMPLATE",
    /** View all custom fields. */
    ReadCustomField = "READ_CUSTOM_FIELD",
    /** View all daily aggregate values. */
    ReadDailyAggregateValues = "READ_DAILY_AGGREGATE_VALUES",
    /** View all data usage history entries */
    ReadDataUsageHistory = "READ_DATA_USAGE_HISTORY",
    /** View all delinquency exclusions */
    ReadDelinquencyExclusion = "READ_DELINQUENCY_EXCLUSION",
    /** View all deposit slips */
    ReadDepositSlip = "READ_DEPOSIT_SLIP",
    /** View all DHCP servers */
    ReadDhcpServer = "READ_DHCP_SERVER",
    /** View all DIDs. */
    ReadDid = "READ_DID",
    /** View all DID assignments. */
    ReadDidAssignment = "READ_DID_ASSIGNMENT",
    /** View all DID imports. */
    ReadDidImportRecipe = "READ_DID_IMPORT_RECIPE",
    /** View all disbursements */
    ReadDisbursement = "READ_DISBURSEMENT",
    /** View all email domains */
    ReadEmailDomain = "READ_EMAIL_DOMAIN",
    /** View saved messages */
    ReadEmailMessage = "READ_EMAIL_MESSAGE",
    /** Read an external marketing integration */
    ReadExternalMarketing = "READ_EXTERNAL_MARKETING",
    /** View generated FCC Form 477 reports. */
    ReadFccForm_477Report = "READ_FCC_FORM_477_REPORT",
    /** View all FiberMap Integrations */
    ReadFibermapIntegration = "READ_FIBERMAP_INTEGRATION",
    /** View all FiberMap plans */
    ReadFibermapPlan = "READ_FIBERMAP_PLAN",
    /** View FiberMap service locations */
    ReadFibermapServiceLocation = "READ_FIBERMAP_SERVICE_LOCATION",
    /** Read Files */
    ReadFile = "READ_FILE",
    /** View financial reports. */
    ReadFinancialReports = "READ_FINANCIAL_REPORTS",
    /** View general ledger codes */
    ReadGeneralLedgerCode = "READ_GENERAL_LEDGER_CODE",
    /** View all geofences */
    ReadGeofence = "READ_GEOFENCE",
    /** Read a global inventory model min/max */
    ReadGlobalInventoryModelMinMax = "READ_GLOBAL_INVENTORY_MODEL_MIN_MAX",
    /** View all gps tracking providers */
    ReadGpsTrackingProvider = "READ_GPS_TRACKING_PROVIDER",
    /** View all identity providers */
    ReadIdentityProvider = "READ_IDENTITY_PROVIDER",
    /** View all inbound mailboxes */
    ReadInboundMailbox = "READ_INBOUND_MAILBOX",
    /** View all inline devices */
    ReadInlineDevice = "READ_INLINE_DEVICE",
    /** View all integration field mappings */
    ReadIntegrationFieldMapping = "READ_INTEGRATION_FIELD_MAPPING",
    /** View all integration service mappings */
    ReadIntegrationServiceMapping = "READ_INTEGRATION_SERVICE_MAPPING",
    /** View all invoice attachments */
    ReadInvoiceAttachment = "READ_INVOICE_ATTACHMENT",
    /** View all invoice messages */
    ReadInvoiceMessage = "READ_INVOICE_MESSAGE",
    /** View all IP assignments */
    ReadIpAssignment = "READ_IP_ASSIGNMENT",
    /** View all jobs */
    ReadJob = "READ_JOB",
    /** View all job types */
    ReadJobType = "READ_JOB_TYPE",
    /** Only view inventory assigned to accounts and network sites that you have permission to view, to yourself, or assigned to a vehicle that you are a driver of */
    ReadLimitedInventory = "READ_LIMITED_INVENTORY",
    /** View all LTE providers */
    ReadLteProvider = "READ_LTE_PROVIDER",
    /** View all map overlays */
    ReadMapOverlay = "READ_MAP_OVERLAY",
    /** View all mass emails */
    ReadMassEmail = "READ_MASS_EMAIL",
    /** View messaging categories */
    ReadMessageCategory = "READ_MESSAGE_CATEGORY",
    /** View all Netflow endpoints */
    ReadNetflowEndpoint = "READ_NETFLOW_ENDPOINT",
    /** View all network monitoring templates */
    ReadNetworkMonitoringTemplate = "READ_NETWORK_MONITORING_TEMPLATE",
    /** View all network sites */
    ReadNetworkSite = "READ_NETWORK_SITE",
    /** View all network site serviceable address lists */
    ReadNetworkSiteServiceableAddressList = "READ_NETWORK_SITE_SERVICEABLE_ADDRESS_LIST",
    /** Read all non-inventory items. */
    ReadNonInventoryItem = "READ_NON_INVENTORY_ITEM",
    /** Read all order group. */
    ReadOrderGroup = "READ_ORDER_GROUP",
    /** View all packages */
    ReadPackage = "READ_PACKAGE",
    /** View all payment methods */
    ReadPaymentMethod = "READ_PAYMENT_METHOD",
    /** View configured payment processors */
    ReadPaymentProcessor = "READ_PAYMENT_PROCESSOR",
    /** View phone number types. */
    ReadPhoneNumberType = "READ_PHONE_NUMBER_TYPE",
    /** View all pollers */
    ReadPoller = "READ_POLLER",
    /** View all printed invoice batches */
    ReadPrintedInvoiceBatch = "READ_PRINTED_INVOICE_BATCH",
    /** View a print to mail batch. */
    ReadPrintToMailBatch = "READ_PRINT_TO_MAIL_BATCH",
    /** View a print to mail order. */
    ReadPrintToMailOrder = "READ_PRINT_TO_MAIL_ORDER",
    /** View a print to mail order error. */
    ReadPrintToMailOrderError = "READ_PRINT_TO_MAIL_ORDER_ERROR",
    /** Read all purchase order. */
    ReadPurchaseOrder = "READ_PURCHASE_ORDER",
    /** View all RADIUS accounts */
    ReadRadiusAccount = "READ_RADIUS_ACCOUNT",
    /** View all RADIUS groups */
    ReadRadiusGroup = "READ_RADIUS_GROUP",
    /** View all RADIUS servers */
    ReadRadiusServer = "READ_RADIUS_SERVER",
    /** View all Rate Centers. */
    ReadRateCenter = "READ_RATE_CENTER",
    /** View saved message category. */
    ReadSavedMessageCategory = "READ_SAVED_MESSAGE_CATEGORY",
    /** View all scheduled events */
    ReadScheduledEvent = "READ_SCHEDULED_EVENT",
    /** View all account voice service details for a scheduled event */
    ReadScheduledEventAccountVoiceServiceDetail = "READ_SCHEDULED_EVENT_ACCOUNT_VOICE_SERVICE_DETAIL",
    /** View all schedule addresses */
    ReadScheduleAddress = "READ_SCHEDULE_ADDRESS",
    /** View all schedule availabilities */
    ReadScheduleAvailability = "READ_SCHEDULE_AVAILABILITY",
    /** View all schedule blockers */
    ReadScheduleBlocker = "READ_SCHEDULE_BLOCKER",
    /** View all schedule time offs */
    ReadScheduleTimeOff = "READ_SCHEDULE_TIME_OFF",
    /** Read all search filters. */
    ReadSearchFilter = "READ_SEARCH_FILTER",
    /** View services */
    ReadService = "READ_SERVICE",
    /** View serviceable addresses */
    ReadServiceableAddress = "READ_SERVICEABLE_ADDRESS",
    /** View SMS messages */
    ReadSmsMessage = "READ_SMS_MESSAGE",
    /** View an SMS outbound message. */
    ReadSmsOutboundMessage = "READ_SMS_OUTBOUND_MESSAGE",
    /** View all SNMP overrides */
    ReadSnmpOverride = "READ_SNMP_OVERRIDE",
    /** View all task templates */
    ReadTaskTemplate = "READ_TASK_TEMPLATE",
    /** View taxes */
    ReadTax = "READ_TAX",
    /** View tax exemptions */
    ReadTaxExemption = "READ_TAX_EXEMPTION",
    /** View tax providers */
    ReadTaxProvider = "READ_TAX_PROVIDER",
    /** View all non-private tickets */
    ReadTicket = "READ_TICKET",
    /** View all ticket categories */
    ReadTicketCategory = "READ_TICKET_CATEGORY",
    /** View all ticket groups */
    ReadTicketGroup = "READ_TICKET_GROUP",
    /** View all timeseries data */
    ReadTimeseriesData = "READ_TIMESERIES_DATA",
    /** View TowerCoverage integration */
    ReadTowercoverageConfiguration = "READ_TOWERCOVERAGE_CONFIGURATION",
    /** View all TowerCoverage submissions */
    ReadTowercoverageSubmission = "READ_TOWERCOVERAGE_SUBMISSION",
    /** View triggered emails */
    ReadTriggeredEmail = "READ_TRIGGERED_EMAIL",
    /** View triggered SMS messages */
    ReadTriggeredSmsMessage = "READ_TRIGGERED_SMS_MESSAGE",
    /** View all uninventoried MAC addresses */
    ReadUninventoriedMacAddress = "READ_UNINVENTORIED_MAC_ADDRESS",
    /** Read all vendors. */
    ReadVendor = "READ_VENDOR",
    /** Read all vendor items. */
    ReadVendorItem = "READ_VENDOR_ITEM",
    /** View all Voice Providers. */
    ReadVoiceProvider = "READ_VOICE_PROVIDER",
    /** View all Voice Provider Rates. */
    ReadVoiceProviderRate = "READ_VOICE_PROVIDER_RATE",
    /** View all Voice Provider Rate imports. */
    ReadVoiceProviderRateImport = "READ_VOICE_PROVIDER_RATE_IMPORT",
    /** View all Voice Provider Rate imports. */
    ReadVoiceProviderRateImportRecipe = "READ_VOICE_PROVIDER_RATE_IMPORT_RECIPE",
    /** View webhook endpoints. */
    ReadWebhookEndpoint = "READ_WEBHOOK_ENDPOINT",
    /** View webhook endpoint events. */
    ReadWebhookEndpointEvent = "READ_WEBHOOK_ENDPOINT_EVENT",
    /** Whether a user can issue payment refunds */
    RefundPayments = "REFUND_PAYMENTS",
    /** Reschedule a schedule blocker */
    RescheduleScheduleBlocker = "RESCHEDULE_SCHEDULE_BLOCKER",
    /** Resend a contract */
    ResendContract = "RESEND_CONTRACT",
    /** Resend a print to mail batch. */
    ResendPrintToMailBatch = "RESEND_PRINT_TO_MAIL_BATCH",
    /** Whether a user can reverse transactions */
    ReverseAccountTransactions = "REVERSE_ACCOUNT_TRANSACTIONS",
    /** Update an account and related entities */
    UpdateAccount = "UPDATE_ACCOUNT",
    /** Update the billing parameters on an account */
    UpdateAccountBillingParameters = "UPDATE_ACCOUNT_BILLING_PARAMETERS",
    /** Update account calix service detail. */
    UpdateAccountCalixServiceDetail = "UPDATE_ACCOUNT_CALIX_SERVICE_DETAIL",
    /** Update an account group. */
    UpdateAccountGroup = "UPDATE_ACCOUNT_GROUP",
    /** Update links between accounts and invoices */
    UpdateAccountLink = "UPDATE_ACCOUNT_LINK",
    /** Modify account service parameters, such as quantity, name override, and proration */
    UpdateAccountServiceParameters = "UPDATE_ACCOUNT_SERVICE_PARAMETERS",
    /** Update an account status. */
    UpdateAccountStatus = "UPDATE_ACCOUNT_STATUS",
    /** Update an account transaction */
    UpdateAccountTransactions = "UPDATE_ACCOUNT_TRANSACTIONS",
    /** Update an account type. */
    UpdateAccountType = "UPDATE_ACCOUNT_TYPE",
    /** Update an address list */
    UpdateAddressList = "UPDATE_ADDRESS_LIST",
    /** Update address status. */
    UpdateAddressStatus = "UPDATE_ADDRESS_STATUS",
    /** Update an alerting rotation */
    UpdateAlertingRotation = "UPDATE_ALERTING_ROTATION",
    /** Update an application firewall rule */
    UpdateApplicationFirewallRule = "UPDATE_APPLICATION_FIREWALL_RULE",
    /** Update an Auth provider */
    UpdateAuthProvider = "UPDATE_AUTH_PROVIDER",
    /** Update a set of billing defaults */
    UpdateBillingDefault = "UPDATE_BILLING_DEFAULT",
    /** Update the system billing settings */
    UpdateBillingSettings = "UPDATE_BILLING_SETTINGS",
    /** Update a cable modem provisioner */
    UpdateCableModemProvisioner = "UPDATE_CABLE_MODEM_PROVISIONER",
    /** Update your calendar settings. */
    UpdateCalendar = "UPDATE_CALENDAR",
    /** Update a Calix integration */
    UpdateCalixIntegration = "UPDATE_CALIX_INTEGRATION",
    /** Update a call detail record (CDR). */
    UpdateCallDetailRecord = "UPDATE_CALL_DETAIL_RECORD",
    /** Update a call log */
    UpdateCallLog = "UPDATE_CALL_LOG",
    /** Update a canned reply */
    UpdateCannedReply = "UPDATE_CANNED_REPLY",
    /** Update a company */
    UpdateCompany = "UPDATE_COMPANY",
    /** Update a contact */
    UpdateContact = "UPDATE_CONTACT",
    /** Update a contract */
    UpdateContract = "UPDATE_CONTRACT",
    /** Update a contract template */
    UpdateContractTemplate = "UPDATE_CONTRACT_TEMPLATE",
    /** Update a custom field. */
    UpdateCustomField = "UPDATE_CUSTOM_FIELD",
    /** Update a data usage history entry */
    UpdateDataUsageHistory = "UPDATE_DATA_USAGE_HISTORY",
    /** Update a delinquency exclusion */
    UpdateDelinquencyExclusion = "UPDATE_DELINQUENCY_EXCLUSION",
    /** Update a deposit slip */
    UpdateDepositSlip = "UPDATE_DEPOSIT_SLIP",
    /** Update a DHCP server */
    UpdateDhcpServer = "UPDATE_DHCP_SERVER",
    /** Update a DID. */
    UpdateDid = "UPDATE_DID",
    /** Update a DID assignment. */
    UpdateDidAssignment = "UPDATE_DID_ASSIGNMENT",
    /** Update the drivers of a vehicle */
    UpdateDrivers = "UPDATE_DRIVERS",
    /** Update a saved message */
    UpdateEmailMessage = "UPDATE_EMAIL_MESSAGE",
    /** Update an external marketing integration */
    UpdateExternalMarketing = "UPDATE_EXTERNAL_MARKETING",
    /** Update a FiberMap Integration */
    UpdateFibermapIntegration = "UPDATE_FIBERMAP_INTEGRATION",
    /** Update a FiberMap plan */
    UpdateFibermapPlan = "UPDATE_FIBERMAP_PLAN",
    /** Update a File */
    UpdateFile = "UPDATE_FILE",
    /** Update a general ledger code */
    UpdateGeneralLedgerCode = "UPDATE_GENERAL_LEDGER_CODE",
    /** Update a generic inventory assignee */
    UpdateGenericInventoryAssignee = "UPDATE_GENERIC_INVENTORY_ASSIGNEE",
    /** Update a geofence */
    UpdateGeofence = "UPDATE_GEOFENCE",
    /** Update a global inventory model min/max */
    UpdateGlobalInventoryModelMinMax = "UPDATE_GLOBAL_INVENTORY_MODEL_MIN_MAX",
    /** Update a global stored view. */
    UpdateGlobalStoredView = "UPDATE_GLOBAL_STORED_VIEW",
    /** Update a gps tracking provider */
    UpdateGpsTrackingProvider = "UPDATE_GPS_TRACKING_PROVIDER",
    /** Update an identity provider */
    UpdateIdentityProvider = "UPDATE_IDENTITY_PROVIDER",
    /** Update an inbound mailbox */
    UpdateInboundMailbox = "UPDATE_INBOUND_MAILBOX",
    /** Update an inline device */
    UpdateInlineDevice = "UPDATE_INLINE_DEVICE",
    /** Update an integration field mapping */
    UpdateIntegrationFieldMapping = "UPDATE_INTEGRATION_FIELD_MAPPING",
    /** Update an integration service mapping */
    UpdateIntegrationServiceMapping = "UPDATE_INTEGRATION_SERVICE_MAPPING",
    /** Update an inventory item */
    UpdateInventoryItem = "UPDATE_INVENTORY_ITEM",
    /** Update an inventory location */
    UpdateInventoryLocation = "UPDATE_INVENTORY_LOCATION",
    /** Update an inventory model */
    UpdateInventoryModel = "UPDATE_INVENTORY_MODEL",
    /** Update an inventory model category */
    UpdateInventoryModelCategory = "UPDATE_INVENTORY_MODEL_CATEGORY",
    /** Update an invoice attachment */
    UpdateInvoiceAttachment = "UPDATE_INVOICE_ATTACHMENT",
    /** Update an invoice message */
    UpdateInvoiceMessage = "UPDATE_INVOICE_MESSAGE",
    /** Update an element in IPAM */
    UpdateIpamElement = "UPDATE_IPAM_ELEMENT",
    /** Update an IP assignment */
    UpdateIpAssignment = "UPDATE_IP_ASSIGNMENT",
    /** Update a job */
    UpdateJob = "UPDATE_JOB",
    /** Update a job skipping validation */
    UpdateJobSkipsValidation = "UPDATE_JOB_SKIPS_VALIDATION",
    /** Update a job type */
    UpdateJobType = "UPDATE_JOB_TYPE",
    /** Update an LTE provider */
    UpdateLteProvider = "UPDATE_LTE_PROVIDER",
    /** Update a manufacturer */
    UpdateManufacturer = "UPDATE_MANUFACTURER",
    /** Update a map overlay */
    UpdateMapOverlay = "UPDATE_MAP_OVERLAY",
    /** Update a messaging category */
    UpdateMessageCategory = "UPDATE_MESSAGE_CATEGORY",
    /** Update a Netflow endpoint */
    UpdateNetflowEndpoint = "UPDATE_NETFLOW_ENDPOINT",
    /** Update a network monitoring template */
    UpdateNetworkMonitoringTemplate = "UPDATE_NETWORK_MONITORING_TEMPLATE",
    /** Update a network site */
    UpdateNetworkSite = "UPDATE_NETWORK_SITE",
    /** Update an existing non-inventory item. */
    UpdateNonInventoryItem = "UPDATE_NON_INVENTORY_ITEM",
    /** Update a note */
    UpdateNote = "UPDATE_NOTE",
    /** Update an existing order group. */
    UpdateOrderGroup = "UPDATE_ORDER_GROUP",
    /** Update a package */
    UpdatePackage = "UPDATE_PACKAGE",
    /** Update password policy. */
    UpdatePasswordPolicy = "UPDATE_PASSWORD_POLICY",
    /** Update a payment */
    UpdatePayment = "UPDATE_PAYMENT",
    /** Update a payment method */
    UpdatePaymentMethod = "UPDATE_PAYMENT_METHOD",
    /** Update a payment processor */
    UpdatePaymentProcessor = "UPDATE_PAYMENT_PROCESSOR",
    /** Update a phone number type. */
    UpdatePhoneNumberType = "UPDATE_PHONE_NUMBER_TYPE",
    /** Update a poller */
    UpdatePoller = "UPDATE_POLLER",
    /** Update poller configuration settings */
    UpdatePollerSettings = "UPDATE_POLLER_SETTINGS",
    /** Update Preseem integration */
    UpdatePreseem = "UPDATE_PRESEEM",
    /** Update a print to mail order error. */
    UpdatePrintToMailOrderError = "UPDATE_PRINT_TO_MAIL_ORDER_ERROR",
    /** Update the print to mail settings. */
    UpdatePrintToMailSettings = "UPDATE_PRINT_TO_MAIL_SETTINGS",
    /** Update an existing purchase order. */
    UpdatePurchaseOrder = "UPDATE_PURCHASE_ORDER",
    /** Update a RADIUS account */
    UpdateRadiusAccount = "UPDATE_RADIUS_ACCOUNT",
    /** Update a RADIUS group */
    UpdateRadiusGroup = "UPDATE_RADIUS_GROUP",
    /** Update a RADIUS server */
    UpdateRadiusServer = "UPDATE_RADIUS_SERVER",
    /** Update a RADIUS session history. */
    UpdateRadiusSessionHistory = "UPDATE_RADIUS_SESSION_HISTORY",
    /** Update a Rate Center. */
    UpdateRateCenter = "UPDATE_RATE_CENTER",
    /** Update a saved message category. */
    UpdateSavedMessageCategory = "UPDATE_SAVED_MESSAGE_CATEGORY",
    /** Update a scheduled event */
    UpdateScheduledEvent = "UPDATE_SCHEDULED_EVENT",
    /** Update an account voice service detail for a scheduled event */
    UpdateScheduledEventAccountVoiceServiceDetail = "UPDATE_SCHEDULED_EVENT_ACCOUNT_VOICE_SERVICE_DETAIL",
    /** Update a schedule address */
    UpdateScheduleAddress = "UPDATE_SCHEDULE_ADDRESS",
    /** Update a schedule availability */
    UpdateScheduleAvailability = "UPDATE_SCHEDULE_AVAILABILITY",
    /** Update a schedule blocker */
    UpdateScheduleBlocker = "UPDATE_SCHEDULE_BLOCKER",
    /** Update a schedule time off */
    UpdateScheduleTimeOff = "UPDATE_SCHEDULE_TIME_OFF",
    /** Update an existing search filter. */
    UpdateSearchFilter = "UPDATE_SEARCH_FILTER",
    /** Update a service */
    UpdateService = "UPDATE_SERVICE",
    /** Update a serviceable address */
    UpdateServiceableAddress = "UPDATE_SERVICEABLE_ADDRESS",
    /** Update a SMS message */
    UpdateSmsMessage = "UPDATE_SMS_MESSAGE",
    /** Update the SMS settings. */
    UpdateSmsSettings = "UPDATE_SMS_SETTINGS",
    /** Update SNMP override */
    UpdateSnmpOverride = "UPDATE_SNMP_OVERRIDE",
    /** Update system settings. */
    UpdateSystemSettings = "UPDATE_SYSTEM_SETTINGS",
    /** Update a task */
    UpdateTask = "UPDATE_TASK",
    /** Update a task template */
    UpdateTaskTemplate = "UPDATE_TASK_TEMPLATE",
    /** Update a tax */
    UpdateTax = "UPDATE_TAX",
    /** Update a tax exemption */
    UpdateTaxExemption = "UPDATE_TAX_EXEMPTION",
    /** Update a tax override */
    UpdateTaxOverride = "UPDATE_TAX_OVERRIDE",
    /** Update a tax provider */
    UpdateTaxProvider = "UPDATE_TAX_PROVIDER",
    /** Update a ticket */
    UpdateTicket = "UPDATE_TICKET",
    /** Update the ticketing settings. */
    UpdateTicketingSettings = "UPDATE_TICKETING_SETTINGS",
    /** Update a ticket category */
    UpdateTicketCategory = "UPDATE_TICKET_CATEGORY",
    /** Update a ticket group */
    UpdateTicketGroup = "UPDATE_TICKET_GROUP",
    /** Update TowerCoverage integration */
    UpdateTowercoverageConfiguration = "UPDATE_TOWERCOVERAGE_CONFIGURATION",
    /** Update a triggered email */
    UpdateTriggeredEmail = "UPDATE_TRIGGERED_EMAIL",
    /** Update a triggered SMS message */
    UpdateTriggeredSmsMessage = "UPDATE_TRIGGERED_SMS_MESSAGE",
    /** Update an uninventoried MAC address */
    UpdateUninventoriedMacAddress = "UPDATE_UNINVENTORIED_MAC_ADDRESS",
    /** Update a vehicle */
    UpdateVehicle = "UPDATE_VEHICLE",
    /** Update an existing vendor. */
    UpdateVendor = "UPDATE_VENDOR",
    /** Update an existing vendor item. */
    UpdateVendorItem = "UPDATE_VENDOR_ITEM",
    /** Update a Voice Provider. */
    UpdateVoiceProvider = "UPDATE_VOICE_PROVIDER",
    /** Update a Voice Provider Rate. */
    UpdateVoiceProviderRate = "UPDATE_VOICE_PROVIDER_RATE",
    /** Update a voice service details generic parameter. */
    UpdateVoiceServiceGenericParameter = "UPDATE_VOICE_SERVICE_GENERIC_PARAMETER",
    /** Update a webhook endpoint. */
    UpdateWebhookEndpoint = "UPDATE_WEBHOOK_ENDPOINT"
}
/** An access token for the API. */
export type PersonalAccessToken = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'PersonalAccessToken';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** Whether or not this token was revoked. */
    revoked: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The token. Only visible at creation time. */
    token?: Maybe<Scalars['Text']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An access token for the API. */
export type PersonalAccessTokenAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An access token for the API. */
export type PersonalAccessTokenLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An access token for the API. */
export type PersonalAccessTokenNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `PersonalAccessTokenConnection` type. */
export type PersonalAccessTokenConnection = {
    __typename: 'PersonalAccessTokenConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PersonalAccessToken>>;
};
/** A phone number. */
export type PhoneNumber = AccessloggableInterface & LoggableInterface & SearchableInterface & {
    __typename: 'PhoneNumber';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A contact person. */
    contact?: Maybe<Contact>;
    /** The ID of the contact that owns this. */
    contact_id: Scalars['Int64Bit']['output'];
    /** A two character country code for this phone number. */
    country: Country;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The extension. */
    extension?: Maybe<Scalars['Numeric']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The number. */
    number: Scalars['Numeric']['output'];
    /** A phone number formatted for human readability. */
    number_formatted?: Maybe<Scalars['String']['output']>;
    /** A phone number type (e.g. mobile, home, work.) */
    phone_number_type?: Maybe<PhoneNumberType>;
    /** The ID of the PhoneNumberType associated with this phone number. */
    phone_number_type_id: Scalars['Int64Bit']['output'];
    /** Whether or not SMS messages accepted. */
    sms_opt_in: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A phone number. */
export type PhoneNumberAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A phone number. */
export type PhoneNumberContactArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A phone number. */
export type PhoneNumberLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A phone number. */
export type PhoneNumberPhone_Number_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_capable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PhoneNumberConnection` type. */
export type PhoneNumberConnection = {
    __typename: 'PhoneNumberConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PhoneNumber>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A phone number type (e.g. mobile, home, work.) */
export type PhoneNumberType = AccessloggableInterface & LoggableInterface & {
    __typename: 'PhoneNumberType';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A phone number. */
    phone_numbers: PhoneNumberConnection;
    /** Whether or not phone numbers of this type are capable of sending and receiving SMS messages. */
    sms_capable: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A phone number type (e.g. mobile, home, work.) */
export type PhoneNumberTypeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A phone number type (e.g. mobile, home, work.) */
export type PhoneNumberTypeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A phone number type (e.g. mobile, home, work.) */
export type PhoneNumberTypePhone_NumbersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['Numeric']['input']>;
    number_formatted?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_opt_in?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PhoneNumberTypeConnection` type. */
export type PhoneNumberTypeConnection = {
    __typename: 'PhoneNumberTypeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PhoneNumberType>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A `Poller`. */
export type Poller = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Poller';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An API key. */
    api_key: Scalars['String']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The amount of time it took to poll ICMP status. */
    icmp_time_taken?: Maybe<Scalars['Int']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** When the results were last received. */
    results_last_received?: Maybe<Scalars['Datetime']['output']>;
    /** The amount of time it took to poll SNMP status. */
    snmp_time_taken?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnets: SubnetConnection;
    /** The UTC timestamp for the last time accounts were polled. */
    time_of_last_account_poll?: Maybe<Scalars['Datetime']['output']>;
    /** The UTC timestamp for the last time infrastructure was polled. */
    time_of_last_infrastructure_poll?: Maybe<Scalars['Datetime']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Version. */
    version?: Maybe<Scalars['String']['output']>;
};
/** A `Poller`. */
export type PollerAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `Poller`. */
export type PollerLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `Poller`. */
export type PollerNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `Poller`. */
export type PollerSubnetsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    supernet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<SubnetType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PollerConnection` type. */
export type PollerConnection = {
    __typename: 'PollerConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Poller>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Poller configuration settings. */
export type PollerSetting = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'PollerSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How often to poll account equipment (minutes). */
    account_polling_frequency_in_minutes: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** How often to poll infrastructure equipment (minutes). */
    infrastructure_polling_frequency_in_minutes: Scalars['Int']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Poller configuration settings. */
export type PollerSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Poller configuration settings. */
export type PollerSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Poller configuration settings. */
export type PollerSettingNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The fields necessary to configure a subnet for a poller. */
export type PollerSubnetMutationInput = {
    /** Polling priority. */
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a `Subnet`. */
    subnet_id: Scalars['Int64Bit']['input'];
};
/** types.polygon */
export type Polygon = {
    __typename: 'Polygon';
    /** The connection wrapper around the `Vertex` type. */
    vertexes: VertexConnection;
};
/** The connection wrapper around the `Vertex` type. */
export type PolygonConnection = {
    __typename: 'PolygonConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Polygon>>;
};
/** Preseem integration. */
export type Preseem = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Preseem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Indicates if an API key, which is hidden from results, has been set. */
    api_key_present: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Preseem integration. */
export type PreseemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Preseem integration. */
export type PreseemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Preseem integration. */
export type PreseemNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The status of a network device as reported by Preseem. */
export declare enum PreseemStatus {
    /** Green */
    Green = "GREEN",
    /** Red */
    Red = "RED",
    /** Yellow */
    Yellow = "YELLOW"
}
/** A batch of invoices to mail and print. */
export type PrintToMailBatch = AccessloggableInterface & LoggableInterface & NotifiableInterface & {
    __typename: 'PrintToMailBatch';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How the invoices for the batch were generated. */
    batch_type: PrintToMailBatchType;
    /** The completion date of the billing run if the batch type is 'BILLING_RUN'. */
    billing_completion_date?: Maybe<Scalars['Date']['output']>;
    /** The cost associated with the print to mail batch. */
    cost: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoices: InvoiceConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** The print method for the print to mail batch. */
    print_method: PrintToMailPrintMethod;
    /** The print to mail order. */
    print_to_mail_orders: PrintToMailOrderConnection;
    /** The print type for the print to mail batch. */
    print_type: PrintToMailPrintType;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The current status of the print to mail batch. */
    status: PrintToMailBatchStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A batch of invoices to mail and print. */
export type PrintToMailBatchAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A batch of invoices to mail and print. */
export type PrintToMailBatchInvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A batch of invoices to mail and print. */
export type PrintToMailBatchLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A batch of invoices to mail and print. */
export type PrintToMailBatchNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A batch of invoices to mail and print. */
export type PrintToMailBatchPrint_To_Mail_OrdersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_status_check?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_to_mail_batch_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    provider_order_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PrintToMailOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PrintToMailBatchConnection` type. */
export type PrintToMailBatchConnection = {
    __typename: 'PrintToMailBatchConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PrintToMailBatch>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The status of a print to mail batch. */
export declare enum PrintToMailBatchStatus {
    /** Cancelled. */
    Cancelled = "CANCELLED",
    /** Completed. */
    Completed = "COMPLETED",
    /** Failed. */
    Failed = "FAILED",
    /** Insufficient funds. */
    InsufficientFunds = "INSUFFICIENT_FUNDS",
    /** In Progress. */
    InProgress = "IN_PROGRESS",
    /** Pending (Waiting to be processed) */
    Pending = "PENDING"
}
/** The batch type of a print to mail batch. */
export declare enum PrintToMailBatchType {
    /** Created by a billing run. */
    BillingRun = "BILLING_RUN",
    /** Manually created. */
    UserDefined = "USER_DEFINED"
}
/** The print to mail cost estimate for a single document/invoice. */
export type PrintToMailDocumentCostEstimate = {
    __typename: 'PrintToMailDocumentCostEstimate';
    /** The estimated print to mail cost for a single document/invoice. */
    cost_estimate: Scalars['Int']['output'];
    /** The number of digital pages in the document/invoice. */
    number_of_digital_pages: Scalars['Int']['output'];
    /** The print method for the print to mail batch. */
    print_method: PrintToMailPrintMethod;
    /** The print type for the print to mail batch. */
    print_type: PrintToMailPrintType;
};
/** The print to mail order. */
export type PrintToMailOrder = AccessloggableInterface & LoggableInterface & {
    __typename: 'PrintToMailOrder';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The last time the order status was checked. */
    last_status_check: Scalars['Datetime']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The name of the print to mail order. */
    name: Scalars['String']['output'];
    /** A batch of invoices to mail and print. */
    print_to_mail_batch?: Maybe<PrintToMailBatch>;
    /** The print to mail batch ID. */
    print_to_mail_batch_id: Scalars['Int64Bit']['output'];
    /** An error associated with the print to mail order. */
    print_to_mail_order_errors: PrintToMailOrderErrorConnection;
    /** The provider ID. */
    provider_order_id: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The current status of the print to mail order. */
    status: PrintToMailOrderStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The print to mail order. */
export type PrintToMailOrderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The print to mail order. */
export type PrintToMailOrderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The print to mail order. */
export type PrintToMailOrderPrint_To_Mail_BatchArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    batch_type?: InputMaybe<PrintToMailBatchType>;
    billing_completion_date?: InputMaybe<Scalars['Date']['input']>;
    cost?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_method?: InputMaybe<PrintToMailPrintMethod>;
    print_type?: InputMaybe<PrintToMailPrintType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PrintToMailBatchStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The print to mail order. */
export type PrintToMailOrderPrint_To_Mail_Order_ErrorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    error_message?: InputMaybe<Scalars['String']['input']>;
    error_type?: InputMaybe<PrintToMailOrderErrorType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_to_mail_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    resolved?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PrintToMailOrderConnection` type. */
export type PrintToMailOrderConnection = {
    __typename: 'PrintToMailOrderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PrintToMailOrder>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An error associated with the print to mail order. */
export type PrintToMailOrderError = AccessloggableInterface & LoggableInterface & {
    __typename: 'PrintToMailOrderError';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An error message associated with a print to mail order. */
    error_message: Scalars['String']['output'];
    /** The error type. */
    error_type: PrintToMailOrderErrorType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoice?: Maybe<Invoice>;
    /** The ID of the invoice that has the error. */
    invoice_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** The print to mail order. */
    print_to_mail_order?: Maybe<PrintToMailOrder>;
    /** The print to mail order ID. */
    print_to_mail_order_id: Scalars['Int64Bit']['output'];
    /** Whether or not the error has been marked as resolved. */
    resolved: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An error associated with the print to mail order. */
export type PrintToMailOrderErrorAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An error associated with the print to mail order. */
export type PrintToMailOrderErrorInvoiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An error associated with the print to mail order. */
export type PrintToMailOrderErrorLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An error associated with the print to mail order. */
export type PrintToMailOrderErrorPrint_To_Mail_OrderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_status_check?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_to_mail_batch_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    provider_order_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PrintToMailOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PrintToMailOrderErrorConnection` type. */
export type PrintToMailOrderErrorConnection = {
    __typename: 'PrintToMailOrderErrorConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PrintToMailOrderError>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The error type associated with the print to mail order. */
export declare enum PrintToMailOrderErrorType {
    /** Address */
    Address = "ADDRESS",
    /** General */
    General = "GENERAL"
}
/** The status of a print to mail order. */
export declare enum PrintToMailOrderStatus {
    /** Cancelled */
    Cancelled = "CANCELLED",
    /** Complete */
    Complete = "COMPLETE",
    /** Error */
    Error = "ERROR",
    /** Sent */
    Sent = "SENT"
}
/** The print method for a print to mail batch. */
export declare enum PrintToMailPrintMethod {
    /** Print on both sides of the page. */
    Duplex = "DUPLEX",
    /** Print on one side of the page. */
    Simplex = "SIMPLEX"
}
/** The print type for a print to mail batch. */
export declare enum PrintToMailPrintType {
    /** Print in black and white. */
    BlackAndWhite = "BLACK_AND_WHITE",
    /** Print in color. */
    Color = "COLOR"
}
/** Print to mail configuration settings. */
export type PrintToMailSetting = AccessloggableInterface & LoggableInterface & {
    __typename: 'PrintToMailSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether the print to mail orders are paid for automatically. */
    auto_pay: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A notification is sent if Print to Mail funds fall below this value. */
    low_funds_threshold: Scalars['Int']['output'];
    /** The print method for the print to mail batch. */
    print_method: PrintToMailPrintMethod;
    /** The print type for the print to mail batch. */
    print_type: PrintToMailPrintType;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Print to mail configuration settings. */
export type PrintToMailSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Print to mail configuration settings. */
export type PrintToMailSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single PDF containing multiple invoices for printing. */
export type PrintedInvoiceBatch = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'PrintedInvoiceBatch';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date */
    date: Scalars['Date']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A single PDF containing multiple invoices for printing. */
export type PrintedInvoiceBatchAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single PDF containing multiple invoices for printing. */
export type PrintedInvoiceBatchFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single PDF containing multiple invoices for printing. */
export type PrintedInvoiceBatchLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single PDF containing multiple invoices for printing. */
export type PrintedInvoiceBatchNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single PDF containing multiple invoices for printing. */
export type PrintedInvoiceBatchUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `PrintedInvoiceBatchConnection` type. */
export type PrintedInvoiceBatchConnection = {
    __typename: 'PrintedInvoiceBatchConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PrintedInvoiceBatch>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A protocol. */
export declare enum Protocol {
    /** HTTP. */
    Http = "HTTP",
    /** HTTPS. */
    Https = "HTTPS"
}
/** The status of a device that performs some kind of provisioning. */
export declare enum ProvisioningDeviceStatus {
    /** Down. */
    Down = "DOWN",
    /** Up. */
    Up = "UP"
}
/** A purchase order for items from a third party vendor. */
export type PurchaseOrder = AccessloggableInterface & EmailableInterface & FileableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'PurchaseOrder';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The ID of the user that approved this purchase order. */
    approved_by_user?: Maybe<User>;
    /** The ID of the user that approved this purchase order. */
    approved_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date/time that this purchase order was cancelled. */
    canceled_at?: Maybe<Scalars['Datetime']['output']>;
    /** The ID of the user that canceled this purchase order. */
    canceled_by_user?: Maybe<User>;
    /** The ID of the user that cancelled this purchase order. */
    canceled_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that will be used in the header of this purchase order. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the user that created this entity. */
    created_by_user?: Maybe<User>;
    /** The ID of the user that created this purchase order. */
    created_by_user_id: Scalars['Int64Bit']['output'];
    /** The currency the system displays money in. */
    currency?: Maybe<Currency>;
    /** An email. */
    emails: EmailConnection;
    /** A message to be included on purchase orders when sent to vendors. */
    external_message?: Maybe<Scalars['String']['output']>;
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A location that inventory is stored in. */
    inventory_location?: Maybe<InventoryLocation>;
    /** The source of the shipping address for a purchase order. */
    inventory_location_id: Scalars['Int64Bit']['output'];
    /** Whether or not the purchase order has been marked as being paid. */
    is_paid?: Maybe<Scalars['Boolean']['output']>;
    /** The date and time that the inventory item status last changed. */
    last_status_change: Scalars['Datetime']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** An order group. */
    order_group?: Maybe<OrderGroup>;
    /** The ID of an order group related to this purchase order. */
    order_group_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A unique number identifying an approved purchase order. */
    order_number?: Maybe<Scalars['Int']['output']>;
    /** The terms of payment for deliveries from this vendor. */
    payment_terms?: Maybe<PaymentTerm>;
    /** A line item on a purchase order. */
    purchase_order_items: PurchaseOrderItemConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The current status of this purchase order. */
    status: PurchaseOrderStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A third party vendor of inventory models. */
    vendor?: Maybe<Vendor>;
    /** The ID of a vendor. */
    vendor_id: Scalars['Int64Bit']['output'];
    /** The name of a vendor. */
    vendor_name?: Maybe<Scalars['String']['output']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderApproved_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderCanceled_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderCreated_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderInventory_LocationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_shipping_location?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderOrder_GroupArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    automatic_approval_threshold?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderPurchase_Order_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calculated_tax?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic_quantity_received?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderItemStatus>;
    units?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A purchase order for items from a third party vendor. */
export type PurchaseOrderVendorArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    automate_approved_purchase_orders?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    currency?: InputMaybe<Currency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `PurchaseOrderConnection` type. */
export type PurchaseOrderConnection = {
    __typename: 'PurchaseOrderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PurchaseOrder>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A line item on a purchase order. */
export type PurchaseOrderItem = AccessloggableInterface & CustomfielddataableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'PurchaseOrderItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The tax transaction that was created for this purchase order item the last time it was modified. */
    calculated_tax?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** The quantity of a generic purchase order item that has already been received. */
    generic_quantity_received: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** The order this item is shown in a list. */
    list_order?: Maybe<Scalars['Int']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** Part number used by the vendor to identify this vendor item. */
    part_number?: Maybe<Scalars['String']['output']>;
    /** The price of the vendor item at the time the purchase order was created. */
    price: Scalars['Int64Bit']['output'];
    /** A purchase order for items from a third party vendor. */
    purchase_order?: Maybe<PurchaseOrder>;
    /** The ID of a purchase order. */
    purchase_order_id: Scalars['Int64Bit']['output'];
    /** Number of inventory models that are included in a single unit of this vendors product. */
    quantity_per_unit?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The current status of a purchase order item. */
    status: PurchaseOrderItemStatus;
    /** A tax. */
    taxes: TaxConnection;
    /** The quantity of a vendor item on a purchase order. */
    units: Scalars['Int']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** An item that can be purchased from a particular vendor. */
    vendor_item?: Maybe<VendorItem>;
    /** The ID of a vendor item. */
    vendor_item_id: Scalars['Int64Bit']['output'];
};
/** A line item on a purchase order. */
export type PurchaseOrderItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A line item on a purchase order. */
export type PurchaseOrderItemCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A line item on a purchase order. */
export type PurchaseOrderItemInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A line item on a purchase order. */
export type PurchaseOrderItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A line item on a purchase order. */
export type PurchaseOrderItemNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A line item on a purchase order. */
export type PurchaseOrderItemPurchase_OrderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    approved_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    canceled_at?: InputMaybe<Scalars['Datetime']['input']>;
    canceled_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    currency?: InputMaybe<Currency>;
    external_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_paid?: InputMaybe<Scalars['Boolean']['input']>;
    last_status_change?: InputMaybe<Scalars['Datetime']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    order_number?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendor_name?: InputMaybe<Scalars['String']['input']>;
};
/** A line item on a purchase order. */
export type PurchaseOrderItemTaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A line item on a purchase order. */
export type PurchaseOrderItemVendor_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_type?: InputMaybe<VendoritemableType>;
};
/** The connection wrapper around the `PurchaseOrderItemConnection` type. */
export type PurchaseOrderItemConnection = {
    __typename: 'PurchaseOrderItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<PurchaseOrderItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Status of a purchase order item. */
export declare enum PurchaseOrderItemStatus {
    /** Canceled */
    Canceled = "CANCELED",
    /** Defective/Return Merchandise Authorization */
    DefectiveRma = "DEFECTIVE_RMA",
    /** Missing */
    Missing = "MISSING",
    /** Pending */
    Pending = "PENDING",
    /** Received */
    Received = "RECEIVED",
    /** Returned */
    Returned = "RETURNED"
}
/** Status of a purchase order / product request. */
export declare enum PurchaseOrderStatus {
    /** Approved */
    Approved = "APPROVED",
    /** Canceled */
    Canceled = "CANCELED",
    /** Complete */
    Complete = "COMPLETE",
    /** Dispatched to vendor */
    DispatchedToVendor = "DISPATCHED_TO_VENDOR",
    /** Failed to dispatch */
    DispatchFailed = "DISPATCH_FAILED",
    /** Incomplete */
    Incomplete = "INCOMPLETE",
    /** Paid */
    Paid = "PAID",
    /** Product Request */
    ProductRequest = "PRODUCT_REQUEST",
    /** Receiving */
    Receiving = "RECEIVING",
    /** Rejected */
    Rejected = "REJECTED",
    /** Uninitialized */
    Uninitialized = "UNINITIALIZED"
}
export type Query = {
    __typename: 'Query';
    /** All access logs for this entity. */
    access_logs: AccessLogConnection;
    /** Account billing parameters. */
    account_billing_parameters: AccountBillingParameterConnection;
    /** Account Calix Service Details. */
    account_calix_service_details: AccountCalixServiceDetailConnection;
    /** Account events. */
    account_events: AccountEventConnection;
    /** Account groups. */
    account_groups: AccountGroupConnection;
    /** Services that have been attached to accounts. */
    account_services: AccountServiceConnection;
    /** Account statuses. */
    account_statuses: AccountStatusConnection;
    /** Account types. */
    account_types: AccountTypeConnection;
    /** Details of a voice service attached to an account. */
    account_voice_service_details: AccountVoiceServiceDetailConnection;
    /** Customer accounts. */
    accounts: AccountConnection;
    /** ACH batches. */
    ach_batches: AchBatchConnection;
    /** Address lists. */
    address_lists: AddressListConnection;
    /** Address statuses. */
    address_statuses: AddressStatusConnection;
    /** Geographical addresses. */
    addresses: AddressConnection;
    /** Details related to an adjustment service. */
    adjustment_service_details: AdjustmentServiceDetailConnection;
    /** Alerting rotation days and times. */
    alerting_rotation_days: AlertingRotationDayConnection;
    /** Inventory items associated with alerting rotations. */
    alerting_rotation_inventory_items: AlertingRotationInventoryItemConnection;
    /** Alerting rotations. */
    alerting_rotations: AlertingRotationConnection;
    /** Application firewall rules. */
    application_firewall_rules: ApplicationFirewallRuleConnection;
    /** Auth providers. */
    auth_providers: AuthProviderConnection;
    /** Available explores. */
    available_explores: AvailableExploresConnection;
    /** Available reports. */
    available_reports: AvailableReportsConnection;
    /** Avalara tax categories. */
    avalara_tax_categories: AvalaraTaxCategoryConnection;
    /** Avalara tax definitions. */
    avalara_tax_definitions: AvalaraTaxDefinitionConnection;
    /** Bank account processor credentials. */
    bank_account_processor_credentials: BankAccountProcessorCredentialConnection;
    /** Processors of transactions to and from bank accounts. */
    bank_account_processors: BankAccountProcessorConnection;
    /** Bank accounts. */
    bank_accounts: BankAccountConnection;
    /** Default billing values for new accounts. */
    billing_defaults: BillingDefaultConnection;
    /** Services associated with a linked billing default. */
    billing_services: BillingServiceConnection;
    /** Billing settings. */
    billing_setting: BillingSetting;
    /** Cable modem provisioner credentials. */
    cable_modem_provisioner_credentials: CableModemProvisionerCredentialConnection;
    /** Cable modem provisioners. */
    cable_modem_provisioners: CableModemProvisionerConnection;
    /** Calendar - iCalendar */
    calendar_icals: CalendarIcalConnection;
    /** Unique Calix SMx server configuration. */
    calix_integrations: CalixIntegrationConnection;
    /** Calix provisioning list. */
    calix_provisioning_list: CalixProvisioningListConnection;
    /** Call Detail Record Import Recipes */
    call_detail_record_import_recipes: CallDetailRecordImportRecipeConnection;
    /** Call Detail Record Imports */
    call_detail_record_imports: CallDetailRecordImportConnection;
    /** Call Detail Records */
    call_detail_records: CallDetailRecordConnection;
    /** Call Logs for accounts. */
    call_logs: CallLogConnection;
    /** Canned replies. */
    canned_replies: CannedReplyConnection;
    /** Canned reply categories. */
    canned_reply_categories: CannedReplyCategoryConnection;
    /** Canned reply with variable replacement. */
    canned_reply_with_variable_replacement: CannedReply;
    /** Companies that you do business as. */
    companies: CompanyConnection;
    /** Departments in a company. */
    company_departments: CompanyDepartmentConnection;
    /** A contact person. */
    contacts: ContactConnection;
    /** Contract templates. */
    contract_templates: ContractTemplateConnection;
    /** Contracts. */
    contracts: ContractConnection;
    /** Core credit cards. */
    core_credit_cards: CreditCardConnection;
    /** Core invoices. */
    core_invoices: InvoiceConnection;
    /** Core transactions. */
    core_transactions: TransactionConnection;
    /** Credit card processor credentials. */
    credit_card_processor_credentials: CreditCardProcessorCredentialConnection;
    /** Credit card processors configured in Sonar. */
    credit_card_processors: CreditCardProcessorConnection;
    /** Credit cards. */
    credit_cards: CreditCardConnection;
    /** Credits applied to invoices. */
    credits: CreditConnection;
    /** Data in custom fields. */
    custom_field_data: CustomFieldDataConnection;
    /** Custom fields. */
    custom_fields: CustomFieldConnection;
    /** Aggregate values for a given date. */
    daily_aggregate_values: DailyAggregateValueConnection;
    /** Details related to a data service. */
    data_service_details: DataServiceDetailConnection;
    /** Data usage. */
    data_usage: Array<Maybe<DataUsage>>;
    /** Data usage history. */
    data_usage_histories: DataUsageHistoryConnection;
    /** Data usage top offs. */
    data_usage_top_offs: DataUsageTopOffConnection;
    /** Debits. */
    debits: DebitConnection;
    /** Periods of time in which delinquency is not calculated. */
    delinquency_exclusions: DelinquencyExclusionConnection;
    /** Departments. */
    departments: DepartmentConnection;
    /** Modes in which a piece of inventory can be deployed. */
    deployment_types: DeploymentTypeConnection;
    /** Deposit slips. */
    deposit_slips: DepositSlipConnection;
    /** Device interface mappings. */
    device_interface_mappings: DeviceInterfaceMappingConnection;
    /** DHCP server credentials. */
    dhcp_server_credentials: DhcpServerCredentialConnection;
    /** DHCP sever identifiers. */
    dhcp_server_identifiers: DhcpServerIdentifierConnection;
    /** DHCP servers. */
    dhcp_servers: DhcpServerConnection;
    /** DID assignment histories. */
    did_assignment_histories: DidAssignmentHistoryConnection;
    /** DID assignments. */
    did_assignments: DidAssignmentConnection;
    /** DID Import Recipes. */
    did_import_recipes: DidImportRecipeConnection;
    /** DIDs. */
    dids: DidConnection;
    /** Disbursement details. */
    disbursement_details: DisbursementDetailConnection;
    /** Disbursements. */
    disbursements: DisbursementConnection;
    /** Disconnection logs. */
    disconnection_logs: DisconnectionLogConnection;
    /** Discounts. */
    discounts: DiscountConnection;
    /** Drive times. */
    drive_times?: Maybe<DriveTimeResultWrapper>;
    /** Validate contact email address. */
    email_address_lookup: Contact;
    /** Email categories are associated with contacts, and define the types of emails those contacts receive. The "default" property determines whether or not the category is added to newly created contacts by default. */
    email_categories: EmailCategoryConnection;
    /** All clicks for each sent email. */
    email_clicks: EmailClickConnection;
    /** Email domains. */
    email_domains: EmailDomainConnection;
    /** Get a list of all locations saved for opened and clicked emails. */
    email_locations: EmailLocationConnection;
    /** Localized email message details for an EmailMessage container. */
    email_message_contents: EmailMessageContentConnection;
    /** Email message templates. */
    email_messages: EmailMessageConnection;
    /** All opens for each sent email. */
    email_opens: EmailOpenConnection;
    /** Get a list of valid email variables for a specific email trigger. */
    email_variables?: Maybe<Array<Maybe<EmailVariable>>>;
    /** Emails that have been sent. */
    emails: EmailConnection;
    /** LTE EPCs. */
    epcs: EpcConnection;
    /** Details related to an expiring service. */
    expiring_service_details: ExpiringServiceDetailConnection;
    /** External marketing provider credentials. */
    external_marketing_provider_credentials: ExternalMarketingProviderCredentialConnection;
    /** External marketing providers. */
    external_marketing_providers: ExternalMarketingProviderConnection;
    /** The generated FCC Form 477 report. */
    fcc_form_477_reports: FccForm477ReportConnection;
    /** FiberMap integrations. */
    fibermap_integrations: FibermapIntegrationConnection;
    /** FiberMap plans. */
    fibermap_plans: FibermapPlanConnection;
    /** FiberMap service locations */
    fibermap_service_locations: FibermapServiceLocationConnection;
    /** Files. */
    files: FileConnection;
    /** Find address by fibermap service location. */
    find_address_by_fibermap_service_location: Address;
    /** Fractional debits. */
    fractional_debits: FractionalDebitConnection;
    /** Fractional tax transactions. */
    fractional_tax_transactions: FractionalTaxTransactionConnection;
    /** General ledger codes. */
    general_ledger_codes: GeneralLedgerCodeConnection;
    /** This query provides the ability to perform a general, partial matching search across various entities at the same time. */
    general_search: GeneralSearchConnection;
    /** Generic inventory assignees. */
    generic_inventory_assignees: GenericInventoryAssigneeConnection;
    /** Logs of changes made to generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** Generic inventory items. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** Geographical tax zones. */
    geo_tax_zones: GeoTaxZoneConnection;
    /** Geofences. */
    geofences: GeofenceConnection;
    /** Get list of vehicles from external GPS tracking provider. */
    get_gps_tracking_provider_vehicles?: Maybe<GetGpsTrackingProviderVehiclesConnection>;
    /** Returns the next IP address in the IP pool. */
    get_next_ip_address_in_ip_pool: NextIpAddress;
    /** Returns the next subnet in the subnet. */
    get_next_subnet_in_subnet: NextSubnet;
    /** Returns the next available subnet of the requested size in the supernet. */
    get_next_subnet_in_supernet: NextSubnet;
    /** Global inventory model minimums/maximums. */
    global_inventory_model_min_maxes: GlobalInventoryModelMinMaxConnection;
    /** GPS tracking provider credentials. */
    gps_tracking_provider_credentials: GpsTrackingProviderCredentialConnection;
    /** GPS tracking providers. */
    gps_tracking_providers: GpsTrackingProviderConnection;
    /** Signatures on signed contracts. */
    handwritten_signatures: HandwrittenSignatureConnection;
    /** ICMP results. */
    icmp_results: IcmpNetworkMonitoringResultConnection;
    /** Details related to an ActiveDirectory identity provider. */
    identity_provider_active_directory_details: IdentityProviderActiveDirectoryDetailConnection;
    /** Details related to a Google identity provider. */
    identity_provider_google_details: IdentityProviderGoogleDetailConnection;
    /** Details related to a Microsoft identity provider. */
    identity_provider_microsoft_details: IdentityProviderMicrosoftDetailConnection;
    /** Details related to a SAML identity provider. */
    identity_provider_saml_details: IdentityProviderSamlDetailConnection;
    /** Identity providers. */
    identity_providers: IdentityProviderConnection;
    /** Imports of entities in bulk. */
    imports: ImportConnection;
    /** Inbound mailboxes. */
    inbound_mailboxes: InboundMailboxConnection;
    /** Inline device credentials. */
    inline_device_credentials: InlineDeviceCredentialConnection;
    /** Inline devices. */
    inline_devices: InlineDeviceConnection;
    /** Instance management requests. */
    instance_management_requests: InstanceManagementRequestConnection;
    /** Instance Service Funds */
    instance_service_funds: InstanceServiceFunds;
    /** Integration field mappings.  Mapping of Sonar model field with vendor specific field. */
    integration_field_mappings: IntegrationFieldMappingConnection;
    /** Integration service mappings.  One-to-one mapping of Sonar service with vendor service name. */
    integration_service_mappings: IntegrationServiceMappingConnection;
    /** Internal locations within an inventory location (e.g. a shelf or room.) */
    internal_locations: InternalLocationConnection;
    /** Inventory item events. */
    inventory_item_events: InventoryItemEventConnection;
    /** Inventory items. */
    inventory_items: InventoryItemConnection;
    /** Locations that inventory can be stored. */
    inventory_locations: InventoryLocationConnection;
    /** Categories of inventory. */
    inventory_model_categories: InventoryModelCategoryConnection;
    /** Data stored on an inventory field (e.g. a MAC address or serial number.) */
    inventory_model_field_data: InventoryModelFieldDataConnection;
    /** Fields that contain data about an inventory item. */
    inventory_model_fields: InventoryModelFieldConnection;
    /** Inventory model minimums/maximums. */
    inventory_model_min_maxes: InventoryModelMinMaxConnection;
    /** Inventory models. */
    inventory_models: InventoryModelConnection;
    /** Invoice attachments. */
    invoice_attachments: InvoiceAttachmentConnection;
    /** Invoice messages. */
    invoice_messages: InvoiceMessageConnection;
    /** Invoices. */
    invoices: InvoiceConnection;
    /** IP assignment histories. */
    ip_assignment_histories: IpAssignmentHistoryConnection;
    /** IP assignments. */
    ip_assignments: IpAssignmentConnection;
    /** IP pools. */
    ip_pools: IpPoolConnection;
    /** Job available times. */
    job_available_times?: Maybe<Array<Maybe<JobAvailableTimes>>>;
    /** Job check ins. */
    job_check_ins: JobCheckInConnection;
    /** Services associated with jobs. */
    job_services: JobServiceConnection;
    /** Job types. */
    job_types: JobTypeConnection;
    /** Jobs. */
    jobs: JobConnection;
    /** Local prefixes for voice services. */
    local_prefixes: LocalPrefixConnection;
    /** Log entries for various events throughout Sonar. */
    logs: LogConnection;
    /** Report builder licenses. */
    looker_explore_licenses: LookerExploreLicenseConnection;
    /** Report viewer licenses. */
    looker_view_licenses: LookerViewLicenseConnection;
    /** The credentials for an LTE provider. */
    lte_provider_credentials: LteProviderCredentialConnection;
    /** LTE providers. */
    lte_providers: LteProviderConnection;
    /** Manufacturers. */
    manufacturers: ManufacturerConnection;
    /** Map Overlays. */
    map_overlays: MapOverlayConnection;
    /** Returns all map overlays within a camera view represented by the north, south, east and west arguments */
    map_overlays_within_box: MapOverlayConnection;
    /** Mass email communications. */
    mass_emails: MassEmailConnection;
    /** Get information about yourself! */
    me: Me;
    /** Message categories are associated with contacts, and define the types of messages those contacts receive. The "default" property determines whether or not the category is added to newly created contacts by default. */
    message_categories: MessageCategoryConnection;
    /** Logs of when billing ran successfully for an `Account`. */
    monthly_billing_completions: MonthlyBillingCompletionConnection;
    /** Get your IP address */
    my_ip_address: MyIpAddress;
    /** Netflow allowed subnets. */
    netflow_allowed_subnets: NetflowAllowedSubnetConnection;
    /** Netflow endpoints. */
    netflow_endpoints: NetflowEndpointConnection;
    /** Netflow whitelists. */
    netflow_whitelists: NetflowWhitelistConnection;
    /** Network monitoring graphs. */
    network_monitoring_graphs: NetworkMonitoringGraphConnection;
    /** Network monitoring templates. */
    network_monitoring_templates: NetworkMonitoringTemplateConnection;
    /** Network site serviceable address lists. */
    network_site_serviceable_address_lists: NetworkSiteServiceableAddressListConnection;
    /** Network sites. */
    network_sites: NetworkSiteConnection;
    /** Items sold by vendors that are not convertible to an inventory model (i.e. labor charges). */
    non_inventory_items: NonInventoryItemConnection;
    /** Notes. */
    notes: NoteConnection;
    /** Notifications. */
    notifications: NotificationConnection;
    /** Order group relationships to users. */
    order_group_users: OrderGroupUserConnection;
    /** Order groups. */
    order_groups: OrderGroupConnection;
    /** Details related to an overage service. */
    overage_service_details: OverageServiceDetailConnection;
    /** Services associated with a package. */
    package_services: PackageServiceConnection;
    /** Packages. */
    packages: PackageConnection;
    /** The password policy for users. */
    password_policy: PasswordPolicy;
    /** PayPal Credentials. */
    pay_pal_credentials: PayPalCredentialConnection;
    /** Payments. */
    payments: PaymentConnection;
    /** Your personal access tokens. */
    personal_access_tokens: PersonalAccessTokenConnection;
    /** Types of phone numbers (e.g. mobile, home, fax.) */
    phone_number_types: PhoneNumberTypeConnection;
    /** Phone numbers. */
    phone_numbers: PhoneNumberConnection;
    /** Poller settings. */
    poller_setting: PollerSetting;
    /** Pollers. */
    pollers: PollerConnection;
    /** Preseem integration. */
    preseem: Preseem;
    /** Print to mail batches. */
    print_to_mail_batches: PrintToMailBatchConnection;
    /** Estimated print to mail document/invoice cost. */
    print_to_mail_document_cost_estimate: PrintToMailDocumentCostEstimate;
    /** Print to mail order errors. */
    print_to_mail_order_errors: PrintToMailOrderErrorConnection;
    /** Print to mail orders. */
    print_to_mail_orders: PrintToMailOrderConnection;
    /** Print to mail settings. */
    print_to_mail_setting: PrintToMailSetting;
    /** Printed invoice batches. */
    printed_invoice_batches: PrintedInvoiceBatchConnection;
    /** Purchase order line items. */
    purchase_order_items: PurchaseOrderItemConnection;
    /** Purchase orders. */
    purchase_orders: PurchaseOrderConnection;
    /** RADIUS accounts. */
    radius_accounts: RadiusAccountConnection;
    /** RADIUS group reply attributes. */
    radius_group_reply_attributes: RadiusGroupReplyAttributeConnection;
    /** RADIUS groups. */
    radius_groups: RadiusGroupConnection;
    /** Radius server credentials. */
    radius_server_credentials: RadiusServerCredentialConnection;
    /** RADIUS servers. */
    radius_servers: RadiusServerConnection;
    /** RADIUS session histories. */
    radius_session_histories: RadiusSessionHistoryConnection;
    /** Rate Centers. */
    rate_centers: RateCenterConnection;
    /** Details related to a recurring service. */
    recurring_service_details: RecurringServiceDetailConnection;
    /** Refunded payments. */
    refunded_payments: RefundedPaymentConnection;
    /** Attempt to translate a latitude and longitude into a street address. */
    reverse_geocode: ValidatedAddress;
    /** Reversed payments. */
    reversed_payments: ReversedPaymentConnection;
    /** Roles for users. Roles define the permission set that a user can have. */
    roles: RoleConnection;
    /** Saved message categories. */
    saved_message_categories: SavedMessageCategoryConnection;
    /** Scheduling data. */
    schedule?: Maybe<ScheduleResult>;
    /** Starting and ending addresses for technician schedules. */
    schedule_addresses: ScheduleAddressConnection;
    /** Schedule availabilities. */
    schedule_availabilities: ScheduleAvailabilityConnection;
    /** Schedule availability day/times. */
    schedule_availability_day_times: ScheduleAvailabilityDayTimeConnection;
    /** Schedule blocker day/times. */
    schedule_blocker_day_times: ScheduleBlockerDayTimeConnection;
    /** Schedule blocker overrides. */
    schedule_blocker_overrides: ScheduleBlockerOverrideConnection;
    /** Schedule blockers. */
    schedule_blockers: ScheduleBlockerConnection;
    /** Schedule time offs. */
    schedule_time_offs: ScheduleTimeOffConnection;
    /** Scheduled event account voice service details. */
    scheduled_event_account_voice_service_details: ScheduledEventAccountVoiceServiceDetailConnection;
    /** Scheduled events. */
    scheduled_events: ScheduledEventConnection;
    /** User-defined search filters. */
    search_filters: SearchFilterConnection;
    /** External references to SendGrid Dynamic Templates. */
    sendgrid_dynamic_template_external_references: SendgridDynamicTemplateExternalReferenceConnection;
    /** Sendgrid status. */
    sendgrid_status?: Maybe<SendgridStatus>;
    /** Metadata fields on a service. */
    service_metadata: ServiceMetadataConnection;
    /** Values entered into service metadata fields. */
    service_metadata_values: ServiceMetadataValueConnection;
    /** Tax definitions that have been assigned to services. */
    service_tax_definitions: ServiceTaxDefinitionConnection;
    /** The relationship between a service and a tax. */
    service_taxes: ServiceTaxConnection;
    /** Serviceable address account assignment histories. */
    serviceable_address_account_assignment_histories: ServiceableAddressAccountAssignmentHistoryConnection;
    /** Services. */
    services: ServiceConnection;
    /** Signatures. */
    signatures: SignatureConnection;
    /** SMS message contents. */
    sms_message_contents: SmsMessageContentConnection;
    /** SMS Messages. */
    sms_messages: SmsMessageConnection;
    /** SMS outbound messages. */
    sms_outbound_messages: SmsOutboundMessageConnection;
    /** SMS settings. */
    sms_setting: SmsSetting;
    /** All SMTP events for each sent email. */
    smtp_events: SmtpEventConnection;
    /** SNMP interface numeric results */
    snmp_interface_numeric_results: Array<Maybe<SnmpInterfaceNumericResult>>;
    /** SNMP OID threshold violations. */
    snmp_oid_threshold_violations: SnmpOidThresholdViolationConnection;
    /** SNMP OID thresholds. */
    snmp_oid_thresholds: SnmpOidThresholdConnection;
    /** SNMP OIDs. */
    snmp_oids: SnmpOidConnection;
    /** SNMP Overrides. */
    snmp_overrides: SnmpOverrideConnection;
    /** SNMP results. */
    snmp_results: SnmpNetworkMonitoringResultConnection;
    /** Vetro FiberMap Splice Report. */
    splice_report: SpliceReport;
    /** Stored view filters. */
    stored_filters: StoredFilterConnection;
    /** Stored view groups. */
    stored_groups: StoredGroupConnection;
    /** Stored views associated with users. */
    stored_view_users: StoredViewUserConnection;
    /** Stored views. */
    stored_views: StoredViewConnection;
    /** Subnets. */
    subnets: SubnetConnection;
    /** Subscriptions. */
    subscriptions: SubscriptionConnection;
    /** Supernets. */
    supernets: SupernetConnection;
    /** The configured credentials for a system backup export destination. */
    system_backup_destination_credentials: SystemBackupDestinationCredentialConnection;
    /** All configured destinations to export system backups to. */
    system_backup_destinations: SystemBackupDestinationConnection;
    /** A history of all system backup export attempts. */
    system_backup_exports: SystemBackupExportConnection;
    /** System backup settings. */
    system_backup_setting: SystemBackupSetting;
    /** Your system backups. */
    system_backups: SystemBackupConnection;
    /** System settings. */
    system_setting: SystemSetting;
    /** Task template items. */
    task_template_items: TaskTemplateItemConnection;
    /** Task templates. */
    task_templates: TaskTemplateConnection;
    /** Tasks. */
    tasks: TaskConnection;
    /** Tax exemptions. */
    tax_exemptions: TaxExemptionConnection;
    /** Overrides of specific taxes on a per account basis. */
    tax_overrides: TaxOverrideConnection;
    /** The credentials for a tax provider. */
    tax_provider_credentials: TaxProviderCredentialConnection;
    /** Tax providers. */
    tax_providers: TaxProviderConnection;
    /** Tax transactions. */
    tax_transactions: TaxTransactionConnection;
    /** Taxes. */
    taxes: TaxConnection;
    /** Ticket categories. */
    ticket_categories: TicketCategoryConnection;
    /** Ticket comments. */
    ticket_comments: TicketCommentConnection;
    /** Ticket groups. */
    ticket_groups: TicketGroupConnection;
    /** Ticket recipients. */
    ticket_recipients: TicketRecipientConnection;
    /** Ticket replies. */
    ticket_replies: TicketReplyConnection;
    /** Ticketing settings. */
    ticketing_setting: TicketingSetting;
    /** Tickets. */
    tickets: TicketConnection;
    /** TowerCoverage integration. */
    towercoverage_configuration: TowercoverageConfiguration;
    /** TowerCoverage submissions. */
    towercoverage_submissions: TowercoverageSubmissionConnection;
    /** A list of transactions for display on an account. */
    transactions: TransactionConnection;
    /** Emails that are sent when specific conditions are met. */
    triggered_emails: TriggeredEmailConnection;
    /** Messages that are sent when specific conditions are met. */
    triggered_messages: TriggeredMessageConnection;
    /** Uninventoried MAC addresses. */
    uninventoried_mac_addresses: UninventoriedMacAddressConnection;
    /** Usage based billing policies. */
    usage_based_billing_policies: UsageBasedBillingPolicyConnection;
    /** Usage based billing policy free periods. */
    usage_based_billing_policy_free_periods: UsageBasedBillingPolicyFreePeriodConnection;
    /** Users that can login to Sonar. */
    users: UserConnection;
    /** Validate an address. This will attempt to resolve the subdivision, geocode if necessary, etc. The more information you input, the more accurate the output is likely to be. */
    validate_address: ValidatedAddress;
    /** Validate contact portal credentials. */
    validate_credential: Contact;
    /** Vehicle location histories. */
    vehicle_location_histories: VehicleLocationHistoryConnection;
    /** Vehicles. */
    vehicles: VehicleConnection;
    /** Items sold by vendors. */
    vendor_items: VendorItemConnection;
    /** Third party vendors. */
    vendors: VendorConnection;
    /** Voice Provider Rate Import Recipes */
    voice_provider_rate_import_recipes: VoiceProviderRateImportRecipeConnection;
    /** Voice Provider Rate Imports */
    voice_provider_rate_imports: VoiceProviderRateImportConnection;
    /** Voice Provider Rates. */
    voice_provider_rates: VoiceProviderRateConnection;
    /** Voice Providers. */
    voice_providers: VoiceProviderConnection;
    /** Details related to a voice service. */
    voice_service_details: VoiceServiceDetailConnection;
    /** Tax definitions that have been assigned to voice service generic parameters. */
    voice_service_generic_parameter_tax_definitions: VoiceServiceGenericParameterTaxDefinitionConnection;
    /** The relationship between a service and a tax. */
    voice_service_generic_parameter_taxes: VoiceServiceGenericParameterTaxConnection;
    /** Parameters attached to a voice service. */
    voice_service_generic_parameters: VoiceServiceGenericParameterConnection;
    /** All attempts made to send dispatched webhooks for models and events. */
    webhook_endpoint_event_dispatch_attempts: WebhookEndpointEventDispatchAttemptConnection;
    /** All dispatched webhooks for models and events. */
    webhook_endpoint_event_dispatches: WebhookEndpointEventDispatchConnection;
    /** Webhooks models and their events. */
    webhook_endpoint_events: WebhookEndpointEventConnection;
    /** Webhook endpoints. */
    webhook_endpoints: WebhookEndpointConnection;
    /** Webhook model events. */
    webhook_model_events?: Maybe<WebhookModelEventResultConnection>;
};
export type QueryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryAccount_Billing_ParametersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    grace_until?: InputMaybe<Scalars['Date']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAccount_Calix_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calix_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_json?: InputMaybe<Scalars['String']['input']>;
    cvlan?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    global_vlan?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ont_port_id?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_map?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    use_custom_json?: InputMaybe<Scalars['Boolean']['input']>;
    vlan?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryAccount_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['String']['input']>;
    event?: InputMaybe<AccountUpdateEvent>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAccount_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAccount_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAccount_StatusesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAccount_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAccount_Voice_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryAccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAch_BatchesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    ach_sequence?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    format?: InputMaybe<BankAccountProvider>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payments_after?: InputMaybe<Scalars['Datetime']['input']>;
    payments_before?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AchBatchType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAddress_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAddress_StatusesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
export type QueryAdjustment_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAlerting_Rotation_DaysArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alerting_rotation_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end_time?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAlerting_Rotation_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alerting_rotation_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_alerted_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    last_overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    last_status_change_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    next_alert_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAlerting_RotationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
export type QueryApplication_Firewall_RulesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAuth_ProvidersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth0_client_id?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AuthProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryAvalara_Tax_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['Int']['input']>;
};
export type QueryAvalara_Tax_DefinitionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_custom?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_type?: InputMaybe<Scalars['Int']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_name?: InputMaybe<Scalars['String']['input']>;
    transaction_type?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryBank_Account_Processor_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    bank_account_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<BankAccountProviderCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryBank_Account_ProcessorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<BankAccountProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryBank_AccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    bank_account_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    bank_account_type?: InputMaybe<BankAccountType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_account_number?: InputMaybe<Scalars['String']['input']>;
    name_on_account?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    routing_number?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryBilling_DefaultsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    bill_mode?: InputMaybe<BillMode>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    default_for?: InputMaybe<BillingDefaultFor>;
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    due_days?: InputMaybe<Scalars['Int']['input']>;
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryBilling_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_subsidy?: InputMaybe<Scalars['Int']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCable_Modem_Provisioner_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    cable_modem_provisioner_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<CableModemProvisionerAuthenticationCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryCable_Modem_ProvisionersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    hostname?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<CableModemProvisionerType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCalendar_IcalsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    url?: InputMaybe<Scalars['URL']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryCalix_IntegrationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    alarms_change_device_status?: InputMaybe<Scalars['Boolean']['input']>;
    alarms_create_logs?: InputMaybe<Scalars['Boolean']['input']>;
    alarms_update_ip_assignment?: InputMaybe<Scalars['Boolean']['input']>;
    bounce_ports?: InputMaybe<Scalars['Boolean']['input']>;
    commercial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    commercial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enable_ont_synchronization?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    government_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    government_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    industrial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    industrial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    org_id?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    residential_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    residential_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    senior_citizen_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    senior_citizen_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    smx_credentials?: InputMaybe<Scalars['String']['input']>;
    smx_url?: InputMaybe<Scalars['String']['input']>;
    smx_version?: InputMaybe<CalixIntegrationVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    subscriber_custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCalix_Provisioning_ListArgs = {
    calix_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_type?: InputMaybe<CalixProvisioningListType>;
    paginator?: InputMaybe<Paginator>;
    smx_credentials?: InputMaybe<Scalars['String']['input']>;
    smx_url?: InputMaybe<Scalars['String']['input']>;
    smx_version?: InputMaybe<CalixIntegrationVersion>;
};
export type QueryCall_Detail_Record_Import_RecipesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryCall_Detail_Record_ImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    call_data_record_import_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Text']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<AsyncImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryCall_Detail_RecordsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Float']['input']>;
    charge_rate?: InputMaybe<Scalars['Float']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    direction?: InputMaybe<CallDetailRecordDirection>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    length_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    matched_prefix?: InputMaybe<Scalars['String']['input']>;
    monthly_billing_completion_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    originating_number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix_type?: InputMaybe<CallDetailRecordPrefixType>;
    receiving_number?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    started_at?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryCall_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subject?: InputMaybe<Scalars['String']['input']>;
    time_in_seconds?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryCanned_RepliesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    canned_reply_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCanned_Reply_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCanned_Reply_With_Variable_ReplacementArgs = {
    canned_reply_id: Scalars['Int64Bit']['input'];
    ticket_id: Scalars['Int64Bit']['input'];
};
export type QueryCompaniesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
export type QueryCompany_DepartmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    department_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['Numeric']['input']>;
    number_formatted?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryContactsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
export type QueryContract_TemplatesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryContractsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_message?: InputMaybe<Scalars['Text']['input']>;
    expiration_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    handwritten_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    unique_link_key?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCore_Credit_CardsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credit_card_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    credit_card_type?: InputMaybe<CreditCardType>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    expiration_month?: InputMaybe<Scalars['Int']['input']>;
    expiration_year?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_number?: InputMaybe<Scalars['String']['input']>;
    name_on_card?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCore_InvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCore_TransactionsArgs = {
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
};
export type QueryCredit_Card_Processor_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<CreditCardProviderCredential>;
    credit_card_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryCredit_Card_ProcessorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amex?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dankort?: InputMaybe<Scalars['Boolean']['input']>;
    dinersclub?: InputMaybe<Scalars['Boolean']['input']>;
    discover?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    forbrugsforeningen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jcb?: InputMaybe<Scalars['Boolean']['input']>;
    maestro?: InputMaybe<Scalars['Boolean']['input']>;
    mastercard?: InputMaybe<Scalars['Boolean']['input']>;
    moto_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    provider?: InputMaybe<CreditCardProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unionpay?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    visa?: InputMaybe<Scalars['Boolean']['input']>;
    visaelectron?: InputMaybe<Scalars['Boolean']['input']>;
};
export type QueryCredit_CardsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credit_card_processor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    credit_card_type?: InputMaybe<CreditCardType>;
    customer_profile_id?: InputMaybe<Scalars['String']['input']>;
    expiration_month?: InputMaybe<Scalars['Int']['input']>;
    expiration_year?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    masked_number?: InputMaybe<Scalars['String']['input']>;
    name_on_card?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    token?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCreditsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creditable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    creditable_type?: InputMaybe<CreditableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryCustom_FieldsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_type?: InputMaybe<CustomfielddataableType>;
    enum_options?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    required?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<CustomFieldType>;
    unique?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDaily_Aggregate_ValuesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    context?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    key?: InputMaybe<AggregateKey>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['Float']['input']>;
};
export type QueryData_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    download_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    technology_code?: InputMaybe<TechnologyCode>;
    telrad_global_service_profile_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    upload_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    usage_based_billing_policy_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryData_UsageArgs = {
    account_id: Scalars['Int64Bit']['input'];
    end_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    time?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryData_Usage_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billable_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    billable_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_time?: InputMaybe<Scalars['Datetime']['input']>;
    free_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    free_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_cap_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_available_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_remainder_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_unconsumed_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    rollover_used_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Datetime']['input']>;
    top_off_total_at_close_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryData_Usage_Top_OffsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_history_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryDelinquency_ExclusionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    month?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    year?: InputMaybe<Scalars['Int']['input']>;
};
export type QueryDepartmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDeployment_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDeposit_SlipsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    bank_account_line?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    memo?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDevice_Interface_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mac_address?: InputMaybe<Scalars['MacAddress']['input']>;
    metadata?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    speed_mbps_in?: InputMaybe<Scalars['Int']['input']>;
    speed_mbps_out?: InputMaybe<Scalars['Int']['input']>;
    type?: InputMaybe<Scalars['String']['input']>;
    up?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDhcp_Server_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<DhcpServerAuthenticationCredential>;
    dhcp_server_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryDhcp_Server_IdentifiersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDhcp_ServersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    api_key?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serves_all_pools?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<DhcpServerType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    use_source_mac_address?: InputMaybe<Scalars['Boolean']['input']>;
};
export type QueryDid_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDid_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDid_Import_RecipesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryDidsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryDisbursement_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_used?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disbursable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    disbursable_type?: InputMaybe<DisbursableType>;
    disbursement_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event?: InputMaybe<DisbursementDetailEvent>;
    external_id?: InputMaybe<Scalars['String']['input']>;
    fractional_amount?: InputMaybe<Scalars['Int']['input']>;
    fractional_amount_used?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_fee?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDisbursementsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    bank_account?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    external_id?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    processed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule?: InputMaybe<DisbursementSchedule>;
    schedule_amount?: InputMaybe<Scalars['Int']['input']>;
    schedule_factor?: InputMaybe<Scalars['Int']['input']>;
    schedule_unit?: InputMaybe<DisbursementScheduleUnit>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<DisbursementStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDisconnection_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnected_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnected_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    serviceable_address_reference_record?: InputMaybe<Scalars['Text']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryDiscountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryDrive_TimesArgs = {
    locations: Array<InputMaybe<DriveTimeLocation>>;
};
export type QueryEmail_Address_LookupArgs = {
    check_if_available?: InputMaybe<Scalars['Boolean']['input']>;
    email_address: Scalars['String']['input'];
};
export type QueryEmail_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryEmail_ClicksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    url?: InputMaybe<Scalars['URL']['input']>;
    user_agent?: InputMaybe<Scalars['String']['input']>;
};
export type QueryEmail_DomainsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dkim?: InputMaybe<Scalars['Boolean']['input']>;
    dns_requirements?: InputMaybe<Scalars['String']['input']>;
    domain?: InputMaybe<Scalars['DomainName']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ready_for_migration?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spf?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    verified?: InputMaybe<Scalars['Boolean']['input']>;
};
export type QueryEmail_LocationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    postal_code?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    timezone?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryEmail_Message_ContentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    language?: InputMaybe<Language>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subject?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryEmail_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    saved_message_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryEmail_OpensArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    email_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_agent?: InputMaybe<Scalars['String']['input']>;
};
export type QueryEmail_VariablesArgs = {
    trigger?: InputMaybe<EmailTrigger>;
};
export type QueryEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryEpcsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identifier?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryExpiring_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    times_to_run?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryExternal_Marketing_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    external_marketing_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    key?: InputMaybe<ExternalMarketingProviderAuthCredential>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryExternal_Marketing_ProvidersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<ExternalMarketingProviderType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryFcc_Form_477_ReportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    format?: InputMaybe<FccForm477Format>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryFibermap_IntegrationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    always_create_new_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    api_token?: InputMaybe<Scalars['String']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    import_accounts_and_contacts?: InputMaybe<Scalars['Boolean']['input']>;
    import_serviceable_addresses?: InputMaybe<Scalars['Boolean']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryFibermap_PlansArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    build?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    drop?: InputMaybe<Scalars['String']['input']>;
    fibermap_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_plan_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_project_name?: InputMaybe<Scalars['String']['input']>;
    fibermap_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    height_in_meters?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    map_overlay_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mapped_at?: InputMaybe<Scalars['Datetime']['input']>;
    mapping_user?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryFibermap_Service_LocationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    child_properties_json?: InputMaybe<Scalars['String']['input']>;
    child_vetro_id?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fibermap_integration_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fibermap_plan_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    properties_json?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vetro_id?: InputMaybe<Scalars['String']['input']>;
};
export type QueryFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryFind_Address_By_Fibermap_Service_LocationArgs = {
    country: Scalars['String']['input'];
    fibermap_service_location_id: Scalars['Int64Bit']['input'];
};
export type QueryFractional_DebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryFractional_Tax_TransactionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_taxed?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_transaction_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryGeneral_Ledger_CodesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    code?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryGeneral_SearchArgs = {
    entities: Array<InputMaybe<Scalars['String']['input']>>;
    paginator?: InputMaybe<Paginator>;
    search: Scalars['String']['input'];
};
export type QueryGeneric_Inventory_AssigneesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryGeo_Tax_ZonesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
    zip_partial_match?: InputMaybe<Scalars['Boolean']['input']>;
};
export type QueryGeofencesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryGet_Gps_Tracking_Provider_VehiclesArgs = {
    filter_assigned: Scalars['Boolean']['input'];
    gps_tracking_provider_id: Scalars['Int64Bit']['input'];
};
export type QueryGet_Next_Ip_Address_In_Ip_PoolArgs = {
    ip_pool_id: Scalars['Int64Bit']['input'];
};
export type QueryGet_Next_Subnet_In_SubnetArgs = {
    cidr_size: Scalars['Int']['input'];
    subnet_id: Scalars['Int64Bit']['input'];
};
export type QueryGet_Next_Subnet_In_SupernetArgs = {
    cidr_size: Scalars['Int']['input'];
    supernet_id: Scalars['Int64Bit']['input'];
};
export type QueryGlobal_Inventory_Model_Min_MaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    maximum?: InputMaybe<Scalars['Int']['input']>;
    minimum?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryGps_Tracking_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    key?: InputMaybe<GpsTrackingProviderAuthCredential>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryGps_Tracking_ProvidersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    oauth_required?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<GpsTrackingProviderType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryHandwritten_SignaturesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contact_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    contact_name?: InputMaybe<Scalars['String']['input']>;
    contact_role?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signer_ip?: InputMaybe<Scalars['IP']['input']>;
    signer_name?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIcmp_ResultsArgs = {
    end_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    inventory_item_id: Scalars['Int64Bit']['input'];
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIdentity_Provider_Active_Directory_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    cert_auth?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disable_cache?: InputMaybe<Scalars['Boolean']['input']>;
    domain_aliases?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icon_url?: InputMaybe<Scalars['URL']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ips?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    kerberos?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_url?: InputMaybe<Scalars['URL']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIdentity_Provider_Google_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    client_id?: InputMaybe<Scalars['String']['input']>;
    client_secret?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIdentity_Provider_Microsoft_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    client_id?: InputMaybe<Scalars['String']['input']>;
    client_secret?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIdentity_Provider_Saml_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth_domains?: InputMaybe<Scalars['String']['input']>;
    certificate?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debug?: InputMaybe<Scalars['Boolean']['input']>;
    digest_algorithm?: InputMaybe<SamlDigestAlgorithm>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    identity_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    protocol_binding?: InputMaybe<SamlProtocolBinding>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sign_in_endpoint?: InputMaybe<Scalars['URL']['input']>;
    sign_out_endpoint?: InputMaybe<Scalars['URL']['input']>;
    sign_saml_request?: InputMaybe<Scalars['Boolean']['input']>;
    signature_algorithm?: InputMaybe<SamlSignatureAlgorithm>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id_attribute?: InputMaybe<Scalars['URL']['input']>;
};
export type QueryIdentity_ProvidersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auth0_connection_id?: InputMaybe<Scalars['String']['input']>;
    auth0_connection_name?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_name?: InputMaybe<Scalars['String']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<IdentityProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_type?: InputMaybe<ImportrecipeableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInbound_MailboxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    append_signature?: InputMaybe<Scalars['Boolean']['input']>;
    auto_reply?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enable_slack_integration?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    from_mailbox?: InputMaybe<Scalars['String']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    post_email_body_to_slack?: InputMaybe<Scalars['Boolean']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    send_auto_reply?: InputMaybe<Scalars['Boolean']['input']>;
    signature?: InputMaybe<Scalars['Text']['input']>;
    slack_webhook_url?: InputMaybe<Scalars['URL']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInline_Device_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<InlineDeviceAuthenticationCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inline_device_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryInline_DevicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_subnets?: InputMaybe<Scalars['Boolean']['input']>;
    bandwidth_collection_queued?: InputMaybe<Scalars['Boolean']['input']>;
    bandwidth_collection_start?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<InlineDeviceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInstance_Management_RequestsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    authorization_valid_until?: InputMaybe<Scalars['Date']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reason?: InputMaybe<Scalars['Text']['input']>;
    responded_at?: InputMaybe<Scalars['Datetime']['input']>;
    responded_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInstance_Service_FundsArgs = {
    instance_service_fund_type?: InputMaybe<InstanceServiceFundType>;
};
export type QueryIntegration_Field_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integration_field_type?: InputMaybe<IntegrationFieldType>;
    integrationconfigurable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_type?: InputMaybe<Scalars['String']['input']>;
    inventory_model_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIntegration_Service_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_map?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_template_name?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInternal_LocationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInventory_Item_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    event?: InputMaybe<InventoryItemUpdateEvent>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInventory_LocationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_shipping_location?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInventory_Model_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInventory_Model_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryInventory_Model_FieldsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    regexp?: InputMaybe<Scalars['String']['input']>;
    required?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_type?: InputMaybe<InventoryModelFieldSecondaryType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<InventoryModelFieldType>;
    unique?: InputMaybe<Uniqueness>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInventory_Model_Min_MaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    maximum?: InputMaybe<Scalars['Int']['input']>;
    minimum?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInventory_ModelsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    device_type?: InputMaybe<InventoryModelDeviceType>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_sim_type?: InputMaybe<LteProviderType>;
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model_name?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Int']['input']>;
    protocol?: InputMaybe<Protocol>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInvoice_AttachmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInvoice_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryInvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIp_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    ipassignmenthistoryable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmenthistoryable_type?: InputMaybe<IpassignmenthistoryableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    unique_identifier?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryIp_PoolsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_range?: InputMaybe<Scalars['IpRange']['input']>;
    ips_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryJob_Available_TimesArgs = {
    end_datetime: Scalars['Datetime']['input'];
    job_id: Scalars['Int64Bit']['input'];
    require_all_users?: InputMaybe<Scalars['Boolean']['input']>;
    start_datetime: Scalars['Datetime']['input'];
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
export type QueryJob_Check_InsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    check_in_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    check_out_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    checked_in_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    checked_out_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryJob_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryJob_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryJobsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completed_successfully?: InputMaybe<Scalars['Boolean']['input']>;
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_type?: InputMaybe<JobbableType>;
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    skips_validation?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryLocal_PrefixesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix?: InputMaybe<Scalars['Numeric']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryLooker_Explore_LicensesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryLooker_View_LicensesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryLte_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<LteProviderAuthenticationCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    lte_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryLte_ProvidersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deactivate_on_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    floating_license?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<LteProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    write_pdn_address_allocation?: InputMaybe<Scalars['Boolean']['input']>;
};
export type QueryManufacturersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryMap_OverlaysArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contents?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    file_type?: InputMaybe<MapOverlayFileType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    radius?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryMap_Overlays_Within_BoxArgs = {
    east: Scalars['Float']['input'];
    north: Scalars['Float']['input'];
    south: Scalars['Float']['input'];
    west: Scalars['Float']['input'];
};
export type QueryMass_EmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subject?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryMessage_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryMonthly_Billing_CompletionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNetflow_Allowed_SubnetsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    netflow_endpoint_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNetflow_EndpointsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    hostname?: InputMaybe<Scalars['DomainName']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    whitelist_mode?: InputMaybe<Scalars['Boolean']['input']>;
};
export type QueryNetflow_WhitelistsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    netflow_endpoint_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNetwork_Monitoring_GraphsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stacked?: InputMaybe<Scalars['Boolean']['input']>;
    type?: InputMaybe<NetworkMonitoringGraphType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNetwork_Monitoring_TemplatesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    collect_interface_statistics?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icmp_latency_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_loss_threshold?: InputMaybe<Scalars['Int']['input']>;
    icmp_monitoring?: InputMaybe<Scalars['Boolean']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp3_auth_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    snmp3_context_engineid?: InputMaybe<Scalars['Text']['input']>;
    snmp3_context_name?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    snmp_community?: InputMaybe<Scalars['Text']['input']>;
    snmp_version?: InputMaybe<SnmpVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNetwork_Site_Serviceable_Address_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNetwork_SitesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    height_in_meters?: InputMaybe<Scalars['Float']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNon_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryOrder_Group_UsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_approver?: InputMaybe<Scalars['Boolean']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryOrder_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    automatic_approval_threshold?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryOverage_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    gigabytes?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPackage_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPackagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollup_services?: InputMaybe<Scalars['Boolean']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    valid_for_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryPay_Pal_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    client_id?: InputMaybe<Scalars['String']['input']>;
    client_secret?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryPhone_Number_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_capable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPhone_NumbersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contact_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['Numeric']['input']>;
    number_formatted?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_opt_in?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPollersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    api_key?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    icmp_time_taken?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    results_last_received?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_time_taken?: InputMaybe<Scalars['Int']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    time_of_last_account_poll?: InputMaybe<Scalars['Datetime']['input']>;
    time_of_last_infrastructure_poll?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    version?: InputMaybe<Scalars['String']['input']>;
};
export type QueryPrint_To_Mail_BatchesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    batch_type?: InputMaybe<PrintToMailBatchType>;
    billing_completion_date?: InputMaybe<Scalars['Date']['input']>;
    cost?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_method?: InputMaybe<PrintToMailPrintMethod>;
    print_type?: InputMaybe<PrintToMailPrintType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PrintToMailBatchStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPrint_To_Mail_Document_Cost_EstimateArgs = {
    number_of_digital_pages: Scalars['Int']['input'];
    print_method: PrintToMailPrintMethod;
    print_type: PrintToMailPrintType;
};
export type QueryPrint_To_Mail_Order_ErrorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    error_message?: InputMaybe<Scalars['String']['input']>;
    error_type?: InputMaybe<PrintToMailOrderErrorType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_to_mail_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    resolved?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPrint_To_Mail_OrdersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_status_check?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    print_to_mail_batch_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    provider_order_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PrintToMailOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryPrinted_Invoice_BatchesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryPurchase_Order_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calculated_tax?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    generic_quantity_received?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderItemStatus>;
    units?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryPurchase_OrdersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    approved_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    canceled_at?: InputMaybe<Scalars['Datetime']['input']>;
    canceled_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    currency?: InputMaybe<Currency>;
    external_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_paid?: InputMaybe<Scalars['Boolean']['input']>;
    last_status_change?: InputMaybe<Scalars['Datetime']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    order_number?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendor_name?: InputMaybe<Scalars['String']['input']>;
};
export type QueryRadius_AccountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    password?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
export type QueryRadius_Group_Reply_AttributesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    operator?: InputMaybe<RadiusReplyOperator>;
    paginator?: InputMaybe<Paginator>;
    radius_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reply?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryRadius_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryRadius_Server_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<RadiusServerAuthCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    radius_server_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryRadius_ServersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    coa_secret?: InputMaybe<Scalars['String']['input']>;
    collect_bandwidth?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    send_change_auth_on_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    send_change_auth_on_service_change?: InputMaybe<Scalars['Boolean']['input']>;
    send_change_auth_on_status_change?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<RadiusServerType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryRadius_Session_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_session_id?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    called_station_id?: InputMaybe<Scalars['String']['input']>;
    calling_station_id?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnect_requested?: InputMaybe<Scalars['Datetime']['input']>;
    end?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    nas_ip_address?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    radius_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    real_session_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Datetime']['input']>;
    terminate_reason?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryRate_CentersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryRecurring_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryRefunded_PaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    processor_response_message?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryReverse_GeocodeArgs = {
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
};
export type QueryReversed_PaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryRolesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    applied_permissions?: InputMaybe<Array<InputMaybe<Permission>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySaved_Message_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryScheduleArgs = {
    date: Scalars['Date']['input'];
};
export type QuerySchedule_AddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<ScheduleAddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
export type QuerySchedule_AvailabilitiesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    available?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    geofence_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
export type QuerySchedule_Availability_Day_TimesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_day?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end_time?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule_availability_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySchedule_Blocker_Day_TimesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end_time?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule_blocker_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySchedule_Blocker_OverridesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule_blocker_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QuerySchedule_BlockersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
export type QuerySchedule_Time_OffsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryScheduled_Event_Account_Voice_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_event_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryScheduled_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    datetime?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    event?: InputMaybe<ScheduledEventEvent>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_event_object_id?: InputMaybe<Scalars['String']['input']>;
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySearch_FiltersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_users?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_type?: InputMaybe<Scalars['String']['input']>;
    filter?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QuerySendgrid_Dynamic_Template_External_ReferencesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_content_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sendgrid_identifier?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    triggered_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryService_MetadataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryService_Metadata_ValuesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_metadata_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryService_Tax_DefinitionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    discount?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryService_TaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    exemption_amount?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryServiceable_Address_Account_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySignaturesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    department_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mass_default?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_signature?: InputMaybe<SmsContactPrefix>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    triggered_default?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySms_Message_ContentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    non_portal_body?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    portal_body?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySms_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_trigger?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySms_Outbound_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    category?: InputMaybe<SmsOutboundCategory>;
    cost_in_hundredths?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    destination_country?: InputMaybe<Scalars['String']['input']>;
    error_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_status_check?: InputMaybe<Scalars['Datetime']['input']>;
    message_text?: InputMaybe<Scalars['String']['input']>;
    mobile_number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider_message_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    segments?: InputMaybe<Scalars['Int']['input']>;
    smsable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    smsable_type?: InputMaybe<SmsableType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SmsOutboundStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySmtp_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    destination_ip?: InputMaybe<Scalars['IP']['input']>;
    email_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    response?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    size?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    source_ip?: InputMaybe<Scalars['IP']['input']>;
    type?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySnmp_Interface_Numeric_ResultsArgs = {
    end_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    inventory_item_id: Scalars['Int64Bit']['input'];
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    time?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySnmp_Oid_Threshold_ViolationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_oid_threshold_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySnmp_Oid_ThresholdsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    operator?: InputMaybe<RangeOperator>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_oid_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    time_period_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QuerySnmp_OidsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_scale?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_as_table?: InputMaybe<Scalars['Boolean']['input']>;
    divide_by?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_graph_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    oid?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unit_of_measurement?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySnmp_OverridesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp3_auth_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    snmp3_context_engineid?: InputMaybe<Scalars['Text']['input']>;
    snmp3_context_name?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_passphrase?: InputMaybe<Scalars['Text']['input']>;
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    snmp_community?: InputMaybe<Scalars['Text']['input']>;
    snmp_version?: InputMaybe<SnmpVersion>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySnmp_ResultsArgs = {
    end_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    inventory_item_id: Scalars['Int64Bit']['input'];
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySplice_ReportArgs = {
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryStored_FiltersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    field?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    operator?: InputMaybe<StoredFilterOperator>;
    order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryStored_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_view_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryStored_View_UsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    location?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_view_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryStored_ViewsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_global?: InputMaybe<Scalars['Boolean']['input']>;
    location?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sort_column?: InputMaybe<Scalars['String']['input']>;
    sort_direction?: InputMaybe<SortDirection>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<StoredViewType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySubnetsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    supernet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<SubnetType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySubscriptionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_suspended?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subscribable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    subscribable_type?: InputMaybe<SubscribableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QuerySupernetsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySystem_Backup_Destination_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<SystemBackupDestinationProviderCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    system_backup_destination_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['Text']['input']>;
};
export type QuerySystem_Backup_DestinationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    base_path?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_export_at?: InputMaybe<Scalars['Datetime']['input']>;
    last_export_status?: InputMaybe<SystemBackupExportStatus>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<SystemBackupDestinationProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySystem_Backup_ExportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    pruned?: InputMaybe<Scalars['Boolean']['input']>;
    response?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SystemBackupExportStatus>;
    system_backup_destination_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    system_backup_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QuerySystem_BackupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    password?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SystemBackupStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTask_Template_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['String']['input']>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTask_TemplatesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryTax_ExemptionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jurisdictions?: InputMaybe<Array<InputMaybe<TaxJurisdiction>>>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTax_OverridesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTax_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<TaxProviderCredentialType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
export type QueryTax_ProvidersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    type?: InputMaybe<TaxProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTax_TransactionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_taxed?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    taxtransactionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxtransactionable_type?: InputMaybe<TaxtransactionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTicket_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTicket_CommentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryTicket_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    private?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTicket_RecipientsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTicket_RepliesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    author?: InputMaybe<Scalars['String']['input']>;
    author_email?: InputMaybe<Scalars['EmailAddress']['input']>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    headers?: InputMaybe<Scalars['Text']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    incoming?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    raw_body?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature?: InputMaybe<Scalars['Text']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryTowercoverage_SubmissionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    full_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    note?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    raw_xml?: InputMaybe<Scalars['Text']['input']>;
    received_at?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    success?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTransactionsArgs = {
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
};
export type QueryTriggered_EmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<EmailTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryUninventoried_Mac_AddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mac_address?: InputMaybe<Scalars['MacAddress']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryUsage_Based_Billing_PoliciesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_purchase_of_additional_capacity_during_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    assess_charges_at_end_of_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    cap_in_gigabytes?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryUsage_Based_Billing_Policy_Free_PeriodsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    usage_based_billing_policy_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
export type QueryValidate_AddressArgs = {
    city?: InputMaybe<Scalars['String']['input']>;
    country: Country;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1: Scalars['String']['input'];
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    subdivision?: InputMaybe<Scalars['String']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
export type QueryValidate_CredentialArgs = {
    password: Scalars['String']['input'];
    username: Scalars['String']['input'];
};
export type QueryVehicle_Location_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    odometer?: InputMaybe<Scalars['Int']['input']>;
    odometer_um?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    speed?: InputMaybe<Scalars['Int']['input']>;
    speed_um?: InputMaybe<Scalars['String']['input']>;
    status?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vehicle_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryVehiclesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    gps_tracking_always?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_friday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_monday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_saturday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_sunday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_thursday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_tuesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_wednesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_end_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    gps_tracking_start_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_timezone?: InputMaybe<Timezone>;
    gps_tracking_uid?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    manufacturer?: InputMaybe<Scalars['String']['input']>;
    model?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vin?: InputMaybe<Scalars['String']['input']>;
    year?: InputMaybe<Scalars['Int']['input']>;
};
export type QueryVendor_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_type?: InputMaybe<VendoritemableType>;
};
export type QueryVendorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    automate_approved_purchase_orders?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    currency?: InputMaybe<Currency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryVoice_Provider_Rate_Import_RecipesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    charge_percent?: InputMaybe<Scalars['Float']['input']>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryVoice_Provider_Rate_ImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    charge_percent?: InputMaybe<Scalars['Float']['input']>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Text']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<AsyncImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryVoice_Provider_RatesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    base_rate?: InputMaybe<Scalars['Float']['input']>;
    charge_percent?: InputMaybe<Scalars['Float']['input']>;
    charge_rate?: InputMaybe<Scalars['Float']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryVoice_ProvidersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryVoice_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_local_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_long_distance_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    first_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_toll_free_rate_per_minute_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    local_minutes?: InputMaybe<Scalars['Int']['input']>;
    long_distance_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollup_generic_parameters?: InputMaybe<Scalars['Boolean']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    show_call_detail_records_on_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    sub_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    sub_type?: InputMaybe<VoiceServiceDetailSubType>;
    unlimited_local_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    unlimited_long_distance_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
export type QueryVoice_Service_Generic_Parameter_Tax_DefinitionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    discount?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryVoice_Service_Generic_Parameter_TaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    exemption_amount?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryVoice_Service_Generic_ParametersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    proratable?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<VoiceServiceGenericParameterType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryWebhook_Endpoint_Event_Dispatch_AttemptsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    response?: InputMaybe<Scalars['Text']['input']>;
    response_at?: InputMaybe<Scalars['Datetime']['input']>;
    response_code?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<WebhookEndpointEventDispatchAttemptStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_event_dispatch_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryWebhook_Endpoint_Event_DispatchesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_attempted_at?: InputMaybe<Scalars['Datetime']['input']>;
    last_status?: InputMaybe<WebhookEndpointEventDispatchAttemptStatus>;
    paginator?: InputMaybe<Paginator>;
    payload?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sent_at?: InputMaybe<Scalars['Datetime']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    test?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_event_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryWebhook_Endpoint_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    event?: InputMaybe<WebhookEndpointModelEvent>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
export type QueryWebhook_EndpointsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    endpoint?: InputMaybe<Scalars['HttpsUrl']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    general_search_mode?: InputMaybe<GeneralSearchMode>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS account. */
export type RadiusAccount = AccessloggableInterface & IpassignmentableInterface & LoggableInterface & NoteableInterface & SearchableInterface & {
    __typename: 'RadiusAccount';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A password. */
    password?: Maybe<Scalars['Text']['output']>;
    /** The history of a RADIUS session. */
    radius_session_histories: RadiusSessionHistoryConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A username, used for authentication. */
    username: Scalars['String']['output'];
};
/** A RADIUS account. */
export type RadiusAccountAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS account. */
export type RadiusAccountAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS account. */
export type RadiusAccountIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS account. */
export type RadiusAccountLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS account. */
export type RadiusAccountNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS account. */
export type RadiusAccountRadius_Session_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_session_id?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    called_station_id?: InputMaybe<Scalars['String']['input']>;
    calling_station_id?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disconnect_requested?: InputMaybe<Scalars['Datetime']['input']>;
    end?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    nas_ip_address?: InputMaybe<Scalars['IP']['input']>;
    paginator?: InputMaybe<Paginator>;
    radius_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    real_session_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Datetime']['input']>;
    terminate_reason?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `RadiusAccountConnection` type. */
export type RadiusAccountConnection = {
    __typename: 'RadiusAccountConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RadiusAccount>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A RADIUS group. */
export type RadiusGroup = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'RadiusGroup';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An account group. */
    account_groups: AccountGroupConnection;
    /** The types of account statuses for accounts that are part of this grouping. */
    account_status: AddressListAccountStatus;
    /** The status of an account. */
    account_statuses: AccountStatusConnection;
    /** The account type. */
    account_types: AccountTypeConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The delinquency state for accounts that are part of this grouping. */
    delinquency: AddressListDelinquency;
    /** Whether or not this is a fall through group. */
    fall_through: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The RADIUS priority. */
    priority: Scalars['Int']['output'];
    /** A RADIUS group reply attribute. */
    radius_group_reply_attributes: RadiusGroupReplyAttributeConnection;
    /** A service. */
    services: ServiceConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A usage based billing policy. */
    usage_based_billing_policies: UsageBasedBillingPolicyConnection;
};
/** A RADIUS group. */
export type RadiusGroupAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupAccount_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupAccount_StatusesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupAccount_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupRadius_Group_Reply_AttributesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    operator?: InputMaybe<RadiusReplyOperator>;
    paginator?: InputMaybe<Paginator>;
    radius_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reply?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A RADIUS group. */
export type RadiusGroupUsage_Based_Billing_PoliciesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_purchase_of_additional_capacity_during_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    assess_charges_at_end_of_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    cap_in_gigabytes?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `RadiusGroupConnection` type. */
export type RadiusGroupConnection = {
    __typename: 'RadiusGroupConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RadiusGroup>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A RADIUS group reply attribute. */
export type RadiusGroupReplyAttribute = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'RadiusGroupReplyAttribute';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A RADIUS reply operator. */
    operator: RadiusReplyOperator;
    /** A RADIUS group. */
    radius_group?: Maybe<RadiusGroup>;
    /** The ID of a `RadiusGroup`. */
    radius_group_id: Scalars['Int64Bit']['output'];
    /** A RADIUS reply. */
    reply: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A RADIUS group reply attribute. */
export type RadiusGroupReplyAttributeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS group reply attribute. */
export type RadiusGroupReplyAttributeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS group reply attribute. */
export type RadiusGroupReplyAttributeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS group reply attribute. */
export type RadiusGroupReplyAttributeRadius_GroupArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `RadiusGroupReplyAttributeConnection` type. */
export type RadiusGroupReplyAttributeConnection = {
    __typename: 'RadiusGroupReplyAttributeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RadiusGroupReplyAttribute>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A RADIUS reply operator. */
export declare enum RadiusReplyOperator {
    /** := */
    ColonEquals = "COLON_EQUALS",
    /** = */
    Equals = "EQUALS",
    /** += */
    PlusEquals = "PLUS_EQUALS"
}
/** A RADIUS server. */
export type RadiusServer = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'RadiusServer';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The secret used to send a change of authorization to this device. */
    coa_secret?: Maybe<Scalars['String']['output']>;
    /** Whether or not Sonar should track bandwidth usage data from this RADIUS server. */
    collect_bandwidth: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IPv4/IPv6 address. */
    ip_address: Scalars['IP']['output'];
    /** The date and time this device was last synchronized. */
    last_synchronized?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A RADIUS server credential. */
    radius_server_credentials: RadiusServerCredentialConnection;
    /** Send a change of authorization on account delinquency to this device. */
    send_change_auth_on_delinquency: Scalars['Boolean']['output'];
    /** Send a change of authorization on account service change to this device. */
    send_change_auth_on_service_change: Scalars['Boolean']['output'];
    /** Send a change of authorization on account status change to this device. */
    send_change_auth_on_status_change: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status?: Maybe<ProvisioningDeviceStatus>;
    /** A message describing what caused the current status of this device. */
    status_message?: Maybe<Scalars['String']['output']>;
    /** Whether or not a synchronization request is queued. */
    synchronization_queued: Scalars['Boolean']['output'];
    /** The date/time that synchronization started. */
    synchronization_start?: Maybe<Scalars['Datetime']['output']>;
    /** The type. */
    type: RadiusServerType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A RADIUS server. */
export type RadiusServerAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS server. */
export type RadiusServerLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS server. */
export type RadiusServerNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS server. */
export type RadiusServerRadius_Server_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<RadiusServerAuthCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    radius_server_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A RADIUS server authentication credential. */
export declare enum RadiusServerAuthCredential {
    /** FreeRADIUS COA Port. */
    FreeradiusMysqlCoaPort = "FREERADIUS_MYSQL_COA_PORT",
    /** FreeRADIUS MySQL database name. */
    FreeradiusMysqlDatabaseName = "FREERADIUS_MYSQL_DATABASE_NAME",
    /** FreeRADIUS MySQL database password. */
    FreeradiusMysqlDatabasePassword = "FREERADIUS_MYSQL_DATABASE_PASSWORD",
    /** FreeRADIUS MySQL database port. */
    FreeradiusMysqlDatabasePort = "FREERADIUS_MYSQL_DATABASE_PORT",
    /** FreeRADIUS MySQL database username. */
    FreeradiusMysqlDatabaseUsername = "FREERADIUS_MYSQL_DATABASE_USERNAME"
}
/** The connection wrapper around the `RadiusServerConnection` type. */
export type RadiusServerConnection = {
    __typename: 'RadiusServerConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RadiusServer>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A RADIUS server credential. */
export type RadiusServerCredential = AccessloggableInterface & LoggableInterface & {
    __typename: 'RadiusServerCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The credential name. */
    credential: RadiusServerAuthCredential;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A RADIUS server. */
    radius_server?: Maybe<RadiusServer>;
    /** The ID of a `RadiusServer`. */
    radius_server_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** A RADIUS server credential. */
export type RadiusServerCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS server credential. */
export type RadiusServerCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A RADIUS server credential. */
export type RadiusServerCredentialRadius_ServerArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    coa_secret?: InputMaybe<Scalars['String']['input']>;
    collect_bandwidth?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    send_change_auth_on_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    send_change_auth_on_service_change?: InputMaybe<Scalars['Boolean']['input']>;
    send_change_auth_on_status_change?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<RadiusServerType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `RadiusServerCredentialConnection` type. */
export type RadiusServerCredentialConnection = {
    __typename: 'RadiusServerCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RadiusServerCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** RADIUS server credentials. */
export type RadiusServerCredentialInput = {
    /** A RADIUS server credential. */
    credential: RadiusServerAuthCredential;
    /** The value of the RADIUS server credential. */
    value: Scalars['String']['input'];
};
/** A RADIUS server type. */
export declare enum RadiusServerType {
    /** FreeRADIUS MySQL. */
    FreeradiusMysql = "FREERADIUS_MYSQL"
}
/** The history of a RADIUS session. */
export type RadiusSessionHistory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'RadiusSessionHistory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Account session ID. */
    account_session_id: Scalars['String']['output'];
    /** Called station ID. */
    called_station_id?: Maybe<Scalars['String']['output']>;
    /** Calling station ID. */
    calling_station_id?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The time that a disconnect was requested. */
    disconnect_requested?: Maybe<Scalars['Datetime']['output']>;
    /** The end. */
    end?: Maybe<Scalars['Datetime']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An IPv4/IPv6 address. */
    ip_address?: Maybe<Scalars['IP']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** The IP address of the NAS. */
    nas_ip_address?: Maybe<Scalars['IP']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A RADIUS account. */
    radius_account?: Maybe<RadiusAccount>;
    /** The ID of a `RadiusAccount`. */
    radius_account_id: Scalars['Int64Bit']['output'];
    /** The real session ID. */
    real_session_id?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start. */
    start: Scalars['Datetime']['output'];
    /** The reason for the session termination. */
    terminate_reason?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The history of a RADIUS session. */
export type RadiusSessionHistoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The history of a RADIUS session. */
export type RadiusSessionHistoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The history of a RADIUS session. */
export type RadiusSessionHistoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The history of a RADIUS session. */
export type RadiusSessionHistoryRadius_AccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    password?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `RadiusSessionHistoryConnection` type. */
export type RadiusSessionHistoryConnection = {
    __typename: 'RadiusSessionHistoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RadiusSessionHistory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An operator to use when searching for values in a specific range. */
export declare enum RangeOperator {
    /** Equal to */
    Eq = "EQ",
    /** Greater than */
    Gt = "GT",
    /** Greater than or equal to */
    Gte = "GTE",
    /** Less than */
    Lt = "LT",
    /** Less than or equal to */
    Lte = "LTE",
    /** Not equal to */
    Neq = "NEQ"
}
/** A rate center. */
export type RateCenter = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'RateCenter';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this entity is a default entry. */
    default: Scalars['Boolean']['output'];
    /** A recipe for importing DIDs. */
    did_import_recipes: DidImportRecipeConnection;
    /** A direct inward dial (DID). */
    dids: DidConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A rate center. */
export type RateCenterAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A rate center. */
export type RateCenterDid_Import_RecipesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A rate center. */
export type RateCenterDidsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A rate center. */
export type RateCenterLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A rate center. */
export type RateCenterNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `RateCenterConnection` type. */
export type RateCenterConnection = {
    __typename: 'RateCenterConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RateCenter>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The details of the inventory items that will be created from this purchase order item. */
export type ReceivePurchaseOrderItemMutationInput = {
    /** The quantity of a generic purchase order item to receive at a particular inventory location. */
    generic_item_quantity?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of the entity that this inventory item is assigned to. */
    inventoryitemable_id: Scalars['Int64Bit']['input'];
    /** The type of entity that this inventory item is assigned to. */
    inventoryitemable_type: InventoryitemableType;
    /** The contents of the fields for the items being added. */
    items?: InputMaybe<Array<InputMaybe<InventoryItemFieldsMutationInput>>>;
    /** The ID of a purchase order item */
    purchase_order_item_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the receivePurchaseOrderItems mutation. */
export type ReceivePurchaseOrderItemsMutationInput = {
    /** The purchase order items to be received at an inventory location. */
    items?: InputMaybe<Array<InputMaybe<ReceivePurchaseOrderItemMutationInput>>>;
};
/** A recently viewed entity. */
export type RecentItem = AccessloggableInterface & LoggableInterface & {
    __typename: 'RecentItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The entity associated with a `RecentItem` entry. */
    recentitemable?: Maybe<RecentitemableInterface>;
    /** The ID of the entity that this recent item entry is for. */
    recentitemable_id: Scalars['Int64Bit']['output'];
    /** The entity that a recent item entry is for. */
    recentitemable_type: RecentitemableType;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A recently viewed entity. */
export type RecentItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recently viewed entity. */
export type RecentItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recently viewed entity. */
export type RecentItemRecentitemableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `RecentItemConnection` type. */
export type RecentItemConnection = {
    __typename: 'RecentItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RecentItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that can be added to a user's recent item list. */
export type RecentitemableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A type of entity that can have a recent item entry. */
export declare enum RecentitemableType {
    /** An `Account` */
    Account = "Account",
    /** An `InventoryItem` */
    InventoryItem = "InventoryItem",
    /** A `Job` */
    Job = "Job",
    /** A `NetworkSite` */
    NetworkSite = "NetworkSite",
    /** A `Ticket` */
    Ticket = "Ticket"
}
/** Details regarding a specific recurring `Service`. */
export type RecurringServiceDetail = AccessloggableInterface & LoggableInterface & {
    __typename: 'RecurringServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Details regarding a specific recurring `Service`. */
export type RecurringServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific recurring `Service`. */
export type RecurringServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific recurring `Service`. */
export type RecurringServiceDetailServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `RecurringServiceDetailConnection` type. */
export type RecurringServiceDetailConnection = {
    __typename: 'RecurringServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RecurringServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the refundPayment mutation. */
export type RefundPaymentMutationInput = {
    /** The amount to refund. */
    amount: Scalars['Int']['input'];
    /** Why this refund was provided. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
};
/** A record of a refund applied to a `Payment`. */
export type RefundedPayment = AccessloggableInterface & DisbursableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'RefundedPayment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** A disbursement detail. */
    disbursement_details: DisbursementDetailConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A payment. */
    payment?: Maybe<Payment>;
    /** The ID of a `Payment`. */
    payment_id: Scalars['Int64Bit']['output'];
    /** The unique tracking ID for this payment. */
    payment_tracker_id?: Maybe<Scalars['String']['output']>;
    /** The response from the payment processor when this payment was submitted. */
    processor_response_message?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The transaction ID from the credit card provider. */
    transaction_id?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A record of a refund applied to a `Payment`. */
export type RefundedPaymentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record of a refund applied to a `Payment`. */
export type RefundedPaymentDisbursement_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_used?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    disbursable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    disbursable_type?: InputMaybe<DisbursableType>;
    disbursement_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    event?: InputMaybe<DisbursementDetailEvent>;
    external_id?: InputMaybe<Scalars['String']['input']>;
    fractional_amount?: InputMaybe<Scalars['Int']['input']>;
    fractional_amount_used?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_fee?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A record of a refund applied to a `Payment`. */
export type RefundedPaymentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record of a refund applied to a `Payment`. */
export type RefundedPaymentNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record of a refund applied to a `Payment`. */
export type RefundedPaymentPaymentArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record of a refund applied to a `Payment`. */
export type RefundedPaymentUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `RefundedPaymentConnection` type. */
export type RefundedPaymentConnection = {
    __typename: 'RefundedPaymentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<RefundedPayment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the reindexModel mutation. */
export type ReindexModelMutationInput = {
    /** Indicates whether the index should be deleted instead of updated. */
    delete_index?: Scalars['Boolean']['input'];
    /** The id of the model to reindex. */
    model_id: Scalars['Int64Bit']['input'];
    /** The type of the model to reindex. */
    model_type: IndexedModelType;
};
/** The report category. */
export declare enum ReportCategory {
    /** Accounts */
    Accounts = "ACCOUNTS",
    /** Financials */
    Financials = "FINANCIALS"
}
/** The input object that defines the fields for the rescheduleScheduleBlocker mutation. */
export type RescheduleScheduleBlockerMutationInput = {
    /** The ID of a `ScheduleBlocker`. */
    schedule_blocker_id: Scalars['Int64Bit']['input'];
    /** The date and time that this starts. */
    start_datetime: Scalars['Datetime']['input'];
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the respondToInstanceManagementRequest mutation. */
export type RespondToInstanceManagementRequestMutationInput = {
    /** The date until which the authorization is valid. */
    authorization_valid_until?: InputMaybe<Scalars['Date']['input']>;
    /** The ID of a Role. */
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the resyncFibermapServiceLocationToAddress mutation. */
export type ResyncFibermapServiceLocationToAddressMutationInput = {
    /** Fibermap service location ID. */
    fibermap_service_location_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the reversePayment mutation. */
export type ReversePaymentMutationInput = {
    /** The amount to reverse. */
    amount: Scalars['Int']['input'];
    /** Why this reversal was performed. */
    description?: InputMaybe<Scalars['String']['input']>;
};
/** This filter type allows you to filter the root entity by a relation. For example, you could search for all `Account`s that have an `Address` with a specific city. */
export type ReverseRelationFilter = {
    /** Search across all string fields with partial matching. */
    general_search?: InputMaybe<Scalars['String']['input']>;
    /** Every reverse relation filter in the same query that is in the same group will be treated as an `AND`. Reverse relation filters in other groups will be treated as an `OR`. */
    group?: InputMaybe<Scalars['String']['input']>;
    /** Only include results where this relation is unset. */
    is_empty?: InputMaybe<Scalars['Boolean']['input']>;
    /** The relation you wish to apply the reverse relation filter on. Should be a string that is the exact relation name (e.g. `contacts`, `addresses`, `account_status`.) You can filter on a deeper relation by using periods to separate the relation names (e.g. `contacts.phone_numbers`.) */
    relation: Scalars['String']['input'];
    /** Complex search parameters. */
    search?: InputMaybe<Array<InputMaybe<Search>>>;
};
/** The fields necessary to reverse a transaction. */
export type ReverseTransactionMutationInput = {
    /** A log entry to store to describe why this transaction is being reversed. */
    message: Scalars['String']['input'];
};
/** A record a `Payment` reversal. */
export type ReversedPayment = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ReversedPayment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A payment. */
    payment?: Maybe<Payment>;
    /** The ID of a `Payment`. */
    payment_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A record a `Payment` reversal. */
export type ReversedPaymentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record a `Payment` reversal. */
export type ReversedPaymentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record a `Payment` reversal. */
export type ReversedPaymentNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record a `Payment` reversal. */
export type ReversedPaymentPaymentArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    bank_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    creation_token?: InputMaybe<Scalars['String']['input']>;
    credit_card_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    deposit_slip_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    fee?: InputMaybe<Scalars['Int']['input']>;
    fractional_fee?: InputMaybe<Scalars['Int']['input']>;
    full_processor_response?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    payment_type?: InputMaybe<PaymentType>;
    processor_message?: InputMaybe<Scalars['String']['input']>;
    processor_status?: InputMaybe<Scalars['String']['input']>;
    reference?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    successful?: InputMaybe<Scalars['Boolean']['input']>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A record a `Payment` reversal. */
export type ReversedPaymentUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `ReversedPaymentConnection` type. */
export type ReversedPaymentConnection = {
    __typename: 'ReversedPaymentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ReversedPayment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A role defines the permission set that a user has. */
export type Role = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Role';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Details about an adjustment `Service`. */
    adjustment_service_details: AdjustmentServiceDetailConnection;
    /** A list of permissions associated with this role. */
    applied_permissions: Array<Maybe<Permission>>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
};
/** A role defines the permission set that a user has. */
export type RoleAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A role defines the permission set that a user has. */
export type RoleAdjustment_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A role defines the permission set that a user has. */
export type RoleLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A role defines the permission set that a user has. */
export type RoleNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A role defines the permission set that a user has. */
export type RoleUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `RoleConnection` type. */
export type RoleConnection = {
    __typename: 'RoleConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Role>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The SAML digest algorithm. */
export declare enum SamlDigestAlgorithm {
    /** SHA1. */
    Sha1 = "SHA1",
    /** SHA256. */
    Sha256 = "SHA256"
}
/** The SAML protocol binding. */
export declare enum SamlProtocolBinding {
    /** HTTP-POST. */
    HttpPost = "HTTP_POST",
    /** HTTP-REDIRECT. */
    HttpRedirect = "HTTP_REDIRECT"
}
/** The SAML signature algorithm. */
export declare enum SamlSignatureAlgorithm {
    /** RSA-SHA1. */
    RsaSha1 = "RSA_SHA1",
    /** RSA-SHA256. */
    RsaSha256 = "RSA_SHA256"
}
/** Saved message category. */
export type SavedMessageCategory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SavedMessageCategory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email message. */
    email_messages: EmailMessageConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Saved message category. */
export type SavedMessageCategoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Saved message category. */
export type SavedMessageCategoryEmail_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    saved_message_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Saved message category. */
export type SavedMessageCategoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Saved message category. */
export type SavedMessageCategoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `SavedMessageCategoryConnection` type. */
export type SavedMessageCategoryConnection = {
    __typename: 'SavedMessageCategoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SavedMessageCategory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The geographical point that a technician starts or ends their day at. */
export type ScheduleAddress = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ScheduleAddress';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A city. */
    city?: Maybe<Scalars['String']['output']>;
    /** A two character country code. */
    country?: Maybe<Country>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['output'];
    /** Address line 1. */
    line1?: Maybe<Scalars['String']['output']>;
    /** Address line 2. */
    line2?: Maybe<Scalars['String']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['output'];
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A state, province, or other country subdivision. */
    subdivision?: Maybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: Maybe<Timezone>;
    /** The type. */
    type: ScheduleAddressType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
    /** A ZIP or postal code. */
    zip?: Maybe<Scalars['String']['output']>;
};
/** The geographical point that a technician starts or ends their day at. */
export type ScheduleAddressAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The geographical point that a technician starts or ends their day at. */
export type ScheduleAddressLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The geographical point that a technician starts or ends their day at. */
export type ScheduleAddressNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The geographical point that a technician starts or ends their day at. */
export type ScheduleAddressUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `ScheduleAddressConnection` type. */
export type ScheduleAddressConnection = {
    __typename: 'ScheduleAddressConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduleAddress>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Whether this schedule address is a starting point, ending point, or both. */
export declare enum ScheduleAddressType {
    /** Both the start and end point. */
    Both = "BOTH",
    /** The ending point for the day. */
    End = "END",
    /** The starting point for the day. */
    Start = "START"
}
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailability = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ScheduleAvailability';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether this `ScheduleAvailability` creates available time, or blocks available time. */
    available: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A geographical restriction. */
    geofence?: Maybe<Geofence>;
    /** The ID of a `Geofence`. */
    geofence_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether this repeats forever or not. */
    infinite_repetitions: Scalars['Boolean']['output'];
    /** The type of a `Job`. */
    job_types: JobTypeConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The number of times this repeats. */
    repetitions?: Maybe<Scalars['Int']['output']>;
    /** A day and time associated with a `ScheduleAvailability`. */
    schedule_availability_day_times: ScheduleAvailabilityDayTimeConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start date for this `ScheduleAvailability`. */
    start_date: Scalars['Date']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
    /** The number of weeks between repetitions. */
    weeks_between_repetitions: Scalars['Int']['output'];
};
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailabilityAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailabilityGeofenceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailabilityJob_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailabilityLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailabilityNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailabilitySchedule_Availability_Day_TimesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_day?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end_time?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule_availability_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Availability for `Job`s to be scheduled. */
export type ScheduleAvailabilityUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `ScheduleAvailabilityConnection` type. */
export type ScheduleAvailabilityConnection = {
    __typename: 'ScheduleAvailabilityConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduleAvailability>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A day and time associated with a `ScheduleAvailability`. */
export type ScheduleAvailabilityDayTime = AccessloggableInterface & LoggableInterface & {
    __typename: 'ScheduleAvailabilityDayTime';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether this day is available from start to finish. */
    all_day: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A day. */
    day: Day;
    /** The end time for the day. */
    end_time?: Maybe<Scalars['Time']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Availability for `Job`s to be scheduled. */
    schedule_availability?: Maybe<ScheduleAvailability>;
    /** The ID of a `ScheduleAvailability`. */
    schedule_availability_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start time for the day. */
    start_time?: Maybe<Scalars['Time']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A day and time associated with a `ScheduleAvailability`. */
export type ScheduleAvailabilityDayTimeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A day and time associated with a `ScheduleAvailability`. */
export type ScheduleAvailabilityDayTimeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A day and time associated with a `ScheduleAvailability`. */
export type ScheduleAvailabilityDayTimeSchedule_AvailabilityArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    available?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geofence_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The connection wrapper around the `ScheduleAvailabilityDayTimeConnection` type. */
export type ScheduleAvailabilityDayTimeConnection = {
    __typename: 'ScheduleAvailabilityDayTimeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduleAvailabilityDayTime>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
export type ScheduleBlocker = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ScheduleBlocker';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether this repeats forever or not. */
    infinite_repetitions: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The number of times this repeats. */
    repetitions?: Maybe<Scalars['Int']['output']>;
    /** A day and time associated with a `ScheduleBlocker`. */
    schedule_blocker_day_times: ScheduleBlockerDayTimeConnection;
    /** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
    schedule_blocker_overrides: ScheduleBlockerOverrideConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start date for this `ScheduleAvailability`. */
    start_date: Scalars['Date']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
    /** The number of weeks between repetitions. */
    weeks_between_repetitions: Scalars['Int']['output'];
};
/** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
export type ScheduleBlockerAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
export type ScheduleBlockerLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
export type ScheduleBlockerNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
export type ScheduleBlockerSchedule_Blocker_Day_TimesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end_time?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule_blocker_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_time?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
export type ScheduleBlockerSchedule_Blocker_OverridesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule_blocker_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
export type ScheduleBlockerUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `ScheduleBlockerConnection` type. */
export type ScheduleBlockerConnection = {
    __typename: 'ScheduleBlockerConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduleBlocker>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A day and time associated with a `ScheduleBlocker`. */
export type ScheduleBlockerDayTime = AccessloggableInterface & LoggableInterface & {
    __typename: 'ScheduleBlockerDayTime';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A day. */
    day: Day;
    /** The end time for the day. */
    end_time: Scalars['Time']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
    schedule_blocker?: Maybe<ScheduleBlocker>;
    /** The ID of a `ScheduleBlocker`. */
    schedule_blocker_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start time for the day. */
    start_time: Scalars['Time']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A day and time associated with a `ScheduleBlocker`. */
export type ScheduleBlockerDayTimeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A day and time associated with a `ScheduleBlocker`. */
export type ScheduleBlockerDayTimeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A day and time associated with a `ScheduleBlocker`. */
export type ScheduleBlockerDayTimeSchedule_BlockerArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The connection wrapper around the `ScheduleBlockerDayTimeConnection` type. */
export type ScheduleBlockerDayTimeConnection = {
    __typename: 'ScheduleBlockerDayTimeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduleBlockerDayTime>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
export type ScheduleBlockerOverride = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ScheduleBlockerOverride';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
    schedule_blocker?: Maybe<ScheduleBlocker>;
    /** The ID of a `ScheduleBlocker`. */
    schedule_blocker_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The date and time that this starts. */
    start_datetime: Scalars['Datetime']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
export type ScheduleBlockerOverrideAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
export type ScheduleBlockerOverrideLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
export type ScheduleBlockerOverrideNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
export type ScheduleBlockerOverrideSchedule_BlockerArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
export type ScheduleBlockerOverrideUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `ScheduleBlockerOverrideConnection` type. */
export type ScheduleBlockerOverrideConnection = {
    __typename: 'ScheduleBlockerOverrideConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduleBlockerOverride>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the scheduleManyJobsAndScheduleBlockerOverrides mutation. */
export type ScheduleJobMutationInput = {
    /** The ID of a `Job`. */
    job_id: Scalars['Int64Bit']['input'];
    /** The length in minutes for this `Job`. */
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** The date and time this `Job` is scheduled for. */
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** The ID of a `Ticket`. */
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `scheduled_datetime` to null. */
    unset_scheduled_datetime?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticket_id` to null. */
    unset_ticket_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the scheduleManyJobsAndScheduleBlockerOverrides mutation. */
export type ScheduleManyJobsAndScheduleBlockerOverridesMutationInput = {
    /** Jobs. */
    jobs?: InputMaybe<Array<InputMaybe<ScheduleJobMutationInput>>>;
    /** Schedule blocker overrides. */
    schedule_blocker_overrides?: InputMaybe<Array<InputMaybe<RescheduleScheduleBlockerMutationInput>>>;
};
/** types.schedule_result */
export type ScheduleResult = {
    __typename: 'ScheduleResult';
    /** A list of `Geofence`s. */
    geofences: Array<Maybe<Geofence>>;
    /** A list of `JobType`s. */
    job_types: Array<Maybe<JobType>>;
    /** A list of `ScheduleAvailabilityDayTime`s. */
    schedule_availability_day_times: Array<Maybe<ScheduleAvailabilityDayTime>>;
    /** A list of `ScheduleBlockerDayTime`s. */
    schedule_blocker_day_times: Array<Maybe<ScheduleBlockerDayTime>>;
    /** Schedule blocker overrides. */
    schedule_blocker_overrides: Array<Maybe<ScheduleBlockerOverride>>;
    /** A list of `ScheduleTimeOff`s. */
    schedule_time_offs: Array<Maybe<ScheduleTimeOff>>;
    /** JSON encoded data used for scheduling. */
    scheduling_data: Scalars['String']['output'];
    /** A list of `User`s. */
    users: Array<Maybe<User>>;
};
/** Time off that removes availability from a `ScheduleAvailability`. */
export type ScheduleTimeOff = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ScheduleTimeOff';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The date and time that this ends. */
    end_datetime: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The date and time that this starts. */
    start_datetime: Scalars['Datetime']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
};
/** Time off that removes availability from a `ScheduleAvailability`. */
export type ScheduleTimeOffAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Time off that removes availability from a `ScheduleAvailability`. */
export type ScheduleTimeOffLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Time off that removes availability from a `ScheduleAvailability`. */
export type ScheduleTimeOffNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Time off that removes availability from a `ScheduleAvailability`. */
export type ScheduleTimeOffUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `ScheduleTimeOffConnection` type. */
export type ScheduleTimeOffConnection = {
    __typename: 'ScheduleTimeOffConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduleTimeOff>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An `Account` event that is run at a specific time. */
export type ScheduledEvent = AccessloggableInterface & LoggableInterface & {
    __typename: 'ScheduledEvent';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: Maybe<Scalars['Int']['output']>;
    /** Whether or not this is complete. */
    complete: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A date and time */
    datetime: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** An event. */
    event: ScheduledEventEvent;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The ID of an object described by the `event` field. */
    primary_event_object_id?: Maybe<Scalars['String']['output']>;
    /** Whether or not to prorate the transaction. */
    prorate?: Maybe<Scalars['Boolean']['output']>;
    /** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
    scheduled_event_account_voice_service_details: ScheduledEventAccountVoiceServiceDetailConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An `Account` event that is run at a specific time. */
export type ScheduledEventAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `Account` event that is run at a specific time. */
export type ScheduledEventAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `Account` event that is run at a specific time. */
export type ScheduledEventLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `Account` event that is run at a specific time. */
export type ScheduledEventScheduled_Event_Account_Voice_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_event_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
export type ScheduledEventAccountVoiceServiceDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'ScheduledEventAccountVoiceServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: Maybe<Scalars['Int']['output']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: Maybe<Scalars['String']['output']>;
    /** The quantity for this service. */
    quantity: Scalars['Int']['output'];
    /** An `Account` event that is run at a specific time. */
    scheduled_event?: Maybe<ScheduledEvent>;
    /** The ID of a `ScheduledEvent` */
    scheduled_event_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A configurable attribute for a voice service. */
    voice_service_generic_parameter?: Maybe<VoiceServiceGenericParameter>;
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id: Scalars['Int64Bit']['output'];
};
/** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
export type ScheduledEventAccountVoiceServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
export type ScheduledEventAccountVoiceServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
export type ScheduledEventAccountVoiceServiceDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
export type ScheduledEventAccountVoiceServiceDetailScheduled_EventArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    datetime?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    event?: InputMaybe<ScheduledEventEvent>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_event_object_id?: InputMaybe<Scalars['String']['input']>;
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
export type ScheduledEventAccountVoiceServiceDetailVoice_Service_Generic_ParameterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    proratable?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<VoiceServiceGenericParameterType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `ScheduledEventAccountVoiceServiceDetailConnection` type. */
export type ScheduledEventAccountVoiceServiceDetailConnection = {
    __typename: 'ScheduledEventAccountVoiceServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduledEventAccountVoiceServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `ScheduledEventConnection` type. */
export type ScheduledEventConnection = {
    __typename: 'ScheduledEventConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ScheduledEvent>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The type of event being fired by this `ScheduledEvent`. */
export declare enum ScheduledEventEvent {
    /** Add a package. */
    AddPackage = "ADD_PACKAGE",
    /** Price override an existing service on the account. */
    AddPriceOverride = "ADD_PRICE_OVERRIDE",
    /** Add a service. */
    AddService = "ADD_SERVICE",
    /** Make a bank account payment. */
    BankAccountPayment = "BANK_ACCOUNT_PAYMENT",
    /** Change the account status. */
    ChangeStatus = "CHANGE_STATUS",
    /** Make a credit card payment. */
    CreditCardPayment = "CREDIT_CARD_PAYMENT",
    /** Disconnect an Account */
    DisconnectAccount = "DISCONNECT_ACCOUNT",
    /** Apply a one time transaction from a service */
    OneTimeTransaction = "ONE_TIME_TRANSACTION",
    /** Remove a package. */
    RemovePackage = "REMOVE_PACKAGE",
    /** Remove a price override from a service on the account. */
    RemovePriceOverride = "REMOVE_PRICE_OVERRIDE",
    /** Remove a service. */
    RemoveService = "REMOVE_SERVICE"
}
/** Allows you to search for objects with specific combinations of values. All fields submitted within this `Search` object are treated as an `AND`. Each outer `Search` object is treated as an `OR` in relation to each other. */
export type Search = {
    /** Search for a specific boolean (`true` or `false`.) */
    boolean_fields?: InputMaybe<Array<InputMaybe<SearchBooleanField>>>;
    /** Search against a date using a range operator. */
    date_fields?: InputMaybe<Array<InputMaybe<SearchDateField>>>;
    /** Search against an ISO8601 date/timestamp using a range operator. */
    datetime_fields?: InputMaybe<Array<InputMaybe<SearchDatetimeField>>>;
    /** Return only items where the fields listed here are not equal to `null` or `[]`. */
    exists?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** Search against a float using a range operator. */
    float_fields?: InputMaybe<Array<InputMaybe<SearchFloatField>>>;
    /** A minimum of 3 vertices to make up a polygon. This will search for all objects where their geopoint field fall within the polygon. Can only be used if the object has a `geopoint` field on it. */
    geopoint_fields?: InputMaybe<Array<InputMaybe<SearchGeopointVertex>>>;
    /** Search against an integer field using a range operator. */
    integer_fields?: InputMaybe<Array<InputMaybe<SearchIntegerField>>>;
    /** Search for IP addresses that fit into a subnet, or IP addresses that do not fit into a subnet. */
    ip_address_fields?: InputMaybe<Array<InputMaybe<SearchIpAddressField>>>;
    /** Reverse relation filters allow you to filter the result of a relation, and use that filter to affect the returned root elements. */
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    /** Search where a string field partially matches a value, or where a string field does not partially match a value. */
    string_fields?: InputMaybe<Array<InputMaybe<SearchStringField>>>;
    /** Return only items where the fields listed here have a `null` value. */
    unset_fields?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};
/** types.search_boolean_field */
export type SearchBooleanField = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** The value to search for. */
    search_value: Scalars['Boolean']['input'];
};
/** Used in the `Search` object. Allows you to search against date fields. */
export type SearchDateField = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** An operator that defines how to apply the search value to the attribute. */
    operator: RangeOperator;
    /** The value to search for. */
    search_value: Scalars['Date']['input'];
};
/** Used in the `Search` object. Allows you to search against datetime fields. */
export type SearchDatetimeField = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** An operator that defines how to apply the search value to the attribute. */
    operator: RangeOperator;
    /** The value to search for. */
    search_value: Scalars['Datetime']['input'];
};
/** A user-defined search filter that applies to a specific type of entity. */
export type SearchFilter = AccessloggableInterface & LoggableInterface & SearchableInterface & {
    __typename: 'SearchFilter';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether the filter is available to every user (admins only). */
    all_users: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The type of entity this filter belongs to. */
    entity_type: Scalars['String']['output'];
    /** The actual filter, as JSON. */
    filter: Scalars['Text']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The filter's name. */
    name: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of the user that created this entity. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A user-defined search filter that applies to a specific type of entity. */
export type SearchFilterAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user-defined search filter that applies to a specific type of entity. */
export type SearchFilterLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user-defined search filter that applies to a specific type of entity. */
export type SearchFilterUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `SearchFilterConnection` type. */
export type SearchFilterConnection = {
    __typename: 'SearchFilterConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SearchFilter>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Used in the `Search` object. Allows you to search against float fields. */
export type SearchFloatField = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** An operator that defines how to apply the search value to the attribute. */
    operator: RangeOperator;
    /** The value to search for. */
    search_value: Scalars['Float']['input'];
};
/** Used in the `Search` object. Allows you to create a polygon to search within against geopoint fields. */
export type SearchGeopointVertex = {
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['input'];
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['input'];
};
/** Used in the `Search` object. Allows you to search against integer fields. */
export type SearchIntegerField = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** An operator that defines how to apply the search value to the attribute. */
    operator: RangeOperator;
    /** The value to search for. */
    search_value: Scalars['Int64Bit']['input'];
};
/** Used in the `Search` object. Allows you to search against IP address fields. */
export type SearchIpAddressField = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** `true` to match results that match the search value. `false` to exclude results that match the search value. */
    match: Scalars['Boolean']['input'];
    /** The value to search for. */
    search_value: Scalars['String']['input'];
};
/** Used in the `Search` object. Allows you to search against string fields. */
export type SearchStringField = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** `true` to match results that match the search value. `false` to exclude results that match the search value. */
    match: Scalars['Boolean']['input'];
    /** If `true`, return results that match the value in `search_value` in any part of their value. If `false`, the entire string must match the value in `search_value` to match. */
    partial_matching?: InputMaybe<Scalars['Boolean']['input']>;
    /** The value to search for. */
    search_value: Scalars['String']['input'];
};
/** An entity that can be returned from the `general_search` query */
export type SearchableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The input object that defines the fields for the sendEmailDomainVerificationEmail mutation. */
export type SendEmailDomainVerificationEmailMutationInput = {
    /** The mailbox to send the verification to. E.g. if the domain is example.com and you want to send to foo@example.com, this would be `foo`. */
    mailbox: Scalars['String']['input'];
};
/** The input object that defines the fields for the sendTestEmail mutation. */
export type SendTestEmailMutationInput = {
    /** The mailbox to send the verification to. E.g. if the domain is example.com and you want to send to foo@example.com, this would be `foo`. */
    mailbox: Scalars['String']['input'];
};
/** The input object that defines the fields for the sendTestTriggeredEmail mutation. */
export type SendTestTriggeredEmailMutationInput = {
    /** The variables for this triggered email. */
    variables: Array<InputMaybe<TestTriggeredEmailVariableInput>>;
};
/** An external reference to a dynamic template at SendGrid. */
export type SendgridDynamicTemplateExternalReference = AccessloggableInterface & LoggableInterface & {
    __typename: 'SendgridDynamicTemplateExternalReference';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The localized content of an `EmailMessage`. */
    email_message_content?: Maybe<EmailMessageContent>;
    /** The ID of an `EmailMessageContent`. */
    email_message_content_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The external identifier of a dynamic template at SendGrid. */
    sendgrid_identifier: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A message that is sent when a specific event occurs. */
    triggered_message?: Maybe<TriggeredMessage>;
    /** The ID of a `TriggeredMessage`. */
    triggered_message_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An external reference to a dynamic template at SendGrid. */
export type SendgridDynamicTemplateExternalReferenceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An external reference to a dynamic template at SendGrid. */
export type SendgridDynamicTemplateExternalReferenceCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** An external reference to a dynamic template at SendGrid. */
export type SendgridDynamicTemplateExternalReferenceEmail_Message_ContentArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    language?: InputMaybe<Language>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subject?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An external reference to a dynamic template at SendGrid. */
export type SendgridDynamicTemplateExternalReferenceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An external reference to a dynamic template at SendGrid. */
export type SendgridDynamicTemplateExternalReferenceTriggered_MessageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SendgridDynamicTemplateExternalReferenceConnection` type. */
export type SendgridDynamicTemplateExternalReferenceConnection = {
    __typename: 'SendgridDynamicTemplateExternalReferenceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SendgridDynamicTemplateExternalReference>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The status of Sendgrid. */
export type SendgridStatus = {
    __typename: 'SendgridStatus';
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
};
/** A service. */
export type Service = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Service';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An account group. */
    account_groups: AccountGroupConnection;
    /** The relationship between an `Account` and a `Service`. */
    account_services: AccountServiceConnection;
    /** An address list defines some criteria by which to group accounts for network policy enforcement. */
    address_lists: AddressListConnection;
    /** Details about an adjustment `Service`. */
    adjustment_service_detail?: Maybe<AdjustmentServiceDetail>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: Maybe<Scalars['Int']['output']>;
    /** How this is applied. */
    application: ServiceApplication;
    /** The service items and overrides for linked billing defaults. */
    billing_services: BillingServiceConnection;
    /** A company you do business as. */
    company?: Maybe<Company>;
    /** The ID of the company that this entity operates under. */
    company_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Details regarding a specific data `Service`. */
    data_service_detail?: Maybe<DataServiceDetail>;
    /** A debit. */
    debits: DebitConnection;
    /** A historical record of a direct inward dial (DID) assignment. */
    did_assignment_histories: DidAssignmentHistoryConnection;
    /** A direct inward dial (DID) assignment. */
    did_assignments: DidAssignmentConnection;
    /** A discount. */
    discounts: DiscountConnection;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero: Scalars['Boolean']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** Details regarding a specific expiring `Service`. */
    expiring_service_detail?: Maybe<ExpiringServiceDetail>;
    /** A general ledger code. */
    general_ledger_code?: Maybe<GeneralLedgerCode>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An entity which maps a service to a vendor specific service name */
    integration_service_mappings: IntegrationServiceMappingConnection;
    /** A `Service` associated with a `Job`. */
    job_services: JobServiceConnection;
    /** The type of a `Job`. */
    job_types: JobTypeConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** Details regarding a specific overage `Service`. */
    overage_service_detail?: Maybe<OverageServiceDetail>;
    /** The relationship between a `Package` and a `Service`. */
    package_services: PackageServiceConnection;
    /** A RADIUS group. */
    radius_groups: RadiusGroupConnection;
    /** Details regarding a specific recurring `Service`. */
    recurring_service_detail?: Maybe<RecurringServiceDetail>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Fields that store metadata about individual instances of `Service`s. */
    service_metadata: ServiceMetadataConnection;
    /** The relationship between a `Service` and a `Tax`. */
    service_taxes: ServiceTaxConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The `TaxDefinition` pair associated to this entity. */
    tax_definitions: ServiceTaxDefinitionConnection;
    /** The type. */
    type: ServiceType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A usage based billing policy. */
    usage_based_billing_policies: UsageBasedBillingPolicyConnection;
    /** A set of vendor items attached to an entity. */
    vendor_items: VendorItemConnection;
    /** Details regarding a specific voice `Service`. */
    voice_service_detail?: Maybe<VoiceServiceDetail>;
};
/** A service. */
export type ServiceAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A service. */
export type ServiceAccount_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceAccount_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceAddress_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceAdjustment_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    days?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceBilling_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_subsidy?: InputMaybe<Scalars['Int']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceCompanyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    isp_type?: InputMaybe<IspType>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** A service. */
export type ServiceData_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    download_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    technology_code?: InputMaybe<TechnologyCode>;
    telrad_global_service_profile_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    upload_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    usage_based_billing_policy_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A service. */
export type ServiceDebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A service. */
export type ServiceDid_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceDid_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    did_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceDiscountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A service. */
export type ServiceExpiring_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    times_to_run?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceGeneral_Ledger_CodeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    code?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceIntegration_Service_MappingsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    integrationconfigurable_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    policy_map?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_template_name?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceJob_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceJob_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A service. */
export type ServiceNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A service. */
export type ServiceOverage_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    gigabytes?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServicePackage_ServicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceRadius_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceRecurring_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceService_MetadataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceService_TaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    exemption_amount?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceTax_DefinitionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    discount?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceUsage_Based_Billing_PoliciesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_purchase_of_additional_capacity_during_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    assess_charges_at_end_of_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    cap_in_gigabytes?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A service. */
export type ServiceVendor_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_type?: InputMaybe<VendoritemableType>;
};
/** A service. */
export type ServiceVoice_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_local_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_long_distance_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    first_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_toll_free_rate_per_minute_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    local_minutes?: InputMaybe<Scalars['Int']['input']>;
    long_distance_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollup_generic_parameters?: InputMaybe<Scalars['Boolean']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    show_call_detail_records_on_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    sub_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    sub_type?: InputMaybe<VoiceServiceDetailSubType>;
    unlimited_local_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    unlimited_long_distance_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Whether or not this `Service` is applied as a `Debit` or creates a `Discount`. */
export declare enum ServiceApplication {
    /** A credit/discount */
    Credit = "CREDIT",
    /** A debit/charge */
    Debit = "DEBIT"
}
/** The connection wrapper around the `ServiceConnection` type. */
export type ServiceConnection = {
    __typename: 'ServiceConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Service>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Fields that store metadata about individual instances of `Service`s. */
export type ServiceMetadata = AccessloggableInterface & LoggableInterface & {
    __typename: 'ServiceMetadata';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** The value of a `ServiceMetadata` field, as it relates to a specific `Service` on a specific `Account`. */
    service_metadata_values: ServiceMetadataValueConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Fields that store metadata about individual instances of `Service`s. */
export type ServiceMetadataAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Fields that store metadata about individual instances of `Service`s. */
export type ServiceMetadataLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Fields that store metadata about individual instances of `Service`s. */
export type ServiceMetadataServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Fields that store metadata about individual instances of `Service`s. */
export type ServiceMetadataService_Metadata_ValuesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_metadata_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `ServiceMetadataConnection` type. */
export type ServiceMetadataConnection = {
    __typename: 'ServiceMetadataConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ServiceMetadata>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The value of a `ServiceMetadata` field, as it relates to a specific `Service` on a specific `Account`. */
export type ServiceMetadataValue = AccessloggableInterface & LoggableInterface & {
    __typename: 'ServiceMetadataValue';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The relationship between an `Account` and a `Service`. */
    account_service?: Maybe<AccountService>;
    /** The ID of an AccountService. */
    account_service_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The ID of a ServiceMetadata field. */
    service_metadata_id: Scalars['Int64Bit']['output'];
    /** Fields that store metadata about individual instances of `Service`s. */
    service_metadatum?: Maybe<ServiceMetadata>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** The value of a `ServiceMetadata` field, as it relates to a specific `Service` on a specific `Account`. */
export type ServiceMetadataValueAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The value of a `ServiceMetadata` field, as it relates to a specific `Service` on a specific `Account`. */
export type ServiceMetadataValueAccount_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The value of a `ServiceMetadata` field, as it relates to a specific `Service` on a specific `Account`. */
export type ServiceMetadataValueLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The value of a `ServiceMetadata` field, as it relates to a specific `Service` on a specific `Account`. */
export type ServiceMetadataValueService_MetadatumArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `ServiceMetadataValueConnection` type. */
export type ServiceMetadataValueConnection = {
    __typename: 'ServiceMetadataValueConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ServiceMetadataValue>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The relationship between a `Service` and a `Tax`. */
export type ServiceTax = AccessloggableInterface & LoggableInterface & {
    __typename: 'ServiceTax';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The amount of the service that is exempt from taxation in the smallest currency value (e.g. cents, pence, pesos.) */
    exemption_amount: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax. */
    tax?: Maybe<Tax>;
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The relationship between a `Service` and a `Tax`. */
export type ServiceTaxAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `Service` and a `Tax`. */
export type ServiceTaxLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `Service` and a `Tax`. */
export type ServiceTaxServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The relationship between a `Service` and a `Tax`. */
export type ServiceTaxTaxArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `ServiceTaxConnection` type. */
export type ServiceTaxConnection = {
    __typename: 'ServiceTaxConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ServiceTax>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The relationship between a `Service` and a `TaxDefinition`. */
export type ServiceTaxDefinition = AccessloggableInterface & LoggableInterface & {
    __typename: 'ServiceTaxDefinition';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether this tax definition is for a discount or not. */
    discount: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The entity that this `TaxDefinition` is assigned to. */
    taxdefinitionable?: Maybe<TaxdefinitionableInterface>;
    /** The ID of entity this tax definition is related to. */
    taxdefinitionable_id: Scalars['Int64Bit']['output'];
    /** The type of entity this tax definition is related to. */
    taxdefinitionable_type: TaxdefinitionableType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The relationship between a `Service` and a `TaxDefinition`. */
export type ServiceTaxDefinitionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `Service` and a `TaxDefinition`. */
export type ServiceTaxDefinitionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `Service` and a `TaxDefinition`. */
export type ServiceTaxDefinitionServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The relationship between a `Service` and a `TaxDefinition`. */
export type ServiceTaxDefinitionTaxdefinitionableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `ServiceTaxDefinitionConnection` type. */
export type ServiceTaxDefinitionConnection = {
    __typename: 'ServiceTaxDefinitionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ServiceTaxDefinition>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Taxes applied to this service. */
export type ServiceTaxMutationInput = {
    /** The amount of the service that is exempt from taxation in the smallest currency value (e.g. cents, pence, pesos.) */
    exemption_amount: Scalars['Int']['input'];
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['input'];
};
/** The types of transactions that can be made on an account service. */
export declare enum ServiceTransactionType {
    /** Base Service */
    BaseService = "BASE_SERVICE",
    /** Voice Service Addition */
    VoiceServiceAddition = "VOICE_SERVICE_ADDITION"
}
/** The primary type of a `Service` */
export declare enum ServiceType {
    /** A service that can be used to apply an adjustment to an account */
    Adjustment = "ADJUSTMENT",
    /** A data service. */
    Data = "DATA",
    /** An expiring service */
    Expiring = "EXPIRING",
    /** A service that applies a one time charge */
    Onetime = "ONETIME",
    /** A service that applies a data overage */
    Overage = "OVERAGE",
    /** A recurring service */
    Recurring = "RECURRING",
    /** A voice service. */
    Voice = "VOICE"
}
/** A `ServiceableAddressAccountAssignmentHistory` for accounts and addresses. */
export type ServiceableAddressAccountAssignmentHistory = AccessloggableInterface & LoggableInterface & {
    __typename: 'ServiceableAddressAccountAssignmentHistory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The ID of the address. */
    address_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The date that this ends. */
    end_date?: Maybe<Scalars['Date']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start date for this `ScheduleAvailability`. */
    start_date: Scalars['Date']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A `ServiceableAddressAccountAssignmentHistory` for accounts and addresses. */
export type ServiceableAddressAccountAssignmentHistoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `ServiceableAddressAccountAssignmentHistory` for accounts and addresses. */
export type ServiceableAddressAccountAssignmentHistoryAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `ServiceableAddressAccountAssignmentHistory` for accounts and addresses. */
export type ServiceableAddressAccountAssignmentHistoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `ServiceableAddressAccountAssignmentHistoryConnection` type. */
export type ServiceableAddressAccountAssignmentHistoryConnection = {
    __typename: 'ServiceableAddressAccountAssignmentHistoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<ServiceableAddressAccountAssignmentHistory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the setActiveStoredView mutation. */
export type SetActiveStoredViewMutationInput = {
    /** The location in the UI that this view is available. */
    location: Scalars['String']['input'];
    /** The ID of a `StoredView` entity. */
    stored_view_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `stored_view_id` to null. */
    unset_stored_view_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A signature. */
export type Signature = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Signature';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A department. */
    department?: Maybe<Department>;
    /** The ID of a department. */
    department_id: Scalars['Int64Bit']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** Whether or not signature is default for mass messages. */
    mass_default: Scalars['Boolean']['output'];
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** Body of an SMS signature. */
    sms_signature: SmsContactPrefix;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether or not signature is default for triggered messages. */
    triggered_default: Scalars['Boolean']['output'];
    /** A message that is sent when a specific event occurs. */
    triggered_messages: TriggeredMessageConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A signature. */
export type SignatureAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A signature. */
export type SignatureDepartmentArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A signature. */
export type SignatureLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A signature. */
export type SignatureNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A signature. */
export type SignatureTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SignatureConnection` type. */
export type SignatureConnection = {
    __typename: 'SignatureConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Signature>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An SMS contact prefix message. */
export declare enum SmsContactPrefix {
    /** Need to chat? */
    Chat = "CHAT",
    /** We're here to help! */
    Help = "HELP",
    /** Looking for more information? */
    MoreInfo = "MORE_INFO",
    /** Don't display contact information. */
    NoDisplay = "NO_DISPLAY",
    /** Have a question? */
    Question = "QUESTION",
    /** Need something else? */
    SomethingElse = "SOMETHING_ELSE"
}
/** An SMS message. */
export type SmsMessage = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SmsMessage';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether or not SMS message is used for triggers. */
    is_trigger: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An SMS message content. */
    sms_message_contents: SmsMessageContentConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A message that is sent when a specific event occurs. */
    triggered_messages: TriggeredMessageConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An SMS message. */
export type SmsMessageAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS message. */
export type SmsMessageLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS message. */
export type SmsMessageNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS message. */
export type SmsMessageSms_Message_ContentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    non_portal_body?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    portal_body?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An SMS message. */
export type SmsMessageTriggered_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    count?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    protected?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    trigger?: InputMaybe<MessageTrigger>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SmsMessageConnection` type. */
export type SmsMessageConnection = {
    __typename: 'SmsMessageConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SmsMessage>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An SMS message content. */
export type SmsMessageContent = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SmsMessageContent';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A supported language. */
    language: Language;
    /** A log entry. */
    logs: LogConnection;
    /** SMS message body for customers without portal. */
    non_portal_body: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** SMS message body for customers with portal. */
    portal_body: Scalars['String']['output'];
    /** An SMS message. */
    sms_message?: Maybe<SmsMessage>;
    /** The ID of the SMS message. */
    sms_message_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An SMS message content. */
export type SmsMessageContentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS message content. */
export type SmsMessageContentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS message content. */
export type SmsMessageContentNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS message content. */
export type SmsMessageContentSms_MessageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_trigger?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SmsMessageContentConnection` type. */
export type SmsMessageContentConnection = {
    __typename: 'SmsMessageContentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SmsMessageContent>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The category of an outbound SMS. */
export declare enum SmsOutboundCategory {
    /** Mass message */
    MassMessage = "MASS_MESSAGE",
    /** Notification */
    Notification = "NOTIFICATION",
    /** Trigger */
    Trigger = "TRIGGER"
}
/** An SMS outbound message. */
export type SmsOutboundMessage = AccessloggableInterface & LoggableInterface & {
    __typename: 'SmsOutboundMessage';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The category of the message. */
    category: SmsOutboundCategory;
    /** The cost associated with the SMS message. Stored as one hundredth of the smallest currency value (e.g. cents, pence, pesos.) */
    cost_in_hundredths: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The country code of the destination mobile phone number. */
    destination_country?: Maybe<Scalars['String']['output']>;
    /** The error message. */
    error_message: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The provider message ID. */
    last_status_check?: Maybe<Scalars['Datetime']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** The message text. */
    message_text: Scalars['String']['output'];
    /** The destination mobile phone number. */
    mobile_number: Scalars['String']['output'];
    /** The provider message ID. */
    provider_message_id?: Maybe<Scalars['String']['output']>;
    /** The number of segments needed to deliver message text. */
    segments: Scalars['Int']['output'];
    /** An SMS message. */
    smsable?: Maybe<SmsableInterface>;
    /** The ID of the entity that this SMS was sent to. */
    smsable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that this SMS was sent to. */
    smsable_type: SmsableType;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The current status of the message. */
    status: SmsOutboundStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An SMS outbound message. */
export type SmsOutboundMessageAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS outbound message. */
export type SmsOutboundMessageLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An SMS outbound message. */
export type SmsOutboundMessageSmsableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SmsOutboundMessageConnection` type. */
export type SmsOutboundMessageConnection = {
    __typename: 'SmsOutboundMessageConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SmsOutboundMessage>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The status of an outbound SMS. */
export declare enum SmsOutboundStatus {
    /** Delivered. */
    Delivered = "DELIVERED",
    /** Failed. */
    Failed = "FAILED",
    /** Insufficient funds. */
    InsufficientFunds = "INSUFFICIENT_FUNDS",
    /** In Progress. */
    InProgress = "IN_PROGRESS",
    /** Pending (Waiting to be processed). */
    Pending = "PENDING",
    /** Sent. */
    Sent = "SENT"
}
/** SMS configuration settings. */
export type SmsSetting = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SmsSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether the SMS funds are paid for automatically. */
    auto_pay: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A notification is sent if SMS funds fall below this value. */
    low_funds_threshold: Scalars['Int']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** End of quiet time for sending SMS triggered messages. */
    triggered_quiet_end_time?: Maybe<Scalars['Time']['output']>;
    /** Start of quiet time for sending SMS triggered messages. */
    triggered_quiet_start_time?: Maybe<Scalars['Time']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** SMS configuration settings. */
export type SmsSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** SMS configuration settings. */
export type SmsSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** SMS configuration settings. */
export type SmsSettingNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An entity that can have an SMS message sent to it. */
export type SmsableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The entity that this `SMS` is associated with. */
export declare enum SmsableType {
    /** A `Contact`. */
    Contact = "Contact",
    /** A `User`. */
    User = "User"
}
/** A single SMTP event for an email. */
export type SmtpEvent = AccessloggableInterface & LoggableInterface & {
    __typename: 'SmtpEvent';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The remote IP address of the server Mandrill was connected to for message relay when attempting to send an email. */
    destination_ip: Scalars['IP']['output'];
    /** An email. */
    email?: Maybe<Email>;
    /** The ID of an email. */
    email_id: Scalars['Int64Bit']['output'];
    /** The date and time of an event sent from Mandrill */
    event_datetime: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The message of the SMTP response. */
    response: Scalars['String']['output'];
    /** The size of a SMTP message that Mandrill attempted to relay. */
    size: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The IP address of the Mandrill server that attempted to send an email. */
    source_ip: Scalars['IP']['output'];
    /** The type. */
    type: Scalars['String']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A single SMTP event for an email. */
export type SmtpEventAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A single SMTP event for an email. */
export type SmtpEventEmailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A single SMTP event for an email. */
export type SmtpEventLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `SmtpEventConnection` type. */
export type SmtpEventConnection = {
    __typename: 'SmtpEventConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SmtpEvent>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An `Snmp3AuthProtocol`. */
export declare enum Snmp3AuthProtocol {
    /** MD5 */
    Md5 = "MD5",
    /** SHA */
    Sha = "SHA"
}
/** An `Snmp3PrivProtocol`. */
export declare enum Snmp3PrivProtocol {
    /** AES */
    Aes = "AES",
    /** DES */
    Des = "DES"
}
/** An `Snmp3SecurityLevel`. */
export declare enum Snmp3SecurityLevel {
    /** authNoPriv */
    AuthNoPriv = "AUTH_NO_PRIV",
    /** authPriv */
    AuthPriv = "AUTH_PRIV",
    /** noAuthNoPriv */
    NoAuthNoPriv = "NO_AUTH_NO_PRIV"
}
/** types.snmp_interface_numeric_result */
export type SnmpInterfaceNumericResult = {
    __typename: 'SnmpInterfaceNumericResult';
    /** A Unix timestamp in the same timezone as this Sonar instance */
    epoch_system_timezone?: Maybe<Scalars['EpochTimestamp']['output']>;
    /** The interface. */
    interface?: Maybe<Scalars['String']['output']>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** The time. */
    time?: Maybe<Scalars['Datetime']['output']>;
    /** The metric being tracked (e.g. packets per second inbound, errors outbound.) */
    type?: Maybe<InterfaceMetric>;
    /** The value. */
    value?: Maybe<Scalars['Float']['output']>;
};
/** A wrapper around SNMP network monitoring results. */
export type SnmpNetworkMonitoringResultConnection = {
    __typename: 'SnmpNetworkMonitoringResultConnection';
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** fields.network_monitoring_template */
    network_monitoring_template?: Maybe<NetworkMonitoringTemplate>;
    /** fields.snmp_result_connections */
    snmp_result_connection: Array<Maybe<SnmpResultConnection>>;
    /** fields.snmp_status_results */
    snmp_status_results: Array<Maybe<SnmpStatusResult>>;
};
/** An `SnmpOid`. */
export type SnmpOid = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SnmpOid';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether or not to auto scale. */
    auto_scale: Scalars['Boolean']['output'];
    /** Color. */
    color: Scalars['HtmlHexColor']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Display as table */
    display_as_table: Scalars['Boolean']['output'];
    /** Divide by */
    divide_by?: Maybe<Scalars['Int']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A `NetworkMonitoringGraph`. */
    network_monitoring_graph?: Maybe<NetworkMonitoringGraph>;
    /** The ID of a `NetworkMonitoringGraph`. */
    network_monitoring_graph_id: Scalars['Int64Bit']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An OID */
    oid: Scalars['String']['output'];
    /** An `SnmpOidThreshold`. */
    snmp_oid_thresholds: SnmpOidThresholdConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Unit of measurement */
    unit_of_measurement?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An `SnmpOid`. */
export type SnmpOidAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOid`. */
export type SnmpOidLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOid`. */
export type SnmpOidNetwork_Monitoring_GraphArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stacked?: InputMaybe<Scalars['Boolean']['input']>;
    type?: InputMaybe<NetworkMonitoringGraphType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `SnmpOid`. */
export type SnmpOidNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOid`. */
export type SnmpOidSnmp_Oid_ThresholdsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    operator?: InputMaybe<RangeOperator>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_oid_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    time_period_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `SnmpOidConnection` type. */
export type SnmpOidConnection = {
    __typename: 'SnmpOidConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SnmpOid>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An `SnmpOidThreshold`. */
export type SnmpOidThreshold = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SnmpOidThreshold';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An operator. */
    operator: RangeOperator;
    /** An `SnmpOid`. */
    snmp_oid?: Maybe<SnmpOid>;
    /** The ID of an `SnmpOid`. */
    snmp_oid_id: Scalars['Int64Bit']['output'];
    /** An `SnmpOidThresholdViolation`. */
    snmp_oid_threshold_violations: SnmpOidThresholdViolationConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The amount of time in minutes that the threshold must be violated before it is triggered. */
    time_period_in_minutes: Scalars['Int']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** An `SnmpOidThreshold`. */
export type SnmpOidThresholdAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOidThreshold`. */
export type SnmpOidThresholdLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOidThreshold`. */
export type SnmpOidThresholdNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOidThreshold`. */
export type SnmpOidThresholdSnmp_OidArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_scale?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_as_table?: InputMaybe<Scalars['Boolean']['input']>;
    divide_by?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    network_monitoring_graph_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    oid?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unit_of_measurement?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `SnmpOidThreshold`. */
export type SnmpOidThresholdSnmp_Oid_Threshold_ViolationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_oid_threshold_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SnmpOidThresholdConnection` type. */
export type SnmpOidThresholdConnection = {
    __typename: 'SnmpOidThresholdConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SnmpOidThreshold>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An `SnmpOidThresholdViolation`. */
export type SnmpOidThresholdViolation = AccessloggableInterface & LoggableInterface & {
    __typename: 'SnmpOidThresholdViolation';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_item?: Maybe<InventoryItem>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An `SnmpOidThreshold`. */
    snmp_oid_threshold?: Maybe<SnmpOidThreshold>;
    /** The ID of an `SnmpOidThreshold`. */
    snmp_oid_threshold_id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An `SnmpOidThresholdViolation`. */
export type SnmpOidThresholdViolationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOidThresholdViolation`. */
export type SnmpOidThresholdViolationInventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `SnmpOidThresholdViolation`. */
export type SnmpOidThresholdViolationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOidThresholdViolation`. */
export type SnmpOidThresholdViolationSnmp_Oid_ThresholdArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    operator?: InputMaybe<RangeOperator>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_oid_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    time_period_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `SnmpOidThresholdViolationConnection` type. */
export type SnmpOidThresholdViolationConnection = {
    __typename: 'SnmpOidThresholdViolationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SnmpOidThresholdViolation>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An `SnmpOverride`. */
export type SnmpOverride = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SnmpOverride';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_item?: Maybe<InventoryItem>;
    /** The ID of an `InventoryItem`. */
    inventory_item_id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** SNMPv3 auth passphrase */
    snmp3_auth_passphrase?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 auth protocol */
    snmp3_auth_protocol?: Maybe<Snmp3AuthProtocol>;
    /** SNMPv3 context engine ID */
    snmp3_context_engineid?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 context name */
    snmp3_context_name?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 privacy passphrase */
    snmp3_priv_passphrase?: Maybe<Scalars['Text']['output']>;
    /** SNMPv3 privacy protocol */
    snmp3_priv_protocol?: Maybe<Snmp3PrivProtocol>;
    /** SNMPv3 security level */
    snmp3_sec_level?: Maybe<Snmp3SecurityLevel>;
    /** SNMP community/securityName */
    snmp_community?: Maybe<Scalars['Text']['output']>;
    /** SNMP version */
    snmp_version?: Maybe<SnmpVersion>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An `SnmpOverride`. */
export type SnmpOverrideAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOverride`. */
export type SnmpOverrideInventory_ItemArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `SnmpOverride`. */
export type SnmpOverrideLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `SnmpOverride`. */
export type SnmpOverrideNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `SnmpOverrideConnection` type. */
export type SnmpOverrideConnection = {
    __typename: 'SnmpOverrideConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SnmpOverride>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `SnmpResult` type. */
export type SnmpResult = {
    __typename: 'SnmpResult';
    /** A Unix timestamp in the same timezone as this Sonar instance */
    epoch_system_timezone?: Maybe<Scalars['EpochTimestamp']['output']>;
    /** The time. */
    time: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** types.snmp_result */
export type SnmpResultConnection = {
    __typename: 'SnmpResultConnection';
    /** An OID */
    oid: Scalars['String']['output'];
    /** SNMP monitoring results. */
    results: Array<Maybe<SnmpResult>>;
    /** An SNMP monitoring result type. */
    type: SnmpResultType;
};
/** An SNMP monitoring result type. */
export declare enum SnmpResultType {
    /** An SNMP monitoring counter result. */
    Counter = "COUNTER",
    /** An SNMP monitoring gauge result. */
    Gauge = "GAUGE",
    /** An SNMP monitoring text result. */
    Text = "TEXT"
}
/** types.snmp_status_result */
export type SnmpStatusResult = {
    __typename: 'SnmpStatusResult';
    /** A Unix timestamp in the same timezone as this Sonar instance */
    epoch_system_timezone?: Maybe<Scalars['EpochTimestamp']['output']>;
    /** The reason. */
    reason?: Maybe<Scalars['String']['output']>;
    /** The status. */
    status?: Maybe<Scalars['String']['output']>;
    /** The time. */
    time?: Maybe<Scalars['Datetime']['output']>;
};
/** An `SnmpVersion`. */
export declare enum SnmpVersion {
    /** SNMP Version 1. */
    SnmpVersion_1 = "SNMP_VERSION_1",
    /** SNMP Version 2C. */
    SnmpVersion_2C = "SNMP_VERSION_2C",
    /** SNMP Version 3. */
    SnmpVersion_3 = "SNMP_VERSION_3"
}
/** The direction to sort results in. */
export declare enum SortDirection {
    /** Ascending */
    Asc = "ASC",
    /** Descending */
    Desc = "DESC"
}
/** Used to sort results. */
export type Sorter = {
    /** The model attribute you wish to reference. */
    attribute: Scalars['String']['input'];
    /** The direction to sort in. */
    direction: SortDirection;
};
/** Vetro FiberMap Splice Report. */
export type SpliceReport = {
    __typename: 'SpliceReport';
    /** Map Overlay Language (KML) file contents. */
    contents?: Maybe<Scalars['String']['output']>;
};
/** A standardized vehicle. */
export type StandardizedVehicle = {
    __typename: 'StandardizedVehicle';
    /** The manufacturer. */
    manufacturer?: Maybe<Scalars['String']['output']>;
    /** The model. */
    model?: Maybe<Scalars['String']['output']>;
    /** A descriptive name. */
    name?: Maybe<Scalars['String']['output']>;
    /** A GPS Tracking Provider vehicle unique identifier. */
    uid?: Maybe<Scalars['String']['output']>;
    /** The vehicle identification number. */
    vin?: Maybe<Scalars['String']['output']>;
    /** A year. */
    year?: Maybe<Scalars['String']['output']>;
};
/** A filter applied in a `StoredView`. */
export type StoredFilter = AccessloggableInterface & LoggableInterface & {
    __typename: 'StoredFilter';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The field that is being filtered. */
    field: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The operator being applied. */
    operator: StoredFilterOperator;
    /** The order in which the filter is applied. */
    order?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A group of filters in a `StoredView`. */
    stored_group?: Maybe<StoredGroup>;
    /** The ID of a StoredGroup entity. */
    stored_group_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value being filtered against. */
    value?: Maybe<Scalars['String']['output']>;
};
/** A filter applied in a `StoredView`. */
export type StoredFilterAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A filter applied in a `StoredView`. */
export type StoredFilterLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A filter applied in a `StoredView`. */
export type StoredFilterStored_GroupArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_view_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `StoredFilterConnection` type. */
export type StoredFilterConnection = {
    __typename: 'StoredFilterConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<StoredFilter>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Filters for this stored view group. */
export type StoredFilterMutationInput = {
    /** The field that is being filtered. */
    field: Scalars['String']['input'];
    /** The operator being applied. */
    operator: StoredFilterOperator;
    /** The order in which the filter is applied. */
    order?: InputMaybe<Scalars['Int']['input']>;
    /** The value being filtered against. */
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The operator applied to a `StoredFilter`. */
export declare enum StoredFilterOperator {
    /** Equals False */
    EqFalse = "EQ_FALSE",
    /** Equals Me */
    EqMe = "EQ_ME",
    /** Equals True */
    EqTrue = "EQ_TRUE",
    /** Greater Than */
    Gt = "GT",
    /** Greater Than or Equal To */
    Gte = "GTE",
    /** Is set */
    Isset = "ISSET",
    /** Less Than */
    Lt = "LT",
    /** Less Than or Equal To */
    Lte = "LTE",
    /** Matches */
    Match = "MATCH",
    /** Does Not Match */
    NoMatch = "NO_MATCH",
    /** Unset */
    Unset = "UNSET"
}
/** A group of filters in a `StoredView`. */
export type StoredGroup = AccessloggableInterface & LoggableInterface & {
    __typename: 'StoredGroup';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A filter applied in a `StoredView`. */
    stored_filters: StoredFilterConnection;
    /** A saved view. */
    stored_view?: Maybe<StoredView>;
    /** The ID of a `StoredView` entity. */
    stored_view_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A group of filters in a `StoredView`. */
export type StoredGroupAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A group of filters in a `StoredView`. */
export type StoredGroupLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A group of filters in a `StoredView`. */
export type StoredGroupStored_FiltersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    field?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    operator?: InputMaybe<StoredFilterOperator>;
    order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A group of filters in a `StoredView`. */
export type StoredGroupStored_ViewArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_global?: InputMaybe<Scalars['Boolean']['input']>;
    location?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sort_column?: InputMaybe<Scalars['String']['input']>;
    sort_direction?: InputMaybe<SortDirection>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<StoredViewType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `StoredGroupConnection` type. */
export type StoredGroupConnection = {
    __typename: 'StoredGroupConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<StoredGroup>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Filter groups for this stored view. */
export type StoredGroupMutationInput = {
    /** The list of filters for this `StoredGroup`. */
    stored_filters: Array<InputMaybe<StoredFilterMutationInput>>;
};
/** A saved view. */
export type StoredView = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'StoredView';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the user that created this entity. */
    created_by_user?: Maybe<User>;
    /** The ID of the user that created this entity. */
    created_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether or not this StoredView is available to all users. */
    is_global: Scalars['Boolean']['output'];
    /** The location in the UI that this view is available. */
    location: Scalars['String']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A name to identify this `StoredView`. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The column used to sort the filtered results. */
    sort_column?: Maybe<Scalars['String']['output']>;
    /** The direction to sort in. */
    sort_direction?: Maybe<SortDirection>;
    /** A group of filters in a `StoredView`. */
    stored_groups: StoredGroupConnection;
    /** A `StoredView` associated with a `User`. */
    stored_view_users: StoredViewUserConnection;
    /** The type of `StoredView`. */
    type: StoredViewType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A saved view. */
export type StoredViewAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A saved view. */
export type StoredViewCreated_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A saved view. */
export type StoredViewLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A saved view. */
export type StoredViewNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A saved view. */
export type StoredViewStored_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_view_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A saved view. */
export type StoredViewStored_View_UsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    location?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_view_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `StoredViewConnection` type. */
export type StoredViewConnection = {
    __typename: 'StoredViewConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<StoredView>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A type of `StoredView`. */
export declare enum StoredViewType {
    /** Advanced */
    Advanced = "ADVANCED",
    /** Simple */
    Simple = "SIMPLE"
}
/** A `StoredView` associated with a `User`. */
export type StoredViewUser = AccessloggableInterface & LoggableInterface & {
    __typename: 'StoredViewUser';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The location in the UI that this view is available. */
    location: Scalars['String']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A saved view. */
    stored_view?: Maybe<StoredView>;
    /** The ID of a `StoredView` entity. */
    stored_view_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A `StoredView` associated with a `User`. */
export type StoredViewUserAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `StoredView` associated with a `User`. */
export type StoredViewUserLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `StoredView` associated with a `User`. */
export type StoredViewUserStored_ViewArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_global?: InputMaybe<Scalars['Boolean']['input']>;
    location?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sort_column?: InputMaybe<Scalars['String']['input']>;
    sort_direction?: InputMaybe<SortDirection>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<StoredViewType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `StoredView` associated with a `User`. */
export type StoredViewUserUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `StoredViewUserConnection` type. */
export type StoredViewUserConnection = {
    __typename: 'StoredViewUserConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<StoredViewUser>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A subdivision is a state, a province, or similar geographical region. The section prior to the underscore is the country code. */
export declare enum Subdivision {
    /** Canillo */
    Ad_02 = "AD_02",
    /** Encamp */
    Ad_03 = "AD_03",
    /** La Massana */
    Ad_04 = "AD_04",
    /** Ordino */
    Ad_05 = "AD_05",
    /** Sant Julià de Lòria */
    Ad_06 = "AD_06",
    /** Andorra la Vella */
    Ad_07 = "AD_07",
    /** Escaldes-Engordany */
    Ad_08 = "AD_08",
    /** 'Ajmān */
    AeAj = "AE_AJ",
    /** Abū Z̧aby */
    AeAz = "AE_AZ",
    /** Dubayy */
    AeDu = "AE_DU",
    /** Al Fujayrah */
    AeFu = "AE_FU",
    /** Ra's al Khaymah */
    AeRk = "AE_RK",
    /** Ash Shāriqah */
    AeSh = "AE_SH",
    /** Umm al Qaywayn */
    AeUq = "AE_UQ",
    /** Balkh */
    AfBal = "AF_BAL",
    /** Bāmyān */
    AfBam = "AF_BAM",
    /** Bādghīs */
    AfBdg = "AF_BDG",
    /** Badakhshān */
    AfBds = "AF_BDS",
    /** Baghlān */
    AfBgl = "AF_BGL",
    /** Dāykundī */
    AfDay = "AF_DAY",
    /** Farāh */
    AfFra = "AF_FRA",
    /** Fāryāb */
    AfFyb = "AF_FYB",
    /** Ghaznī */
    AfGha = "AF_GHA",
    /** Ghōr */
    AfGho = "AF_GHO",
    /** Helmand */
    AfHel = "AF_HEL",
    /** Herāt */
    AfHer = "AF_HER",
    /** Jowzjān */
    AfJow = "AF_JOW",
    /** Kābul */
    AfKab = "AF_KAB",
    /** Kandahār */
    AfKan = "AF_KAN",
    /** Kāpīsā */
    AfKap = "AF_KAP",
    /** Kunduz */
    AfKdz = "AF_KDZ",
    /** Khōst */
    AfKho = "AF_KHO",
    /** Kunar */
    AfKnr = "AF_KNR",
    /** Laghmān */
    AfLag = "AF_LAG",
    /** Lōgar */
    AfLog = "AF_LOG",
    /** Nangarhār */
    AfNan = "AF_NAN",
    /** Nīmrōz */
    AfNim = "AF_NIM",
    /** Nūristān */
    AfNur = "AF_NUR",
    /** Panjshayr */
    AfPan = "AF_PAN",
    /** Parwān */
    AfPar = "AF_PAR",
    /** Paktiyā */
    AfPia = "AF_PIA",
    /** Paktīkā */
    AfPka = "AF_PKA",
    /** Samangān */
    AfSam = "AF_SAM",
    /** Sar-e Pul */
    AfSar = "AF_SAR",
    /** Takhār */
    AfTak = "AF_TAK",
    /** Uruzgān */
    AfUru = "AF_URU",
    /** Wardak */
    AfWar = "AF_WAR",
    /** Zābul */
    AfZab = "AF_ZAB",
    /** Saint George */
    Ag_03 = "AG_03",
    /** Saint John */
    Ag_04 = "AG_04",
    /** Saint Mary */
    Ag_05 = "AG_05",
    /** Saint Paul */
    Ag_06 = "AG_06",
    /** Saint Peter */
    Ag_07 = "AG_07",
    /** Saint Philip */
    Ag_08 = "AG_08",
    /** Barbuda */
    Ag_10 = "AG_10",
    /** Redonda */
    Ag_11 = "AG_11",
    /** Berat */
    Al_01 = "AL_01",
    /** Durrës */
    Al_02 = "AL_02",
    /** Elbasan */
    Al_03 = "AL_03",
    /** Fier */
    Al_04 = "AL_04",
    /** Gjirokastër */
    Al_05 = "AL_05",
    /** Korçë */
    Al_06 = "AL_06",
    /** Kukës */
    Al_07 = "AL_07",
    /** Lezhë */
    Al_08 = "AL_08",
    /** Dibër */
    Al_09 = "AL_09",
    /** Shkodër */
    Al_10 = "AL_10",
    /** Tiranë */
    Al_11 = "AL_11",
    /** Vlorë */
    Al_12 = "AL_12",
    /** Berat */
    AlBr = "AL_BR",
    /** Bulqizë */
    AlBu = "AL_BU",
    /** Dibër */
    AlDi = "AL_DI",
    /** Delvinë */
    AlDl = "AL_DL",
    /** Durrës */
    AlDr = "AL_DR",
    /** Devoll */
    AlDv = "AL_DV",
    /** Elbasan */
    AlEl = "AL_EL",
    /** Kolonjë */
    AlEr = "AL_ER",
    /** Fier */
    AlFr = "AL_FR",
    /** Gjirokastër */
    AlGj = "AL_GJ",
    /** Gramsh */
    AlGr = "AL_GR",
    /** Has */
    AlHa = "AL_HA",
    /** Kavajë */
    AlKa = "AL_KA",
    /** Kurbin */
    AlKb = "AL_KB",
    /** Kuçovë */
    AlKc = "AL_KC",
    /** Korçë */
    AlKo = "AL_KO",
    /** Krujë */
    AlKr = "AL_KR",
    /** Kukës */
    AlKu = "AL_KU",
    /** Librazhd */
    AlLb = "AL_LB",
    /** Lezhë */
    AlLe = "AL_LE",
    /** Lushnjë */
    AlLu = "AL_LU",
    /** Mallakastër */
    AlMk = "AL_MK",
    /** Malësi e Madhe */
    AlMm = "AL_MM",
    /** Mirditë */
    AlMr = "AL_MR",
    /** Mat */
    AlMt = "AL_MT",
    /** Pogradec */
    AlPg = "AL_PG",
    /** Peqin */
    AlPq = "AL_PQ",
    /** Përmet */
    AlPr = "AL_PR",
    /** Pukë */
    AlPu = "AL_PU",
    /** Shkodër */
    AlSh = "AL_SH",
    /** Skrapar */
    AlSk = "AL_SK",
    /** Sarandë */
    AlSr = "AL_SR",
    /** Tepelenë */
    AlTe = "AL_TE",
    /** Tropojë */
    AlTp = "AL_TP",
    /** Tiranë */
    AlTr = "AL_TR",
    /** Vlorë */
    AlVl = "AL_VL",
    /** Aragac̣otn */
    AmAg = "AM_AG",
    /** Ararat */
    AmAr = "AM_AR",
    /** Armavir */
    AmAv = "AM_AV",
    /** Erevan */
    AmEr = "AM_ER",
    /** Geġark'unik' */
    AmGr = "AM_GR",
    /** Kotayk' */
    AmKt = "AM_KT",
    /** Loṙi */
    AmLo = "AM_LO",
    /** Širak */
    AmSh = "AM_SH",
    /** Syunik' */
    AmSu = "AM_SU",
    /** Tavuš */
    AmTv = "AM_TV",
    /** Vayoć Jor */
    AmVd = "AM_VD",
    /** Bengo */
    AoBgo = "AO_BGO",
    /** Benguela */
    AoBgu = "AO_BGU",
    /** Bié */
    AoBie = "AO_BIE",
    /** Cabinda */
    AoCab = "AO_CAB",
    /** Kuando Kubango */
    AoCcu = "AO_CCU",
    /** Cunene */
    AoCnn = "AO_CNN",
    /** Kwanza Norte */
    AoCno = "AO_CNO",
    /** Kwanza Sul */
    AoCus = "AO_CUS",
    /** Huambo */
    AoHua = "AO_HUA",
    /** Huíla */
    AoHui = "AO_HUI",
    /** Lunda Norte */
    AoLno = "AO_LNO",
    /** Lunda Sul */
    AoLsu = "AO_LSU",
    /** Luanda */
    AoLua = "AO_LUA",
    /** Malange */
    AoMal = "AO_MAL",
    /** Moxico */
    AoMox = "AO_MOX",
    /** Namibe */
    AoNam = "AO_NAM",
    /** Uíge */
    AoUig = "AO_UIG",
    /** Zaire */
    AoZai = "AO_ZAI",
    /** Salta */
    ArA = "AR_A",
    /** Buenos Aires */
    ArB = "AR_B",
    /** Ciudad Autónoma de Buenos Aires */
    ArC = "AR_C",
    /** San Luis */
    ArD = "AR_D",
    /** Entre Ríos */
    ArE = "AR_E",
    /** La Rioja */
    ArF = "AR_F",
    /** Santiago del Estero */
    ArG = "AR_G",
    /** Chaco */
    ArH = "AR_H",
    /** San Juan */
    ArJ = "AR_J",
    /** Catamarca */
    ArK = "AR_K",
    /** La Pampa */
    ArL = "AR_L",
    /** Mendoza */
    ArM = "AR_M",
    /** Misiones */
    ArN = "AR_N",
    /** Formosa */
    ArP = "AR_P",
    /** Neuquén */
    ArQ = "AR_Q",
    /** Río Negro */
    ArR = "AR_R",
    /** Santa Fe */
    ArS = "AR_S",
    /** Tucumán */
    ArT = "AR_T",
    /** Chubut */
    ArU = "AR_U",
    /** Tierra del Fuego */
    ArV = "AR_V",
    /** Corrientes */
    ArW = "AR_W",
    /** Córdoba */
    ArX = "AR_X",
    /** Jujuy */
    ArY = "AR_Y",
    /** Santa Cruz */
    ArZ = "AR_Z",
    /** Burgenland */
    At_1 = "AT_1",
    /** Kärnten */
    At_2 = "AT_2",
    /** Niederösterreich */
    At_3 = "AT_3",
    /** Oberösterreich */
    At_4 = "AT_4",
    /** Salzburg */
    At_5 = "AT_5",
    /** Steiermark */
    At_6 = "AT_6",
    /** Tirol */
    At_7 = "AT_7",
    /** Vorarlberg */
    At_8 = "AT_8",
    /** Wien */
    At_9 = "AT_9",
    /** Australian Capital Territory */
    AuAct = "AU_ACT",
    /** New South Wales */
    AuNsw = "AU_NSW",
    /** Northern Territory */
    AuNt = "AU_NT",
    /** Queensland */
    AuQld = "AU_QLD",
    /** South Australia */
    AuSa = "AU_SA",
    /** Tasmania */
    AuTas = "AU_TAS",
    /** Victoria */
    AuVic = "AU_VIC",
    /** Western Australia */
    AuWa = "AU_WA",
    /** Abşeron */
    AzAbs = "AZ_ABS",
    /** Ağstafa */
    AzAga = "AZ_AGA",
    /** Ağcabәdi */
    AzAgc = "AZ_AGC",
    /** Ağdam */
    AzAgm = "AZ_AGM",
    /** Ağdaş */
    AzAgs = "AZ_AGS",
    /** Ağsu */
    AzAgu = "AZ_AGU",
    /** Astara */
    AzAst = "AZ_AST",
    /** Bakı */
    AzBa = "AZ_BA",
    /** Babək */
    AzBab = "AZ_BAB",
    /** Balakən */
    AzBal = "AZ_BAL",
    /** Bərdə */
    AzBar = "AZ_BAR",
    /** Beyləqan */
    AzBey = "AZ_BEY",
    /** Biləsuvar */
    AzBil = "AZ_BIL",
    /** Cəbrayıl */
    AzCab = "AZ_CAB",
    /** Cəlilabad */
    AzCal = "AZ_CAL",
    /** Culfa */
    AzCul = "AZ_CUL",
    /** Daşkəsən */
    AzDas = "AZ_DAS",
    /** Füzuli */
    AzFuz = "AZ_FUZ",
    /** Gәncә */
    AzGa = "AZ_GA",
    /** Gədəbəy */
    AzGad = "AZ_GAD",
    /** Goranboy */
    AzGor = "AZ_GOR",
    /** Göyçay */
    AzGoy = "AZ_GOY",
    /** Göygöl */
    AzGyg = "AZ_GYG",
    /** Hacıqabul */
    AzHac = "AZ_HAC",
    /** İmişli */
    AzImi = "AZ_IMI",
    /** İsmayıllı */
    AzIsm = "AZ_ISM",
    /** Kəlbəcər */
    AzKal = "AZ_KAL",
    /** Kǝngǝrli */
    AzKan = "AZ_KAN",
    /** Kürdəmir */
    AzKur = "AZ_KUR",
    /** Lәnkәran */
    AzLa = "AZ_LA",
    /** Laçın */
    AzLac = "AZ_LAC",
    /** Lənkəran */
    AzLan = "AZ_LAN",
    /** Lerik */
    AzLer = "AZ_LER",
    /** Masallı */
    AzMas = "AZ_MAS",
    /** Mingәçevir */
    AzMi = "AZ_MI",
    /** Naftalan */
    AzNa = "AZ_NA",
    /** Neftçala */
    AzNef = "AZ_NEF",
    /** Naxçıvan */
    AzNv = "AZ_NV",
    /** Naxçıvan */
    AzNx = "AZ_NX",
    /** Oğuz */
    AzOgu = "AZ_OGU",
    /** Ordubad */
    AzOrd = "AZ_ORD",
    /** Qәbәlә */
    AzQab = "AZ_QAB",
    /** Qax */
    AzQax = "AZ_QAX",
    /** Qazax */
    AzQaz = "AZ_QAZ",
    /** Quba */
    AzQba = "AZ_QBA",
    /** Qubadlı */
    AzQbi = "AZ_QBI",
    /** Qobustan */
    AzQob = "AZ_QOB",
    /** Qusar */
    AzQus = "AZ_QUS",
    /** Şәki */
    AzSa = "AZ_SA",
    /** Sabirabad */
    AzSab = "AZ_SAB",
    /** Sәdәrәk */
    AzSad = "AZ_SAD",
    /** Şahbuz */
    AzSah = "AZ_SAH",
    /** Şәki */
    AzSak = "AZ_SAK",
    /** Salyan */
    AzSal = "AZ_SAL",
    /** Şәrur */
    AzSar = "AZ_SAR",
    /** Saatlı */
    AzSat = "AZ_SAT",
    /** Şabran */
    AzSbn = "AZ_SBN",
    /** Siyәzәn */
    AzSiy = "AZ_SIY",
    /** Şәmkir */
    AzSkr = "AZ_SKR",
    /** Sumqayıt */
    AzSm = "AZ_SM",
    /** Şamaxı */
    AzSmi = "AZ_SMI",
    /** Samux */
    AzSmx = "AZ_SMX",
    /** Şirvan */
    AzSr = "AZ_SR",
    /** Şuşa */
    AzSus = "AZ_SUS",
    /** Tәrtәr */
    AzTar = "AZ_TAR",
    /** Tovuz */
    AzTov = "AZ_TOV",
    /** Ucar */
    AzUca = "AZ_UCA",
    /** Xankәndi */
    AzXa = "AZ_XA",
    /** Xaçmaz */
    AzXac = "AZ_XAC",
    /** Xocalı */
    AzXci = "AZ_XCI",
    /** Xızı */
    AzXiz = "AZ_XIZ",
    /** Xocavәnd */
    AzXvd = "AZ_XVD",
    /** Yardımlı */
    AzYar = "AZ_YAR",
    /** Yevlax */
    AzYe = "AZ_YE",
    /** Yevlax */
    AzYev = "AZ_YEV",
    /** Zәngilan */
    AzZan = "AZ_ZAN",
    /** Zaqatala */
    AzZaq = "AZ_ZAQ",
    /** Zәrdab */
    AzZar = "AZ_ZAR",
    /** Unsko-sanski kanton */
    Ba_01 = "BA_01",
    /** Posavski kanton */
    Ba_02 = "BA_02",
    /** Tuzlanska županija */
    Ba_03 = "BA_03",
    /** Zeničko-dobojski kanton */
    Ba_04 = "BA_04",
    /** Bosansko-podrinjski kanton */
    Ba_05 = "BA_05",
    /** Srednjobosanska županija */
    Ba_06 = "BA_06",
    /** Hercegovačko-neretvanski kanton */
    Ba_07 = "BA_07",
    /** Zapadnohercegovački kanton */
    Ba_08 = "BA_08",
    /** Sarajevska županija */
    Ba_09 = "BA_09",
    /** Kanton br. 10 (Livanjski kanton) */
    Ba_10 = "BA_10",
    /** Federacija Bosne i Hercegovine */
    BaBih = "BA_BIH",
    /** Brčko distrikt */
    BaBrc = "BA_BRC",
    /** Republika Srpska */
    BaSrp = "BA_SRP",
    /** Christ Church */
    Bb_01 = "BB_01",
    /** Saint Andrew */
    Bb_02 = "BB_02",
    /** Saint George */
    Bb_03 = "BB_03",
    /** Saint James */
    Bb_04 = "BB_04",
    /** Saint John */
    Bb_05 = "BB_05",
    /** Saint Joseph */
    Bb_06 = "BB_06",
    /** Saint Lucy */
    Bb_07 = "BB_07",
    /** Saint Michael */
    Bb_08 = "BB_08",
    /** Saint Peter */
    Bb_09 = "BB_09",
    /** Saint Philip */
    Bb_10 = "BB_10",
    /** Saint Thomas */
    Bb_11 = "BB_11",
    /** Bandarban */
    Bd_01 = "BD_01",
    /** Barguna */
    Bd_02 = "BD_02",
    /** Bogra */
    Bd_03 = "BD_03",
    /** Brahmanbaria */
    Bd_04 = "BD_04",
    /** Bagerhat */
    Bd_05 = "BD_05",
    /** Barisal */
    Bd_06 = "BD_06",
    /** Bhola */
    Bd_07 = "BD_07",
    /** Comilla */
    Bd_08 = "BD_08",
    /** Chandpur */
    Bd_09 = "BD_09",
    /** Chittagong */
    Bd_10 = "BD_10",
    /** Cox's Bazar */
    Bd_11 = "BD_11",
    /** Chuadanga */
    Bd_12 = "BD_12",
    /** Dhaka */
    Bd_13 = "BD_13",
    /** Dinajpur */
    Bd_14 = "BD_14",
    /** Faridpur */
    Bd_15 = "BD_15",
    /** Feni */
    Bd_16 = "BD_16",
    /** Gopalganj */
    Bd_17 = "BD_17",
    /** Gazipur */
    Bd_18 = "BD_18",
    /** Gaibandha */
    Bd_19 = "BD_19",
    /** Habiganj */
    Bd_20 = "BD_20",
    /** Jamalpur */
    Bd_21 = "BD_21",
    /** Jessore */
    Bd_22 = "BD_22",
    /** Jhenaidah */
    Bd_23 = "BD_23",
    /** Jaipurhat */
    Bd_24 = "BD_24",
    /** Jhalakati */
    Bd_25 = "BD_25",
    /** Kishoreganj */
    Bd_26 = "BD_26",
    /** Khulna */
    Bd_27 = "BD_27",
    /** Kurigram */
    Bd_28 = "BD_28",
    /** Khagrachari */
    Bd_29 = "BD_29",
    /** Kushtia */
    Bd_30 = "BD_30",
    /** Lakshmipur */
    Bd_31 = "BD_31",
    /** Lalmonirhat */
    Bd_32 = "BD_32",
    /** Manikganj */
    Bd_33 = "BD_33",
    /** Mymensingh */
    Bd_34 = "BD_34",
    /** Munshiganj */
    Bd_35 = "BD_35",
    /** Madaripur */
    Bd_36 = "BD_36",
    /** Magura */
    Bd_37 = "BD_37",
    /** Moulvibazar */
    Bd_38 = "BD_38",
    /** Meherpur */
    Bd_39 = "BD_39",
    /** Narayanganj */
    Bd_40 = "BD_40",
    /** Netrakona */
    Bd_41 = "BD_41",
    /** Narsingdi */
    Bd_42 = "BD_42",
    /** Narail */
    Bd_43 = "BD_43",
    /** Natore */
    Bd_44 = "BD_44",
    /** Nawabganj */
    Bd_45 = "BD_45",
    /** Nilphamari */
    Bd_46 = "BD_46",
    /** Noakhali */
    Bd_47 = "BD_47",
    /** Naogaon */
    Bd_48 = "BD_48",
    /** Pabna */
    Bd_49 = "BD_49",
    /** Pirojpur */
    Bd_50 = "BD_50",
    /** Patuakhali */
    Bd_51 = "BD_51",
    /** Panchagarh */
    Bd_52 = "BD_52",
    /** Rajbari */
    Bd_53 = "BD_53",
    /** Rajshahi */
    Bd_54 = "BD_54",
    /** Rangpur */
    Bd_55 = "BD_55",
    /** Rangamati */
    Bd_56 = "BD_56",
    /** Sherpur */
    Bd_57 = "BD_57",
    /** Satkhira */
    Bd_58 = "BD_58",
    /** Sirajganj */
    Bd_59 = "BD_59",
    /** Sylhet */
    Bd_60 = "BD_60",
    /** Sunamganj */
    Bd_61 = "BD_61",
    /** Shariatpur */
    Bd_62 = "BD_62",
    /** Tangail */
    Bd_63 = "BD_63",
    /** Thakurgaon */
    Bd_64 = "BD_64",
    /** Barisal */
    BdA = "BD_A",
    /** Chittagong */
    BdB = "BD_B",
    /** Dhaka */
    BdC = "BD_C",
    /** Khulna */
    BdD = "BD_D",
    /** Rajshahi */
    BdE = "BD_E",
    /** Rangpur */
    BdF = "BD_F",
    /** Sylhet */
    BdG = "BD_G",
    /** Brussels Hoofdstedelijk Gewest */
    BeBru = "BE_BRU",
    /** Antwerpen */
    BeVan = "BE_VAN",
    /** Vlaams-Brabant */
    BeVbr = "BE_VBR",
    /** Vlaams Gewest */
    BeVlg = "BE_VLG",
    /** Limburg */
    BeVli = "BE_VLI",
    /** Oost-Vlaanderen */
    BeVov = "BE_VOV",
    /** West-Vlaanderen */
    BeVwv = "BE_VWV",
    /** wallonne, Région */
    BeWal = "BE_WAL",
    /** Brabant wallon */
    BeWbr = "BE_WBR",
    /** Hainaut */
    BeWht = "BE_WHT",
    /** Liège */
    BeWlg = "BE_WLG",
    /** Luxembourg */
    BeWlx = "BE_WLX",
    /** Namur */
    BeWna = "BE_WNA",
    /** Boucle du Mouhoun */
    Bf_01 = "BF_01",
    /** Cascades */
    Bf_02 = "BF_02",
    /** Centre */
    Bf_03 = "BF_03",
    /** Centre-Est */
    Bf_04 = "BF_04",
    /** Centre-Nord */
    Bf_05 = "BF_05",
    /** Centre-Ouest */
    Bf_06 = "BF_06",
    /** Centre-Sud */
    Bf_07 = "BF_07",
    /** Est */
    Bf_08 = "BF_08",
    /** Hauts-Bassins */
    Bf_09 = "BF_09",
    /** Nord */
    Bf_10 = "BF_10",
    /** Plateau-Central */
    Bf_11 = "BF_11",
    /** Sahel */
    Bf_12 = "BF_12",
    /** Sud-Ouest */
    Bf_13 = "BF_13",
    /** Balé */
    BfBal = "BF_BAL",
    /** Bam */
    BfBam = "BF_BAM",
    /** Banwa */
    BfBan = "BF_BAN",
    /** Bazèga */
    BfBaz = "BF_BAZ",
    /** Bougouriba */
    BfBgr = "BF_BGR",
    /** Boulgou */
    BfBlg = "BF_BLG",
    /** Boulkiemdé */
    BfBlk = "BF_BLK",
    /** Comoé */
    BfCom = "BF_COM",
    /** Ganzourgou */
    BfGan = "BF_GAN",
    /** Gnagna */
    BfGna = "BF_GNA",
    /** Gourma */
    BfGou = "BF_GOU",
    /** Houet */
    BfHou = "BF_HOU",
    /** Ioba */
    BfIob = "BF_IOB",
    /** Kadiogo */
    BfKad = "BF_KAD",
    /** Kénédougou */
    BfKen = "BF_KEN",
    /** Komondjari */
    BfKmd = "BF_KMD",
    /** Kompienga */
    BfKmp = "BF_KMP",
    /** Koulpélogo */
    BfKop = "BF_KOP",
    /** Kossi */
    BfKos = "BF_KOS",
    /** Kouritenga */
    BfKot = "BF_KOT",
    /** Kourwéogo */
    BfKow = "BF_KOW",
    /** Léraba */
    BfLer = "BF_LER",
    /** Loroum */
    BfLor = "BF_LOR",
    /** Mouhoun */
    BfMou = "BF_MOU",
    /** Namentenga */
    BfNam = "BF_NAM",
    /** Nahouri */
    BfNao = "BF_NAO",
    /** Nayala */
    BfNay = "BF_NAY",
    /** Noumbiel */
    BfNou = "BF_NOU",
    /** Oubritenga */
    BfOub = "BF_OUB",
    /** Oudalan */
    BfOud = "BF_OUD",
    /** Passoré */
    BfPas = "BF_PAS",
    /** Poni */
    BfPon = "BF_PON",
    /** Séno */
    BfSen = "BF_SEN",
    /** Sissili */
    BfSis = "BF_SIS",
    /** Sanmatenga */
    BfSmt = "BF_SMT",
    /** Sanguié */
    BfSng = "BF_SNG",
    /** Soum */
    BfSom = "BF_SOM",
    /** Sourou */
    BfSor = "BF_SOR",
    /** Tapoa */
    BfTap = "BF_TAP",
    /** Tui */
    BfTui = "BF_TUI",
    /** Yagha */
    BfYag = "BF_YAG",
    /** Yatenga */
    BfYat = "BF_YAT",
    /** Ziro */
    BfZir = "BF_ZIR",
    /** Zondoma */
    BfZon = "BF_ZON",
    /** Zoundwéogo */
    BfZou = "BF_ZOU",
    /** Blagoevgrad */
    Bg_01 = "BG_01",
    /** Burgas */
    Bg_02 = "BG_02",
    /** Varna */
    Bg_03 = "BG_03",
    /** Veliko Tarnovo */
    Bg_04 = "BG_04",
    /** Vidin */
    Bg_05 = "BG_05",
    /** Vratsa */
    Bg_06 = "BG_06",
    /** Gabrovo */
    Bg_07 = "BG_07",
    /** Dobrich */
    Bg_08 = "BG_08",
    /** Kardzhali */
    Bg_09 = "BG_09",
    /** Kyustendil */
    Bg_10 = "BG_10",
    /** Lovech */
    Bg_11 = "BG_11",
    /** Montana */
    Bg_12 = "BG_12",
    /** Pazardzhik */
    Bg_13 = "BG_13",
    /** Pernik */
    Bg_14 = "BG_14",
    /** Pleven */
    Bg_15 = "BG_15",
    /** Plovdiv */
    Bg_16 = "BG_16",
    /** Razgrad */
    Bg_17 = "BG_17",
    /** Ruse */
    Bg_18 = "BG_18",
    /** Silistra */
    Bg_19 = "BG_19",
    /** Sliven */
    Bg_20 = "BG_20",
    /** Smolyan */
    Bg_21 = "BG_21",
    /** Sofia (stolitsa) */
    Bg_22 = "BG_22",
    /** Sofia */
    Bg_23 = "BG_23",
    /** Stara Zagora */
    Bg_24 = "BG_24",
    /** Targovishte */
    Bg_25 = "BG_25",
    /** Haskovo */
    Bg_26 = "BG_26",
    /** Shumen */
    Bg_27 = "BG_27",
    /** Yambol */
    Bg_28 = "BG_28",
    /** Al Manāmah */
    Bh_13 = "BH_13",
    /** Al Janūbīyah */
    Bh_14 = "BH_14",
    /** Al Muḩarraq */
    Bh_15 = "BH_15",
    /** Al Wusţá */
    Bh_16 = "BH_16",
    /** Ash Shamālīyah */
    Bh_17 = "BH_17",
    /** Bubanza */
    BiBb = "BI_BB",
    /** Bujumbura Rural */
    BiBl = "BI_BL",
    /** Bujumbura Mairie */
    BiBm = "BI_BM",
    /** Bururi */
    BiBr = "BI_BR",
    /** Cankuzo */
    BiCa = "BI_CA",
    /** Cibitoke */
    BiCi = "BI_CI",
    /** Gitega */
    BiGi = "BI_GI",
    /** Kirundo */
    BiKi = "BI_KI",
    /** Karuzi */
    BiKr = "BI_KR",
    /** Kayanza */
    BiKy = "BI_KY",
    /** Makamba */
    BiMa = "BI_MA",
    /** Muramvya */
    BiMu = "BI_MU",
    /** Mwaro */
    BiMw = "BI_MW",
    /** Muyinga */
    BiMy = "BI_MY",
    /** Ngozi */
    BiNg = "BI_NG",
    /** Rutana */
    BiRt = "BI_RT",
    /** Ruyigi */
    BiRy = "BI_RY",
    /** Atakora */
    BjAk = "BJ_AK",
    /** Alibori */
    BjAl = "BJ_AL",
    /** Atlantique */
    BjAq = "BJ_AQ",
    /** Borgou */
    BjBo = "BJ_BO",
    /** Collines */
    BjCo = "BJ_CO",
    /** Donga */
    BjDo = "BJ_DO",
    /** Kouffo */
    BjKo = "BJ_KO",
    /** Littoral */
    BjLi = "BJ_LI",
    /** Mono */
    BjMo = "BJ_MO",
    /** Ouémé */
    BjOu = "BJ_OU",
    /** Plateau */
    BjPl = "BJ_PL",
    /** Zou */
    BjZo = "BJ_ZO",
    /** Belait */
    BnBe = "BN_BE",
    /** Brunei-Muara */
    BnBm = "BN_BM",
    /** Temburong */
    BnTe = "BN_TE",
    /** Tutong */
    BnTu = "BN_TU",
    /** El Beni */
    BoB = "BO_B",
    /** Cochabamba */
    BoC = "BO_C",
    /** Chuquisaca */
    BoH = "BO_H",
    /** La Paz */
    BoL = "BO_L",
    /** Pando */
    BoN = "BO_N",
    /** Oruro */
    BoO = "BO_O",
    /** Potosí */
    BoP = "BO_P",
    /** Santa Cruz */
    BoS = "BO_S",
    /** Tarija */
    BoT = "BO_T",
    /** Bonaire */
    BqBo = "BQ_BO",
    /** Saba */
    BqSa = "BQ_SA",
    /** Sint Eustatius */
    BqSe = "BQ_SE",
    /** Acre */
    BrAc = "BR_AC",
    /** Alagoas */
    BrAl = "BR_AL",
    /** Amazonas */
    BrAm = "BR_AM",
    /** Amapá */
    BrAp = "BR_AP",
    /** Bahia */
    BrBa = "BR_BA",
    /** Ceará */
    BrCe = "BR_CE",
    /** Distrito Federal */
    BrDf = "BR_DF",
    /** Espírito Santo */
    BrEs = "BR_ES",
    /** Goiás */
    BrGo = "BR_GO",
    /** Maranhão */
    BrMa = "BR_MA",
    /** Minas Gerais */
    BrMg = "BR_MG",
    /** Mato Grosso do Sul */
    BrMs = "BR_MS",
    /** Mato Grosso */
    BrMt = "BR_MT",
    /** Pará */
    BrPa = "BR_PA",
    /** Paraíba */
    BrPb = "BR_PB",
    /** Pernambuco */
    BrPe = "BR_PE",
    /** Piauí */
    BrPi = "BR_PI",
    /** Paraná */
    BrPr = "BR_PR",
    /** Rio de Janeiro */
    BrRj = "BR_RJ",
    /** Rio Grande do Norte */
    BrRn = "BR_RN",
    /** Rondônia */
    BrRo = "BR_RO",
    /** Roraima */
    BrRr = "BR_RR",
    /** Rio Grande do Sul */
    BrRs = "BR_RS",
    /** Santa Catarina */
    BrSc = "BR_SC",
    /** Sergipe */
    BrSe = "BR_SE",
    /** São Paulo */
    BrSp = "BR_SP",
    /** Tocantins */
    BrTo = "BR_TO",
    /** Acklins */
    BsAk = "BS_AK",
    /** Bimini */
    BsBi = "BS_BI",
    /** Black Point */
    BsBp = "BS_BP",
    /** Berry Islands */
    BsBy = "BS_BY",
    /** Central Eleuthera */
    BsCe = "BS_CE",
    /** Cat Island */
    BsCi = "BS_CI",
    /** Crooked Island and Long Cay */
    BsCk = "BS_CK",
    /** Central Abaco */
    BsCo = "BS_CO",
    /** Central Andros */
    BsCs = "BS_CS",
    /** East Grand Bahama */
    BsEg = "BS_EG",
    /** Exuma */
    BsEx = "BS_EX",
    /** City of Freeport */
    BsFp = "BS_FP",
    /** Grand Cay */
    BsGc = "BS_GC",
    /** Harbour Island */
    BsHi = "BS_HI",
    /** Hope Town */
    BsHt = "BS_HT",
    /** Inagua */
    BsIn = "BS_IN",
    /** Long Island */
    BsLi = "BS_LI",
    /** Mangrove Cay */
    BsMc = "BS_MC",
    /** Mayaguana */
    BsMg = "BS_MG",
    /** Moore's Island */
    BsMi = "BS_MI",
    /** North Eleuthera */
    BsNe = "BS_NE",
    /** North Abaco */
    BsNo = "BS_NO",
    /** North Andros */
    BsNs = "BS_NS",
    /** Rum Cay */
    BsRc = "BS_RC",
    /** Ragged Island */
    BsRi = "BS_RI",
    /** South Andros */
    BsSa = "BS_SA",
    /** South Eleuthera */
    BsSe = "BS_SE",
    /** South Abaco */
    BsSo = "BS_SO",
    /** San Salvador */
    BsSs = "BS_SS",
    /** Spanish Wells */
    BsSw = "BS_SW",
    /** West Grand Bahama */
    BsWg = "BS_WG",
    /** Paro */
    Bt_11 = "BT_11",
    /** Chhukha */
    Bt_12 = "BT_12",
    /** Ha */
    Bt_13 = "BT_13",
    /** Samtse */
    Bt_14 = "BT_14",
    /** Thimphu */
    Bt_15 = "BT_15",
    /** Tsirang */
    Bt_21 = "BT_21",
    /** Dagana */
    Bt_22 = "BT_22",
    /** Punakha */
    Bt_23 = "BT_23",
    /** Wangdue Phodrang */
    Bt_24 = "BT_24",
    /** Sarpang */
    Bt_31 = "BT_31",
    /** Trongsa */
    Bt_32 = "BT_32",
    /** Bumthang */
    Bt_33 = "BT_33",
    /** Zhemgang */
    Bt_34 = "BT_34",
    /** Trashigang */
    Bt_41 = "BT_41",
    /** Monggar */
    Bt_42 = "BT_42",
    /** Pemagatshel */
    Bt_43 = "BT_43",
    /** Lhuentse */
    Bt_44 = "BT_44",
    /** Samdrup Jongkha */
    Bt_45 = "BT_45",
    /** Gasa */
    BtGa = "BT_GA",
    /** Trashi Yangtse */
    BtTy = "BT_TY",
    /** Central */
    BwCe = "BW_CE",
    /** Chobe */
    BwCh = "BW_CH",
    /** Francistown */
    BwFr = "BW_FR",
    /** Gaborone */
    BwGa = "BW_GA",
    /** Ghanzi */
    BwGh = "BW_GH",
    /** Jwaneng */
    BwJw = "BW_JW",
    /** Kgalagadi */
    BwKg = "BW_KG",
    /** Kgatleng */
    BwKl = "BW_KL",
    /** Kweneng */
    BwKw = "BW_KW",
    /** Lobatse */
    BwLo = "BW_LO",
    /** North East */
    BwNe = "BW_NE",
    /** North West */
    BwNw = "BW_NW",
    /** South East */
    BwSe = "BW_SE",
    /** Southern */
    BwSo = "BW_SO",
    /** Selibe Phikwe */
    BwSp = "BW_SP",
    /** Sowa Town */
    BwSt = "BW_ST",
    /** Brestskaja oblast' */
    ByBr = "BY_BR",
    /** Horad Minsk */
    ByHm = "BY_HM",
    /** Gomel'skaya oblast' */
    ByHo = "BY_HO",
    /** Grodnenskaya oblast' */
    ByHr = "BY_HR",
    /** Mogilevskaya oblast' */
    ByMa = "BY_MA",
    /** Minskaya voblasts' */
    ByMi = "BY_MI",
    /** Vitsyebskaya voblasts' */
    ByVi = "BY_VI",
    /** Belize */
    BzBz = "BZ_BZ",
    /** Cayo */
    BzCy = "BZ_CY",
    /** Corozal */
    BzCzl = "BZ_CZL",
    /** Orange Walk */
    BzOw = "BZ_OW",
    /** Stann Creek */
    BzSc = "BZ_SC",
    /** Toledo */
    BzTol = "BZ_TOL",
    /** Alberta */
    CaAb = "CA_AB",
    /** British Columbia */
    CaBc = "CA_BC",
    /** Manitoba */
    CaMb = "CA_MB",
    /** New Brunswick */
    CaNb = "CA_NB",
    /** Newfoundland and Labrador */
    CaNl = "CA_NL",
    /** Nova Scotia */
    CaNs = "CA_NS",
    /** Northwest Territories */
    CaNt = "CA_NT",
    /** Nunavut */
    CaNu = "CA_NU",
    /** Ontario */
    CaOn = "CA_ON",
    /** Prince Edward Island */
    CaPe = "CA_PE",
    /** Quebec */
    CaQc = "CA_QC",
    /** Saskatchewan */
    CaSk = "CA_SK",
    /** Yukon */
    CaYt = "CA_YT",
    /** Bas-Congo */
    CdBc = "CD_BC",
    /** Bandundu */
    CdBn = "CD_BN",
    /** Équateur */
    CdEq = "CD_EQ",
    /** Katanga */
    CdKa = "CD_KA",
    /** Kasai-Oriental */
    CdKe = "CD_KE",
    /** Kinshasa */
    CdKn = "CD_KN",
    /** Kasai-Occidental */
    CdKw = "CD_KW",
    /** Maniema */
    CdMa = "CD_MA",
    /** Nord-Kivu */
    CdNk = "CD_NK",
    /** Orientale */
    CdOr = "CD_OR",
    /** Sud-Kivu */
    CdSk = "CD_SK",
    /** Ouham */
    CfAc = "CF_AC",
    /** Bamïngï-Bangoran */
    CfBb = "CF_BB",
    /** Bangî */
    CfBgf = "CF_BGF",
    /** Basse-Kotto */
    CfBk = "CF_BK",
    /** Tö-Kötö */
    CfHk = "CF_HK",
    /** Tö-Mbömü */
    CfHm = "CF_HM",
    /** Tö-Sangä / Mbaere-Kadeï */
    CfHs = "CF_HS",
    /** Gribingui */
    CfKb = "CF_KB",
    /** Kemö-Gïrïbïngï */
    CfKg = "CF_KG",
    /** Lobaye */
    CfLb = "CF_LB",
    /** Mbömü */
    CfMb = "CF_MB",
    /** Ömbëlä-Pökö */
    CfMp = "CF_MP",
    /** Nana-Mambéré */
    CfNm = "CF_NM",
    /** Wâmo-Pendë */
    CfOp = "CF_OP",
    /** Sangha */
    CfSe = "CF_SE",
    /** Wäkä */
    CfUk = "CF_UK",
    /** Vakaga */
    CfVk = "CF_VK",
    /** Lékoumou */
    Cg_2 = "CG_2",
    /** Kouilou */
    Cg_5 = "CG_5",
    /** Likouala */
    Cg_7 = "CG_7",
    /** Cuvette */
    Cg_8 = "CG_8",
    /** Niari */
    Cg_9 = "CG_9",
    /** Bouenza */
    Cg_11 = "CG_11",
    /** Pool */
    Cg_12 = "CG_12",
    /** Sangha */
    Cg_13 = "CG_13",
    /** Plateaux */
    Cg_14 = "CG_14",
    /** Cuvette-Ouest */
    Cg_15 = "CG_15",
    /** Pointe-Noire */
    Cg_16 = "CG_16",
    /** Brazzaville */
    CgBzv = "CG_BZV",
    /** Aargau */
    ChAg = "CH_AG",
    /** Appenzell Innerrhoden */
    ChAi = "CH_AI",
    /** Appenzell Ausserrhoden */
    ChAr = "CH_AR",
    /** Bern */
    ChBe = "CH_BE",
    /** Basel-Landschaft */
    ChBl = "CH_BL",
    /** Basel-Stadt */
    ChBs = "CH_BS",
    /** Freiburg */
    ChFr = "CH_FR",
    /** Genève */
    ChGe = "CH_GE",
    /** Glarus */
    ChGl = "CH_GL",
    /** Grigioni */
    ChGr = "CH_GR",
    /** Jura */
    ChJu = "CH_JU",
    /** Luzern */
    ChLu = "CH_LU",
    /** Neuchâtel */
    ChNe = "CH_NE",
    /** Nidwalden */
    ChNw = "CH_NW",
    /** Obwalden */
    ChOw = "CH_OW",
    /** Sankt Gallen */
    ChSg = "CH_SG",
    /** Schaffhausen */
    ChSh = "CH_SH",
    /** Solothurn */
    ChSo = "CH_SO",
    /** Schwyz */
    ChSz = "CH_SZ",
    /** Thurgau */
    ChTg = "CH_TG",
    /** Ticino */
    ChTi = "CH_TI",
    /** Uri */
    ChUr = "CH_UR",
    /** Vaud */
    ChVd = "CH_VD",
    /** Valais */
    ChVs = "CH_VS",
    /** Zug */
    ChZg = "CH_ZG",
    /** Zürich */
    ChZh = "CH_ZH",
    /** Lagunes (Région des) */
    Ci_01 = "CI_01",
    /** Haut-Sassandra (Région du) */
    Ci_02 = "CI_02",
    /** Savanes (Région des) */
    Ci_03 = "CI_03",
    /** Vallée du Bandama (Région de la) */
    Ci_04 = "CI_04",
    /** Moyen-Comoé (Région du) */
    Ci_05 = "CI_05",
    /** 18 Montagnes (Région des) */
    Ci_06 = "CI_06",
    /** Lacs (Région des) */
    Ci_07 = "CI_07",
    /** Zanzan (Région du) */
    Ci_08 = "CI_08",
    /** Bas-Sassandra (Région du) */
    Ci_09 = "CI_09",
    /** Denguélé (Région du) */
    Ci_10 = "CI_10",
    /** Nzi-Comoé (Région) */
    Ci_11 = "CI_11",
    /** Marahoué (Région de la) */
    Ci_12 = "CI_12",
    /** Sud-Comoé (Région du) */
    Ci_13 = "CI_13",
    /** Worodougou (Région du) */
    Ci_14 = "CI_14",
    /** Sud-Bandama (Région du) */
    Ci_15 = "CI_15",
    /** Agnébi (Région de l') */
    Ci_16 = "CI_16",
    /** Bafing (Région du) */
    Ci_17 = "CI_17",
    /** Fromager (Région du) */
    Ci_18 = "CI_18",
    /** Moyen-Cavally (Région du) */
    Ci_19 = "CI_19",
    /** Aysén */
    ClAi = "CL_AI",
    /** Antofagasta */
    ClAn = "CL_AN",
    /** Arica y Parinacota */
    ClAp = "CL_AP",
    /** Araucanía */
    ClAr = "CL_AR",
    /** Atacama */
    ClAt = "CL_AT",
    /** Biobío */
    ClBi = "CL_BI",
    /** Coquimbo */
    ClCo = "CL_CO",
    /** Libertador General Bernardo O'Higgins */
    ClLi = "CL_LI",
    /** Los Lagos */
    ClLl = "CL_LL",
    /** Los Ríos */
    ClLr = "CL_LR",
    /** Magallanes */
    ClMa = "CL_MA",
    /** Maule */
    ClMl = "CL_ML",
    /** Región Metropolitana de Santiago */
    ClRm = "CL_RM",
    /** Tarapacá */
    ClTa = "CL_TA",
    /** Valparaíso */
    ClVs = "CL_VS",
    /** Adamaoua */
    CmAd = "CM_AD",
    /** Centre */
    CmCe = "CM_CE",
    /** Far North */
    CmEn = "CM_EN",
    /** East */
    CmEs = "CM_ES",
    /** Littoral */
    CmLt = "CM_LT",
    /** North */
    CmNo = "CM_NO",
    /** North-West */
    CmNw = "CM_NW",
    /** West */
    CmOu = "CM_OU",
    /** South */
    CmSu = "CM_SU",
    /** South-West */
    CmSw = "CM_SW",
    /** Beijing */
    Cn_11 = "CN_11",
    /** Tianjin */
    Cn_12 = "CN_12",
    /** Hebei */
    Cn_13 = "CN_13",
    /** Shanxi */
    Cn_14 = "CN_14",
    /** Nei Mongol */
    Cn_15 = "CN_15",
    /** Liaoning */
    Cn_21 = "CN_21",
    /** Jilin */
    Cn_22 = "CN_22",
    /** Heilongjiang */
    Cn_23 = "CN_23",
    /** Shanghai */
    Cn_31 = "CN_31",
    /** Jiangsu */
    Cn_32 = "CN_32",
    /** Zhejiang */
    Cn_33 = "CN_33",
    /** Anhui */
    Cn_34 = "CN_34",
    /** Fujian */
    Cn_35 = "CN_35",
    /** Jiangxi */
    Cn_36 = "CN_36",
    /** Shandong */
    Cn_37 = "CN_37",
    /** Henan */
    Cn_41 = "CN_41",
    /** Hubei */
    Cn_42 = "CN_42",
    /** Hunan */
    Cn_43 = "CN_43",
    /** Guangdong */
    Cn_44 = "CN_44",
    /** Guangxi */
    Cn_45 = "CN_45",
    /** Hainan */
    Cn_46 = "CN_46",
    /** Chongqing */
    Cn_50 = "CN_50",
    /** Sichuan */
    Cn_51 = "CN_51",
    /** Guizhou */
    Cn_52 = "CN_52",
    /** Yunnan */
    Cn_53 = "CN_53",
    /** Xizang */
    Cn_54 = "CN_54",
    /** Shaanxi */
    Cn_61 = "CN_61",
    /** Gansu */
    Cn_62 = "CN_62",
    /** Qinghai */
    Cn_63 = "CN_63",
    /** Ningxia */
    Cn_64 = "CN_64",
    /** Xinjiang */
    Cn_65 = "CN_65",
    /** Taiwan  */
    Cn_71 = "CN_71",
    /** Hong Kong */
    Cn_91 = "CN_91",
    /** Macao */
    Cn_92 = "CN_92",
    /** Amazonas */
    CoAma = "CO_AMA",
    /** Antioquia */
    CoAnt = "CO_ANT",
    /** Arauca */
    CoAra = "CO_ARA",
    /** Atlántico */
    CoAtl = "CO_ATL",
    /** Bolívar */
    CoBol = "CO_BOL",
    /** Boyacá */
    CoBoy = "CO_BOY",
    /** Caldas */
    CoCal = "CO_CAL",
    /** Caquetá */
    CoCaq = "CO_CAQ",
    /** Casanare */
    CoCas = "CO_CAS",
    /** Cauca */
    CoCau = "CO_CAU",
    /** Cesar */
    CoCes = "CO_CES",
    /** Chocó */
    CoCho = "CO_CHO",
    /** Córdoba */
    CoCor = "CO_COR",
    /** Cundinamarca */
    CoCun = "CO_CUN",
    /** Distrito Capital de Bogotá */
    CoDc = "CO_DC",
    /** Guainía */
    CoGua = "CO_GUA",
    /** Guaviare */
    CoGuv = "CO_GUV",
    /** Huila */
    CoHui = "CO_HUI",
    /** La Guajira */
    CoLag = "CO_LAG",
    /** Magdalena */
    CoMag = "CO_MAG",
    /** Meta */
    CoMet = "CO_MET",
    /** Nariño */
    CoNar = "CO_NAR",
    /** Norte de Santander */
    CoNsa = "CO_NSA",
    /** Putumayo */
    CoPut = "CO_PUT",
    /** Quindío */
    CoQui = "CO_QUI",
    /** Risaralda */
    CoRis = "CO_RIS",
    /** Santander */
    CoSan = "CO_SAN",
    /** San Andrés, Providencia y Santa Catalina */
    CoSap = "CO_SAP",
    /** Sucre */
    CoSuc = "CO_SUC",
    /** Tolima */
    CoTol = "CO_TOL",
    /** Valle del Cauca */
    CoVac = "CO_VAC",
    /** Vaupés */
    CoVau = "CO_VAU",
    /** Vichada */
    CoVid = "CO_VID",
    /** Alajuela */
    CrA = "CR_A",
    /** Cartago */
    CrC = "CR_C",
    /** Guanacaste */
    CrG = "CR_G",
    /** Heredia */
    CrH = "CR_H",
    /** Limón */
    CrL = "CR_L",
    /** Puntarenas */
    CrP = "CR_P",
    /** San José */
    CrSj = "CR_SJ",
    /** Pinar del Río */
    Cu_01 = "CU_01",
    /** La Habana */
    Cu_03 = "CU_03",
    /** Matanzas */
    Cu_04 = "CU_04",
    /** Villa Clara */
    Cu_05 = "CU_05",
    /** Cienfuegos */
    Cu_06 = "CU_06",
    /** Sancti Spíritus */
    Cu_07 = "CU_07",
    /** Ciego de Ávila */
    Cu_08 = "CU_08",
    /** Camagüey */
    Cu_09 = "CU_09",
    /** Las Tunas */
    Cu_10 = "CU_10",
    /** Holguín */
    Cu_11 = "CU_11",
    /** Granma */
    Cu_12 = "CU_12",
    /** Santiago de Cuba */
    Cu_13 = "CU_13",
    /** Guantánamo */
    Cu_14 = "CU_14",
    /** Artemisa */
    Cu_15 = "CU_15",
    /** Mayabeque */
    Cu_16 = "CU_16",
    /** Isla de la Juventud */
    Cu_99 = "CU_99",
    /** Ilhas de Barlavento */
    CvB = "CV_B",
    /** Brava */
    CvBr = "CV_BR",
    /** Boa Vista */
    CvBv = "CV_BV",
    /** Santa Catarina */
    CvCa = "CV_CA",
    /** Santa Catarina do Fogo */
    CvCf = "CV_CF",
    /** Santa Cruz */
    CvCr = "CV_CR",
    /** Maio */
    CvMa = "CV_MA",
    /** Mosteiros */
    CvMo = "CV_MO",
    /** Paul */
    CvPa = "CV_PA",
    /** Porto Novo */
    CvPn = "CV_PN",
    /** Praia */
    CvPr = "CV_PR",
    /** Ribeira Brava */
    CvRb = "CV_RB",
    /** Ribeira Grande */
    CvRg = "CV_RG",
    /** Ribeira Grande de Santiago */
    CvRs = "CV_RS",
    /** Ilhas de Sotavento */
    CvS = "CV_S",
    /** São Domingos */
    CvSd = "CV_SD",
    /** São Filipe */
    CvSf = "CV_SF",
    /** Sal */
    CvSl = "CV_SL",
    /** São Miguel */
    CvSm = "CV_SM",
    /** São Lourenço dos Órgãos */
    CvSo = "CV_SO",
    /** São Salvador do Mundo */
    CvSs = "CV_SS",
    /** São Vicente */
    CvSv = "CV_SV",
    /** Tarrafal */
    CvTa = "CV_TA",
    /** Tarrafal de São Nicolau */
    CvTs = "CV_TS",
    /** Lefkosia */
    Cy_01 = "CY_01",
    /** Leymosun */
    Cy_02 = "CY_02",
    /** Larnaka */
    Cy_03 = "CY_03",
    /** Gazimaǧusa */
    Cy_04 = "CY_04",
    /** Pafos */
    Cy_05 = "CY_05",
    /** Keryneia */
    Cy_06 = "CY_06",
    /** Praha 10 */
    Cz_10A = "CZ_10A",
    /** Praha 11 */
    Cz_10B = "CZ_10B",
    /** Praha 12 */
    Cz_10C = "CZ_10C",
    /** Praha 13 */
    Cz_10D = "CZ_10D",
    /** Praha 14 */
    Cz_10E = "CZ_10E",
    /** Praha 15 */
    Cz_10F = "CZ_10F",
    /** Praha-západ */
    Cz_20A = "CZ_20A",
    /** Příbram */
    Cz_20B = "CZ_20B",
    /** Rakovník */
    Cz_20C = "CZ_20C",
    /** Praha 1 */
    Cz_101 = "CZ_101",
    /** Praha 2 */
    Cz_102 = "CZ_102",
    /** Praha 3 */
    Cz_103 = "CZ_103",
    /** Praha 4 */
    Cz_104 = "CZ_104",
    /** Praha 5 */
    Cz_105 = "CZ_105",
    /** Praha 6 */
    Cz_106 = "CZ_106",
    /** Praha 7 */
    Cz_107 = "CZ_107",
    /** Praha 8 */
    Cz_108 = "CZ_108",
    /** Praha 9 */
    Cz_109 = "CZ_109",
    /** Benešov */
    Cz_201 = "CZ_201",
    /** Beroun */
    Cz_202 = "CZ_202",
    /** Kladno */
    Cz_203 = "CZ_203",
    /** Kolín */
    Cz_204 = "CZ_204",
    /** Kutná Hora */
    Cz_205 = "CZ_205",
    /** Mělník */
    Cz_206 = "CZ_206",
    /** Mladá Boleslav */
    Cz_207 = "CZ_207",
    /** Nymburk */
    Cz_208 = "CZ_208",
    /** Praha-východ */
    Cz_209 = "CZ_209",
    /** České Budějovice */
    Cz_311 = "CZ_311",
    /** Český Krumlov */
    Cz_312 = "CZ_312",
    /** Jindřichův Hradec */
    Cz_313 = "CZ_313",
    /** Písek */
    Cz_314 = "CZ_314",
    /** Prachatice */
    Cz_315 = "CZ_315",
    /** Strakonice */
    Cz_316 = "CZ_316",
    /** Tábor */
    Cz_317 = "CZ_317",
    /** Domažlice */
    Cz_321 = "CZ_321",
    /** Klatovy */
    Cz_322 = "CZ_322",
    /** Plzeň-město */
    Cz_323 = "CZ_323",
    /** Plzeň-jih */
    Cz_324 = "CZ_324",
    /** Plzeň-sever */
    Cz_325 = "CZ_325",
    /** Rokycany */
    Cz_326 = "CZ_326",
    /** Tachov */
    Cz_327 = "CZ_327",
    /** Cheb */
    Cz_411 = "CZ_411",
    /** Karlovy Vary */
    Cz_412 = "CZ_412",
    /** Sokolov */
    Cz_413 = "CZ_413",
    /** Děčín */
    Cz_421 = "CZ_421",
    /** Chomutov */
    Cz_422 = "CZ_422",
    /** Litoměřice */
    Cz_423 = "CZ_423",
    /** Louny */
    Cz_424 = "CZ_424",
    /** Most */
    Cz_425 = "CZ_425",
    /** Teplice */
    Cz_426 = "CZ_426",
    /** Ústí nad Labem */
    Cz_427 = "CZ_427",
    /** Česká Lípa */
    Cz_511 = "CZ_511",
    /** Jablonec nad Nisou */
    Cz_512 = "CZ_512",
    /** Liberec */
    Cz_513 = "CZ_513",
    /** Semily */
    Cz_514 = "CZ_514",
    /** Hradec Králové */
    Cz_521 = "CZ_521",
    /** Jičín */
    Cz_522 = "CZ_522",
    /** Náchod */
    Cz_523 = "CZ_523",
    /** Rychnov nad Kněžnou */
    Cz_524 = "CZ_524",
    /** Trutnov */
    Cz_525 = "CZ_525",
    /** Chrudim */
    Cz_531 = "CZ_531",
    /** Pardubice */
    Cz_532 = "CZ_532",
    /** Svitavy */
    Cz_533 = "CZ_533",
    /** Ústí nad Orlicí */
    Cz_534 = "CZ_534",
    /** Havlíčkův Brod */
    Cz_611 = "CZ_611",
    /** Jihlava */
    Cz_612 = "CZ_612",
    /** Pelhřimov */
    Cz_613 = "CZ_613",
    /** Třebíč */
    Cz_614 = "CZ_614",
    /** Žd'ár nad Sázavou */
    Cz_615 = "CZ_615",
    /** Blansko */
    Cz_621 = "CZ_621",
    /** Brno-město */
    Cz_622 = "CZ_622",
    /** Brno-venkov */
    Cz_623 = "CZ_623",
    /** Břeclav */
    Cz_624 = "CZ_624",
    /** Hodonín */
    Cz_625 = "CZ_625",
    /** Vyškov */
    Cz_626 = "CZ_626",
    /** Znojmo */
    Cz_627 = "CZ_627",
    /** Jeseník */
    Cz_711 = "CZ_711",
    /** Olomouc */
    Cz_712 = "CZ_712",
    /** Prostĕjov */
    Cz_713 = "CZ_713",
    /** Přerov */
    Cz_714 = "CZ_714",
    /** Šumperk */
    Cz_715 = "CZ_715",
    /** Kromĕříž */
    Cz_721 = "CZ_721",
    /** Uherské Hradištĕ */
    Cz_722 = "CZ_722",
    /** Vsetín */
    Cz_723 = "CZ_723",
    /** Zlín */
    Cz_724 = "CZ_724",
    /** Bruntál */
    Cz_801 = "CZ_801",
    /** Frýdek Místek */
    Cz_802 = "CZ_802",
    /** Karviná */
    Cz_803 = "CZ_803",
    /** Nový Jičín */
    Cz_804 = "CZ_804",
    /** Opava */
    Cz_805 = "CZ_805",
    /** Ostrava město */
    Cz_806 = "CZ_806",
    /** Jihočeský kraj */
    CzJc = "CZ_JC",
    /** Jihomoravský kraj */
    CzJm = "CZ_JM",
    /** Karlovarský kraj */
    CzKa = "CZ_KA",
    /** Královéhradecký kraj */
    CzKr = "CZ_KR",
    /** Liberecký kraj */
    CzLi = "CZ_LI",
    /** Moravskoslezský kraj */
    CzMo = "CZ_MO",
    /** Olomoucký kraj */
    CzOl = "CZ_OL",
    /** Pardubický kraj */
    CzPa = "CZ_PA",
    /** Plzeňský kraj */
    CzPl = "CZ_PL",
    /** Praha, hlavní mešto */
    CzPr = "CZ_PR",
    /** Středočeský kraj */
    CzSt = "CZ_ST",
    /** Ústecký kraj */
    CzUs = "CZ_US",
    /** Vysočina */
    CzVy = "CZ_VY",
    /** Zlínský kraj */
    CzZl = "CZ_ZL",
    /** Brandenburg */
    DeBb = "DE_BB",
    /** Berlin */
    DeBe = "DE_BE",
    /** Baden-Württemberg */
    DeBw = "DE_BW",
    /** Bayern */
    DeBy = "DE_BY",
    /** Bremen */
    DeHb = "DE_HB",
    /** Hessen */
    DeHe = "DE_HE",
    /** Hamburg */
    DeHh = "DE_HH",
    /** Mecklenburg-Vorpommern */
    DeMv = "DE_MV",
    /** Niedersachsen */
    DeNi = "DE_NI",
    /** Nordrhein-Westfalen */
    DeNw = "DE_NW",
    /** Rheinland-Pfalz */
    DeRp = "DE_RP",
    /** Schleswig-Holstein */
    DeSh = "DE_SH",
    /** Saarland */
    DeSl = "DE_SL",
    /** Sachsen */
    DeSn = "DE_SN",
    /** Sachsen-Anhalt */
    DeSt = "DE_ST",
    /** Thüringen */
    DeTh = "DE_TH",
    /** Arta */
    DjAr = "DJ_AR",
    /** ‘Alī Ṣabīḥ */
    DjAs = "DJ_AS",
    /** Dikhīl */
    DjDi = "DJ_DI",
    /** Jībūtī */
    DjDj = "DJ_DJ",
    /** Ūbūk */
    DjOb = "DJ_OB",
    /** Tadjourah */
    DjTa = "DJ_TA",
    /** Nordjylland */
    Dk_81 = "DK_81",
    /** Midtjylland */
    Dk_82 = "DK_82",
    /** Syddanmark */
    Dk_83 = "DK_83",
    /** Hovedstaden */
    Dk_84 = "DK_84",
    /** Sjælland */
    Dk_85 = "DK_85",
    /** Saint Andrew */
    Dm_02 = "DM_02",
    /** Saint David */
    Dm_03 = "DM_03",
    /** Saint George */
    Dm_04 = "DM_04",
    /** Saint John */
    Dm_05 = "DM_05",
    /** Saint Joseph */
    Dm_06 = "DM_06",
    /** Saint Luke */
    Dm_07 = "DM_07",
    /** Saint Mark */
    Dm_08 = "DM_08",
    /** Saint Patrick */
    Dm_09 = "DM_09",
    /** Saint Paul */
    Dm_10 = "DM_10",
    /** Saint Peter */
    Dm_11 = "DM_11",
    /** Distrito Nacional (Santo Domingo) */
    Do_01 = "DO_01",
    /** Azua */
    Do_02 = "DO_02",
    /** Baoruco */
    Do_03 = "DO_03",
    /** Barahona */
    Do_04 = "DO_04",
    /** Dajabón */
    Do_05 = "DO_05",
    /** Duarte */
    Do_06 = "DO_06",
    /** La Estrelleta */
    Do_07 = "DO_07",
    /** El Seibo */
    Do_08 = "DO_08",
    /** Espaillat */
    Do_09 = "DO_09",
    /** Independencia */
    Do_10 = "DO_10",
    /** La Altagracia */
    Do_11 = "DO_11",
    /** La Romana */
    Do_12 = "DO_12",
    /** La Vega */
    Do_13 = "DO_13",
    /** María Trinidad Sánchez */
    Do_14 = "DO_14",
    /** Monte Cristi */
    Do_15 = "DO_15",
    /** Pedernales */
    Do_16 = "DO_16",
    /** Peravia */
    Do_17 = "DO_17",
    /** Puerto Plata */
    Do_18 = "DO_18",
    /** Hermanas Mirabal */
    Do_19 = "DO_19",
    /** Samaná */
    Do_20 = "DO_20",
    /** San Cristóbal */
    Do_21 = "DO_21",
    /** San Juan */
    Do_22 = "DO_22",
    /** San Pedro de Macorís */
    Do_23 = "DO_23",
    /** Sánchez Ramírez */
    Do_24 = "DO_24",
    /** Santiago */
    Do_25 = "DO_25",
    /** Santiago Rodríguez */
    Do_26 = "DO_26",
    /** Valverde */
    Do_27 = "DO_27",
    /** Monseñor Nouel */
    Do_28 = "DO_28",
    /** Monte Plata */
    Do_29 = "DO_29",
    /** Hato Mayor */
    Do_30 = "DO_30",
    /** San José de Ocoa */
    Do_31 = "DO_31",
    /** Santo Domingo */
    Do_32 = "DO_32",
    /** Cibao Nordeste */
    Do_33 = "DO_33",
    /** Cibao Noroeste */
    Do_34 = "DO_34",
    /** Cibao Norte */
    Do_35 = "DO_35",
    /** Cibao Sur */
    Do_36 = "DO_36",
    /** El Valle */
    Do_37 = "DO_37",
    /** Enriquillo */
    Do_38 = "DO_38",
    /** Higuamo */
    Do_39 = "DO_39",
    /** Ozama */
    Do_40 = "DO_40",
    /** Valdesia */
    Do_41 = "DO_41",
    /** Yuma */
    Do_42 = "DO_42",
    /** Adrar */
    Dz_01 = "DZ_01",
    /** Chlef */
    Dz_02 = "DZ_02",
    /** Laghouat */
    Dz_03 = "DZ_03",
    /** Oum el Bouaghi */
    Dz_04 = "DZ_04",
    /** Batna */
    Dz_05 = "DZ_05",
    /** Béjaïa */
    Dz_06 = "DZ_06",
    /** Biskra */
    Dz_07 = "DZ_07",
    /** Béchar */
    Dz_08 = "DZ_08",
    /** Blida */
    Dz_09 = "DZ_09",
    /** Bouira */
    Dz_10 = "DZ_10",
    /** Tamanrasset */
    Dz_11 = "DZ_11",
    /** Tébessa */
    Dz_12 = "DZ_12",
    /** Tlemcen */
    Dz_13 = "DZ_13",
    /** Tiaret */
    Dz_14 = "DZ_14",
    /** Tizi Ouzou */
    Dz_15 = "DZ_15",
    /** Alger */
    Dz_16 = "DZ_16",
    /** Djelfa */
    Dz_17 = "DZ_17",
    /** Jijel */
    Dz_18 = "DZ_18",
    /** Sétif */
    Dz_19 = "DZ_19",
    /** Saïda */
    Dz_20 = "DZ_20",
    /** Skikda */
    Dz_21 = "DZ_21",
    /** Sidi Bel Abbès */
    Dz_22 = "DZ_22",
    /** Annaba */
    Dz_23 = "DZ_23",
    /** Guelma */
    Dz_24 = "DZ_24",
    /** Constantine */
    Dz_25 = "DZ_25",
    /** Médéa */
    Dz_26 = "DZ_26",
    /** Mostaganem */
    Dz_27 = "DZ_27",
    /** Msila */
    Dz_28 = "DZ_28",
    /** Mascara */
    Dz_29 = "DZ_29",
    /** Ouargla */
    Dz_30 = "DZ_30",
    /** Oran */
    Dz_31 = "DZ_31",
    /** El Bayadh */
    Dz_32 = "DZ_32",
    /** Illizi */
    Dz_33 = "DZ_33",
    /** Bordj Bou Arréridj */
    Dz_34 = "DZ_34",
    /** Boumerdès */
    Dz_35 = "DZ_35",
    /** El Tarf */
    Dz_36 = "DZ_36",
    /** Tindouf */
    Dz_37 = "DZ_37",
    /** Tissemsilt */
    Dz_38 = "DZ_38",
    /** El Oued */
    Dz_39 = "DZ_39",
    /** Khenchela */
    Dz_40 = "DZ_40",
    /** Souk Ahras */
    Dz_41 = "DZ_41",
    /** Tipaza */
    Dz_42 = "DZ_42",
    /** Mila */
    Dz_43 = "DZ_43",
    /** Aïn Defla */
    Dz_44 = "DZ_44",
    /** Naama */
    Dz_45 = "DZ_45",
    /** Aïn Témouchent */
    Dz_46 = "DZ_46",
    /** Ghardaïa */
    Dz_47 = "DZ_47",
    /** Relizane */
    Dz_48 = "DZ_48",
    /** Azuay */
    EcA = "EC_A",
    /** Bolívar */
    EcB = "EC_B",
    /** Carchi */
    EcC = "EC_C",
    /** Orellana */
    EcD = "EC_D",
    /** Esmeraldas */
    EcE = "EC_E",
    /** Cañar */
    EcF = "EC_F",
    /** Guayas */
    EcG = "EC_G",
    /** Chimborazo */
    EcH = "EC_H",
    /** Imbabura */
    EcI = "EC_I",
    /** Loja */
    EcL = "EC_L",
    /** Manabí */
    EcM = "EC_M",
    /** Napo */
    EcN = "EC_N",
    /** El Oro */
    EcO = "EC_O",
    /** Pichincha */
    EcP = "EC_P",
    /** Los Ríos */
    EcR = "EC_R",
    /** Morona-Santiago */
    EcS = "EC_S",
    /** Santo Domingo de los Tsáchilas */
    EcSd = "EC_SD",
    /** Santa Elena */
    EcSe = "EC_SE",
    /** Tungurahua */
    EcT = "EC_T",
    /** Sucumbíos */
    EcU = "EC_U",
    /** Galápagos */
    EcW = "EC_W",
    /** Cotopaxi */
    EcX = "EC_X",
    /** Pastaza */
    EcY = "EC_Y",
    /** Zamora-Chinchipe */
    EcZ = "EC_Z",
    /** Harjumaa */
    Ee_37 = "EE_37",
    /** Hiiumaa */
    Ee_39 = "EE_39",
    /** Ida-Virumaa */
    Ee_44 = "EE_44",
    /** Jõgevamaa */
    Ee_49 = "EE_49",
    /** Järvamaa */
    Ee_51 = "EE_51",
    /** Läänemaa */
    Ee_57 = "EE_57",
    /** Lääne-Virumaa */
    Ee_59 = "EE_59",
    /** Põlvamaa */
    Ee_65 = "EE_65",
    /** Pärnumaa */
    Ee_67 = "EE_67",
    /** Raplamaa */
    Ee_70 = "EE_70",
    /** Saaremaa */
    Ee_74 = "EE_74",
    /** Tartumaa */
    Ee_78 = "EE_78",
    /** Valgamaa */
    Ee_82 = "EE_82",
    /** Viljandimaa */
    Ee_84 = "EE_84",
    /** Võrumaa */
    Ee_86 = "EE_86",
    /** Al Iskandarīyah */
    EgAlx = "EG_ALX",
    /** Aswān */
    EgAsn = "EG_ASN",
    /** Asyūţ */
    EgAst = "EG_AST",
    /** Al Baḩr al Aḩmar */
    EgBa = "EG_BA",
    /** Al Buḩayrah */
    EgBh = "EG_BH",
    /** Banī Suwayf */
    EgBns = "EG_BNS",
    /** Al Qāhirah */
    EgC = "EG_C",
    /** Ad Daqahlīyah */
    EgDk = "EG_DK",
    /** Dumyāţ */
    EgDt = "EG_DT",
    /** Al Fayyūm */
    EgFym = "EG_FYM",
    /** Al Gharbīyah */
    EgGh = "EG_GH",
    /** Al Jīzah */
    EgGz = "EG_GZ",
    /** Al Ismā'īlīyah */
    EgIs = "EG_IS",
    /** Janūb Sīnā' */
    EgJs = "EG_JS",
    /** Al Qalyūbīyah */
    EgKb = "EG_KB",
    /** Kafr ash Shaykh */
    EgKfs = "EG_KFS",
    /** Qinā */
    EgKn = "EG_KN",
    /** Al Uqşur */
    EgLx = "EG_LX",
    /** Al Minyā */
    EgMn = "EG_MN",
    /** Al Minūfīyah */
    EgMnf = "EG_MNF",
    /** Maţrūḩ */
    EgMt = "EG_MT",
    /** Būr Sa‘īd */
    EgPts = "EG_PTS",
    /** Sūhāj */
    EgShg = "EG_SHG",
    /** Ash Sharqīyah */
    EgShr = "EG_SHR",
    /** Shamāl Sīnā' */
    EgSin = "EG_SIN",
    /** As Suways */
    EgSuz = "EG_SUZ",
    /** Al Wādī al Jadīd */
    EgWad = "EG_WAD",
    /** ‘Anseba */
    ErAn = "ER_AN",
    /** Janūbī al Baḩrī al Aḩmar */
    ErDk = "ER_DK",
    /** Debub */
    ErDu = "ER_DU",
    /** Gash-Barka */
    ErGb = "ER_GB",
    /** Al Awsaţ */
    ErMa = "ER_MA",
    /** Semienawi K’eyyĭḥ Baḥri */
    ErSk = "ER_SK",
    /** Alacant* */
    EsA = "ES_A",
    /** Albacete */
    EsAb = "ES_AB",
    /** Almería */
    EsAl = "ES_AL",
    /** Andalucía */
    EsAn = "ES_AN",
    /** Aragón */
    EsAr = "ES_AR",
    /** Asturias, Principado de */
    EsAs = "ES_AS",
    /** Ávila */
    EsAv = "ES_AV",
    /** Barcelona  */
    EsB = "ES_B",
    /** Badajoz */
    EsBa = "ES_BA",
    /** Bizkaia* */
    EsBi = "ES_BI",
    /** Burgos */
    EsBu = "ES_BU",
    /** A Coruña  */
    EsC = "ES_C",
    /** Cádiz */
    EsCa = "ES_CA",
    /** Cantabria */
    EsCb = "ES_CB",
    /** Cáceres */
    EsCc = "ES_CC",
    /** Ceuta */
    EsCe = "ES_CE",
    /** Castilla y León */
    EsCl = "ES_CL",
    /** Castilla-La Mancha */
    EsCm = "ES_CM",
    /** Canarias */
    EsCn = "ES_CN",
    /** Córdoba */
    EsCo = "ES_CO",
    /** Ciudad Real */
    EsCr = "ES_CR",
    /** Castellón */
    EsCs = "ES_CS",
    /** Catalunya  */
    EsCt = "ES_CT",
    /** Cuenca */
    EsCu = "ES_CU",
    /** Extremadura */
    EsEx = "ES_EX",
    /** Galicia  */
    EsGa = "ES_GA",
    /** Las Palmas */
    EsGc = "ES_GC",
    /** Girona  */
    EsGi = "ES_GI",
    /** Granada */
    EsGr = "ES_GR",
    /** Guadalajara */
    EsGu = "ES_GU",
    /** Huelva */
    EsH = "ES_H",
    /** Huesca */
    EsHu = "ES_HU",
    /** Illes Balears  */
    EsIb = "ES_IB",
    /** Jaén */
    EsJ = "ES_J",
    /** Lleida  */
    EsL = "ES_L",
    /** León */
    EsLe = "ES_LE",
    /** La Rioja */
    EsLo = "ES_LO",
    /** Lugo  */
    EsLu = "ES_LU",
    /** Madrid */
    EsM = "ES_M",
    /** Málaga */
    EsMa = "ES_MA",
    /** Murcia, Región de */
    EsMc = "ES_MC",
    /** Madrid, Comunidad de */
    EsMd = "ES_MD",
    /** Melilla */
    EsMl = "ES_ML",
    /** Murcia */
    EsMu = "ES_MU",
    /** Navarra */
    EsNa = "ES_NA",
    /** Nafarroako Foru Komunitatea* */
    EsNc = "ES_NC",
    /** Asturias */
    EsO = "ES_O",
    /** Ourense  */
    EsOr = "ES_OR",
    /** Palencia */
    EsP = "ES_P",
    /** Balears  */
    EsPm = "ES_PM",
    /** Pontevedra  */
    EsPo = "ES_PO",
    /** Euskal Herria */
    EsPv = "ES_PV",
    /** La Rioja */
    EsRi = "ES_RI",
    /** Cantabria */
    EsS = "ES_S",
    /** Salamanca */
    EsSa = "ES_SA",
    /** Sevilla */
    EsSe = "ES_SE",
    /** Segovia */
    EsSg = "ES_SG",
    /** Soria */
    EsSo = "ES_SO",
    /** Gipuzkoa* */
    EsSs = "ES_SS",
    /** Tarragona  */
    EsT = "ES_T",
    /** Teruel */
    EsTe = "ES_TE",
    /** Santa Cruz de Tenerife */
    EsTf = "ES_TF",
    /** Toledo */
    EsTo = "ES_TO",
    /** València* */
    EsV = "ES_V",
    /** Valladolid */
    EsVa = "ES_VA",
    /** Valenciana, Comunitat* */
    EsVc = "ES_VC",
    /** Araba* */
    EsVi = "ES_VI",
    /** Zaragoza */
    EsZ = "ES_Z",
    /** Zamora */
    EsZa = "ES_ZA",
    /** Addis Ababa */
    EtAa = "ET_AA",
    /** Afar */
    EtAf = "ET_AF",
    /** Amara */
    EtAm = "ET_AM",
    /** Benshangul-Gumaz */
    EtBe = "ET_BE",
    /** Dire Dawa */
    EtDd = "ET_DD",
    /** Gambela Peoples */
    EtGa = "ET_GA",
    /** Harari People */
    EtHa = "ET_HA",
    /** Oromia */
    EtOr = "ET_OR",
    /** Southern Nations, Nationalities and Peoples */
    EtSn = "ET_SN",
    /** Somali */
    EtSo = "ET_SO",
    /** Tigrai */
    EtTi = "ET_TI",
    /** Ahvenanmaan maakunta */
    Fi_01 = "FI_01",
    /** Södra Karelen */
    Fi_02 = "FI_02",
    /** Södra Österbotten */
    Fi_03 = "FI_03",
    /** Etelä-Savo */
    Fi_04 = "FI_04",
    /** Kainuu */
    Fi_05 = "FI_05",
    /** Egentliga Tavastland */
    Fi_06 = "FI_06",
    /** Mellersta Österbotten */
    Fi_07 = "FI_07",
    /** Mellersta Finland */
    Fi_08 = "FI_08",
    /** Kymmenedalen */
    Fi_09 = "FI_09",
    /** Lappi */
    Fi_10 = "FI_10",
    /** Pirkanmaa */
    Fi_11 = "FI_11",
    /** Pohjanmaa */
    Fi_12 = "FI_12",
    /** Pohjois-Karjala */
    Fi_13 = "FI_13",
    /** Norra Österbotten */
    Fi_14 = "FI_14",
    /** Norra Savolax */
    Fi_15 = "FI_15",
    /** Päijänne-Tavastland */
    Fi_16 = "FI_16",
    /** Satakunda */
    Fi_17 = "FI_17",
    /** Nyland */
    Fi_18 = "FI_18",
    /** Varsinais-Suomi */
    Fi_19 = "FI_19",
    /** Ba */
    Fj_01 = "FJ_01",
    /** Bua */
    Fj_02 = "FJ_02",
    /** Cakaudrove */
    Fj_03 = "FJ_03",
    /** Kadavu */
    Fj_04 = "FJ_04",
    /** Lau */
    Fj_05 = "FJ_05",
    /** Lomaiviti */
    Fj_06 = "FJ_06",
    /** Macuata */
    Fj_07 = "FJ_07",
    /** Nadroga and Navosa */
    Fj_08 = "FJ_08",
    /** Naitasiri */
    Fj_09 = "FJ_09",
    /** Namosi */
    Fj_10 = "FJ_10",
    /** Ra */
    Fj_11 = "FJ_11",
    /** Rewa */
    Fj_12 = "FJ_12",
    /** Serua */
    Fj_13 = "FJ_13",
    /** Tailevu */
    Fj_14 = "FJ_14",
    /** Central */
    FjC = "FJ_C",
    /** Eastern */
    FjE = "FJ_E",
    /** Northern */
    FjN = "FJ_N",
    /** Rotuma */
    FjR = "FJ_R",
    /** Western */
    FjW = "FJ_W",
    /** Kosrae */
    FmKsa = "FM_KSA",
    /** Pohnpei */
    FmPni = "FM_PNI",
    /** Chuuk */
    FmTrk = "FM_TRK",
    /** Yap */
    FmYap = "FM_YAP",
    /** Ain */
    Fr_01 = "FR_01",
    /** Aisne */
    Fr_02 = "FR_02",
    /** Allier */
    Fr_03 = "FR_03",
    /** Alpes-de-Haute-Provence */
    Fr_04 = "FR_04",
    /** Hautes-Alpes */
    Fr_05 = "FR_05",
    /** Alpes-Maritimes */
    Fr_06 = "FR_06",
    /** Ardèche */
    Fr_07 = "FR_07",
    /** Ardennes */
    Fr_08 = "FR_08",
    /** Ariège */
    Fr_09 = "FR_09",
    /** Corse-du-Sud */
    Fr_2A = "FR_2A",
    /** Haute-Corse */
    Fr_2B = "FR_2B",
    /** Aube */
    Fr_10 = "FR_10",
    /** Aude */
    Fr_11 = "FR_11",
    /** Aveyron */
    Fr_12 = "FR_12",
    /** Bouches-du-Rhône */
    Fr_13 = "FR_13",
    /** Calvados */
    Fr_14 = "FR_14",
    /** Cantal */
    Fr_15 = "FR_15",
    /** Charente */
    Fr_16 = "FR_16",
    /** Charente-Maritime */
    Fr_17 = "FR_17",
    /** Cher */
    Fr_18 = "FR_18",
    /** Corrèze */
    Fr_19 = "FR_19",
    /** Côte-d'Or */
    Fr_21 = "FR_21",
    /** Côtes-d'Armor */
    Fr_22 = "FR_22",
    /** Creuse */
    Fr_23 = "FR_23",
    /** Dordogne */
    Fr_24 = "FR_24",
    /** Doubs */
    Fr_25 = "FR_25",
    /** Drôme */
    Fr_26 = "FR_26",
    /** Eure */
    Fr_27 = "FR_27",
    /** Eure-et-Loir */
    Fr_28 = "FR_28",
    /** Finistère */
    Fr_29 = "FR_29",
    /** Gard */
    Fr_30 = "FR_30",
    /** Haute-Garonne */
    Fr_31 = "FR_31",
    /** Gers */
    Fr_32 = "FR_32",
    /** Gironde */
    Fr_33 = "FR_33",
    /** Hérault */
    Fr_34 = "FR_34",
    /** Ille-et-Vilaine */
    Fr_35 = "FR_35",
    /** Indre */
    Fr_36 = "FR_36",
    /** Indre-et-Loire */
    Fr_37 = "FR_37",
    /** Isère */
    Fr_38 = "FR_38",
    /** Jura */
    Fr_39 = "FR_39",
    /** Landes */
    Fr_40 = "FR_40",
    /** Loir-et-Cher */
    Fr_41 = "FR_41",
    /** Loire */
    Fr_42 = "FR_42",
    /** Haute-Loire */
    Fr_43 = "FR_43",
    /** Loire-Atlantique */
    Fr_44 = "FR_44",
    /** Loiret */
    Fr_45 = "FR_45",
    /** Lot */
    Fr_46 = "FR_46",
    /** Lot-et-Garonne */
    Fr_47 = "FR_47",
    /** Lozère */
    Fr_48 = "FR_48",
    /** Maine-et-Loire */
    Fr_49 = "FR_49",
    /** Manche */
    Fr_50 = "FR_50",
    /** Marne */
    Fr_51 = "FR_51",
    /** Haute-Marne */
    Fr_52 = "FR_52",
    /** Mayenne */
    Fr_53 = "FR_53",
    /** Meurthe-et-Moselle */
    Fr_54 = "FR_54",
    /** Meuse */
    Fr_55 = "FR_55",
    /** Morbihan */
    Fr_56 = "FR_56",
    /** Moselle */
    Fr_57 = "FR_57",
    /** Nièvre */
    Fr_58 = "FR_58",
    /** Nord */
    Fr_59 = "FR_59",
    /** Oise */
    Fr_60 = "FR_60",
    /** Orne */
    Fr_61 = "FR_61",
    /** Pas-de-Calais */
    Fr_62 = "FR_62",
    /** Puy-de-Dôme */
    Fr_63 = "FR_63",
    /** Pyrénées-Atlantiques */
    Fr_64 = "FR_64",
    /** Hautes-Pyrénées */
    Fr_65 = "FR_65",
    /** Pyrénées-Orientales */
    Fr_66 = "FR_66",
    /** Bas-Rhin */
    Fr_67 = "FR_67",
    /** Haut-Rhin */
    Fr_68 = "FR_68",
    /** Rhône */
    Fr_69 = "FR_69",
    /** Haute-Saône */
    Fr_70 = "FR_70",
    /** Saône-et-Loire */
    Fr_71 = "FR_71",
    /** Sarthe */
    Fr_72 = "FR_72",
    /** Savoie */
    Fr_73 = "FR_73",
    /** Haute-Savoie */
    Fr_74 = "FR_74",
    /** Paris */
    Fr_75 = "FR_75",
    /** Seine-Maritime */
    Fr_76 = "FR_76",
    /** Seine-et-Marne */
    Fr_77 = "FR_77",
    /** Yvelines */
    Fr_78 = "FR_78",
    /** Deux-Sèvres */
    Fr_79 = "FR_79",
    /** Somme */
    Fr_80 = "FR_80",
    /** Tarn */
    Fr_81 = "FR_81",
    /** Tarn-et-Garonne */
    Fr_82 = "FR_82",
    /** Var */
    Fr_83 = "FR_83",
    /** Vaucluse */
    Fr_84 = "FR_84",
    /** Vendée */
    Fr_85 = "FR_85",
    /** Vienne */
    Fr_86 = "FR_86",
    /** Haute-Vienne */
    Fr_87 = "FR_87",
    /** Vosges */
    Fr_88 = "FR_88",
    /** Yonne */
    Fr_89 = "FR_89",
    /** Territoire de Belfort */
    Fr_90 = "FR_90",
    /** Essonne */
    Fr_91 = "FR_91",
    /** Hauts-de-Seine */
    Fr_92 = "FR_92",
    /** Seine-Saint-Denis */
    Fr_93 = "FR_93",
    /** Val-de-Marne */
    Fr_94 = "FR_94",
    /** Val-d'Oise */
    Fr_95 = "FR_95",
    /** Alsace */
    FrA = "FR_A",
    /** Aquitaine */
    FrB = "FR_B",
    /** Saint-Barthélemy  */
    FrBl = "FR_BL",
    /** Auvergne */
    FrC = "FR_C",
    /** Clipperton */
    FrCp = "FR_CP",
    /** Bourgogne */
    FrD = "FR_D",
    /** Bretagne */
    FrE = "FR_E",
    /** Centre */
    FrF = "FR_F",
    /** Champagne-Ardenne */
    FrG = "FR_G",
    /** Guyane  */
    FrGf = "FR_GF",
    /** Guadeloupe  */
    FrGp = "FR_GP",
    /** Corse */
    FrH = "FR_H",
    /** Franche-Comté */
    FrI = "FR_I",
    /** Île-de-France */
    FrJ = "FR_J",
    /** Languedoc-Roussillon */
    FrK = "FR_K",
    /** Limousin */
    FrL = "FR_L",
    /** Lorraine */
    FrM = "FR_M",
    /** Saint-Martin  */
    FrMf = "FR_MF",
    /** Martinique  */
    FrMq = "FR_MQ",
    /** Midi-Pyrénées */
    FrN = "FR_N",
    /** Nouvelle-Calédonie  */
    FrNc = "FR_NC",
    /** Nord-Pas-de-Calais */
    FrO = "FR_O",
    /** Basse-Normandie */
    FrP = "FR_P",
    /** Polynésie française  */
    FrPf = "FR_PF",
    /** Saint-Pierre-et-Miquelon  */
    FrPm = "FR_PM",
    /** Haute-Normandie */
    FrQ = "FR_Q",
    /** Pays-de-la-Loire */
    FrR = "FR_R",
    /** La Réunion  */
    FrRe = "FR_RE",
    /** Picardie */
    FrS = "FR_S",
    /** Poitou-Charentes */
    FrT = "FR_T",
    /** Terres australes françaises  */
    FrTf = "FR_TF",
    /** Provence-Alpes-Côte-d'Azur */
    FrU = "FR_U",
    /** Rhône-Alpes */
    FrV = "FR_V",
    /** Wallis-et-Futuna  */
    FrWf = "FR_WF",
    /** Mayotte  */
    FrYt = "FR_YT",
    /** Estuaire */
    Ga_1 = "GA_1",
    /** Haut-Ogooué */
    Ga_2 = "GA_2",
    /** Moyen-Ogooué */
    Ga_3 = "GA_3",
    /** Ngounié */
    Ga_4 = "GA_4",
    /** Nyanga */
    Ga_5 = "GA_5",
    /** Ogooué-Ivindo */
    Ga_6 = "GA_6",
    /** Ogooué-Lolo */
    Ga_7 = "GA_7",
    /** Ogooué-Maritime */
    Ga_8 = "GA_8",
    /** Woleu-Ntem */
    Ga_9 = "GA_9",
    /** Aberdeenshire */
    GbAbd = "GB_ABD",
    /** Aberdeen City */
    GbAbe = "GB_ABE",
    /** Argyll and Bute */
    GbAgb = "GB_AGB",
    /** Isle of Anglesey  */
    GbAgy = "GB_AGY",
    /** Angus */
    GbAns = "GB_ANS",
    /** Antrim */
    GbAnt = "GB_ANT",
    /** Ards */
    GbArd = "GB_ARD",
    /** Armagh */
    GbArm = "GB_ARM",
    /** Bath and North East Somerset */
    GbBas = "GB_BAS",
    /** Blackburn with Darwen */
    GbBbd = "GB_BBD",
    /** Bedford */
    GbBdf = "GB_BDF",
    /** Barking and Dagenham */
    GbBdg = "GB_BDG",
    /** Brent */
    GbBen = "GB_BEN",
    /** Bexley */
    GbBex = "GB_BEX",
    /** Belfast */
    GbBfs = "GB_BFS",
    /** Bridgend  */
    GbBge = "GB_BGE",
    /** Blaenau Gwent */
    GbBgw = "GB_BGW",
    /** Birmingham */
    GbBir = "GB_BIR",
    /** Buckinghamshire */
    GbBkm = "GB_BKM",
    /** Ballymena */
    GbBla = "GB_BLA",
    /** Ballymoney */
    GbBly = "GB_BLY",
    /** Bournemouth */
    GbBmh = "GB_BMH",
    /** Banbridge */
    GbBnb = "GB_BNB",
    /** Barnet */
    GbBne = "GB_BNE",
    /** Brighton and Hove */
    GbBnh = "GB_BNH",
    /** Barnsley */
    GbBns = "GB_BNS",
    /** Bolton */
    GbBol = "GB_BOL",
    /** Blackpool */
    GbBpl = "GB_BPL",
    /** Bracknell Forest */
    GbBrc = "GB_BRC",
    /** Bradford */
    GbBrd = "GB_BRD",
    /** Bromley */
    GbBry = "GB_BRY",
    /** Bristol, City of */
    GbBst = "GB_BST",
    /** Bury */
    GbBur = "GB_BUR",
    /** Cambridgeshire */
    GbCam = "GB_CAM",
    /** Caerphilly  */
    GbCay = "GB_CAY",
    /** Central Bedfordshire */
    GbCbf = "GB_CBF",
    /** Ceredigion  */
    GbCgn = "GB_CGN",
    /** Craigavon */
    GbCgv = "GB_CGV",
    /** Cheshire East */
    GbChe = "GB_CHE",
    /** Cheshire West and Chester */
    GbChw = "GB_CHW",
    /** Carrickfergus */
    GbCkf = "GB_CKF",
    /** Cookstown */
    GbCkt = "GB_CKT",
    /** Calderdale */
    GbCld = "GB_CLD",
    /** Clackmannanshire */
    GbClk = "GB_CLK",
    /** Coleraine */
    GbClr = "GB_CLR",
    /** Cumbria */
    GbCma = "GB_CMA",
    /** Camden */
    GbCmd = "GB_CMD",
    /** Carmarthenshire  */
    GbCmn = "GB_CMN",
    /** Cornwall */
    GbCon = "GB_CON",
    /** Coventry */
    GbCov = "GB_COV",
    /** Cardiff  */
    GbCrf = "GB_CRF",
    /** Croydon */
    GbCry = "GB_CRY",
    /** Castlereagh */
    GbCsr = "GB_CSR",
    /** Conwy */
    GbCwy = "GB_CWY",
    /** Darlington */
    GbDal = "GB_DAL",
    /** Derbyshire */
    GbDby = "GB_DBY",
    /** Denbighshire  */
    GbDen = "GB_DEN",
    /** Derby */
    GbDer = "GB_DER",
    /** Devon */
    GbDev = "GB_DEV",
    /** Dungannon and South Tyrone */
    GbDgn = "GB_DGN",
    /** Dumfries and Galloway */
    GbDgy = "GB_DGY",
    /** Doncaster */
    GbDnc = "GB_DNC",
    /** Dundee City */
    GbDnd = "GB_DND",
    /** Dorset */
    GbDor = "GB_DOR",
    /** Down */
    GbDow = "GB_DOW",
    /** Derry */
    GbDry = "GB_DRY",
    /** Dudley */
    GbDud = "GB_DUD",
    /** County Durham */
    GbDur = "GB_DUR",
    /** Ealing */
    GbEal = "GB_EAL",
    /** England and Wales */
    GbEaw = "GB_EAW",
    /** East Ayrshire */
    GbEay = "GB_EAY",
    /** Edinburgh, City of */
    GbEdh = "GB_EDH",
    /** East Dunbartonshire */
    GbEdu = "GB_EDU",
    /** East Lothian */
    GbEln = "GB_ELN",
    /** Eilean Siar */
    GbEls = "GB_ELS",
    /** Enfield */
    GbEnf = "GB_ENF",
    /** England */
    GbEng = "GB_ENG",
    /** East Renfrewshire */
    GbErw = "GB_ERW",
    /** East Riding of Yorkshire */
    GbEry = "GB_ERY",
    /** Essex */
    GbEss = "GB_ESS",
    /** East Sussex */
    GbEsx = "GB_ESX",
    /** Falkirk */
    GbFal = "GB_FAL",
    /** Fermanagh */
    GbFer = "GB_FER",
    /** Fife */
    GbFif = "GB_FIF",
    /** Flintshire  */
    GbFln = "GB_FLN",
    /** Gateshead */
    GbGat = "GB_GAT",
    /** Great Britain */
    GbGbn = "GB_GBN",
    /** Glasgow City */
    GbGlg = "GB_GLG",
    /** Gloucestershire */
    GbGls = "GB_GLS",
    /** Greenwich */
    GbGre = "GB_GRE",
    /** Gwynedd */
    GbGwn = "GB_GWN",
    /** Halton */
    GbHal = "GB_HAL",
    /** Hampshire */
    GbHam = "GB_HAM",
    /** Havering */
    GbHav = "GB_HAV",
    /** Hackney */
    GbHck = "GB_HCK",
    /** Herefordshire */
    GbHef = "GB_HEF",
    /** Hillingdon */
    GbHil = "GB_HIL",
    /** Highland */
    GbHld = "GB_HLD",
    /** Hammersmith and Fulham */
    GbHmf = "GB_HMF",
    /** Hounslow */
    GbHns = "GB_HNS",
    /** Hartlepool */
    GbHpl = "GB_HPL",
    /** Hertfordshire */
    GbHrt = "GB_HRT",
    /** Harrow */
    GbHrw = "GB_HRW",
    /** Haringey */
    GbHry = "GB_HRY",
    /** Isles of Scilly */
    GbIos = "GB_IOS",
    /** Isle of Wight */
    GbIow = "GB_IOW",
    /** Islington */
    GbIsl = "GB_ISL",
    /** Inverclyde */
    GbIvc = "GB_IVC",
    /** Kensington and Chelsea */
    GbKec = "GB_KEC",
    /** Kent */
    GbKen = "GB_KEN",
    /** Kingston upon Hull */
    GbKhl = "GB_KHL",
    /** Kirklees */
    GbKir = "GB_KIR",
    /** Kingston upon Thames */
    GbKtt = "GB_KTT",
    /** Knowsley */
    GbKwl = "GB_KWL",
    /** Lancashire */
    GbLan = "GB_LAN",
    /** Lambeth */
    GbLbh = "GB_LBH",
    /** Leicester */
    GbLce = "GB_LCE",
    /** Leeds */
    GbLds = "GB_LDS",
    /** Leicestershire */
    GbLec = "GB_LEC",
    /** Lewisham */
    GbLew = "GB_LEW",
    /** Lincolnshire */
    GbLin = "GB_LIN",
    /** Liverpool */
    GbLiv = "GB_LIV",
    /** Limavady */
    GbLmv = "GB_LMV",
    /** London, City of */
    GbLnd = "GB_LND",
    /** Larne */
    GbLrn = "GB_LRN",
    /** Lisburn */
    GbLsb = "GB_LSB",
    /** Luton */
    GbLut = "GB_LUT",
    /** Manchester */
    GbMan = "GB_MAN",
    /** Middlesbrough */
    GbMdb = "GB_MDB",
    /** Medway */
    GbMdw = "GB_MDW",
    /** Magherafelt */
    GbMft = "GB_MFT",
    /** Milton Keynes */
    GbMik = "GB_MIK",
    /** Midlothian */
    GbMln = "GB_MLN",
    /** Monmouthshire  */
    GbMon = "GB_MON",
    /** Merton */
    GbMrt = "GB_MRT",
    /** Moray */
    GbMry = "GB_MRY",
    /** Merthyr Tydfil  */
    GbMty = "GB_MTY",
    /** Moyle */
    GbMyl = "GB_MYL",
    /** North Ayrshire */
    GbNay = "GB_NAY",
    /** Northumberland */
    GbNbl = "GB_NBL",
    /** North Down */
    GbNdn = "GB_NDN",
    /** North East Lincolnshire */
    GbNel = "GB_NEL",
    /** Newcastle upon Tyne */
    GbNet = "GB_NET",
    /** Norfolk */
    GbNfk = "GB_NFK",
    /** Nottingham */
    GbNgm = "GB_NGM",
    /** Northern Ireland */
    GbNir = "GB_NIR",
    /** North Lanarkshire */
    GbNlk = "GB_NLK",
    /** North Lincolnshire */
    GbNln = "GB_NLN",
    /** North Somerset */
    GbNsm = "GB_NSM",
    /** Newtownabbey */
    GbNta = "GB_NTA",
    /** Northamptonshire */
    GbNth = "GB_NTH",
    /** Neath Port Talbot  */
    GbNtl = "GB_NTL",
    /** Nottinghamshire */
    GbNtt = "GB_NTT",
    /** North Tyneside */
    GbNty = "GB_NTY",
    /** Newham */
    GbNwm = "GB_NWM",
    /** Newport  */
    GbNwp = "GB_NWP",
    /** North Yorkshire */
    GbNyk = "GB_NYK",
    /** Newry and Mourne */
    GbNym = "GB_NYM",
    /** Oldham */
    GbOld = "GB_OLD",
    /** Omagh */
    GbOmh = "GB_OMH",
    /** Orkney Islands */
    GbOrk = "GB_ORK",
    /** Oxfordshire */
    GbOxf = "GB_OXF",
    /** Pembrokeshire  */
    GbPem = "GB_PEM",
    /** Perth and Kinross */
    GbPkn = "GB_PKN",
    /** Plymouth */
    GbPly = "GB_PLY",
    /** Poole */
    GbPol = "GB_POL",
    /** Portsmouth */
    GbPor = "GB_POR",
    /** Powys */
    GbPow = "GB_POW",
    /** Peterborough */
    GbPte = "GB_PTE",
    /** Redcar and Cleveland */
    GbRcc = "GB_RCC",
    /** Rochdale */
    GbRch = "GB_RCH",
    /** Rhondda, Cynon, Taff  */
    GbRct = "GB_RCT",
    /** Redbridge */
    GbRdb = "GB_RDB",
    /** Reading */
    GbRdg = "GB_RDG",
    /** Renfrewshire */
    GbRfw = "GB_RFW",
    /** Richmond upon Thames */
    GbRic = "GB_RIC",
    /** Rotherham */
    GbRot = "GB_ROT",
    /** Rutland */
    GbRut = "GB_RUT",
    /** Sandwell */
    GbSaw = "GB_SAW",
    /** South Ayrshire */
    GbSay = "GB_SAY",
    /** Scottish Borders, The */
    GbScb = "GB_SCB",
    /** Scotland */
    GbSct = "GB_SCT",
    /** Suffolk */
    GbSfk = "GB_SFK",
    /** Sefton */
    GbSft = "GB_SFT",
    /** South Gloucestershire */
    GbSgc = "GB_SGC",
    /** Sheffield */
    GbShf = "GB_SHF",
    /** St. Helens */
    GbShn = "GB_SHN",
    /** Shropshire */
    GbShr = "GB_SHR",
    /** Stockport */
    GbSkp = "GB_SKP",
    /** Salford */
    GbSlf = "GB_SLF",
    /** Slough */
    GbSlg = "GB_SLG",
    /** South Lanarkshire */
    GbSlk = "GB_SLK",
    /** Sunderland */
    GbSnd = "GB_SND",
    /** Solihull */
    GbSol = "GB_SOL",
    /** Somerset */
    GbSom = "GB_SOM",
    /** Southend-on-Sea */
    GbSos = "GB_SOS",
    /** Surrey */
    GbSry = "GB_SRY",
    /** Strabane */
    GbStb = "GB_STB",
    /** Stoke-on-Trent */
    GbSte = "GB_STE",
    /** Stirling */
    GbStg = "GB_STG",
    /** Southampton */
    GbSth = "GB_STH",
    /** Sutton */
    GbStn = "GB_STN",
    /** Staffordshire */
    GbSts = "GB_STS",
    /** Stockton-on-Tees */
    GbStt = "GB_STT",
    /** South Tyneside */
    GbSty = "GB_STY",
    /** Swansea  */
    GbSwa = "GB_SWA",
    /** Swindon */
    GbSwd = "GB_SWD",
    /** Southwark */
    GbSwk = "GB_SWK",
    /** Tameside */
    GbTam = "GB_TAM",
    /** Telford and Wrekin */
    GbTfw = "GB_TFW",
    /** Thurrock */
    GbThr = "GB_THR",
    /** Torbay */
    GbTob = "GB_TOB",
    /** Torfaen  */
    GbTof = "GB_TOF",
    /** Trafford */
    GbTrf = "GB_TRF",
    /** Tower Hamlets */
    GbTwh = "GB_TWH",
    /** United Kingdom */
    GbUkm = "GB_UKM",
    /** Vale of Glamorgan, The  */
    GbVgl = "GB_VGL",
    /** Warwickshire */
    GbWar = "GB_WAR",
    /** West Berkshire */
    GbWbk = "GB_WBK",
    /** West Dunbartonshire */
    GbWdu = "GB_WDU",
    /** Waltham Forest */
    GbWft = "GB_WFT",
    /** Wigan */
    GbWgn = "GB_WGN",
    /** Wiltshire */
    GbWil = "GB_WIL",
    /** Wakefield */
    GbWkf = "GB_WKF",
    /** Walsall */
    GbWll = "GB_WLL",
    /** West Lothian */
    GbWln = "GB_WLN",
    /** Wales  */
    GbWls = "GB_WLS",
    /** Wolverhampton */
    GbWlv = "GB_WLV",
    /** Wandsworth */
    GbWnd = "GB_WND",
    /** Windsor and Maidenhead */
    GbWnm = "GB_WNM",
    /** Wokingham */
    GbWok = "GB_WOK",
    /** Worcestershire */
    GbWor = "GB_WOR",
    /** Wirral */
    GbWrl = "GB_WRL",
    /** Warrington */
    GbWrt = "GB_WRT",
    /** Wrexham  */
    GbWrx = "GB_WRX",
    /** Westminster */
    GbWsm = "GB_WSM",
    /** West Sussex */
    GbWsx = "GB_WSX",
    /** York */
    GbYor = "GB_YOR",
    /** Shetland Islands */
    GbZet = "GB_ZET",
    /** Saint Andrew */
    Gd_01 = "GD_01",
    /** Saint David */
    Gd_02 = "GD_02",
    /** Saint George */
    Gd_03 = "GD_03",
    /** Saint John */
    Gd_04 = "GD_04",
    /** Saint Mark */
    Gd_05 = "GD_05",
    /** Saint Patrick */
    Gd_06 = "GD_06",
    /** Southern Grenadine Islands */
    Gd_10 = "GD_10",
    /** Abkhazia */
    GeAb = "GE_AB",
    /** Ajaria */
    GeAj = "GE_AJ",
    /** Guria */
    GeGu = "GE_GU",
    /** Imereti */
    GeIm = "GE_IM",
    /** K'akheti */
    GeKa = "GE_KA",
    /** Kvemo Kartli */
    GeKk = "GE_KK",
    /** Mtskheta-Mtianeti */
    GeMm = "GE_MM",
    /** Rach'a-Lechkhumi-Kvemo Svaneti */
    GeRl = "GE_RL",
    /** Samtskhe-Javakheti */
    GeSj = "GE_SJ",
    /** Shida Kartli */
    GeSk = "GE_SK",
    /** Samegrelo-Zemo Svaneti */
    GeSz = "GE_SZ",
    /** Tbilisi */
    GeTb = "GE_TB",
    /** Greater Accra */
    GhAa = "GH_AA",
    /** Ashanti */
    GhAh = "GH_AH",
    /** Brong-Ahafo */
    GhBa = "GH_BA",
    /** Central */
    GhCp = "GH_CP",
    /** Eastern */
    GhEp = "GH_EP",
    /** Northern */
    GhNp = "GH_NP",
    /** Volta */
    GhTv = "GH_TV",
    /** Upper East */
    GhUe = "GH_UE",
    /** Upper West */
    GhUw = "GH_UW",
    /** Western */
    GhWp = "GH_WP",
    /** Kommune Kujalleq */
    GlKu = "GL_KU",
    /** Qaasuitsup Kommunia */
    GlQa = "GL_QA",
    /** Qeqqata Kommunia */
    GlQe = "GL_QE",
    /** Kommuneqarfik Sermersooq */
    GlSm = "GL_SM",
    /** Banjul */
    GmB = "GM_B",
    /** Lower River */
    GmL = "GM_L",
    /** Central River */
    GmM = "GM_M",
    /** North Bank */
    GmN = "GM_N",
    /** Upper River */
    GmU = "GM_U",
    /** Western */
    GmW = "GM_W",
    /** Boké */
    GnB = "GN_B",
    /** Beyla */
    GnBe = "GN_BE",
    /** Boffa */
    GnBf = "GN_BF",
    /** Boké */
    GnBk = "GN_BK",
    /** Conakry */
    GnC = "GN_C",
    /** Coyah */
    GnCo = "GN_CO",
    /** Kindia */
    GnD = "GN_D",
    /** Dabola */
    GnDb = "GN_DB",
    /** Dinguiraye */
    GnDi = "GN_DI",
    /** Dalaba */
    GnDl = "GN_DL",
    /** Dubréka */
    GnDu = "GN_DU",
    /** Faranah */
    GnF = "GN_F",
    /** Faranah */
    GnFa = "GN_FA",
    /** Forécariah */
    GnFo = "GN_FO",
    /** Fria */
    GnFr = "GN_FR",
    /** Gaoual */
    GnGa = "GN_GA",
    /** Guékédou */
    GnGu = "GN_GU",
    /** Kankan */
    GnK = "GN_K",
    /** Kankan */
    GnKa = "GN_KA",
    /** Koubia */
    GnKb = "GN_KB",
    /** Kindia */
    GnKd = "GN_KD",
    /** Kérouané */
    GnKe = "GN_KE",
    /** Koundara */
    GnKn = "GN_KN",
    /** Kouroussa */
    GnKo = "GN_KO",
    /** Kissidougou */
    GnKs = "GN_KS",
    /** Labé */
    GnL = "GN_L",
    /** Labé */
    GnLa = "GN_LA",
    /** Lélouma */
    GnLe = "GN_LE",
    /** Lola */
    GnLo = "GN_LO",
    /** Mamou */
    GnM = "GN_M",
    /** Macenta */
    GnMc = "GN_MC",
    /** Mandiana */
    GnMd = "GN_MD",
    /** Mali */
    GnMl = "GN_ML",
    /** Mamou */
    GnMm = "GN_MM",
    /** Nzérékoré */
    GnN = "GN_N",
    /** Nzérékoré */
    GnNz = "GN_NZ",
    /** Pita */
    GnPi = "GN_PI",
    /** Siguiri */
    GnSi = "GN_SI",
    /** Télimélé */
    GnTe = "GN_TE",
    /** Tougué */
    GnTo = "GN_TO",
    /** Yomou */
    GnYo = "GN_YO",
    /** Annobón */
    GqAn = "GQ_AN",
    /** Bioko Norte */
    GqBn = "GQ_BN",
    /** Bioko Sud */
    GqBs = "GQ_BS",
    /** Región Continental */
    GqC = "GQ_C",
    /** Centro Sul */
    GqCs = "GQ_CS",
    /** Région Insulaire */
    GqI = "GQ_I",
    /** Kié-Ntem */
    GqKn = "GQ_KN",
    /** Littoral */
    GqLi = "GQ_LI",
    /** Wele-Nzas */
    GqWn = "GQ_WN",
    /** Aitoloakarnanía */
    Gr_01 = "GR_01",
    /** Voiotía */
    Gr_03 = "GR_03",
    /** Évvoia */
    Gr_04 = "GR_04",
    /** Evrytanía */
    Gr_05 = "GR_05",
    /** Fthiótida */
    Gr_06 = "GR_06",
    /** Fokída */
    Gr_07 = "GR_07",
    /** Argolída */
    Gr_11 = "GR_11",
    /** Arkadía */
    Gr_12 = "GR_12",
    /** Achaḯa */
    Gr_13 = "GR_13",
    /** Ileía */
    Gr_14 = "GR_14",
    /** Korinthía */
    Gr_15 = "GR_15",
    /** Lakonía */
    Gr_16 = "GR_16",
    /** Messinía */
    Gr_17 = "GR_17",
    /** Zákynthos */
    Gr_21 = "GR_21",
    /** Kérkyra */
    Gr_22 = "GR_22",
    /** Kefallinía */
    Gr_23 = "GR_23",
    /** Lefkáda */
    Gr_24 = "GR_24",
    /** Árta */
    Gr_31 = "GR_31",
    /** Thesprotía */
    Gr_32 = "GR_32",
    /** Ioánnina */
    Gr_33 = "GR_33",
    /** Préveza */
    Gr_34 = "GR_34",
    /** Kardítsa */
    Gr_41 = "GR_41",
    /** Lárisa */
    Gr_42 = "GR_42",
    /** Magnisía */
    Gr_43 = "GR_43",
    /** Tríkala */
    Gr_44 = "GR_44",
    /** Grevená */
    Gr_51 = "GR_51",
    /** Dráma */
    Gr_52 = "GR_52",
    /** Imathía */
    Gr_53 = "GR_53",
    /** Thessaloníki */
    Gr_54 = "GR_54",
    /** Kavála */
    Gr_55 = "GR_55",
    /** Kastoriá */
    Gr_56 = "GR_56",
    /** Kilkís */
    Gr_57 = "GR_57",
    /** Kozáni */
    Gr_58 = "GR_58",
    /** Pélla */
    Gr_59 = "GR_59",
    /** Piería */
    Gr_61 = "GR_61",
    /** Sérres */
    Gr_62 = "GR_62",
    /** Flórina */
    Gr_63 = "GR_63",
    /** Chalkidikí */
    Gr_64 = "GR_64",
    /** Ágion Óros */
    Gr_69 = "GR_69",
    /** Évros */
    Gr_71 = "GR_71",
    /** Xánthi */
    Gr_72 = "GR_72",
    /** Rodópi */
    Gr_73 = "GR_73",
    /** Dodekánisa */
    Gr_81 = "GR_81",
    /** Kykládes */
    Gr_82 = "GR_82",
    /** Lésvos */
    Gr_83 = "GR_83",
    /** Sámos */
    Gr_84 = "GR_84",
    /** Chíos */
    Gr_85 = "GR_85",
    /** Irakleío */
    Gr_91 = "GR_91",
    /** Lasíthi */
    Gr_92 = "GR_92",
    /** Rethýmnis */
    Gr_93 = "GR_93",
    /** Chaniá */
    Gr_94 = "GR_94",
    /** Anatolikí Makedonía kai Thráki */
    GrA = "GR_A",
    /** Attikí */
    GrA1 = "GR_A1",
    /** Kentrikí Makedonía */
    GrB = "GR_B",
    /** Dytikí Makedonía */
    GrC = "GR_C",
    /** Ípeiros */
    GrD = "GR_D",
    /** Thessalía */
    GrE = "GR_E",
    /** Ionía Nísia */
    GrF = "GR_F",
    /** Dytikí Elláda */
    GrG = "GR_G",
    /** Stereá Elláda */
    GrH = "GR_H",
    /** Attikí */
    GrI = "GR_I",
    /** Peloponnísos */
    GrJ = "GR_J",
    /** Voreío Aigaío */
    GrK = "GR_K",
    /** Notío Aigaío */
    GrL = "GR_L",
    /** Krítí */
    GrM = "GR_M",
    /** Alta Verapaz */
    GtAv = "GT_AV",
    /** Baja Verapaz */
    GtBv = "GT_BV",
    /** Chimaltenango */
    GtCm = "GT_CM",
    /** Chiquimula */
    GtCq = "GT_CQ",
    /** Escuintla */
    GtEs = "GT_ES",
    /** Guatemala */
    GtGu = "GT_GU",
    /** Huehuetenango */
    GtHu = "GT_HU",
    /** Izabal */
    GtIz = "GT_IZ",
    /** Jalapa */
    GtJa = "GT_JA",
    /** Jutiapa */
    GtJu = "GT_JU",
    /** Petén */
    GtPe = "GT_PE",
    /** El Progreso */
    GtPr = "GT_PR",
    /** Quiché */
    GtQc = "GT_QC",
    /** Quetzaltenango */
    GtQz = "GT_QZ",
    /** Retalhuleu */
    GtRe = "GT_RE",
    /** Sacatepéquez */
    GtSa = "GT_SA",
    /** San Marcos */
    GtSm = "GT_SM",
    /** Sololá */
    GtSo = "GT_SO",
    /** Santa Rosa */
    GtSr = "GT_SR",
    /** Suchitepéquez */
    GtSu = "GT_SU",
    /** Totonicapán */
    GtTo = "GT_TO",
    /** Zacapa */
    GtZa = "GT_ZA",
    /** Bafatá */
    GwBa = "GW_BA",
    /** Bolama */
    GwBl = "GW_BL",
    /** Biombo */
    GwBm = "GW_BM",
    /** Bissau */
    GwBs = "GW_BS",
    /** Cacheu */
    GwCa = "GW_CA",
    /** Gabú */
    GwGa = "GW_GA",
    /** Leste */
    GwL = "GW_L",
    /** Norte */
    GwN = "GW_N",
    /** Oio */
    GwOi = "GW_OI",
    /** Quinara */
    GwQu = "GW_QU",
    /** Sul */
    GwS = "GW_S",
    /** Tombali */
    GwTo = "GW_TO",
    /** Barima-Waini */
    GyBa = "GY_BA",
    /** Cuyuni-Mazaruni */
    GyCu = "GY_CU",
    /** Demerara-Mahaica */
    GyDe = "GY_DE",
    /** East Berbice-Corentyne */
    GyEb = "GY_EB",
    /** Essequibo Islands-West Demerara */
    GyEs = "GY_ES",
    /** Mahaica-Berbice */
    GyMa = "GY_MA",
    /** Pomeroon-Supenaam */
    GyPm = "GY_PM",
    /** Potaro-Siparuni */
    GyPt = "GY_PT",
    /** Upper Demerara-Berbice */
    GyUd = "GY_UD",
    /** Upper Takutu-Upper Essequibo */
    GyUt = "GY_UT",
    /** Atlántida */
    HnAt = "HN_AT",
    /** Choluteca */
    HnCh = "HN_CH",
    /** Colón */
    HnCl = "HN_CL",
    /** Comayagua */
    HnCm = "HN_CM",
    /** Copán */
    HnCp = "HN_CP",
    /** Cortés */
    HnCr = "HN_CR",
    /** El Paraíso */
    HnEp = "HN_EP",
    /** Francisco Morazán */
    HnFm = "HN_FM",
    /** Gracias a Dios */
    HnGd = "HN_GD",
    /** Islas de la Bahía */
    HnIb = "HN_IB",
    /** Intibucá */
    HnIn = "HN_IN",
    /** Lempira */
    HnLe = "HN_LE",
    /** La Paz */
    HnLp = "HN_LP",
    /** Ocotepeque */
    HnOc = "HN_OC",
    /** Olancho */
    HnOl = "HN_OL",
    /** Santa Bárbara */
    HnSb = "HN_SB",
    /** Valle */
    HnVa = "HN_VA",
    /** Yoro */
    HnYo = "HN_YO",
    /** Zagrebačka županija */
    Hr_01 = "HR_01",
    /** Krapinsko-zagorska županija */
    Hr_02 = "HR_02",
    /** Sisačko-moslavačka županija */
    Hr_03 = "HR_03",
    /** Karlovačka županija */
    Hr_04 = "HR_04",
    /** Varaždinska županija */
    Hr_05 = "HR_05",
    /** Koprivničko-križevačka županija */
    Hr_06 = "HR_06",
    /** Bjelovarsko-bilogorska županija */
    Hr_07 = "HR_07",
    /** Primorsko-goranska županija */
    Hr_08 = "HR_08",
    /** Ličko-senjska županija */
    Hr_09 = "HR_09",
    /** Virovitičko-podravska županija */
    Hr_10 = "HR_10",
    /** Požeško-slavonska županija */
    Hr_11 = "HR_11",
    /** Brodsko-posavska županija */
    Hr_12 = "HR_12",
    /** Zadarska županija */
    Hr_13 = "HR_13",
    /** Osječko-baranjska županija */
    Hr_14 = "HR_14",
    /** Šibensko-kninska županija */
    Hr_15 = "HR_15",
    /** Vukovarsko-srijemska županija */
    Hr_16 = "HR_16",
    /** Splitsko-dalmatinska županija */
    Hr_17 = "HR_17",
    /** Istarska županija */
    Hr_18 = "HR_18",
    /** Dubrovačko-neretvanska županija */
    Hr_19 = "HR_19",
    /** Međimurska županija */
    Hr_20 = "HR_20",
    /** Grad Zagreb */
    Hr_21 = "HR_21",
    /** Artibonite */
    HtAr = "HT_AR",
    /** Sant */
    HtCe = "HT_CE",
    /** Grandans */
    HtGa = "HT_GA",
    /** Nò */
    HtNd = "HT_ND",
    /** Nòdès */
    HtNe = "HT_NE",
    /** Nip */
    HtNi = "HT_NI",
    /** Nord-Ouest */
    HtNo = "HT_NO",
    /** Lwès */
    HtOu = "HT_OU",
    /** Sid */
    HtSd = "HT_SD",
    /** Sud-Est */
    HtSe = "HT_SE",
    /** Baranya */
    HuBa = "HU_BA",
    /** Békéscsaba */
    HuBc = "HU_BC",
    /** Békés */
    HuBe = "HU_BE",
    /** Bács-Kiskun */
    HuBk = "HU_BK",
    /** Budapest */
    HuBu = "HU_BU",
    /** Borsod-Abaúj-Zemplén */
    HuBz = "HU_BZ",
    /** Csongrád */
    HuCs = "HU_CS",
    /** Debrecen */
    HuDe = "HU_DE",
    /** Dunaújváros */
    HuDu = "HU_DU",
    /** Eger */
    HuEg = "HU_EG",
    /** Érd */
    HuEr = "HU_ER",
    /** Fejér */
    HuFe = "HU_FE",
    /** Győr-Moson-Sopron */
    HuGs = "HU_GS",
    /** Győr */
    HuGy = "HU_GY",
    /** Hajdú-Bihar */
    HuHb = "HU_HB",
    /** Heves */
    HuHe = "HU_HE",
    /** Hódmezővásárhely */
    HuHv = "HU_HV",
    /** Jász-Nagykun-Szolnok */
    HuJn = "HU_JN",
    /** Komárom-Esztergom */
    HuKe = "HU_KE",
    /** Kecskemét */
    HuKm = "HU_KM",
    /** Kaposvár */
    HuKv = "HU_KV",
    /** Miskolc */
    HuMi = "HU_MI",
    /** Nagykanizsa */
    HuNk = "HU_NK",
    /** Nógrád */
    HuNo = "HU_NO",
    /** Nyíregyháza */
    HuNy = "HU_NY",
    /** Pest */
    HuPe = "HU_PE",
    /** Pécs */
    HuPs = "HU_PS",
    /** Szeged */
    HuSd = "HU_SD",
    /** Székesfehérvár */
    HuSf = "HU_SF",
    /** Szombathely */
    HuSh = "HU_SH",
    /** Szolnok */
    HuSk = "HU_SK",
    /** Sopron */
    HuSn = "HU_SN",
    /** Somogy */
    HuSo = "HU_SO",
    /** Szekszárd */
    HuSs = "HU_SS",
    /** Salgótarján */
    HuSt = "HU_ST",
    /** Szabolcs-Szatmár-Bereg */
    HuSz = "HU_SZ",
    /** Tatabánya */
    HuTb = "HU_TB",
    /** Tolna */
    HuTo = "HU_TO",
    /** Vas */
    HuVa = "HU_VA",
    /** Veszprém */
    HuVe = "HU_VE",
    /** Veszprém */
    HuVm = "HU_VM",
    /** Zala */
    HuZa = "HU_ZA",
    /** Zalaegerszeg */
    HuZe = "HU_ZE",
    /** Aceh */
    IdAc = "ID_AC",
    /** Bali */
    IdBa = "ID_BA",
    /** Bangka Belitung */
    IdBb = "ID_BB",
    /** Bengkulu */
    IdBe = "ID_BE",
    /** Banten */
    IdBt = "ID_BT",
    /** Gorontalo */
    IdGo = "ID_GO",
    /** Jambi */
    IdJa = "ID_JA",
    /** Jawa Barat */
    IdJb = "ID_JB",
    /** Jawa Timur */
    IdJi = "ID_JI",
    /** Jakarta Raya */
    IdJk = "ID_JK",
    /** Jawa Tengah */
    IdJt = "ID_JT",
    /** Jawa */
    IdJw = "ID_JW",
    /** Kalimantan */
    IdKa = "ID_KA",
    /** Kalimantan Barat */
    IdKb = "ID_KB",
    /** Kalimantan Timur */
    IdKi = "ID_KI",
    /** Kepulauan Riau */
    IdKr = "ID_KR",
    /** Kalimantan Selatan */
    IdKs = "ID_KS",
    /** Kalimantan Tengah */
    IdKt = "ID_KT",
    /** Kalimantan Utara */
    IdKu = "ID_KU",
    /** Lampung */
    IdLa = "ID_LA",
    /** Maluku */
    IdMa = "ID_MA",
    /** Maluku */
    IdMl = "ID_ML",
    /** Maluku Utara */
    IdMu = "ID_MU",
    /** Nusa Tenggara Barat */
    IdNb = "ID_NB",
    /** Nusa Tenggara Timur */
    IdNt = "ID_NT",
    /** Nusa Tenggara */
    IdNu = "ID_NU",
    /** Papua */
    IdPa = "ID_PA",
    /** Papua Barat */
    IdPb = "ID_PB",
    /** Papua */
    IdPp = "ID_PP",
    /** Riau */
    IdRi = "ID_RI",
    /** Sulawesi Utara */
    IdSa = "ID_SA",
    /** Sumatera Barat */
    IdSb = "ID_SB",
    /** Sulawesi Tenggara */
    IdSg = "ID_SG",
    /** Sulawesi */
    IdSl = "ID_SL",
    /** Sumatera */
    IdSm = "ID_SM",
    /** Sulawesi Selatan */
    IdSn = "ID_SN",
    /** Sulawesi Barat */
    IdSr = "ID_SR",
    /** Sumatera Selatan */
    IdSs = "ID_SS",
    /** Sulawesi Tengah */
    IdSt = "ID_ST",
    /** Sumatera Utara */
    IdSu = "ID_SU",
    /** Yogyakarta */
    IdYo = "ID_YO",
    /** Connaught */
    IeC = "IE_C",
    /** Clare */
    IeCe = "IE_CE",
    /** Cavan */
    IeCn = "IE_CN",
    /** Cork */
    IeCo = "IE_CO",
    /** Carlow */
    IeCw = "IE_CW",
    /** Dublin */
    IeD = "IE_D",
    /** Donegal */
    IeDl = "IE_DL",
    /** Galway */
    IeG = "IE_G",
    /** Kildare */
    IeKe = "IE_KE",
    /** Kilkenny */
    IeKk = "IE_KK",
    /** Kerry */
    IeKy = "IE_KY",
    /** Leinster */
    IeL = "IE_L",
    /** Longford */
    IeLd = "IE_LD",
    /** Louth */
    IeLh = "IE_LH",
    /** Limerick */
    IeLk = "IE_LK",
    /** Leitrim */
    IeLm = "IE_LM",
    /** Laois */
    IeLs = "IE_LS",
    /** Munster */
    IeM = "IE_M",
    /** Meath */
    IeMh = "IE_MH",
    /** Monaghan */
    IeMn = "IE_MN",
    /** Mayo */
    IeMo = "IE_MO",
    /** Offaly */
    IeOy = "IE_OY",
    /** Roscommon */
    IeRn = "IE_RN",
    /** Sligo */
    IeSo = "IE_SO",
    /** Tipperary */
    IeTa = "IE_TA",
    /** Ulster */
    IeU = "IE_U",
    /** Waterford */
    IeWd = "IE_WD",
    /** Westmeath */
    IeWh = "IE_WH",
    /** Wicklow */
    IeWw = "IE_WW",
    /** Wexford */
    IeWx = "IE_WX",
    /** HaDarom */
    IlD = "IL_D",
    /** H̱efa */
    IlHa = "IL_HA",
    /** Yerushalayim */
    IlJm = "IL_JM",
    /** HaMerkaz */
    IlM = "IL_M",
    /** Tel-Aviv */
    IlTa = "IL_TA",
    /** HaTsafon */
    IlZ = "IL_Z",
    /** Andaman and Nicobar Islands */
    InAn = "IN_AN",
    /** Andhra Pradesh */
    InAp = "IN_AP",
    /** Arunachal Pradesh */
    InAr = "IN_AR",
    /** Assam */
    InAs = "IN_AS",
    /** Bihar */
    InBr = "IN_BR",
    /** Chandigarh */
    InCh = "IN_CH",
    /** Chhattisgarh */
    InCt = "IN_CT",
    /** Daman and Diu */
    InDd = "IN_DD",
    /** Delhi */
    InDl = "IN_DL",
    /** Dadra and Nagar Haveli */
    InDn = "IN_DN",
    /** Goa */
    InGa = "IN_GA",
    /** Gujarat */
    InGj = "IN_GJ",
    /** Himachal Pradesh */
    InHp = "IN_HP",
    /** Haryana */
    InHr = "IN_HR",
    /** Jharkhand */
    InJh = "IN_JH",
    /** Jammu and Kashmir */
    InJk = "IN_JK",
    /** Karnataka */
    InKa = "IN_KA",
    /** Kerala */
    InKl = "IN_KL",
    /** Lakshadweep */
    InLd = "IN_LD",
    /** Maharashtra */
    InMh = "IN_MH",
    /** Meghalaya */
    InMl = "IN_ML",
    /** Manipur */
    InMn = "IN_MN",
    /** Madhya Pradesh */
    InMp = "IN_MP",
    /** Mizoram */
    InMz = "IN_MZ",
    /** Nagaland */
    InNl = "IN_NL",
    /** Odisha */
    InOr = "IN_OR",
    /** Punjab */
    InPb = "IN_PB",
    /** Puducherry */
    InPy = "IN_PY",
    /** Rajasthan */
    InRj = "IN_RJ",
    /** Sikkim */
    InSk = "IN_SK",
    /** Telangana */
    InTg = "IN_TG",
    /** Tamil Nadu */
    InTn = "IN_TN",
    /** Tripura */
    InTr = "IN_TR",
    /** Uttar Pradesh */
    InUp = "IN_UP",
    /** Uttarakhand */
    InUt = "IN_UT",
    /** West Bengal */
    InWb = "IN_WB",
    /** Al Anbār */
    IqAn = "IQ_AN",
    /** Arbīl */
    IqAr = "IQ_AR",
    /** Al Başrah */
    IqBa = "IQ_BA",
    /** Bābil */
    IqBb = "IQ_BB",
    /** Baghdād */
    IqBg = "IQ_BG",
    /** Dahūk */
    IqDa = "IQ_DA",
    /** Diyālá */
    IqDi = "IQ_DI",
    /** Dhī Qār */
    IqDq = "IQ_DQ",
    /** Karbalā' */
    IqKa = "IQ_KA",
    /** Kirkūk */
    IqKi = "IQ_KI",
    /** Maysān */
    IqMa = "IQ_MA",
    /** Al Muthanná */
    IqMu = "IQ_MU",
    /** An Najaf */
    IqNa = "IQ_NA",
    /** Nīnawá */
    IqNi = "IQ_NI",
    /** Al Qādisīyah */
    IqQa = "IQ_QA",
    /** Şalāḩ ad Dīn */
    IqSd = "IQ_SD",
    /** As Sulaymānīyah */
    IqSu = "IQ_SU",
    /** Wāsiţ */
    IqWa = "IQ_WA",
    /** Āz̄arbāyjān-e Sharqī */
    Ir_01 = "IR_01",
    /** Āz̄arbāyjān-e Gharbī */
    Ir_02 = "IR_02",
    /** Ardabīl */
    Ir_03 = "IR_03",
    /** Eşfahān */
    Ir_04 = "IR_04",
    /** Īlām */
    Ir_05 = "IR_05",
    /** Būshehr */
    Ir_06 = "IR_06",
    /** Tehrān */
    Ir_07 = "IR_07",
    /** Chahār Maḩāll va Bakhtīārī */
    Ir_08 = "IR_08",
    /** Khūzestān */
    Ir_10 = "IR_10",
    /** Zanjān */
    Ir_11 = "IR_11",
    /** Semnān */
    Ir_12 = "IR_12",
    /** Sīstān va Balūchestān */
    Ir_13 = "IR_13",
    /** Fārs */
    Ir_14 = "IR_14",
    /** Kermān */
    Ir_15 = "IR_15",
    /** Kordestān */
    Ir_16 = "IR_16",
    /** Kermānshāh */
    Ir_17 = "IR_17",
    /** Kohgīlūyeh va Būyer Aḩmad */
    Ir_18 = "IR_18",
    /** Gīlān */
    Ir_19 = "IR_19",
    /** Lorestān */
    Ir_20 = "IR_20",
    /** Māzandarān */
    Ir_21 = "IR_21",
    /** Markazī */
    Ir_22 = "IR_22",
    /** Hormozgān */
    Ir_23 = "IR_23",
    /** Hamadān */
    Ir_24 = "IR_24",
    /** Yazd */
    Ir_25 = "IR_25",
    /** Qom */
    Ir_26 = "IR_26",
    /** Golestān */
    Ir_27 = "IR_27",
    /** Qazvīn */
    Ir_28 = "IR_28",
    /** Khorāsān-e Janūbī */
    Ir_29 = "IR_29",
    /** Khorāsān-e Razavī */
    Ir_30 = "IR_30",
    /** Khorāsān-e Shemālī */
    Ir_31 = "IR_31",
    /** Alborz */
    Ir_32 = "IR_32",
    /** Reykjavík */
    Is_0 = "IS_0",
    /** Höfuðborgarsvæði utan Reykjavíkur */
    Is_1 = "IS_1",
    /** Suðurnes */
    Is_2 = "IS_2",
    /** Vesturland */
    Is_3 = "IS_3",
    /** Vestfirðir */
    Is_4 = "IS_4",
    /** Norðurland vestra */
    Is_5 = "IS_5",
    /** Norðurland eystra */
    Is_6 = "IS_6",
    /** Austurland */
    Is_7 = "IS_7",
    /** Suðurland */
    Is_8 = "IS_8",
    /** Piemonte */
    It_21 = "IT_21",
    /** Valle d'Aosta */
    It_23 = "IT_23",
    /** Lombardia */
    It_25 = "IT_25",
    /** Trentino-Südtirol */
    It_32 = "IT_32",
    /** Veneto */
    It_34 = "IT_34",
    /** Friuli-Venezia Giulia */
    It_36 = "IT_36",
    /** Liguria */
    It_42 = "IT_42",
    /** Emilia-Romagna */
    It_45 = "IT_45",
    /** Toscana */
    It_52 = "IT_52",
    /** Umbria */
    It_55 = "IT_55",
    /** Marche */
    It_57 = "IT_57",
    /** Lazio */
    It_62 = "IT_62",
    /** Abruzzo */
    It_65 = "IT_65",
    /** Molise */
    It_67 = "IT_67",
    /** Campania */
    It_72 = "IT_72",
    /** Puglia */
    It_75 = "IT_75",
    /** Basilicata */
    It_77 = "IT_77",
    /** Calabria */
    It_78 = "IT_78",
    /** Sicilia */
    It_82 = "IT_82",
    /** Sardegna */
    It_88 = "IT_88",
    /** Agrigento */
    ItAg = "IT_AG",
    /** Alessandria */
    ItAl = "IT_AL",
    /** Ancona */
    ItAn = "IT_AN",
    /** Aosta */
    ItAo = "IT_AO",
    /** Ascoli Piceno */
    ItAp = "IT_AP",
    /** L'Aquila */
    ItAq = "IT_AQ",
    /** Arezzo */
    ItAr = "IT_AR",
    /** Asti */
    ItAt = "IT_AT",
    /** Avellino */
    ItAv = "IT_AV",
    /** Bari */
    ItBa = "IT_BA",
    /** Bergamo */
    ItBg = "IT_BG",
    /** Biella */
    ItBi = "IT_BI",
    /** Belluno */
    ItBl = "IT_BL",
    /** Benevento */
    ItBn = "IT_BN",
    /** Bologna */
    ItBo = "IT_BO",
    /** Brindisi */
    ItBr = "IT_BR",
    /** Brescia */
    ItBs = "IT_BS",
    /** Barletta-Andria-Trani */
    ItBt = "IT_BT",
    /** Bolzano */
    ItBz = "IT_BZ",
    /** Cagliari */
    ItCa = "IT_CA",
    /** Campobasso */
    ItCb = "IT_CB",
    /** Caserta */
    ItCe = "IT_CE",
    /** Chieti */
    ItCh = "IT_CH",
    /** Carbonia-Iglesias */
    ItCi = "IT_CI",
    /** Caltanissetta */
    ItCl = "IT_CL",
    /** Cuneo */
    ItCn = "IT_CN",
    /** Como */
    ItCo = "IT_CO",
    /** Cremona */
    ItCr = "IT_CR",
    /** Cosenza */
    ItCs = "IT_CS",
    /** Catania */
    ItCt = "IT_CT",
    /** Catanzaro */
    ItCz = "IT_CZ",
    /** Enna */
    ItEn = "IT_EN",
    /** Forlì-Cesena */
    ItFc = "IT_FC",
    /** Ferrara */
    ItFe = "IT_FE",
    /** Foggia */
    ItFg = "IT_FG",
    /** Firenze */
    ItFi = "IT_FI",
    /** Fermo */
    ItFm = "IT_FM",
    /** Frosinone */
    ItFr = "IT_FR",
    /** Genova */
    ItGe = "IT_GE",
    /** Gorizia */
    ItGo = "IT_GO",
    /** Grosseto */
    ItGr = "IT_GR",
    /** Imperia */
    ItIm = "IT_IM",
    /** Isernia */
    ItIs = "IT_IS",
    /** Crotone */
    ItKr = "IT_KR",
    /** Lecco */
    ItLc = "IT_LC",
    /** Lecce */
    ItLe = "IT_LE",
    /** Livorno */
    ItLi = "IT_LI",
    /** Lodi */
    ItLo = "IT_LO",
    /** Latina */
    ItLt = "IT_LT",
    /** Lucca */
    ItLu = "IT_LU",
    /** Monza e Brianza */
    ItMb = "IT_MB",
    /** Macerata */
    ItMc = "IT_MC",
    /** Messina */
    ItMe = "IT_ME",
    /** Milano */
    ItMi = "IT_MI",
    /** Mantova */
    ItMn = "IT_MN",
    /** Modena */
    ItMo = "IT_MO",
    /** Massa-Carrara */
    ItMs = "IT_MS",
    /** Matera */
    ItMt = "IT_MT",
    /** Napoli */
    ItNa = "IT_NA",
    /** Novara */
    ItNo = "IT_NO",
    /** Nuoro */
    ItNu = "IT_NU",
    /** Ogliastra */
    ItOg = "IT_OG",
    /** Oristano */
    ItOr = "IT_OR",
    /** Olbia-Tempio */
    ItOt = "IT_OT",
    /** Palermo */
    ItPa = "IT_PA",
    /** Piacenza */
    ItPc = "IT_PC",
    /** Padova */
    ItPd = "IT_PD",
    /** Pescara */
    ItPe = "IT_PE",
    /** Perugia */
    ItPg = "IT_PG",
    /** Pisa */
    ItPi = "IT_PI",
    /** Pordenone */
    ItPn = "IT_PN",
    /** Prato */
    ItPo = "IT_PO",
    /** Parma */
    ItPr = "IT_PR",
    /** Pistoia */
    ItPt = "IT_PT",
    /** Pesaro e Urbino */
    ItPu = "IT_PU",
    /** Pavia */
    ItPv = "IT_PV",
    /** Potenza */
    ItPz = "IT_PZ",
    /** Ravenna */
    ItRa = "IT_RA",
    /** Reggio Calabria */
    ItRc = "IT_RC",
    /** Reggio Emilia */
    ItRe = "IT_RE",
    /** Ragusa */
    ItRg = "IT_RG",
    /** Rieti */
    ItRi = "IT_RI",
    /** Roma */
    ItRm = "IT_RM",
    /** Rimini */
    ItRn = "IT_RN",
    /** Rovigo */
    ItRo = "IT_RO",
    /** Salerno */
    ItSa = "IT_SA",
    /** Siena */
    ItSi = "IT_SI",
    /** Sondrio */
    ItSo = "IT_SO",
    /** La Spezia */
    ItSp = "IT_SP",
    /** Siracusa */
    ItSr = "IT_SR",
    /** Sassari */
    ItSs = "IT_SS",
    /** Savona */
    ItSv = "IT_SV",
    /** Taranto */
    ItTa = "IT_TA",
    /** Teramo */
    ItTe = "IT_TE",
    /** Trento */
    ItTn = "IT_TN",
    /** Torino */
    ItTo = "IT_TO",
    /** Trapani */
    ItTp = "IT_TP",
    /** Terni */
    ItTr = "IT_TR",
    /** Trieste */
    ItTs = "IT_TS",
    /** Treviso */
    ItTv = "IT_TV",
    /** Udine */
    ItUd = "IT_UD",
    /** Varese */
    ItVa = "IT_VA",
    /** Verbano-Cusio-Ossola */
    ItVb = "IT_VB",
    /** Vercelli */
    ItVc = "IT_VC",
    /** Venezia */
    ItVe = "IT_VE",
    /** Vicenza */
    ItVi = "IT_VI",
    /** Verona */
    ItVr = "IT_VR",
    /** Medio Campidano */
    ItVs = "IT_VS",
    /** Viterbo */
    ItVt = "IT_VT",
    /** Vibo Valentia */
    ItVv = "IT_VV",
    /** Kingston */
    Jm_01 = "JM_01",
    /** Saint Andrew */
    Jm_02 = "JM_02",
    /** Saint Thomas */
    Jm_03 = "JM_03",
    /** Portland */
    Jm_04 = "JM_04",
    /** Saint Mary */
    Jm_05 = "JM_05",
    /** Saint Ann */
    Jm_06 = "JM_06",
    /** Trelawny */
    Jm_07 = "JM_07",
    /** Saint James */
    Jm_08 = "JM_08",
    /** Hanover */
    Jm_09 = "JM_09",
    /** Westmoreland */
    Jm_10 = "JM_10",
    /** Saint Elizabeth */
    Jm_11 = "JM_11",
    /** Manchester */
    Jm_12 = "JM_12",
    /** Clarendon */
    Jm_13 = "JM_13",
    /** Saint Catherine */
    Jm_14 = "JM_14",
    /** ʽAjlūn */
    JoAj = "JO_AJ",
    /** ‘Ammān */
    JoAm = "JO_AM",
    /** Al ʽAqabah */
    JoAq = "JO_AQ",
    /** Aţ Ţafīlah */
    JoAt = "JO_AT",
    /** Az Zarqā' */
    JoAz = "JO_AZ",
    /** Al Balqā' */
    JoBa = "JO_BA",
    /** Irbid */
    JoIr = "JO_IR",
    /** Jarash */
    JoJa = "JO_JA",
    /** Al Karak */
    JoKa = "JO_KA",
    /** Al Mafraq */
    JoMa = "JO_MA",
    /** Mādabā */
    JoMd = "JO_MD",
    /** Ma'ān */
    JoMn = "JO_MN",
    /** Hokkaido */
    Jp_01 = "JP_01",
    /** Aomori */
    Jp_02 = "JP_02",
    /** Iwate */
    Jp_03 = "JP_03",
    /** Miyagi */
    Jp_04 = "JP_04",
    /** Akita */
    Jp_05 = "JP_05",
    /** Yamagata */
    Jp_06 = "JP_06",
    /** Fukushima */
    Jp_07 = "JP_07",
    /** Ibaraki */
    Jp_08 = "JP_08",
    /** Tochigi */
    Jp_09 = "JP_09",
    /** Gunma */
    Jp_10 = "JP_10",
    /** Saitama */
    Jp_11 = "JP_11",
    /** Chiba */
    Jp_12 = "JP_12",
    /** Tokyo */
    Jp_13 = "JP_13",
    /** Kanagawa */
    Jp_14 = "JP_14",
    /** Niigata */
    Jp_15 = "JP_15",
    /** Toyama */
    Jp_16 = "JP_16",
    /** Ishikawa */
    Jp_17 = "JP_17",
    /** Fukui */
    Jp_18 = "JP_18",
    /** Yamanashi */
    Jp_19 = "JP_19",
    /** Nagano */
    Jp_20 = "JP_20",
    /** Gifu */
    Jp_21 = "JP_21",
    /** Shizuoka */
    Jp_22 = "JP_22",
    /** Aichi */
    Jp_23 = "JP_23",
    /** Mie */
    Jp_24 = "JP_24",
    /** Shiga */
    Jp_25 = "JP_25",
    /** Kyoto */
    Jp_26 = "JP_26",
    /** Osaka */
    Jp_27 = "JP_27",
    /** Hyogo */
    Jp_28 = "JP_28",
    /** Nara */
    Jp_29 = "JP_29",
    /** Wakayama */
    Jp_30 = "JP_30",
    /** Tottori */
    Jp_31 = "JP_31",
    /** Shimane */
    Jp_32 = "JP_32",
    /** Okayama */
    Jp_33 = "JP_33",
    /** Hiroshima */
    Jp_34 = "JP_34",
    /** Yamaguchi */
    Jp_35 = "JP_35",
    /** Tokushima */
    Jp_36 = "JP_36",
    /** Kagawa */
    Jp_37 = "JP_37",
    /** Ehime */
    Jp_38 = "JP_38",
    /** Kochi */
    Jp_39 = "JP_39",
    /** Fukuoka */
    Jp_40 = "JP_40",
    /** Saga */
    Jp_41 = "JP_41",
    /** Nagasaki */
    Jp_42 = "JP_42",
    /** Kumamoto */
    Jp_43 = "JP_43",
    /** Oita */
    Jp_44 = "JP_44",
    /** Miyazaki */
    Jp_45 = "JP_45",
    /** Kagoshima */
    Jp_46 = "JP_46",
    /** Okinawa */
    Jp_47 = "JP_47",
    /** Baringo */
    Ke_01 = "KE_01",
    /** Bomet */
    Ke_02 = "KE_02",
    /** Bungoma */
    Ke_03 = "KE_03",
    /** Busia */
    Ke_04 = "KE_04",
    /** Elgeyo/Marakwet */
    Ke_05 = "KE_05",
    /** Embu */
    Ke_06 = "KE_06",
    /** Garissa */
    Ke_07 = "KE_07",
    /** Homa Bay */
    Ke_08 = "KE_08",
    /** Isiolo */
    Ke_09 = "KE_09",
    /** Kajiado */
    Ke_10 = "KE_10",
    /** Kakamega */
    Ke_11 = "KE_11",
    /** Kericho */
    Ke_12 = "KE_12",
    /** Kiambu */
    Ke_13 = "KE_13",
    /** Kilifi */
    Ke_14 = "KE_14",
    /** Kirinyaga */
    Ke_15 = "KE_15",
    /** Kisii */
    Ke_16 = "KE_16",
    /** Kisumu */
    Ke_17 = "KE_17",
    /** Kitui */
    Ke_18 = "KE_18",
    /** Kwale */
    Ke_19 = "KE_19",
    /** Laikipia */
    Ke_20 = "KE_20",
    /** Lamu */
    Ke_21 = "KE_21",
    /** Machakos */
    Ke_22 = "KE_22",
    /** Makueni */
    Ke_23 = "KE_23",
    /** Mandera */
    Ke_24 = "KE_24",
    /** Marsabit */
    Ke_25 = "KE_25",
    /** Meru */
    Ke_26 = "KE_26",
    /** Migori */
    Ke_27 = "KE_27",
    /** Mombasa */
    Ke_28 = "KE_28",
    /** Murang'a */
    Ke_29 = "KE_29",
    /** Nairobi City */
    Ke_30 = "KE_30",
    /** Nakuru */
    Ke_31 = "KE_31",
    /** Nandi */
    Ke_32 = "KE_32",
    /** Narok */
    Ke_33 = "KE_33",
    /** Nyamira */
    Ke_34 = "KE_34",
    /** Nyandarua */
    Ke_35 = "KE_35",
    /** Nyeri */
    Ke_36 = "KE_36",
    /** Samburu */
    Ke_37 = "KE_37",
    /** Siaya */
    Ke_38 = "KE_38",
    /** Taita/Taveta */
    Ke_39 = "KE_39",
    /** Tana River */
    Ke_40 = "KE_40",
    /** Tharaka-Nithi */
    Ke_41 = "KE_41",
    /** Trans Nzoia */
    Ke_42 = "KE_42",
    /** Turkana */
    Ke_43 = "KE_43",
    /** Uasin Gishu */
    Ke_44 = "KE_44",
    /** Vihiga */
    Ke_45 = "KE_45",
    /** Wajir */
    Ke_46 = "KE_46",
    /** West Pokot */
    Ke_47 = "KE_47",
    /** Batkenskaja oblast' */
    KgB = "KG_B",
    /** Chuyskaya oblast' */
    KgC = "KG_C",
    /** Gorod Bishkek */
    KgGb = "KG_GB",
    /** Osh */
    KgGo = "KG_GO",
    /** Dzhalal-Abadskaya oblast' */
    KgJ = "KG_J",
    /** Narynskaya oblast' */
    KgN = "KG_N",
    /** Oshskaya oblast' */
    KgO = "KG_O",
    /** Talasskaya oblast' */
    KgT = "KG_T",
    /** Issyk-Kul'skaja oblast' */
    KgY = "KG_Y",
    /** Banteay Mean Chey */
    Kh_1 = "KH_1",
    /** Bătdâmbâng */
    Kh_2 = "KH_2",
    /** Kâmpóng Cham */
    Kh_3 = "KH_3",
    /** Kâmpóng Chhnăng */
    Kh_4 = "KH_4",
    /** Kâmpóng Spœ */
    Kh_5 = "KH_5",
    /** Kampong Thum */
    Kh_6 = "KH_6",
    /** Kâmpôt */
    Kh_7 = "KH_7",
    /** Kândal */
    Kh_8 = "KH_8",
    /** Kaôh Kŏng */
    Kh_9 = "KH_9",
    /** Kracheh */
    Kh_10 = "KH_10",
    /** Mondol Kiri */
    Kh_11 = "KH_11",
    /** Phnom Penh */
    Kh_12 = "KH_12",
    /** Preah Vihear */
    Kh_13 = "KH_13",
    /** Prey Veaeng */
    Kh_14 = "KH_14",
    /** Pousaat */
    Kh_15 = "KH_15",
    /** Rôtânôkiri */
    Kh_16 = "KH_16",
    /** Siĕmréab */
    Kh_17 = "KH_17",
    /** Krong Preah Sihanouk */
    Kh_18 = "KH_18",
    /** Stueng Traeng */
    Kh_19 = "KH_19",
    /** Svaay Rieng */
    Kh_20 = "KH_20",
    /** Takêv */
    Kh_21 = "KH_21",
    /** Otdar Mean Chey */
    Kh_22 = "KH_22",
    /** Krŏng Kêb */
    Kh_23 = "KH_23",
    /** Krong Pailin */
    Kh_24 = "KH_24",
    /** Gilbert Islands */
    KiG = "KI_G",
    /** Line Islands */
    KiL = "KI_L",
    /** Phoenix Islands */
    KiP = "KI_P",
    /** Anjouan */
    KmA = "KM_A",
    /** Grande Comore */
    KmG = "KM_G",
    /** Mohéli */
    KmM = "KM_M",
    /** Christ Church Nichola Town */
    Kn_01 = "KN_01",
    /** Saint Anne Sandy Point */
    Kn_02 = "KN_02",
    /** Saint George Basseterre */
    Kn_03 = "KN_03",
    /** Saint George Gingerland */
    Kn_04 = "KN_04",
    /** Saint James Windward */
    Kn_05 = "KN_05",
    /** Saint John Capisterre */
    Kn_06 = "KN_06",
    /** Saint John Figtree */
    Kn_07 = "KN_07",
    /** Saint Mary Cayon */
    Kn_08 = "KN_08",
    /** Saint Paul Capisterre */
    Kn_09 = "KN_09",
    /** Saint Paul Charlestown */
    Kn_10 = "KN_10",
    /** Saint Peter Basseterre */
    Kn_11 = "KN_11",
    /** Saint Thomas Lowland */
    Kn_12 = "KN_12",
    /** Saint Thomas Middle Island */
    Kn_13 = "KN_13",
    /** Trinity Palmetto Point */
    Kn_15 = "KN_15",
    /** Saint Kitts */
    KnK = "KN_K",
    /** Nevis */
    KnN = "KN_N",
    /** Phyeongyang */
    Kp_01 = "KP_01",
    /** P'yǒngan-namdo */
    Kp_02 = "KP_02",
    /** Phyeonganpukto */
    Kp_03 = "KP_03",
    /** Jakangto */
    Kp_04 = "KP_04",
    /** Hwanghainamto */
    Kp_05 = "KP_05",
    /** Hwanghaipukto */
    Kp_06 = "KP_06",
    /** Kangwǒn-do */
    Kp_07 = "KP_07",
    /** Hamkyeongnamto */
    Kp_08 = "KP_08",
    /** Hamgyǒng-bukto */
    Kp_09 = "KP_09",
    /** Yanggang-do */
    Kp_10 = "KP_10",
    /** Nasǒn */
    Kp_13 = "KP_13",
    /** Seoul-T'ǔkpyǒlshi */
    Kr_11 = "KR_11",
    /** Busan-gwangyeoksi  */
    Kr_26 = "KR_26",
    /** Daegu-gwangyeoksi  */
    Kr_27 = "KR_27",
    /** Incheon-gwangyeoksi  */
    Kr_28 = "KR_28",
    /** Gwangju-gwangyeoksi  */
    Kr_29 = "KR_29",
    /** Daejeon-gwangyeoksi  */
    Kr_30 = "KR_30",
    /** Ulsan-gwangyeoksi  */
    Kr_31 = "KR_31",
    /** Gyeonggi-do  */
    Kr_41 = "KR_41",
    /** Gangwon-do  */
    Kr_42 = "KR_42",
    /** Chungcheongbuk-do  */
    Kr_43 = "KR_43",
    /** Chungcheongnam-do  */
    Kr_44 = "KR_44",
    /** Jeollabuk-do  */
    Kr_45 = "KR_45",
    /** Jeollanam-do  */
    Kr_46 = "KR_46",
    /** Gyeongsangbuk-do  */
    Kr_47 = "KR_47",
    /** Gyeongsangnam-do  */
    Kr_48 = "KR_48",
    /** Jejudo */
    Kr_49 = "KR_49",
    /** Sejong */
    Kr_50 = "KR_50",
    /** Al Aḩmadī */
    KwAh = "KW_AH",
    /** Al Farwānīyah */
    KwFa = "KW_FA",
    /** Ḩawallī */
    KwHa = "KW_HA",
    /** Al Jahrā’ */
    KwJa = "KW_JA",
    /** Al Kuwayt */
    KwKu = "KW_KU",
    /** Mubārak al Kabīr */
    KwMu = "KW_MU",
    /** Aqmola oblysy */
    KzAkm = "KZ_AKM",
    /** Aktyubinskaya oblast' */
    KzAkt = "KZ_AKT",
    /** Almaty */
    KzAla = "KZ_ALA",
    /** Almaty oblysy */
    KzAlm = "KZ_ALM",
    /** Astana */
    KzAst = "KZ_AST",
    /** Atyrauskaya oblast' */
    KzAty = "KZ_ATY",
    /** Qaraghandy oblysy */
    KzKar = "KZ_KAR",
    /** Kostanajskaja oblast' */
    KzKus = "KZ_KUS",
    /** Kyzylordinskaya oblast' */
    KzKzy = "KZ_KZY",
    /** Mangystauskaja oblast' */
    KzMan = "KZ_MAN",
    /** Pavlodarskaya oblast' */
    KzPav = "KZ_PAV",
    /** Severo-Kazahstanskaja oblast' */
    KzSev = "KZ_SEV",
    /** Vostochno-Kazakhstanskaya oblast' */
    KzVos = "KZ_VOS",
    /** Ongtüstik Qazaqstan oblysy */
    KzYuz = "KZ_YUZ",
    /** Zapadno-Kazakhstanskaya oblast' */
    KzZap = "KZ_ZAP",
    /** Zhambylskaya oblast' */
    KzZha = "KZ_ZHA",
    /** Attopeu */
    LaAt = "LA_AT",
    /** Bokèo */
    LaBk = "LA_BK",
    /** Borikhane */
    LaBl = "LA_BL",
    /** Champassak */
    LaCh = "LA_CH",
    /** Houaphan */
    LaHo = "LA_HO",
    /** Khammouan */
    LaKh = "LA_KH",
    /** Louang Namtha */
    LaLm = "LA_LM",
    /** Louang Prabang */
    LaLp = "LA_LP",
    /** Oudomsai */
    LaOu = "LA_OU",
    /** Phong Saly */
    LaPh = "LA_PH",
    /** Saravane */
    LaSl = "LA_SL",
    /** Savannakhét */
    LaSv = "LA_SV",
    /** Vientiane */
    LaVi = "LA_VI",
    /** Vientiane */
    LaVt = "LA_VT",
    /** Sayaboury */
    LaXa = "LA_XA",
    /** Sékong */
    LaXe = "LA_XE",
    /** Xieng Khouang */
    LaXi = "LA_XI",
    /** Xaisômboun */
    LaXn = "LA_XN",
    /** ‘Akkār */
    LbAk = "LB_AK",
    /** Liban-Nord */
    LbAs = "LB_AS",
    /** Beyrouth */
    LbBa = "LB_BA",
    /** Baalbek-Hermel */
    LbBh = "LB_BH",
    /** Al Biqā‘ */
    LbBi = "LB_BI",
    /** Liban-Sud */
    LbJa = "LB_JA",
    /** Jabal Lubnān */
    LbJl = "LB_JL",
    /** An Nabaţīyah */
    LbNa = "LB_NA",
    /** Anse la Raye */
    Lc_01 = "LC_01",
    /** Castries */
    Lc_02 = "LC_02",
    /** Choiseul */
    Lc_03 = "LC_03",
    /** Dennery */
    Lc_05 = "LC_05",
    /** Gros Islet */
    Lc_06 = "LC_06",
    /** Laborie */
    Lc_07 = "LC_07",
    /** Micoud */
    Lc_08 = "LC_08",
    /** Soufrière */
    Lc_10 = "LC_10",
    /** Vieux Fort */
    Lc_11 = "LC_11",
    /** Canaries */
    Lc_12 = "LC_12",
    /** Balzers */
    Li_01 = "LI_01",
    /** Eschen */
    Li_02 = "LI_02",
    /** Gamprin */
    Li_03 = "LI_03",
    /** Mauren */
    Li_04 = "LI_04",
    /** Planken */
    Li_05 = "LI_05",
    /** Ruggell */
    Li_06 = "LI_06",
    /** Schaan */
    Li_07 = "LI_07",
    /** Schellenberg */
    Li_08 = "LI_08",
    /** Triesen */
    Li_09 = "LI_09",
    /** Triesenberg */
    Li_10 = "LI_10",
    /** Vaduz */
    Li_11 = "LI_11",
    /** Western Province */
    Lk_1 = "LK_1",
    /** Central Province */
    Lk_2 = "LK_2",
    /** Southern Province */
    Lk_3 = "LK_3",
    /** Northern Province */
    Lk_4 = "LK_4",
    /** Eastern Province */
    Lk_5 = "LK_5",
    /** North Western Province */
    Lk_6 = "LK_6",
    /** North Central Province */
    Lk_7 = "LK_7",
    /** Uva Province */
    Lk_8 = "LK_8",
    /** Sabaragamuwa Province */
    Lk_9 = "LK_9",
    /** Colombo */
    Lk_11 = "LK_11",
    /** Gampaha */
    Lk_12 = "LK_12",
    /** Kalutara */
    Lk_13 = "LK_13",
    /** Kandy */
    Lk_21 = "LK_21",
    /** Matale */
    Lk_22 = "LK_22",
    /** Nuwara Eliya */
    Lk_23 = "LK_23",
    /** Galle */
    Lk_31 = "LK_31",
    /** Matara */
    Lk_32 = "LK_32",
    /** Hambantota */
    Lk_33 = "LK_33",
    /** Jaffna */
    Lk_41 = "LK_41",
    /** Kilinochchi */
    Lk_42 = "LK_42",
    /** Mannar */
    Lk_43 = "LK_43",
    /** Vavuniya */
    Lk_44 = "LK_44",
    /** Mullaittivu */
    Lk_45 = "LK_45",
    /** Batticaloa */
    Lk_51 = "LK_51",
    /** Ampara */
    Lk_52 = "LK_52",
    /** Trincomalee */
    Lk_53 = "LK_53",
    /** Kurunegala */
    Lk_61 = "LK_61",
    /** Puttalam */
    Lk_62 = "LK_62",
    /** Anuradhapura */
    Lk_71 = "LK_71",
    /** Polonnaruwa */
    Lk_72 = "LK_72",
    /** Badulla */
    Lk_81 = "LK_81",
    /** Monaragala */
    Lk_82 = "LK_82",
    /** Ratnapura */
    Lk_91 = "LK_91",
    /** Kegalla */
    Lk_92 = "LK_92",
    /** Bong */
    LrBg = "LR_BG",
    /** Bomi */
    LrBm = "LR_BM",
    /** Grand Cape Mount */
    LrCm = "LR_CM",
    /** Grand Bassa */
    LrGb = "LR_GB",
    /** Grand Gedeh */
    LrGg = "LR_GG",
    /** Grand Kru */
    LrGk = "LR_GK",
    /** Gbarpolu */
    LrGp = "LR_GP",
    /** Lofa */
    LrLo = "LR_LO",
    /** Margibi */
    LrMg = "LR_MG",
    /** Montserrado */
    LrMo = "LR_MO",
    /** Maryland */
    LrMy = "LR_MY",
    /** Nimba */
    LrNi = "LR_NI",
    /** River Gee */
    LrRg = "LR_RG",
    /** Rivercess */
    LrRi = "LR_RI",
    /** Sinoe */
    LrSi = "LR_SI",
    /** Maseru */
    LsA = "LS_A",
    /** Butha-Buthe */
    LsB = "LS_B",
    /** Leribe */
    LsC = "LS_C",
    /** Berea */
    LsD = "LS_D",
    /** Mafeteng */
    LsE = "LS_E",
    /** Mohale's Hoek */
    LsF = "LS_F",
    /** Quthing */
    LsG = "LS_G",
    /** Qacha's Nek */
    LsH = "LS_H",
    /** Mokhotlong */
    LsJ = "LS_J",
    /** Thaba-Tseka */
    LsK = "LS_K",
    /** Akmenė */
    Lt_01 = "LT_01",
    /** Alytaus miestas */
    Lt_02 = "LT_02",
    /** Alytus */
    Lt_03 = "LT_03",
    /** Anykščiai */
    Lt_04 = "LT_04",
    /** Birštono */
    Lt_05 = "LT_05",
    /** Biržai */
    Lt_06 = "LT_06",
    /** Druskininkai */
    Lt_07 = "LT_07",
    /** Elektrénai */
    Lt_08 = "LT_08",
    /** Ignalina */
    Lt_09 = "LT_09",
    /** Jonava */
    Lt_10 = "LT_10",
    /** Joniškis */
    Lt_11 = "LT_11",
    /** Jurbarkas */
    Lt_12 = "LT_12",
    /** Kaišiadorys */
    Lt_13 = "LT_13",
    /** Kalvarijos */
    Lt_14 = "LT_14",
    /** Kauno miestas */
    Lt_15 = "LT_15",
    /** Kaunas */
    Lt_16 = "LT_16",
    /** Kazlų Rūdos */
    Lt_17 = "LT_17",
    /** Kėdainiai */
    Lt_18 = "LT_18",
    /** Kelmė */
    Lt_19 = "LT_19",
    /** Klaipėdos miestas */
    Lt_20 = "LT_20",
    /** Klaipėda */
    Lt_21 = "LT_21",
    /** Kretinga */
    Lt_22 = "LT_22",
    /** Kupiškis */
    Lt_23 = "LT_23",
    /** Lazdijai */
    Lt_24 = "LT_24",
    /** Marijampolė */
    Lt_25 = "LT_25",
    /** Mažeikiai */
    Lt_26 = "LT_26",
    /** Molėtai */
    Lt_27 = "LT_27",
    /** Neringa */
    Lt_28 = "LT_28",
    /** Pagégiai */
    Lt_29 = "LT_29",
    /** Pakruojis */
    Lt_30 = "LT_30",
    /** Palangos miestas */
    Lt_31 = "LT_31",
    /** Panevėžio miestas */
    Lt_32 = "LT_32",
    /** Panevėžys */
    Lt_33 = "LT_33",
    /** Pasvalys */
    Lt_34 = "LT_34",
    /** Plungė */
    Lt_35 = "LT_35",
    /** Prienai */
    Lt_36 = "LT_36",
    /** Radviliškis */
    Lt_37 = "LT_37",
    /** Raseiniai */
    Lt_38 = "LT_38",
    /** Rietavo */
    Lt_39 = "LT_39",
    /** Rokiškis */
    Lt_40 = "LT_40",
    /** Šakiai */
    Lt_41 = "LT_41",
    /** Šalčininkai */
    Lt_42 = "LT_42",
    /** Šiaulių miestas */
    Lt_43 = "LT_43",
    /** Šiauliai */
    Lt_44 = "LT_44",
    /** Šilalė */
    Lt_45 = "LT_45",
    /** Šilutė */
    Lt_46 = "LT_46",
    /** Širvintos */
    Lt_47 = "LT_47",
    /** Skuodas */
    Lt_48 = "LT_48",
    /** Švenčionys */
    Lt_49 = "LT_49",
    /** Tauragė */
    Lt_50 = "LT_50",
    /** Telšiai */
    Lt_51 = "LT_51",
    /** Trakai */
    Lt_52 = "LT_52",
    /** Ukmergė */
    Lt_53 = "LT_53",
    /** Utena */
    Lt_54 = "LT_54",
    /** Varėna */
    Lt_55 = "LT_55",
    /** Vilkaviškis */
    Lt_56 = "LT_56",
    /** Vilniaus miestas */
    Lt_57 = "LT_57",
    /** Vilnius */
    Lt_58 = "LT_58",
    /** Visaginas */
    Lt_59 = "LT_59",
    /** Zarasai */
    Lt_60 = "LT_60",
    /** Alytaus apskritis */
    LtAl = "LT_AL",
    /** Klaipėdos apskritis */
    LtKl = "LT_KL",
    /** Kauno apskritis */
    LtKu = "LT_KU",
    /** Marijampolės apskritis */
    LtMr = "LT_MR",
    /** Panevėžio apskritis */
    LtPn = "LT_PN",
    /** Šiaulių apskritis */
    LtSa = "LT_SA",
    /** Tauragės apskritis */
    LtTa = "LT_TA",
    /** Telšių apskritis */
    LtTe = "LT_TE",
    /** Utenos apskritis */
    LtUt = "LT_UT",
    /** Vilniaus apskritis */
    LtVl = "LT_VL",
    /** Diekirch */
    LuD = "LU_D",
    /** Grevenmacher */
    LuG = "LU_G",
    /** Luxemburg */
    LuL = "LU_L",
    /** Aglonas novads */
    Lv_001 = "LV_001",
    /** Aizkraukles novads */
    Lv_002 = "LV_002",
    /** Aizputes novads */
    Lv_003 = "LV_003",
    /** Aknīstes novads */
    Lv_004 = "LV_004",
    /** Alojas novads */
    Lv_005 = "LV_005",
    /** Alsungas novads */
    Lv_006 = "LV_006",
    /** Alūksnes novads */
    Lv_007 = "LV_007",
    /** Amatas novads */
    Lv_008 = "LV_008",
    /** Apes novads */
    Lv_009 = "LV_009",
    /** Auces novads */
    Lv_010 = "LV_010",
    /** Ādažu novads */
    Lv_011 = "LV_011",
    /** Babītes novads */
    Lv_012 = "LV_012",
    /** Baldones novads */
    Lv_013 = "LV_013",
    /** Baltinavas novads */
    Lv_014 = "LV_014",
    /** Balvu novads */
    Lv_015 = "LV_015",
    /** Bauskas novads */
    Lv_016 = "LV_016",
    /** Beverīnas novads */
    Lv_017 = "LV_017",
    /** Brocēnu novads */
    Lv_018 = "LV_018",
    /** Burtnieku novads */
    Lv_019 = "LV_019",
    /** Carnikavas novads */
    Lv_020 = "LV_020",
    /** Cesvaines novads */
    Lv_021 = "LV_021",
    /** Cēsu novads */
    Lv_022 = "LV_022",
    /** Ciblas novads */
    Lv_023 = "LV_023",
    /** Dagdas novads */
    Lv_024 = "LV_024",
    /** Daugavpils novads */
    Lv_025 = "LV_025",
    /** Dobeles novads */
    Lv_026 = "LV_026",
    /** Dundagas novads */
    Lv_027 = "LV_027",
    /** Durbes novads */
    Lv_028 = "LV_028",
    /** Engures novads */
    Lv_029 = "LV_029",
    /** Ērgļu novads */
    Lv_030 = "LV_030",
    /** Garkalnes novads */
    Lv_031 = "LV_031",
    /** Grobiņas novads */
    Lv_032 = "LV_032",
    /** Gulbenes novads */
    Lv_033 = "LV_033",
    /** Iecavas novads */
    Lv_034 = "LV_034",
    /** Ikšķiles novads */
    Lv_035 = "LV_035",
    /** Ilūkstes novads */
    Lv_036 = "LV_036",
    /** Inčukalna novads */
    Lv_037 = "LV_037",
    /** Jaunjelgavas novads */
    Lv_038 = "LV_038",
    /** Jaunpiebalgas novads */
    Lv_039 = "LV_039",
    /** Jaunpils novads */
    Lv_040 = "LV_040",
    /** Jelgavas novads */
    Lv_041 = "LV_041",
    /** Jēkabpils novads */
    Lv_042 = "LV_042",
    /** Kandavas novads */
    Lv_043 = "LV_043",
    /** Kārsavas novads */
    Lv_044 = "LV_044",
    /** Kocēnu novads */
    Lv_045 = "LV_045",
    /** Kokneses novads */
    Lv_046 = "LV_046",
    /** Krāslavas novads */
    Lv_047 = "LV_047",
    /** Krimuldas novads */
    Lv_048 = "LV_048",
    /** Krustpils novads */
    Lv_049 = "LV_049",
    /** Kuldīgas novads */
    Lv_050 = "LV_050",
    /** Ķeguma novads */
    Lv_051 = "LV_051",
    /** Ķekavas novads */
    Lv_052 = "LV_052",
    /** Lielvārdes novads */
    Lv_053 = "LV_053",
    /** Limbažu novads */
    Lv_054 = "LV_054",
    /** Līgatnes novads */
    Lv_055 = "LV_055",
    /** Līvānu novads */
    Lv_056 = "LV_056",
    /** Lubānas novads */
    Lv_057 = "LV_057",
    /** Ludzas novads */
    Lv_058 = "LV_058",
    /** Madonas novads */
    Lv_059 = "LV_059",
    /** Mazsalacas novads */
    Lv_060 = "LV_060",
    /** Mālpils novads */
    Lv_061 = "LV_061",
    /** Mārupes novads */
    Lv_062 = "LV_062",
    /** Mērsraga novads */
    Lv_063 = "LV_063",
    /** Naukšēnu novads */
    Lv_064 = "LV_064",
    /** Neretas novads */
    Lv_065 = "LV_065",
    /** Nīcas novads */
    Lv_066 = "LV_066",
    /** Ogres novads */
    Lv_067 = "LV_067",
    /** Olaines novads */
    Lv_068 = "LV_068",
    /** Ozolnieku novads */
    Lv_069 = "LV_069",
    /** Pārgaujas novads */
    Lv_070 = "LV_070",
    /** Pāvilostas novads */
    Lv_071 = "LV_071",
    /** Pļaviņu novads */
    Lv_072 = "LV_072",
    /** Preiļu novads */
    Lv_073 = "LV_073",
    /** Priekules novads */
    Lv_074 = "LV_074",
    /** Priekuļu novads */
    Lv_075 = "LV_075",
    /** Raunas novads */
    Lv_076 = "LV_076",
    /** Rēzeknes novads */
    Lv_077 = "LV_077",
    /** Riebiņu novads */
    Lv_078 = "LV_078",
    /** Rojas novads */
    Lv_079 = "LV_079",
    /** Ropažu novads */
    Lv_080 = "LV_080",
    /** Rucavas novads */
    Lv_081 = "LV_081",
    /** Rugāju novads */
    Lv_082 = "LV_082",
    /** Rundāles novads */
    Lv_083 = "LV_083",
    /** Rūjienas novads */
    Lv_084 = "LV_084",
    /** Salas novads */
    Lv_085 = "LV_085",
    /** Salacgrīvas novads */
    Lv_086 = "LV_086",
    /** Salaspils novads */
    Lv_087 = "LV_087",
    /** Saldus novads */
    Lv_088 = "LV_088",
    /** Saulkrastu novads */
    Lv_089 = "LV_089",
    /** Sējas novads */
    Lv_090 = "LV_090",
    /** Siguldas novads */
    Lv_091 = "LV_091",
    /** Skrīveru novads */
    Lv_092 = "LV_092",
    /** Skrundas novads */
    Lv_093 = "LV_093",
    /** Smiltenes novads */
    Lv_094 = "LV_094",
    /** Stopiņu novads */
    Lv_095 = "LV_095",
    /** Strenču novads */
    Lv_096 = "LV_096",
    /** Talsu novads */
    Lv_097 = "LV_097",
    /** Tērvetes novads */
    Lv_098 = "LV_098",
    /** Tukuma novads */
    Lv_099 = "LV_099",
    /** Vaiņodes novads */
    Lv_100 = "LV_100",
    /** Valkas novads */
    Lv_101 = "LV_101",
    /** Varakļānu novads */
    Lv_102 = "LV_102",
    /** Vārkavas novads */
    Lv_103 = "LV_103",
    /** Vecpiebalgas novads */
    Lv_104 = "LV_104",
    /** Vecumnieku novads */
    Lv_105 = "LV_105",
    /** Ventspils novads */
    Lv_106 = "LV_106",
    /** Viesītes novads */
    Lv_107 = "LV_107",
    /** Viļakas novads */
    Lv_108 = "LV_108",
    /** Viļānu novads */
    Lv_109 = "LV_109",
    /** Zilupes novads */
    Lv_110 = "LV_110",
    /** Daugavpils */
    LvDgv = "LV_DGV",
    /** Jelgava */
    LvJel = "LV_JEL",
    /** Jēkabpils */
    LvJkb = "LV_JKB",
    /** Jūrmala */
    LvJur = "LV_JUR",
    /** Liepāja */
    LvLpx = "LV_LPX",
    /** Rēzekne */
    LvRez = "LV_REZ",
    /** Rīga */
    LvRix = "LV_RIX",
    /** Ventspils */
    LvVen = "LV_VEN",
    /** Valmiera */
    LvVmr = "LV_VMR",
    /** Banghāzī */
    LyBa = "LY_BA",
    /** Al Buţnān */
    LyBu = "LY_BU",
    /** Darnah */
    LyDr = "LY_DR",
    /** Ghāt */
    LyGt = "LY_GT",
    /** Al Jabal al Akhḑar */
    LyJa = "LY_JA",
    /** Al Jabal al Gharbī */
    LyJg = "LY_JG",
    /** Al Jifārah */
    LyJi = "LY_JI",
    /** Al Jufrah */
    LyJu = "LY_JU",
    /** Al Kufrah */
    LyKf = "LY_KF",
    /** Al Marqab */
    LyMb = "LY_MB",
    /** Mişrātah */
    LyMi = "LY_MI",
    /** Al Marj */
    LyMj = "LY_MJ",
    /** Murzuq */
    LyMq = "LY_MQ",
    /** Nālūt */
    LyNl = "LY_NL",
    /** An Nuqāţ al Khams */
    LyNq = "LY_NQ",
    /** Sabhā */
    LySb = "LY_SB",
    /** Surt */
    LySr = "LY_SR",
    /** Ţarābulus */
    LyTb = "LY_TB",
    /** Al Wāḩāt */
    LyWa = "LY_WA",
    /** Wādī al Ḩayāt */
    LyWd = "LY_WD",
    /** Wādī ash Shāţi’ */
    LyWs = "LY_WS",
    /** Az Zāwiyah */
    LyZa = "LY_ZA",
    /** Tanger-Tétouan */
    Ma_01 = "MA_01",
    /** Gharb-Chrarda-Beni Hssen */
    Ma_02 = "MA_02",
    /** Taza-Al Hoceima-Taounate */
    Ma_03 = "MA_03",
    /** L'Oriental */
    Ma_04 = "MA_04",
    /** Fès-Boulemane */
    Ma_05 = "MA_05",
    /** Meknès-Tafilalet */
    Ma_06 = "MA_06",
    /** Rabat-Salé-Zemmour-Zaer */
    Ma_07 = "MA_07",
    /** Grand Casablanca */
    Ma_08 = "MA_08",
    /** Chaouia-Ouardigha */
    Ma_09 = "MA_09",
    /** Doukkala-Abda */
    Ma_10 = "MA_10",
    /** Marrakech-Tensift-Al Haouz */
    Ma_11 = "MA_11",
    /** Tadla-Azilal */
    Ma_12 = "MA_12",
    /** Sous-Massa-Draa */
    Ma_13 = "MA_13",
    /** Guelmim-Es Semara */
    Ma_14 = "MA_14",
    /** Laâyoune-Boujdour-Sakia el Hamra */
    Ma_15 = "MA_15",
    /** Oued ed Dahab-Lagouira (EH) */
    Ma_16 = "MA_16",
    /** Agadir-Ida-Outanane */
    MaAgd = "MA_AGD",
    /** Aousserd (EH) */
    MaAou = "MA_AOU",
    /** Assa-Zag */
    MaAsz = "MA_ASZ",
    /** Azilal */
    MaAzi = "MA_AZI",
    /** Beni Mellal */
    MaBem = "MA_BEM",
    /** Berkane */
    MaBer = "MA_BER",
    /** Ben Slimane */
    MaBes = "MA_BES",
    /** Boujdour (EH) */
    MaBod = "MA_BOD",
    /** Boulemane */
    MaBom = "MA_BOM",
    /** Casablanca */
    MaCas = "MA_CAS",
    /** Chefchaouen */
    MaChe = "MA_CHE",
    /** Chichaoua */
    MaChi = "MA_CHI",
    /** Chtouka-Ait Baha */
    MaCht = "MA_CHT",
    /** Errachidia */
    MaErr = "MA_ERR",
    /** Essaouira */
    MaEsi = "MA_ESI",
    /** Es Smara (EH) */
    MaEsm = "MA_ESM",
    /** Fahs-Beni Makada */
    MaFah = "MA_FAH",
    /** Fès-Dar-Dbibegh */
    MaFes = "MA_FES",
    /** Figuig */
    MaFig = "MA_FIG",
    /** Guelmim */
    MaGue = "MA_GUE",
    /** El Hajeb */
    MaHaj = "MA_HAJ",
    /** Al Haouz */
    MaHao = "MA_HAO",
    /** Al Hoceïma */
    MaHoc = "MA_HOC",
    /** Ifrane */
    MaIfr = "MA_IFR",
    /** Inezgane-Ait Melloul */
    MaIne = "MA_INE",
    /** El Jadida */
    MaJdi = "MA_JDI",
    /** Jrada */
    MaJra = "MA_JRA",
    /** Kénitra */
    MaKen = "MA_KEN",
    /** Kelaat es Sraghna */
    MaKes = "MA_KES",
    /** Khemisset */
    MaKhe = "MA_KHE",
    /** Khenifra */
    MaKhn = "MA_KHN",
    /** Khouribga */
    MaKho = "MA_KHO",
    /** Laâyoune */
    MaLaa = "MA_LAA",
    /** Larache */
    MaLar = "MA_LAR",
    /** Médiouna */
    MaMed = "MA_MED",
    /** Meknès */
    MaMek = "MA_MEK",
    /** Marrakech-Medina */
    MaMmd = "MA_MMD",
    /** Marrakech-Menara */
    MaMmn = "MA_MMN",
    /** Mohammadia */
    MaMoh = "MA_MOH",
    /** Moulay Yacoub */
    MaMou = "MA_MOU",
    /** Nador */
    MaNad = "MA_NAD",
    /** Nouaceur */
    MaNou = "MA_NOU",
    /** Ouarzazate */
    MaOua = "MA_OUA",
    /** Oued ed Dahab (EH) */
    MaOud = "MA_OUD",
    /** Oujda-Angad */
    MaOuj = "MA_OUJ",
    /** Rabat */
    MaRab = "MA_RAB",
    /** Safi */
    MaSaf = "MA_SAF",
    /** Salé */
    MaSal = "MA_SAL",
    /** Sefrou */
    MaSef = "MA_SEF",
    /** Settat */
    MaSet = "MA_SET",
    /** Sidi Kacem */
    MaSik = "MA_SIK",
    /** Skhirate-Témara */
    MaSkh = "MA_SKH",
    /** Sidi Youssef Ben Ali */
    MaSyb = "MA_SYB",
    /** Taourirt */
    MaTai = "MA_TAI",
    /** Taounate */
    MaTao = "MA_TAO",
    /** Taroudant */
    MaTar = "MA_TAR",
    /** Tata */
    MaTat = "MA_TAT",
    /** Taza */
    MaTaz = "MA_TAZ",
    /** Tétouan */
    MaTet = "MA_TET",
    /** Tiznit */
    MaTiz = "MA_TIZ",
    /** Tanger-Assilah */
    MaTng = "MA_TNG",
    /** Tan-Tan */
    MaTnt = "MA_TNT",
    /** Zagora */
    MaZag = "MA_ZAG",
    /** La Colle */
    McCl = "MC_CL",
    /** La Condamine */
    McCo = "MC_CO",
    /** Fontvieille */
    McFo = "MC_FO",
    /** La Gare */
    McGa = "MC_GA",
    /** Jardin Exotique */
    McJe = "MC_JE",
    /** Larvotto */
    McLa = "MC_LA",
    /** Malbousquet */
    McMa = "MC_MA",
    /** Monte-Carlo */
    McMc = "MC_MC",
    /** Moneghetti */
    McMg = "MC_MG",
    /** Monaco-Ville */
    McMo = "MC_MO",
    /** Moulins */
    McMu = "MC_MU",
    /** Port-Hercule */
    McPh = "MC_PH",
    /** Sainte-Dévote */
    McSd = "MC_SD",
    /** La Source */
    McSo = "MC_SO",
    /** Spélugues */
    McSp = "MC_SP",
    /** Saint-Roman */
    McSr = "MC_SR",
    /** Vallon de la Rousse */
    McVr = "MC_VR",
    /** Anenii Noi */
    MdAn = "MD_AN",
    /** Bălţi */
    MdBa = "MD_BA",
    /** Bender  */
    MdBd = "MD_BD",
    /** Briceni */
    MdBr = "MD_BR",
    /** Basarabeasca */
    MdBs = "MD_BS",
    /** Cahul */
    MdCa = "MD_CA",
    /** Călăraşi */
    MdCl = "MD_CL",
    /** Cimişlia */
    MdCm = "MD_CM",
    /** Criuleni */
    MdCr = "MD_CR",
    /** Căuşeni */
    MdCs = "MD_CS",
    /** Cantemir */
    MdCt = "MD_CT",
    /** Chişinău */
    MdCu = "MD_CU",
    /** Donduşeni */
    MdDo = "MD_DO",
    /** Drochia */
    MdDr = "MD_DR",
    /** Dubăsari */
    MdDu = "MD_DU",
    /** Edineţ */
    MdEd = "MD_ED",
    /** Făleşti */
    MdFa = "MD_FA",
    /** Floreşti */
    MdFl = "MD_FL",
    /** Găgăuzia, Unitatea teritorială autonomă (UTAG) */
    MdGa = "MD_GA",
    /** Glodeni */
    MdGl = "MD_GL",
    /** Hînceşti */
    MdHi = "MD_HI",
    /** Ialoveni */
    MdIa = "MD_IA",
    /** Leova */
    MdLe = "MD_LE",
    /** Nisporeni */
    MdNi = "MD_NI",
    /** Ocniţa */
    MdOc = "MD_OC",
    /** Orhei */
    MdOr = "MD_OR",
    /** Rezina */
    MdRe = "MD_RE",
    /** Rîşcani */
    MdRi = "MD_RI",
    /** Şoldăneşti */
    MdSd = "MD_SD",
    /** Sîngerei */
    MdSi = "MD_SI",
    /** Stînga Nistrului, unitatea teritorială din */
    MdSn = "MD_SN",
    /** Soroca */
    MdSo = "MD_SO",
    /** Străşeni */
    MdSt = "MD_ST",
    /** Ştefan Vodă */
    MdSv = "MD_SV",
    /** Taraclia */
    MdTa = "MD_TA",
    /** Teleneşti */
    MdTe = "MD_TE",
    /** Ungheni */
    MdUn = "MD_UN",
    /** Andrijevica */
    Me_01 = "ME_01",
    /** Bar */
    Me_02 = "ME_02",
    /** Berane */
    Me_03 = "ME_03",
    /** Bijelo Polje */
    Me_04 = "ME_04",
    /** Budva */
    Me_05 = "ME_05",
    /** Cetinje */
    Me_06 = "ME_06",
    /** Danilovgrad */
    Me_07 = "ME_07",
    /** Herceg-Novi */
    Me_08 = "ME_08",
    /** Kolašin */
    Me_09 = "ME_09",
    /** Kotor */
    Me_10 = "ME_10",
    /** Mojkovac */
    Me_11 = "ME_11",
    /** Nikšić */
    Me_12 = "ME_12",
    /** Plav */
    Me_13 = "ME_13",
    /** Pljevlja */
    Me_14 = "ME_14",
    /** Plužine */
    Me_15 = "ME_15",
    /** Podgorica */
    Me_16 = "ME_16",
    /** Rožaje */
    Me_17 = "ME_17",
    /** Šavnik */
    Me_18 = "ME_18",
    /** Tivat */
    Me_19 = "ME_19",
    /** Ulcinj */
    Me_20 = "ME_20",
    /** Žabljak */
    Me_21 = "ME_21",
    /** Gusinje */
    Me_22 = "ME_22",
    /** Petnjica */
    Me_23 = "ME_23",
    /** Toamasina */
    MgA = "MG_A",
    /** Antsiranana */
    MgD = "MG_D",
    /** Fianarantsoa */
    MgF = "MG_F",
    /** Mahajanga */
    MgM = "MG_M",
    /** Antananarivo */
    MgT = "MG_T",
    /** Toliara */
    MgU = "MG_U",
    /** Ailuk */
    MhAlk = "MH_ALK",
    /** Ailinglaplap */
    MhAll = "MH_ALL",
    /** Arno */
    MhArn = "MH_ARN",
    /** Aur */
    MhAur = "MH_AUR",
    /** Ebon */
    MhEbo = "MH_EBO",
    /** Enewetak and Ujelang */
    MhEni = "MH_ENI",
    /** Jabat */
    MhJab = "MH_JAB",
    /** Jaluit */
    MhJal = "MH_JAL",
    /** Bikini and Kili */
    MhKil = "MH_KIL",
    /** Kwajalein */
    MhKwa = "MH_KWA",
    /** Ralik chain */
    MhL = "MH_L",
    /** Lae */
    MhLae = "MH_LAE",
    /** Lib */
    MhLib = "MH_LIB",
    /** Likiep */
    MhLik = "MH_LIK",
    /** Majuro */
    MhMaj = "MH_MAJ",
    /** Maloelap */
    MhMal = "MH_MAL",
    /** Mejit */
    MhMej = "MH_MEJ",
    /** Mili */
    MhMil = "MH_MIL",
    /** Namdrik */
    MhNmk = "MH_NMK",
    /** Namu */
    MhNmu = "MH_NMU",
    /** Rongelap */
    MhRon = "MH_RON",
    /** Ratak chain */
    MhT = "MH_T",
    /** Ujae */
    MhUja = "MH_UJA",
    /** Utrik */
    MhUti = "MH_UTI",
    /** Wotho */
    MhWth = "MH_WTH",
    /** Wotje */
    MhWtj = "MH_WTJ",
    /** Aerodrom † */
    Mk_01 = "MK_01",
    /** Aračinovo */
    Mk_02 = "MK_02",
    /** Berovo */
    Mk_03 = "MK_03",
    /** Bitola */
    Mk_04 = "MK_04",
    /** Bogdanci */
    Mk_05 = "MK_05",
    /** Bogovinje */
    Mk_06 = "MK_06",
    /** Bosilovo */
    Mk_07 = "MK_07",
    /** Brvenica */
    Mk_08 = "MK_08",
    /** Butel † */
    Mk_09 = "MK_09",
    /** Valandovo */
    Mk_10 = "MK_10",
    /** Vasilevo */
    Mk_11 = "MK_11",
    /** Vevčani */
    Mk_12 = "MK_12",
    /** Veles */
    Mk_13 = "MK_13",
    /** Vinica */
    Mk_14 = "MK_14",
    /** Vraneštica */
    Mk_15 = "MK_15",
    /** Vrapčište */
    Mk_16 = "MK_16",
    /** Gazi Baba † */
    Mk_17 = "MK_17",
    /** Gevgelija */
    Mk_18 = "MK_18",
    /** Gostivar */
    Mk_19 = "MK_19",
    /** Gradsko */
    Mk_20 = "MK_20",
    /** Debar */
    Mk_21 = "MK_21",
    /** Debarca */
    Mk_22 = "MK_22",
    /** Delčevo */
    Mk_23 = "MK_23",
    /** Demir Kapija */
    Mk_24 = "MK_24",
    /** Demir Hisar */
    Mk_25 = "MK_25",
    /** Dojran */
    Mk_26 = "MK_26",
    /** Dolneni */
    Mk_27 = "MK_27",
    /** Drugovo */
    Mk_28 = "MK_28",
    /** Gjorče Petrov † */
    Mk_29 = "MK_29",
    /** Želino */
    Mk_30 = "MK_30",
    /** Zajas */
    Mk_31 = "MK_31",
    /** Zelenikovo */
    Mk_32 = "MK_32",
    /** Zrnovci */
    Mk_33 = "MK_33",
    /** Ilinden */
    Mk_34 = "MK_34",
    /** Jegunovce */
    Mk_35 = "MK_35",
    /** Kavadarci */
    Mk_36 = "MK_36",
    /** Karbinci */
    Mk_37 = "MK_37",
    /** Karpoš † */
    Mk_38 = "MK_38",
    /** Kisela Voda † */
    Mk_39 = "MK_39",
    /** Kičevo */
    Mk_40 = "MK_40",
    /** Konče */
    Mk_41 = "MK_41",
    /** Kočani */
    Mk_42 = "MK_42",
    /** Kratovo */
    Mk_43 = "MK_43",
    /** Kriva Palanka */
    Mk_44 = "MK_44",
    /** Krivogaštani */
    Mk_45 = "MK_45",
    /** Kruševo */
    Mk_46 = "MK_46",
    /** Kumanovo */
    Mk_47 = "MK_47",
    /** Lipkovo */
    Mk_48 = "MK_48",
    /** Lozovo */
    Mk_49 = "MK_49",
    /** Mavrovo i Rostuša */
    Mk_50 = "MK_50",
    /** Makedonska Kamenica */
    Mk_51 = "MK_51",
    /** Makedonski Brod */
    Mk_52 = "MK_52",
    /** Mogila */
    Mk_53 = "MK_53",
    /** Negotino */
    Mk_54 = "MK_54",
    /** Novaci */
    Mk_55 = "MK_55",
    /** Novo Selo */
    Mk_56 = "MK_56",
    /** Oslomej */
    Mk_57 = "MK_57",
    /** Ohrid */
    Mk_58 = "MK_58",
    /** Petrovec */
    Mk_59 = "MK_59",
    /** Pehčevo */
    Mk_60 = "MK_60",
    /** Plasnica */
    Mk_61 = "MK_61",
    /** Prilep */
    Mk_62 = "MK_62",
    /** Probištip */
    Mk_63 = "MK_63",
    /** Radoviš */
    Mk_64 = "MK_64",
    /** Rankovce */
    Mk_65 = "MK_65",
    /** Resen */
    Mk_66 = "MK_66",
    /** Rosoman */
    Mk_67 = "MK_67",
    /** Saraj † */
    Mk_68 = "MK_68",
    /** Sveti Nikole */
    Mk_69 = "MK_69",
    /** Sopište */
    Mk_70 = "MK_70",
    /** Staro Nagoričane */
    Mk_71 = "MK_71",
    /** Struga */
    Mk_72 = "MK_72",
    /** Strumica */
    Mk_73 = "MK_73",
    /** Studeničani */
    Mk_74 = "MK_74",
    /** Tearce */
    Mk_75 = "MK_75",
    /** Tetovo */
    Mk_76 = "MK_76",
    /** Centar † */
    Mk_77 = "MK_77",
    /** Centar Župa */
    Mk_78 = "MK_78",
    /** Čair † */
    Mk_79 = "MK_79",
    /** Čaška */
    Mk_80 = "MK_80",
    /** Češinovo-Obleševo */
    Mk_81 = "MK_81",
    /** Čučer Sandevo */
    Mk_82 = "MK_82",
    /** Štip */
    Mk_83 = "MK_83",
    /** Šuto Orizari † */
    Mk_84 = "MK_84",
    /** Kayes */
    Ml_1 = "ML_1",
    /** Koulikoro */
    Ml_2 = "ML_2",
    /** Sikasso */
    Ml_3 = "ML_3",
    /** Ségou */
    Ml_4 = "ML_4",
    /** Mopti */
    Ml_5 = "ML_5",
    /** Tombouctou */
    Ml_6 = "ML_6",
    /** Gao */
    Ml_7 = "ML_7",
    /** Kidal */
    Ml_8 = "ML_8",
    /** Bamako */
    MlBko = "ML_BKO",
    /** Sagaing */
    Mm_01 = "MM_01",
    /** Bago */
    Mm_02 = "MM_02",
    /** Magway */
    Mm_03 = "MM_03",
    /** Mandalay */
    Mm_04 = "MM_04",
    /** Taninthayi */
    Mm_05 = "MM_05",
    /** Yangon */
    Mm_06 = "MM_06",
    /** Ayeyawady */
    Mm_07 = "MM_07",
    /** Kachin */
    Mm_11 = "MM_11",
    /** Kayah */
    Mm_12 = "MM_12",
    /** Kayin */
    Mm_13 = "MM_13",
    /** Chin */
    Mm_14 = "MM_14",
    /** Mon */
    Mm_15 = "MM_15",
    /** Rakhine */
    Mm_16 = "MM_16",
    /** Shan */
    Mm_17 = "MM_17",
    /** Nay Pyi Taw */
    Mm_18 = "MM_18",
    /** Orhon */
    Mn_035 = "MN_035",
    /** Darhan uul */
    Mn_037 = "MN_037",
    /** Hentiy */
    Mn_039 = "MN_039",
    /** Hövsgöl */
    Mn_041 = "MN_041",
    /** Hovd */
    Mn_043 = "MN_043",
    /** Uvs */
    Mn_046 = "MN_046",
    /** Töv */
    Mn_047 = "MN_047",
    /** Selenge */
    Mn_049 = "MN_049",
    /** Sühbaatar */
    Mn_051 = "MN_051",
    /** Ömnögovĭ */
    Mn_053 = "MN_053",
    /** Övörhangay */
    Mn_055 = "MN_055",
    /** Dzavhan */
    Mn_057 = "MN_057",
    /** Dundgovĭ */
    Mn_059 = "MN_059",
    /** Dornod */
    Mn_061 = "MN_061",
    /** Dornogovĭ */
    Mn_063 = "MN_063",
    /** Govĭ-Sümber */
    Mn_064 = "MN_064",
    /** Govĭ-Altay */
    Mn_065 = "MN_065",
    /** Bulgan */
    Mn_067 = "MN_067",
    /** Bayanhongor */
    Mn_069 = "MN_069",
    /** Bayan-Ölgiy */
    Mn_071 = "MN_071",
    /** Arhangay */
    Mn_073 = "MN_073",
    /** Ulaanbaatar */
    Mn_1 = "MN_1",
    /** Hodh ech Chargui */
    Mr_01 = "MR_01",
    /** Hodh el Gharbi */
    Mr_02 = "MR_02",
    /** Assaba */
    Mr_03 = "MR_03",
    /** Gorgol */
    Mr_04 = "MR_04",
    /** Brakna */
    Mr_05 = "MR_05",
    /** Trarza */
    Mr_06 = "MR_06",
    /** Adrar */
    Mr_07 = "MR_07",
    /** Dakhlet Nouâdhibou */
    Mr_08 = "MR_08",
    /** Tagant */
    Mr_09 = "MR_09",
    /** Guidimaka */
    Mr_10 = "MR_10",
    /** Tiris Zemmour */
    Mr_11 = "MR_11",
    /** Inchiri */
    Mr_12 = "MR_12",
    /** Nouakchott */
    MrNkc = "MR_NKC",
    /** Attard */
    Mt_01 = "MT_01",
    /** Balzan */
    Mt_02 = "MT_02",
    /** Birgu */
    Mt_03 = "MT_03",
    /** Birkirkara */
    Mt_04 = "MT_04",
    /** Birżebbuġa */
    Mt_05 = "MT_05",
    /** Bormla */
    Mt_06 = "MT_06",
    /** Dingli */
    Mt_07 = "MT_07",
    /** Fgura */
    Mt_08 = "MT_08",
    /** Floriana */
    Mt_09 = "MT_09",
    /** Fontana */
    Mt_10 = "MT_10",
    /** Gudja */
    Mt_11 = "MT_11",
    /** Gżira */
    Mt_12 = "MT_12",
    /** Għajnsielem */
    Mt_13 = "MT_13",
    /** Għarb */
    Mt_14 = "MT_14",
    /** Għargħur */
    Mt_15 = "MT_15",
    /** Għasri */
    Mt_16 = "MT_16",
    /** Għaxaq */
    Mt_17 = "MT_17",
    /** Ħamrun */
    Mt_18 = "MT_18",
    /** Iklin */
    Mt_19 = "MT_19",
    /** Isla */
    Mt_20 = "MT_20",
    /** Kalkara */
    Mt_21 = "MT_21",
    /** Kerċem */
    Mt_22 = "MT_22",
    /** Kirkop */
    Mt_23 = "MT_23",
    /** Lija */
    Mt_24 = "MT_24",
    /** Luqa */
    Mt_25 = "MT_25",
    /** Marsa */
    Mt_26 = "MT_26",
    /** Marsaskala */
    Mt_27 = "MT_27",
    /** Marsaxlokk */
    Mt_28 = "MT_28",
    /** Mdina */
    Mt_29 = "MT_29",
    /** Mellieħa */
    Mt_30 = "MT_30",
    /** Mġarr */
    Mt_31 = "MT_31",
    /** Mosta */
    Mt_32 = "MT_32",
    /** Mqabba */
    Mt_33 = "MT_33",
    /** Msida */
    Mt_34 = "MT_34",
    /** Mtarfa */
    Mt_35 = "MT_35",
    /** Munxar */
    Mt_36 = "MT_36",
    /** Nadur */
    Mt_37 = "MT_37",
    /** Naxxar */
    Mt_38 = "MT_38",
    /** Paola */
    Mt_39 = "MT_39",
    /** Pembroke */
    Mt_40 = "MT_40",
    /** Pietà */
    Mt_41 = "MT_41",
    /** Qala */
    Mt_42 = "MT_42",
    /** Qormi */
    Mt_43 = "MT_43",
    /** Qrendi */
    Mt_44 = "MT_44",
    /** Rabat Gozo */
    Mt_45 = "MT_45",
    /** Rabat Malta */
    Mt_46 = "MT_46",
    /** Safi */
    Mt_47 = "MT_47",
    /** Saint Julian’s */
    Mt_48 = "MT_48",
    /** Saint John */
    Mt_49 = "MT_49",
    /** Saint Lawrence */
    Mt_50 = "MT_50",
    /** Saint Paul’s Bay */
    Mt_51 = "MT_51",
    /** Sannat */
    Mt_52 = "MT_52",
    /** Saint Lucia’s */
    Mt_53 = "MT_53",
    /** Santa Venera */
    Mt_54 = "MT_54",
    /** Siġġiewi */
    Mt_55 = "MT_55",
    /** Sliema */
    Mt_56 = "MT_56",
    /** Swieqi */
    Mt_57 = "MT_57",
    /** Ta’ Xbiex */
    Mt_58 = "MT_58",
    /** Tarxien */
    Mt_59 = "MT_59",
    /** Valletta */
    Mt_60 = "MT_60",
    /** Xagħra */
    Mt_61 = "MT_61",
    /** Xewkija */
    Mt_62 = "MT_62",
    /** Xgħajra */
    Mt_63 = "MT_63",
    /** Żabbar */
    Mt_64 = "MT_64",
    /** Żebbuġ Gozo */
    Mt_65 = "MT_65",
    /** Żebbuġ Malta */
    Mt_66 = "MT_66",
    /** Żejtun */
    Mt_67 = "MT_67",
    /** Żurrieq */
    Mt_68 = "MT_68",
    /** Agalega Islands */
    MuAg = "MU_AG",
    /** Black River */
    MuBl = "MU_BL",
    /** Beau Bassin-Rose Hill */
    MuBr = "MU_BR",
    /** Cargados Carajos Shoals */
    MuCc = "MU_CC",
    /** Curepipe */
    MuCu = "MU_CU",
    /** Flacq */
    MuFl = "MU_FL",
    /** Grand Port */
    MuGp = "MU_GP",
    /** Moka */
    MuMo = "MU_MO",
    /** Pamplemousses */
    MuPa = "MU_PA",
    /** Port Louis */
    MuPl = "MU_PL",
    /** Port Louis */
    MuPu = "MU_PU",
    /** Plaines Wilhems */
    MuPw = "MU_PW",
    /** Quatre Bornes */
    MuQb = "MU_QB",
    /** Rodrigues Island */
    MuRo = "MU_RO",
    /** Rivière du Rempart */
    MuRr = "MU_RR",
    /** Savanne */
    MuSa = "MU_SA",
    /** Vacoas-Phoenix */
    MuVp = "MU_VP",
    /** Alifu Dhaalu */
    Mv_00 = "MV_00",
    /** Seenu */
    Mv_01 = "MV_01",
    /** Alifu Alifu */
    Mv_02 = "MV_02",
    /** Lhaviyani */
    Mv_03 = "MV_03",
    /** Vaavu */
    Mv_04 = "MV_04",
    /** Laamu */
    Mv_05 = "MV_05",
    /** Haa Alifu */
    Mv_07 = "MV_07",
    /** Thaa */
    Mv_08 = "MV_08",
    /** Meemu */
    Mv_12 = "MV_12",
    /** Raa */
    Mv_13 = "MV_13",
    /** Faafu */
    Mv_14 = "MV_14",
    /** Dhaalu */
    Mv_17 = "MV_17",
    /** Baa */
    Mv_20 = "MV_20",
    /** Haa Dhaalu */
    Mv_23 = "MV_23",
    /** Shaviyani */
    Mv_24 = "MV_24",
    /** Noonu */
    Mv_25 = "MV_25",
    /** Kaafu */
    Mv_26 = "MV_26",
    /** Gaafu Alifu */
    Mv_27 = "MV_27",
    /** Gaafu Dhaalu */
    Mv_28 = "MV_28",
    /** Gnaviyani */
    Mv_29 = "MV_29",
    /** Central */
    MvCe = "MV_CE",
    /** Male */
    MvMle = "MV_MLE",
    /** North Central */
    MvNc = "MV_NC",
    /** North */
    MvNo = "MV_NO",
    /** South Central */
    MvSc = "MV_SC",
    /** South */
    MvSu = "MV_SU",
    /** Upper North */
    MvUn = "MV_UN",
    /** Upper South */
    MvUs = "MV_US",
    /** Balaka */
    MwBa = "MW_BA",
    /** Blantyre */
    MwBl = "MW_BL",
    /** Central Region */
    MwC = "MW_C",
    /** Chikwawa */
    MwCk = "MW_CK",
    /** Chiradzulu */
    MwCr = "MW_CR",
    /** Chitipa */
    MwCt = "MW_CT",
    /** Dedza */
    MwDe = "MW_DE",
    /** Dowa */
    MwDo = "MW_DO",
    /** Karonga */
    MwKr = "MW_KR",
    /** Kasungu */
    MwKs = "MW_KS",
    /** Lilongwe */
    MwLi = "MW_LI",
    /** Likoma */
    MwLk = "MW_LK",
    /** Mchinji */
    MwMc = "MW_MC",
    /** Mangochi */
    MwMg = "MW_MG",
    /** Machinga */
    MwMh = "MW_MH",
    /** Mulanje */
    MwMu = "MW_MU",
    /** Mwanza */
    MwMw = "MW_MW",
    /** Mzimba */
    MwMz = "MW_MZ",
    /** Northern Region */
    MwN = "MW_N",
    /** Nkhata Bay */
    MwNb = "MW_NB",
    /** Neno */
    MwNe = "MW_NE",
    /** Ntchisi */
    MwNi = "MW_NI",
    /** Nkhotakota */
    MwNk = "MW_NK",
    /** Nsanje */
    MwNs = "MW_NS",
    /** Ntcheu */
    MwNu = "MW_NU",
    /** Phalombe */
    MwPh = "MW_PH",
    /** Rumphi */
    MwRu = "MW_RU",
    /** Southern Region */
    MwS = "MW_S",
    /** Salima */
    MwSa = "MW_SA",
    /** Thyolo */
    MwTh = "MW_TH",
    /** Zomba */
    MwZo = "MW_ZO",
    /** Aguascalientes */
    MxAgu = "MX_AGU",
    /** Baja California */
    MxBcn = "MX_BCN",
    /** Baja California Sur */
    MxBcs = "MX_BCS",
    /** Campeche */
    MxCam = "MX_CAM",
    /** Chihuahua */
    MxChh = "MX_CHH",
    /** Chiapas */
    MxChp = "MX_CHP",
    /** Coahuila */
    MxCoa = "MX_COA",
    /** Colima */
    MxCol = "MX_COL",
    /** Distrito Federal */
    MxDif = "MX_DIF",
    /** Durango */
    MxDur = "MX_DUR",
    /** Guerrero */
    MxGro = "MX_GRO",
    /** Guanajuato */
    MxGua = "MX_GUA",
    /** Hidalgo */
    MxHid = "MX_HID",
    /** Jalisco */
    MxJal = "MX_JAL",
    /** México */
    MxMex = "MX_MEX",
    /** Michoacán */
    MxMic = "MX_MIC",
    /** Morelos */
    MxMor = "MX_MOR",
    /** Nayarit */
    MxNay = "MX_NAY",
    /** Nuevo León */
    MxNle = "MX_NLE",
    /** Oaxaca */
    MxOax = "MX_OAX",
    /** Puebla */
    MxPue = "MX_PUE",
    /** Querétaro */
    MxQue = "MX_QUE",
    /** Quintana Roo */
    MxRoo = "MX_ROO",
    /** Sinaloa */
    MxSin = "MX_SIN",
    /** San Luis Potosí */
    MxSlp = "MX_SLP",
    /** Sonora */
    MxSon = "MX_SON",
    /** Tabasco */
    MxTab = "MX_TAB",
    /** Tamaulipas */
    MxTam = "MX_TAM",
    /** Tlaxcala */
    MxTla = "MX_TLA",
    /** Veracruz */
    MxVer = "MX_VER",
    /** Yucatán */
    MxYuc = "MX_YUC",
    /** Zacatecas */
    MxZac = "MX_ZAC",
    /** Johor */
    My_01 = "MY_01",
    /** Kedah */
    My_02 = "MY_02",
    /** Kelantan */
    My_03 = "MY_03",
    /** Melaka */
    My_04 = "MY_04",
    /** Negeri Sembilan */
    My_05 = "MY_05",
    /** Pahang */
    My_06 = "MY_06",
    /** Pulau Pinang */
    My_07 = "MY_07",
    /** Perak */
    My_08 = "MY_08",
    /** Perlis */
    My_09 = "MY_09",
    /** Selangor */
    My_10 = "MY_10",
    /** Terengganu */
    My_11 = "MY_11",
    /** Sabah */
    My_12 = "MY_12",
    /** Sarawak */
    My_13 = "MY_13",
    /** Wilayah Persekutuan Kuala Lumpur */
    My_14 = "MY_14",
    /** Wilayah Persekutuan Labuan */
    My_15 = "MY_15",
    /** Wilayah Persekutuan Putrajaya */
    My_16 = "MY_16",
    /** Niassa */
    MzA = "MZ_A",
    /** Manica */
    MzB = "MZ_B",
    /** Gaza */
    MzG = "MZ_G",
    /** Inhambane */
    MzI = "MZ_I",
    /** Maputo */
    MzL = "MZ_L",
    /** Maputo */
    MzMpm = "MZ_MPM",
    /** Nampula */
    MzN = "MZ_N",
    /** Cabo Delgado */
    MzP = "MZ_P",
    /** Zambézia */
    MzQ = "MZ_Q",
    /** Sofala */
    MzS = "MZ_S",
    /** Tete */
    MzT = "MZ_T",
    /** Zambezi */
    NaCa = "NA_CA",
    /** Erongo */
    NaEr = "NA_ER",
    /** Hardap */
    NaHa = "NA_HA",
    /** Karas */
    NaKa = "NA_KA",
    /** Kavango East */
    NaKe = "NA_KE",
    /** Khomas */
    NaKh = "NA_KH",
    /** Kunene */
    NaKu = "NA_KU",
    /** Kavango West */
    NaKw = "NA_KW",
    /** Otjozondjupa */
    NaOd = "NA_OD",
    /** Omaheke */
    NaOh = "NA_OH",
    /** Oshana */
    NaOn = "NA_ON",
    /** Omusati */
    NaOs = "NA_OS",
    /** Oshikoto */
    NaOt = "NA_OT",
    /** Ohangwena */
    NaOw = "NA_OW",
    /** Agadez */
    Ne_1 = "NE_1",
    /** Diffa */
    Ne_2 = "NE_2",
    /** Dosso */
    Ne_3 = "NE_3",
    /** Maradi */
    Ne_4 = "NE_4",
    /** Tahoua */
    Ne_5 = "NE_5",
    /** Tillabéri */
    Ne_6 = "NE_6",
    /** Zinder */
    Ne_7 = "NE_7",
    /** Niamey */
    Ne_8 = "NE_8",
    /** Abia */
    NgAb = "NG_AB",
    /** Adamawa */
    NgAd = "NG_AD",
    /** Akwa Ibom */
    NgAk = "NG_AK",
    /** Anambra */
    NgAn = "NG_AN",
    /** Bauchi */
    NgBa = "NG_BA",
    /** Benue */
    NgBe = "NG_BE",
    /** Borno */
    NgBo = "NG_BO",
    /** Bayelsa */
    NgBy = "NG_BY",
    /** Cross River */
    NgCr = "NG_CR",
    /** Delta */
    NgDe = "NG_DE",
    /** Ebonyi */
    NgEb = "NG_EB",
    /** Edo */
    NgEd = "NG_ED",
    /** Ekiti */
    NgEk = "NG_EK",
    /** Enugu */
    NgEn = "NG_EN",
    /** Abuja Federal Capital Territory */
    NgFc = "NG_FC",
    /** Gombe */
    NgGo = "NG_GO",
    /** Imo */
    NgIm = "NG_IM",
    /** Jigawa */
    NgJi = "NG_JI",
    /** Kaduna */
    NgKd = "NG_KD",
    /** Kebbi */
    NgKe = "NG_KE",
    /** Kano */
    NgKn = "NG_KN",
    /** Kogi */
    NgKo = "NG_KO",
    /** Katsina */
    NgKt = "NG_KT",
    /** Kwara */
    NgKw = "NG_KW",
    /** Lagos */
    NgLa = "NG_LA",
    /** Nasarawa */
    NgNa = "NG_NA",
    /** Niger */
    NgNi = "NG_NI",
    /** Ogun */
    NgOg = "NG_OG",
    /** Ondo */
    NgOn = "NG_ON",
    /** Osun */
    NgOs = "NG_OS",
    /** Oyo */
    NgOy = "NG_OY",
    /** Plateau */
    NgPl = "NG_PL",
    /** Rivers */
    NgRi = "NG_RI",
    /** Sokoto */
    NgSo = "NG_SO",
    /** Taraba */
    NgTa = "NG_TA",
    /** Yobe */
    NgYo = "NG_YO",
    /** Zamfara */
    NgZa = "NG_ZA",
    /** Atlántico Norte */
    NiAn = "NI_AN",
    /** Atlántico Sur */
    NiAs = "NI_AS",
    /** Boaco */
    NiBo = "NI_BO",
    /** Carazo */
    NiCa = "NI_CA",
    /** Chinandega */
    NiCi = "NI_CI",
    /** Chontales */
    NiCo = "NI_CO",
    /** Estelí */
    NiEs = "NI_ES",
    /** Granada */
    NiGr = "NI_GR",
    /** Jinotega */
    NiJi = "NI_JI",
    /** León */
    NiLe = "NI_LE",
    /** Madriz */
    NiMd = "NI_MD",
    /** Managua */
    NiMn = "NI_MN",
    /** Masaya */
    NiMs = "NI_MS",
    /** Matagalpa */
    NiMt = "NI_MT",
    /** Nueva Segovia */
    NiNs = "NI_NS",
    /** Rivas */
    NiRi = "NI_RI",
    /** Río San Juan */
    NiSj = "NI_SJ",
    /** Aruba  */
    NlAw = "NL_AW",
    /** Bonaire  */
    NlBq1 = "NL_BQ1",
    /** Saba  */
    NlBq2 = "NL_BQ2",
    /** Sint Eustatius  */
    NlBq3 = "NL_BQ3",
    /** Curaçao  */
    NlCw = "NL_CW",
    /** Drenthe */
    NlDr = "NL_DR",
    /** Flevoland */
    NlFl = "NL_FL",
    /** Fryslân */
    NlFr = "NL_FR",
    /** Gelderland */
    NlGe = "NL_GE",
    /** Groningen */
    NlGr = "NL_GR",
    /** Limburg */
    NlLi = "NL_LI",
    /** Noord-Brabant */
    NlNb = "NL_NB",
    /** Noord-Holland */
    NlNh = "NL_NH",
    /** Overijssel */
    NlOv = "NL_OV",
    /** Sint Maarten  */
    NlSx = "NL_SX",
    /** Utrecht */
    NlUt = "NL_UT",
    /** Zeeland */
    NlZe = "NL_ZE",
    /** Zuid-Holland */
    NlZh = "NL_ZH",
    /** Østfold */
    No_01 = "NO_01",
    /** Akershus */
    No_02 = "NO_02",
    /** Oslo */
    No_03 = "NO_03",
    /** Hedmark */
    No_04 = "NO_04",
    /** Oppland */
    No_05 = "NO_05",
    /** Buskerud */
    No_06 = "NO_06",
    /** Vestfold */
    No_07 = "NO_07",
    /** Telemark */
    No_08 = "NO_08",
    /** Aust-Agder */
    No_09 = "NO_09",
    /** Vest-Agder */
    No_10 = "NO_10",
    /** Rogaland */
    No_11 = "NO_11",
    /** Hordaland */
    No_12 = "NO_12",
    /** Sogn og Fjordane */
    No_14 = "NO_14",
    /** Møre og Romsdal */
    No_15 = "NO_15",
    /** Sør-Trøndelag */
    No_16 = "NO_16",
    /** Nord-Trøndelag */
    No_17 = "NO_17",
    /** Nordland */
    No_18 = "NO_18",
    /** Romsa */
    No_19 = "NO_19",
    /** Finnmárku */
    No_20 = "NO_20",
    /** Svalbard  */
    No_21 = "NO_21",
    /** Jan Mayen  */
    No_22 = "NO_22",
    /** Central */
    Np_1 = "NP_1",
    /** Mid Western */
    Np_2 = "NP_2",
    /** Western */
    Np_3 = "NP_3",
    /** Eastern */
    Np_4 = "NP_4",
    /** Far Western */
    Np_5 = "NP_5",
    /** Bagmati */
    NpBa = "NP_BA",
    /** Bheri */
    NpBh = "NP_BH",
    /** Dhawalagiri */
    NpDh = "NP_DH",
    /** Gandaki */
    NpGa = "NP_GA",
    /** Janakpur */
    NpJa = "NP_JA",
    /** Karnali */
    NpKa = "NP_KA",
    /** Kosi */
    NpKo = "NP_KO",
    /** Lumbini */
    NpLu = "NP_LU",
    /** Mahakali */
    NpMa = "NP_MA",
    /** Mechi */
    NpMe = "NP_ME",
    /** Narayani */
    NpNa = "NP_NA",
    /** Rapti */
    NpRa = "NP_RA",
    /** Sagarmatha */
    NpSa = "NP_SA",
    /** Seti */
    NpSe = "NP_SE",
    /** Aiwo */
    Nr_01 = "NR_01",
    /** Anabar */
    Nr_02 = "NR_02",
    /** Anetan */
    Nr_03 = "NR_03",
    /** Anibare */
    Nr_04 = "NR_04",
    /** Baiti */
    Nr_05 = "NR_05",
    /** Boe */
    Nr_06 = "NR_06",
    /** Buada */
    Nr_07 = "NR_07",
    /** Denigomodu */
    Nr_08 = "NR_08",
    /** Ewa */
    Nr_09 = "NR_09",
    /** Ijuw */
    Nr_10 = "NR_10",
    /** Meneng */
    Nr_11 = "NR_11",
    /** Nibok */
    Nr_12 = "NR_12",
    /** Uaboe */
    Nr_13 = "NR_13",
    /** Yaren */
    Nr_14 = "NR_14",
    /** Auckland */
    NzAuk = "NZ_AUK",
    /** Bay of Plenty */
    NzBop = "NZ_BOP",
    /** Canterbury */
    NzCan = "NZ_CAN",
    /** Chatham Islands Territory */
    NzCit = "NZ_CIT",
    /** Gisborne District */
    NzGis = "NZ_GIS",
    /** Hawke's Bay */
    NzHkb = "NZ_HKB",
    /** Marlborough District */
    NzMbh = "NZ_MBH",
    /** Manawatu-Wanganui */
    NzMwt = "NZ_MWT",
    /** North Island */
    NzN = "NZ_N",
    /** Nelson City */
    NzNsn = "NZ_NSN",
    /** Northland */
    NzNtl = "NZ_NTL",
    /** Otago */
    NzOta = "NZ_OTA",
    /** South Island */
    NzS = "NZ_S",
    /** Southland */
    NzStl = "NZ_STL",
    /** Tasman District */
    NzTas = "NZ_TAS",
    /** Taranaki */
    NzTki = "NZ_TKI",
    /** Wellington */
    NzWgn = "NZ_WGN",
    /** Waikato */
    NzWko = "NZ_WKO",
    /** West Coast */
    NzWtc = "NZ_WTC",
    /** Al Bāţinah */
    OmBa = "OM_BA",
    /** Al Buraymī */
    OmBu = "OM_BU",
    /** Ad Dākhilīyah */
    OmDa = "OM_DA",
    /** Masqaţ */
    OmMa = "OM_MA",
    /** Musandam */
    OmMu = "OM_MU",
    /** Ash Sharqīyah */
    OmSh = "OM_SH",
    /** Al Wusţá */
    OmWu = "OM_WU",
    /** Az̧ Z̧āhirah */
    OmZa = "OM_ZA",
    /** Z̧ufār */
    OmZu = "OM_ZU",
    /** Bocas del Toro */
    Pa_1 = "PA_1",
    /** Coclé */
    Pa_2 = "PA_2",
    /** Colón */
    Pa_3 = "PA_3",
    /** Chiriquí */
    Pa_4 = "PA_4",
    /** Darién */
    Pa_5 = "PA_5",
    /** Herrera */
    Pa_6 = "PA_6",
    /** Los Santos */
    Pa_7 = "PA_7",
    /** Panamá */
    Pa_8 = "PA_8",
    /** Veraguas */
    Pa_9 = "PA_9",
    /** Panamá Oeste */
    Pa_10 = "PA_10",
    /** Emberá */
    PaEm = "PA_EM",
    /** Kuna Yala */
    PaKy = "PA_KY",
    /** Ngöbe-Buglé */
    PaNb = "PA_NB",
    /** Amasunu */
    PeAma = "PE_AMA",
    /** Anqash */
    PeAnc = "PE_ANC",
    /** Apurimaq */
    PeApu = "PE_APU",
    /** Ariqipa */
    PeAre = "PE_ARE",
    /** Ayacucho */
    PeAya = "PE_AYA",
    /** Kashamarka */
    PeCaj = "PE_CAJ",
    /** El Callao */
    PeCal = "PE_CAL",
    /** Cusco */
    PeCus = "PE_CUS",
    /** Huánuco */
    PeHuc = "PE_HUC",
    /** Wankawelika */
    PeHuv = "PE_HUV",
    /** Ica */
    PeIca = "PE_ICA",
    /** Junín */
    PeJun = "PE_JUN",
    /** La Libertad */
    PeLal = "PE_LAL",
    /** Lambayeque */
    PeLam = "PE_LAM",
    /** Lima */
    PeLim = "PE_LIM",
    /** Lima llaqta suyu */
    PeLma = "PE_LMA",
    /** Luritu */
    PeLor = "PE_LOR",
    /** Mayutata */
    PeMdd = "PE_MDD",
    /** Moquegua */
    PeMoq = "PE_MOQ",
    /** Pasqu */
    PePas = "PE_PAS",
    /** Piwra */
    PePiu = "PE_PIU",
    /** Punu */
    PePun = "PE_PUN",
    /** San Martin */
    PeSam = "PE_SAM",
    /** Tacna */
    PeTac = "PE_TAC",
    /** Tumbes */
    PeTum = "PE_TUM",
    /** Ucayali */
    PeUca = "PE_UCA",
    /** Chimbu */
    PgCpk = "PG_CPK",
    /** Central */
    PgCpm = "PG_CPM",
    /** East New Britain */
    PgEbr = "PG_EBR",
    /** Eastern Highlands */
    PgEhg = "PG_EHG",
    /** Enga */
    PgEpw = "PG_EPW",
    /** East Sepik */
    PgEsw = "PG_ESW",
    /** Gulf */
    PgGpk = "PG_GPK",
    /** Hela */
    PgHla = "PG_HLA",
    /** Jiwaka */
    PgJwk = "PG_JWK",
    /** Milne Bay */
    PgMba = "PG_MBA",
    /** Morobe */
    PgMpl = "PG_MPL",
    /** Madang */
    PgMpm = "PG_MPM",
    /** Manus */
    PgMrl = "PG_MRL",
    /** National Capital District (Port Moresby) */
    PgNcd = "PG_NCD",
    /** New Ireland */
    PgNik = "PG_NIK",
    /** Northern */
    PgNpp = "PG_NPP",
    /** Bougainville */
    PgNsb = "PG_NSB",
    /** West Sepik */
    PgSan = "PG_SAN",
    /** Southern Highlands */
    PgShm = "PG_SHM",
    /** West New Britain */
    PgWbk = "PG_WBK",
    /** Western Highlands */
    PgWhm = "PG_WHM",
    /** Western */
    PgWpd = "PG_WPD",
    /** National Capital Region */
    Ph_00 = "PH_00",
    /** Ilocos (Region I) */
    Ph_01 = "PH_01",
    /** Cagayan Valley (Region II) */
    Ph_02 = "PH_02",
    /** Central Luzon (Region III) */
    Ph_03 = "PH_03",
    /** Bicol (Region V) */
    Ph_05 = "PH_05",
    /** Western Visayas (Region VI) */
    Ph_06 = "PH_06",
    /** Central Visayas (Region VII) */
    Ph_07 = "PH_07",
    /** Eastern Visayas (Region VIII) */
    Ph_08 = "PH_08",
    /** Zamboanga Peninsula (Region IX) */
    Ph_09 = "PH_09",
    /** Northern Mindanao (Region X) */
    Ph_10 = "PH_10",
    /** Davao (Region XI) */
    Ph_11 = "PH_11",
    /** Soccsksargen (Region XII) */
    Ph_12 = "PH_12",
    /** Caraga (Region XIII) */
    Ph_13 = "PH_13",
    /** Autonomous Region in Muslim Mindanao (ARMM) */
    Ph_14 = "PH_14",
    /** Cordillera Administrative Region (CAR) */
    Ph_15 = "PH_15",
    /** Calabarzon (Region IV-A) */
    Ph_40 = "PH_40",
    /** Mimaropa (Region IV-B) */
    Ph_41 = "PH_41",
    /** Abra */
    PhAbr = "PH_ABR",
    /** Agusan del Norte */
    PhAgn = "PH_AGN",
    /** Agusan del Sur */
    PhAgs = "PH_AGS",
    /** Aklan */
    PhAkl = "PH_AKL",
    /** Albay */
    PhAlb = "PH_ALB",
    /** Antique */
    PhAnt = "PH_ANT",
    /** Apayao */
    PhApa = "PH_APA",
    /** Aurora */
    PhAur = "PH_AUR",
    /** Bataan */
    PhBan = "PH_BAN",
    /** Basilan */
    PhBas = "PH_BAS",
    /** Benguet */
    PhBen = "PH_BEN",
    /** Biliran */
    PhBil = "PH_BIL",
    /** Bohol */
    PhBoh = "PH_BOH",
    /** Batangas */
    PhBtg = "PH_BTG",
    /** Batanes */
    PhBtn = "PH_BTN",
    /** Bukidnon */
    PhBuk = "PH_BUK",
    /** Bulacan */
    PhBul = "PH_BUL",
    /** Cagayan */
    PhCag = "PH_CAG",
    /** Camiguin */
    PhCam = "PH_CAM",
    /** Camarines Norte */
    PhCan = "PH_CAN",
    /** Capiz */
    PhCap = "PH_CAP",
    /** Camarines Sur */
    PhCas = "PH_CAS",
    /** Catanduanes */
    PhCat = "PH_CAT",
    /** Cavite */
    PhCav = "PH_CAV",
    /** Cebu */
    PhCeb = "PH_CEB",
    /** Compostela Valley */
    PhCom = "PH_COM",
    /** Davao Oriental */
    PhDao = "PH_DAO",
    /** Davao del Sur */
    PhDas = "PH_DAS",
    /** Davao del Norte */
    PhDav = "PH_DAV",
    /** Dinagat Islands */
    PhDin = "PH_DIN",
    /** Eastern Samar */
    PhEas = "PH_EAS",
    /** Guimaras */
    PhGui = "PH_GUI",
    /** Ifugao */
    PhIfu = "PH_IFU",
    /** Iloilo */
    PhIli = "PH_ILI",
    /** Ilocos Norte */
    PhIln = "PH_ILN",
    /** Ilocos Sur */
    PhIls = "PH_ILS",
    /** Isabela */
    PhIsa = "PH_ISA",
    /** Kalinga */
    PhKal = "PH_KAL",
    /** Laguna */
    PhLag = "PH_LAG",
    /** Lanao del Norte */
    PhLan = "PH_LAN",
    /** Lanao del Sur */
    PhLas = "PH_LAS",
    /** Leyte */
    PhLey = "PH_LEY",
    /** La Union */
    PhLun = "PH_LUN",
    /** Marinduque */
    PhMad = "PH_MAD",
    /** Maguindanao */
    PhMag = "PH_MAG",
    /** Masbate */
    PhMas = "PH_MAS",
    /** Mindoro Occidental */
    PhMdc = "PH_MDC",
    /** Mindoro Oriental */
    PhMdr = "PH_MDR",
    /** Mountain Province */
    PhMou = "PH_MOU",
    /** Misamis Occidental */
    PhMsc = "PH_MSC",
    /** Misamis Oriental */
    PhMsr = "PH_MSR",
    /** Cotabato */
    PhNco = "PH_NCO",
    /** Negros Occidental */
    PhNec = "PH_NEC",
    /** Negros Oriental */
    PhNer = "PH_NER",
    /** Northern Samar */
    PhNsa = "PH_NSA",
    /** Nueva Ecija */
    PhNue = "PH_NUE",
    /** Nueva Vizcaya */
    PhNuv = "PH_NUV",
    /** Pampanga */
    PhPam = "PH_PAM",
    /** Pangasinan */
    PhPan = "PH_PAN",
    /** Palawan */
    PhPlw = "PH_PLW",
    /** Quezon */
    PhQue = "PH_QUE",
    /** Quirino */
    PhQui = "PH_QUI",
    /** Rizal */
    PhRiz = "PH_RIZ",
    /** Romblon */
    PhRom = "PH_ROM",
    /** Sarangani */
    PhSar = "PH_SAR",
    /** South Cotabato */
    PhSco = "PH_SCO",
    /** Siquijor */
    PhSig = "PH_SIG",
    /** Southern Leyte */
    PhSle = "PH_SLE",
    /** Sulu */
    PhSlu = "PH_SLU",
    /** Sorsogon */
    PhSor = "PH_SOR",
    /** Sultan Kudarat */
    PhSuk = "PH_SUK",
    /** Surigao del Norte */
    PhSun = "PH_SUN",
    /** Surigao del Sur */
    PhSur = "PH_SUR",
    /** Tarlac */
    PhTar = "PH_TAR",
    /** Tawi-Tawi */
    PhTaw = "PH_TAW",
    /** Samar */
    PhWsa = "PH_WSA",
    /** Zamboanga del Norte */
    PhZan = "PH_ZAN",
    /** Zamboanga del Sur */
    PhZas = "PH_ZAS",
    /** Zambales */
    PhZmb = "PH_ZMB",
    /** Zamboanga Sibugay */
    PhZsi = "PH_ZSI",
    /** Balochistan */
    PkBa = "PK_BA",
    /** Gilgit-Baltistan */
    PkGb = "PK_GB",
    /** Islamabad */
    PkIs = "PK_IS",
    /** Azad Kashmir */
    PkJk = "PK_JK",
    /** Khyber Pakhtunkhwa */
    PkKp = "PK_KP",
    /** Punjab */
    PkPb = "PK_PB",
    /** Sindh */
    PkSd = "PK_SD",
    /** Federally Administered Tribal Areas */
    PkTa = "PK_TA",
    /** Dolnośląskie */
    PlDs = "PL_DS",
    /** Kujawsko-pomorskie */
    PlKp = "PL_KP",
    /** Lubuskie */
    PlLb = "PL_LB",
    /** Łódzkie */
    PlLd = "PL_LD",
    /** Lubelskie */
    PlLu = "PL_LU",
    /** Małopolskie */
    PlMa = "PL_MA",
    /** Mazowieckie */
    PlMz = "PL_MZ",
    /** Opolskie */
    PlOp = "PL_OP",
    /** Podlaskie */
    PlPd = "PL_PD",
    /** Podkarpackie */
    PlPk = "PL_PK",
    /** Pomorskie */
    PlPm = "PL_PM",
    /** Świętokrzyskie */
    PlSk = "PL_SK",
    /** Śląskie */
    PlSl = "PL_SL",
    /** Warmińsko-mazurskie */
    PlWn = "PL_WN",
    /** Wielkopolskie */
    PlWp = "PL_WP",
    /** Zachodniopomorskie */
    PlZp = "PL_ZP",
    /** Bethlehem */
    PsBth = "PS_BTH",
    /** Deir El Balah */
    PsDeb = "PS_DEB",
    /** Gaza */
    PsGza = "PS_GZA",
    /** Hebron */
    PsHbn = "PS_HBN",
    /** Jerusalem */
    PsJem = "PS_JEM",
    /** Jenin */
    PsJen = "PS_JEN",
    /** Jericho – Al Aghwar */
    PsJrh = "PS_JRH",
    /** Khan Yunis */
    PsKys = "PS_KYS",
    /** Nablus */
    PsNbs = "PS_NBS",
    /** North Gaza */
    PsNgz = "PS_NGZ",
    /** Qalqilya */
    PsQqa = "PS_QQA",
    /** Ramallah */
    PsRbh = "PS_RBH",
    /** Rafah */
    PsRfh = "PS_RFH",
    /** Salfit */
    PsSlt = "PS_SLT",
    /** Tubas */
    PsTbs = "PS_TBS",
    /** Tulkarm */
    PsTkm = "PS_TKM",
    /** Aveiro */
    Pt_01 = "PT_01",
    /** Beja */
    Pt_02 = "PT_02",
    /** Braga */
    Pt_03 = "PT_03",
    /** Bragança */
    Pt_04 = "PT_04",
    /** Castelo Branco */
    Pt_05 = "PT_05",
    /** Coimbra */
    Pt_06 = "PT_06",
    /** Évora */
    Pt_07 = "PT_07",
    /** Faro */
    Pt_08 = "PT_08",
    /** Guarda */
    Pt_09 = "PT_09",
    /** Leiria */
    Pt_10 = "PT_10",
    /** Lisboa */
    Pt_11 = "PT_11",
    /** Portalegre */
    Pt_12 = "PT_12",
    /** Porto */
    Pt_13 = "PT_13",
    /** Santarém */
    Pt_14 = "PT_14",
    /** Setúbal */
    Pt_15 = "PT_15",
    /** Viana do Castelo */
    Pt_16 = "PT_16",
    /** Vila Real */
    Pt_17 = "PT_17",
    /** Viseu */
    Pt_18 = "PT_18",
    /** Região Autónoma dos Açores */
    Pt_20 = "PT_20",
    /** Região Autónoma da Madeira */
    Pt_30 = "PT_30",
    /** Aimeliik */
    Pw_002 = "PW_002",
    /** Airai */
    Pw_004 = "PW_004",
    /** Angaur */
    Pw_010 = "PW_010",
    /** Hatobohei */
    Pw_050 = "PW_050",
    /** Kayangel */
    Pw_100 = "PW_100",
    /** Koror */
    Pw_150 = "PW_150",
    /** Melekeok */
    Pw_212 = "PW_212",
    /** Ngaraard */
    Pw_214 = "PW_214",
    /** Ngarchelong */
    Pw_218 = "PW_218",
    /** Ngardmau */
    Pw_222 = "PW_222",
    /** Ngatpang */
    Pw_224 = "PW_224",
    /** Ngchesar */
    Pw_226 = "PW_226",
    /** Ngeremlengui */
    Pw_227 = "PW_227",
    /** Ngiwal */
    Pw_228 = "PW_228",
    /** Peleliu */
    Pw_350 = "PW_350",
    /** Sonsorol */
    Pw_370 = "PW_370",
    /** Concepción */
    Py_1 = "PY_1",
    /** San Pedro */
    Py_2 = "PY_2",
    /** Cordillera */
    Py_3 = "PY_3",
    /** Guairá */
    Py_4 = "PY_4",
    /** Caaguazú */
    Py_5 = "PY_5",
    /** Caazapá */
    Py_6 = "PY_6",
    /** Itapúa */
    Py_7 = "PY_7",
    /** Misiones */
    Py_8 = "PY_8",
    /** Paraguarí */
    Py_9 = "PY_9",
    /** Alto Paraná */
    Py_10 = "PY_10",
    /** Central */
    Py_11 = "PY_11",
    /** Ñeembucú */
    Py_12 = "PY_12",
    /** Amambay */
    Py_13 = "PY_13",
    /** Canindeyú */
    Py_14 = "PY_14",
    /** Presidente Hayes */
    Py_15 = "PY_15",
    /** Alto Paraguay */
    Py_16 = "PY_16",
    /** Boquerón */
    Py_19 = "PY_19",
    /** Asunción */
    PyAsu = "PY_ASU",
    /** Ad Dawḩah */
    QaDa = "QA_DA",
    /** Al Khawr wa adh Dhakhīrah */
    QaKh = "QA_KH",
    /** Ash Shamāl */
    QaMs = "QA_MS",
    /** Ar Rayyān */
    QaRa = "QA_RA",
    /** Umm Şalāl */
    QaUs = "QA_US",
    /** Al Wakrah */
    QaWa = "QA_WA",
    /** Az̧ Z̧a‘āyin */
    QaZa = "QA_ZA",
    /** Alba */
    RoAb = "RO_AB",
    /** Argeş */
    RoAg = "RO_AG",
    /** Arad */
    RoAr = "RO_AR",
    /** Bucureşti */
    RoB = "RO_B",
    /** Bacău */
    RoBc = "RO_BC",
    /** Bihor */
    RoBh = "RO_BH",
    /** Bistriţa-Năsăud */
    RoBn = "RO_BN",
    /** Brăila */
    RoBr = "RO_BR",
    /** Botoşani */
    RoBt = "RO_BT",
    /** Braşov */
    RoBv = "RO_BV",
    /** Buzău */
    RoBz = "RO_BZ",
    /** Cluj */
    RoCj = "RO_CJ",
    /** Călăraşi */
    RoCl = "RO_CL",
    /** Caraş-Severin */
    RoCs = "RO_CS",
    /** Constanţa */
    RoCt = "RO_CT",
    /** Covasna */
    RoCv = "RO_CV",
    /** Dâmboviţa */
    RoDb = "RO_DB",
    /** Dolj */
    RoDj = "RO_DJ",
    /** Gorj */
    RoGj = "RO_GJ",
    /** Galaţi */
    RoGl = "RO_GL",
    /** Giurgiu */
    RoGr = "RO_GR",
    /** Hunedoara */
    RoHd = "RO_HD",
    /** Harghita */
    RoHr = "RO_HR",
    /** Ilfov */
    RoIf = "RO_IF",
    /** Ialomiţa */
    RoIl = "RO_IL",
    /** Iaşi */
    RoIs = "RO_IS",
    /** Mehedinţi */
    RoMh = "RO_MH",
    /** Maramureş */
    RoMm = "RO_MM",
    /** Mureş */
    RoMs = "RO_MS",
    /** Neamţ */
    RoNt = "RO_NT",
    /** Olt */
    RoOt = "RO_OT",
    /** Prahova */
    RoPh = "RO_PH",
    /** Sibiu */
    RoSb = "RO_SB",
    /** Sălaj */
    RoSj = "RO_SJ",
    /** Satu Mare */
    RoSm = "RO_SM",
    /** Suceava */
    RoSv = "RO_SV",
    /** Tulcea */
    RoTl = "RO_TL",
    /** Timiş */
    RoTm = "RO_TM",
    /** Teleorman */
    RoTr = "RO_TR",
    /** Vâlcea */
    RoVl = "RO_VL",
    /** Vrancea */
    RoVn = "RO_VN",
    /** Vaslui */
    RoVs = "RO_VS",
    /** Beograd */
    Rs_00 = "RS_00",
    /** Severnobački okrug */
    Rs_01 = "RS_01",
    /** Srednjebanatski okrug */
    Rs_02 = "RS_02",
    /** Severnobanatski okrug */
    Rs_03 = "RS_03",
    /** Južnobanatski okrug */
    Rs_04 = "RS_04",
    /** Zapadnobački okrug */
    Rs_05 = "RS_05",
    /** Južnobački okrug */
    Rs_06 = "RS_06",
    /** Sremski okrug */
    Rs_07 = "RS_07",
    /** Mačvanski okrug */
    Rs_08 = "RS_08",
    /** Kolubarski okrug */
    Rs_09 = "RS_09",
    /** Podunavski okrug */
    Rs_10 = "RS_10",
    /** Braničevski okrug */
    Rs_11 = "RS_11",
    /** Šumadijski okrug */
    Rs_12 = "RS_12",
    /** Pomoravski okrug */
    Rs_13 = "RS_13",
    /** Borski okrug */
    Rs_14 = "RS_14",
    /** Zaječarski okrug */
    Rs_15 = "RS_15",
    /** Zlatiborski okrug */
    Rs_16 = "RS_16",
    /** Moravički okrug */
    Rs_17 = "RS_17",
    /** Raški okrug */
    Rs_18 = "RS_18",
    /** Rasinski okrug */
    Rs_19 = "RS_19",
    /** Nišavski okrug */
    Rs_20 = "RS_20",
    /** Toplički okrug */
    Rs_21 = "RS_21",
    /** Pirotski okrug */
    Rs_22 = "RS_22",
    /** Jablanički okrug */
    Rs_23 = "RS_23",
    /** Pčinjski okrug */
    Rs_24 = "RS_24",
    /** Kosovski okrug */
    Rs_25 = "RS_25",
    /** Pećki okrug */
    Rs_26 = "RS_26",
    /** Prizrenski okrug */
    Rs_27 = "RS_27",
    /** Kosovsko-Mitrovački okrug */
    Rs_28 = "RS_28",
    /** Kosovsko-Pomoravski okrug */
    Rs_29 = "RS_29",
    /** Kosovo-Metohija */
    RsKm = "RS_KM",
    /** Vojvodina */
    RsVo = "RS_VO",
    /** Adygeja, Respublika */
    RuAd = "RU_AD",
    /** Altay, Respublika */
    RuAl = "RU_AL",
    /** Altayskiy kray */
    RuAlt = "RU_ALT",
    /** Amurskaja oblast' */
    RuAmu = "RU_AMU",
    /** Arhangel'skaja oblast' */
    RuArk = "RU_ARK",
    /** Astrahanskaja oblast' */
    RuAst = "RU_AST",
    /** Bashkortostan, Respublika */
    RuBa = "RU_BA",
    /** Belgorodskaja oblast' */
    RuBel = "RU_BEL",
    /** Brjanskaja oblast' */
    RuBry = "RU_BRY",
    /** Burjatija, Respublika */
    RuBu = "RU_BU",
    /** Chechenskaya Respublika */
    RuCe = "RU_CE",
    /** Chelyabinskaya oblast' */
    RuChe = "RU_CHE",
    /** Čukotskij avtonomnyj okrug */
    RuChu = "RU_CHU",
    /** Chuvashskaya Respublika */
    RuCu = "RU_CU",
    /** Dagestan, Respublika */
    RuDa = "RU_DA",
    /** Ingushetiya, Respublika */
    RuIn = "RU_IN",
    /** Irkutskaja oblast' */
    RuIrk = "RU_IRK",
    /** Ivanovskaja oblast' */
    RuIva = "RU_IVA",
    /** Kamčatskij kraj */
    RuKam = "RU_KAM",
    /** Kabardino-Balkarskaja Respublika */
    RuKb = "RU_KB",
    /** Karačaevo-Čerkesskaja Respublika */
    RuKc = "RU_KC",
    /** Krasnodarskij kraj */
    RuKda = "RU_KDA",
    /** Kemerovskaja oblast' */
    RuKem = "RU_KEM",
    /** Kaliningradskaja oblast' */
    RuKgd = "RU_KGD",
    /** Kurganskaya oblast' */
    RuKgn = "RU_KGN",
    /** Habarovskij kraj */
    RuKha = "RU_KHA",
    /** Hanty-Mansijskij avtonomnyj okrug */
    RuKhm = "RU_KHM",
    /** Kirovskaya oblast' */
    RuKir = "RU_KIR",
    /** Khakasiya, Respublika */
    RuKk = "RU_KK",
    /** Kalmykiya, Respublika */
    RuKl = "RU_KL",
    /** Kaluzhskaya oblast' */
    RuKlu = "RU_KLU",
    /** Komi, Respublika */
    RuKo = "RU_KO",
    /** Kostromskaja oblast' */
    RuKos = "RU_KOS",
    /** Karelija, Respublika */
    RuKr = "RU_KR",
    /** Kurskaya oblast' */
    RuKrs = "RU_KRS",
    /** Krasnoyarskiy kray */
    RuKya = "RU_KYA",
    /** Leningradskaya oblast' */
    RuLen = "RU_LEN",
    /** Lipetskaya oblast' */
    RuLip = "RU_LIP",
    /** Magadanskaja oblast' */
    RuMag = "RU_MAG",
    /** Marij Èl, Respublika */
    RuMe = "RU_ME",
    /** Mordovija, Respublika */
    RuMo = "RU_MO",
    /** Moskovskaja oblast' */
    RuMos = "RU_MOS",
    /** Moskva */
    RuMow = "RU_MOW",
    /** Murmanskaja oblast' */
    RuMur = "RU_MUR",
    /** Neneckij avtonomnyj okrug */
    RuNen = "RU_NEN",
    /** Novgorodskaya oblast' */
    RuNgr = "RU_NGR",
    /** Nizhegorodskaya oblast' */
    RuNiz = "RU_NIZ",
    /** Novosibirskaja oblast' */
    RuNvs = "RU_NVS",
    /** Omskaja oblast' */
    RuOms = "RU_OMS",
    /** Orenburgskaya oblast' */
    RuOre = "RU_ORE",
    /** Orlovskaya oblast' */
    RuOrl = "RU_ORL",
    /** Permskij kraj */
    RuPer = "RU_PER",
    /** Penzenskaja oblast' */
    RuPnz = "RU_PNZ",
    /** Primorskij kraj */
    RuPri = "RU_PRI",
    /** Pskovskaja oblast' */
    RuPsk = "RU_PSK",
    /** Rostovskaja oblast' */
    RuRos = "RU_ROS",
    /** Ryazanskaya oblast' */
    RuRya = "RU_RYA",
    /** Sakha, Respublika */
    RuSa = "RU_SA",
    /** Sakhalinskaya oblast' */
    RuSak = "RU_SAK",
    /** Samarskaja oblast' */
    RuSam = "RU_SAM",
    /** Saratovskaja oblast' */
    RuSar = "RU_SAR",
    /** Severnaja Osetija, Respublika */
    RuSe = "RU_SE",
    /** Smolenskaya oblast' */
    RuSmo = "RU_SMO",
    /** Sankt-Peterburg */
    RuSpe = "RU_SPE",
    /** Stavropol'skij kraj */
    RuSta = "RU_STA",
    /** Sverdlovskaja oblast' */
    RuSve = "RU_SVE",
    /** Tatarstan, Respublika */
    RuTa = "RU_TA",
    /** Tambovskaja oblast' */
    RuTam = "RU_TAM",
    /** Tomskaja oblast' */
    RuTom = "RU_TOM",
    /** Tul'skaya oblast' */
    RuTul = "RU_TUL",
    /** Tverskaya oblast' */
    RuTve = "RU_TVE",
    /** Tyva, Respublika */
    RuTy = "RU_TY",
    /** Tjumenskaja oblast' */
    RuTyu = "RU_TYU",
    /** Udmurtskaja Respublika */
    RuUd = "RU_UD",
    /** Ul'yanovskaya oblast' */
    RuUly = "RU_ULY",
    /** Volgogradskaya oblast' */
    RuVgg = "RU_VGG",
    /** Vladimirskaja oblast' */
    RuVla = "RU_VLA",
    /** Vologodskaja oblast' */
    RuVlg = "RU_VLG",
    /** Voronezhskaya oblast' */
    RuVor = "RU_VOR",
    /** Yamalo-Nenetskiy avtonomnyy okrug */
    RuYan = "RU_YAN",
    /** Yaroslavskaya oblast' */
    RuYar = "RU_YAR",
    /** Evrejskaja avtonomnaja oblast' */
    RuYev = "RU_YEV",
    /** Zabajkal'skij kraj */
    RuZab = "RU_ZAB",
    /** Ville de Kigali */
    Rw_01 = "RW_01",
    /** Est */
    Rw_02 = "RW_02",
    /** Nord */
    Rw_03 = "RW_03",
    /** Ouest */
    Rw_04 = "RW_04",
    /** Sud */
    Rw_05 = "RW_05",
    /** Ar Riyāḑ */
    Sa_01 = "SA_01",
    /** Makkah al Mukarramah */
    Sa_02 = "SA_02",
    /** Al Madīnah al Munawwarah */
    Sa_03 = "SA_03",
    /** Ash Sharqīyah */
    Sa_04 = "SA_04",
    /** Al Qaşīm */
    Sa_05 = "SA_05",
    /** Ḩā'il */
    Sa_06 = "SA_06",
    /** Tabūk */
    Sa_07 = "SA_07",
    /** Al Ḩudūd ash Shamālīyah */
    Sa_08 = "SA_08",
    /** Jāzān */
    Sa_09 = "SA_09",
    /** Najrān */
    Sa_10 = "SA_10",
    /** Al Bāḩah */
    Sa_11 = "SA_11",
    /** Al Jawf */
    Sa_12 = "SA_12",
    /** 'Asīr */
    Sa_14 = "SA_14",
    /** Central */
    SbCe = "SB_CE",
    /** Choiseul */
    SbCh = "SB_CH",
    /** Capital Territory (Honiara) */
    SbCt = "SB_CT",
    /** Guadalcanal */
    SbGu = "SB_GU",
    /** Isabel */
    SbIs = "SB_IS",
    /** Makira-Ulawa */
    SbMk = "SB_MK",
    /** Malaita */
    SbMl = "SB_ML",
    /** Rennell and Bellona */
    SbRb = "SB_RB",
    /** Temotu */
    SbTe = "SB_TE",
    /** Western */
    SbWe = "SB_WE",
    /** Anse aux Pins */
    Sc_01 = "SC_01",
    /** Anse Boileau */
    Sc_02 = "SC_02",
    /** Anse Etoile */
    Sc_03 = "SC_03",
    /** Au Cap */
    Sc_04 = "SC_04",
    /** Anse Royale */
    Sc_05 = "SC_05",
    /** Baie Lazare */
    Sc_06 = "SC_06",
    /** Baie Sainte Anne */
    Sc_07 = "SC_07",
    /** Beau Vallon */
    Sc_08 = "SC_08",
    /** Bel Air */
    Sc_09 = "SC_09",
    /** Bel Ombre */
    Sc_10 = "SC_10",
    /** Cascade */
    Sc_11 = "SC_11",
    /** Glacis */
    Sc_12 = "SC_12",
    /** Grand Anse Mahe */
    Sc_13 = "SC_13",
    /** Grand Anse Praslin */
    Sc_14 = "SC_14",
    /** La Digue */
    Sc_15 = "SC_15",
    /** English River */
    Sc_16 = "SC_16",
    /** Mont Buxton */
    Sc_17 = "SC_17",
    /** Mont Fleuri */
    Sc_18 = "SC_18",
    /** Plaisance */
    Sc_19 = "SC_19",
    /** Pointe Larue */
    Sc_20 = "SC_20",
    /** Port Glaud */
    Sc_21 = "SC_21",
    /** Saint Louis */
    Sc_22 = "SC_22",
    /** Takamaka */
    Sc_23 = "SC_23",
    /** Les Mamelles */
    Sc_24 = "SC_24",
    /** Roche Caiman */
    Sc_25 = "SC_25",
    /** Central Darfur */
    SdDc = "SD_DC",
    /** East Darfur */
    SdDe = "SD_DE",
    /** North Darfur */
    SdDn = "SD_DN",
    /** South Darfur */
    SdDs = "SD_DS",
    /** West Darfur */
    SdDw = "SD_DW",
    /** Gedaref */
    SdGd = "SD_GD",
    /** Gezira */
    SdGz = "SD_GZ",
    /** Kassala */
    SdKa = "SD_KA",
    /** Khartoum */
    SdKh = "SD_KH",
    /** North Kordofan */
    SdKn = "SD_KN",
    /** South Kordofan */
    SdKs = "SD_KS",
    /** Blue Nile */
    SdNb = "SD_NB",
    /** Northern */
    SdNo = "SD_NO",
    /** River Nile */
    SdNr = "SD_NR",
    /** White Nile */
    SdNw = "SD_NW",
    /** Red Sea */
    SdRs = "SD_RS",
    /** Sennar */
    SdSi = "SD_SI",
    /** Stockholms län  */
    SeAb = "SE_AB",
    /** Västerbottens län  */
    SeAc = "SE_AC",
    /** Norrbottens län  */
    SeBd = "SE_BD",
    /** Uppsala län  */
    SeC = "SE_C",
    /** Södermanlands län  */
    SeD = "SE_D",
    /** Östergötlands län  */
    SeE = "SE_E",
    /** Jönköpings län  */
    SeF = "SE_F",
    /** Kronobergs län  */
    SeG = "SE_G",
    /** Kalmar län  */
    SeH = "SE_H",
    /** Gotlands län  */
    SeI = "SE_I",
    /** Blekinge län  */
    SeK = "SE_K",
    /** Skåne län  */
    SeM = "SE_M",
    /** Hallands län  */
    SeN = "SE_N",
    /** Västra Götalands län  */
    SeO = "SE_O",
    /** Värmlands län  */
    SeS = "SE_S",
    /** Örebro län  */
    SeT = "SE_T",
    /** Västmanlands län  */
    SeU = "SE_U",
    /** Dalarnas län  */
    SeW = "SE_W",
    /** Gävleborgs län  */
    SeX = "SE_X",
    /** Västernorrlands län  */
    SeY = "SE_Y",
    /** Jämtlands län  */
    SeZ = "SE_Z",
    /** Central Singapore */
    Sg_01 = "SG_01",
    /** North East */
    Sg_02 = "SG_02",
    /** North West */
    Sg_03 = "SG_03",
    /** South East */
    Sg_04 = "SG_04",
    /** South West */
    Sg_05 = "SG_05",
    /** Ascension */
    ShAc = "SH_AC",
    /** Saint Helena */
    ShHl = "SH_HL",
    /** Tristan da Cunha */
    ShTa = "SH_TA",
    /** Ajdovščina */
    Si_001 = "SI_001",
    /** Beltinci */
    Si_002 = "SI_002",
    /** Bled */
    Si_003 = "SI_003",
    /** Bohinj */
    Si_004 = "SI_004",
    /** Borovnica */
    Si_005 = "SI_005",
    /** Bovec */
    Si_006 = "SI_006",
    /** Brda */
    Si_007 = "SI_007",
    /** Brezovica */
    Si_008 = "SI_008",
    /** Brežice */
    Si_009 = "SI_009",
    /** Tišina */
    Si_010 = "SI_010",
    /** Celje */
    Si_011 = "SI_011",
    /** Cerklje na Gorenjskem */
    Si_012 = "SI_012",
    /** Cerknica */
    Si_013 = "SI_013",
    /** Cerkno */
    Si_014 = "SI_014",
    /** Črenšovci */
    Si_015 = "SI_015",
    /** Črna na Koroškem */
    Si_016 = "SI_016",
    /** Črnomelj */
    Si_017 = "SI_017",
    /** Destrnik */
    Si_018 = "SI_018",
    /** Divača */
    Si_019 = "SI_019",
    /** Dobrepolje */
    Si_020 = "SI_020",
    /** Dobrova-Polhov Gradec */
    Si_021 = "SI_021",
    /** Dol pri Ljubljani */
    Si_022 = "SI_022",
    /** Domžale */
    Si_023 = "SI_023",
    /** Dornava */
    Si_024 = "SI_024",
    /** Dravograd */
    Si_025 = "SI_025",
    /** Duplek */
    Si_026 = "SI_026",
    /** Gorenja vas-Poljane */
    Si_027 = "SI_027",
    /** Gorišnica */
    Si_028 = "SI_028",
    /** Gornja Radgona */
    Si_029 = "SI_029",
    /** Gornji Grad */
    Si_030 = "SI_030",
    /** Gornji Petrovci */
    Si_031 = "SI_031",
    /** Grosuplje */
    Si_032 = "SI_032",
    /** Šalovci */
    Si_033 = "SI_033",
    /** Hrastnik */
    Si_034 = "SI_034",
    /** Hrpelje-Kozina */
    Si_035 = "SI_035",
    /** Idrija */
    Si_036 = "SI_036",
    /** Ig */
    Si_037 = "SI_037",
    /** Ilirska Bistrica */
    Si_038 = "SI_038",
    /** Ivančna Gorica */
    Si_039 = "SI_039",
    /** Izola */
    Si_040 = "SI_040",
    /** Jesenice */
    Si_041 = "SI_041",
    /** Juršinci */
    Si_042 = "SI_042",
    /** Kamnik */
    Si_043 = "SI_043",
    /** Kanal */
    Si_044 = "SI_044",
    /** Kidričevo */
    Si_045 = "SI_045",
    /** Kobarid */
    Si_046 = "SI_046",
    /** Kobilje */
    Si_047 = "SI_047",
    /** Kočevje */
    Si_048 = "SI_048",
    /** Komen */
    Si_049 = "SI_049",
    /** Koper */
    Si_050 = "SI_050",
    /** Kozje */
    Si_051 = "SI_051",
    /** Kranj */
    Si_052 = "SI_052",
    /** Kranjska Gora */
    Si_053 = "SI_053",
    /** Krško */
    Si_054 = "SI_054",
    /** Kungota */
    Si_055 = "SI_055",
    /** Kuzma */
    Si_056 = "SI_056",
    /** Laško */
    Si_057 = "SI_057",
    /** Lenart */
    Si_058 = "SI_058",
    /** Lendava */
    Si_059 = "SI_059",
    /** Litija */
    Si_060 = "SI_060",
    /** Ljubljana */
    Si_061 = "SI_061",
    /** Ljubno */
    Si_062 = "SI_062",
    /** Ljutomer */
    Si_063 = "SI_063",
    /** Logatec */
    Si_064 = "SI_064",
    /** Loška Dolina */
    Si_065 = "SI_065",
    /** Loški Potok */
    Si_066 = "SI_066",
    /** Luče */
    Si_067 = "SI_067",
    /** Lukovica */
    Si_068 = "SI_068",
    /** Majšperk */
    Si_069 = "SI_069",
    /** Maribor */
    Si_070 = "SI_070",
    /** Medvode */
    Si_071 = "SI_071",
    /** Mengeš */
    Si_072 = "SI_072",
    /** Metlika */
    Si_073 = "SI_073",
    /** Mežica */
    Si_074 = "SI_074",
    /** Miren-Kostanjevica */
    Si_075 = "SI_075",
    /** Mislinja */
    Si_076 = "SI_076",
    /** Moravče */
    Si_077 = "SI_077",
    /** Moravske Toplice */
    Si_078 = "SI_078",
    /** Mozirje */
    Si_079 = "SI_079",
    /** Murska Sobota */
    Si_080 = "SI_080",
    /** Muta */
    Si_081 = "SI_081",
    /** Naklo */
    Si_082 = "SI_082",
    /** Nazarje */
    Si_083 = "SI_083",
    /** Nova Gorica */
    Si_084 = "SI_084",
    /** Novo Mesto */
    Si_085 = "SI_085",
    /** Odranci */
    Si_086 = "SI_086",
    /** Ormož */
    Si_087 = "SI_087",
    /** Osilnica */
    Si_088 = "SI_088",
    /** Pesnica */
    Si_089 = "SI_089",
    /** Piran */
    Si_090 = "SI_090",
    /** Pivka */
    Si_091 = "SI_091",
    /** Podčetrtek */
    Si_092 = "SI_092",
    /** Podvelka */
    Si_093 = "SI_093",
    /** Postojna */
    Si_094 = "SI_094",
    /** Preddvor */
    Si_095 = "SI_095",
    /** Ptuj */
    Si_096 = "SI_096",
    /** Puconci */
    Si_097 = "SI_097",
    /** Rače-Fram */
    Si_098 = "SI_098",
    /** Radeče */
    Si_099 = "SI_099",
    /** Radenci */
    Si_100 = "SI_100",
    /** Radlje ob Dravi */
    Si_101 = "SI_101",
    /** Radovljica */
    Si_102 = "SI_102",
    /** Ravne na Koroškem */
    Si_103 = "SI_103",
    /** Ribnica */
    Si_104 = "SI_104",
    /** Rogašovci */
    Si_105 = "SI_105",
    /** Rogaška Slatina */
    Si_106 = "SI_106",
    /** Rogatec */
    Si_107 = "SI_107",
    /** Ruše */
    Si_108 = "SI_108",
    /** Semič */
    Si_109 = "SI_109",
    /** Sevnica */
    Si_110 = "SI_110",
    /** Sežana */
    Si_111 = "SI_111",
    /** Slovenj Gradec */
    Si_112 = "SI_112",
    /** Slovenska Bistrica */
    Si_113 = "SI_113",
    /** Slovenske Konjice */
    Si_114 = "SI_114",
    /** Starše */
    Si_115 = "SI_115",
    /** Sveti Jurij */
    Si_116 = "SI_116",
    /** Šenčur */
    Si_117 = "SI_117",
    /** Šentilj */
    Si_118 = "SI_118",
    /** Šentjernej */
    Si_119 = "SI_119",
    /** Šentjur */
    Si_120 = "SI_120",
    /** Škocjan */
    Si_121 = "SI_121",
    /** Škofja Loka */
    Si_122 = "SI_122",
    /** Škofljica */
    Si_123 = "SI_123",
    /** Šmarje pri Jelšah */
    Si_124 = "SI_124",
    /** Šmartno ob Paki */
    Si_125 = "SI_125",
    /** Šoštanj */
    Si_126 = "SI_126",
    /** Štore */
    Si_127 = "SI_127",
    /** Tolmin */
    Si_128 = "SI_128",
    /** Trbovlje */
    Si_129 = "SI_129",
    /** Trebnje */
    Si_130 = "SI_130",
    /** Tržič */
    Si_131 = "SI_131",
    /** Turnišče */
    Si_132 = "SI_132",
    /** Velenje */
    Si_133 = "SI_133",
    /** Velike Lašče */
    Si_134 = "SI_134",
    /** Videm */
    Si_135 = "SI_135",
    /** Vipava */
    Si_136 = "SI_136",
    /** Vitanje */
    Si_137 = "SI_137",
    /** Vodice */
    Si_138 = "SI_138",
    /** Vojnik */
    Si_139 = "SI_139",
    /** Vrhnika */
    Si_140 = "SI_140",
    /** Vuzenica */
    Si_141 = "SI_141",
    /** Zagorje ob Savi */
    Si_142 = "SI_142",
    /** Zavrč */
    Si_143 = "SI_143",
    /** Zreče */
    Si_144 = "SI_144",
    /** Železniki */
    Si_146 = "SI_146",
    /** Žiri */
    Si_147 = "SI_147",
    /** Benedikt */
    Si_148 = "SI_148",
    /** Bistrica ob Sotli */
    Si_149 = "SI_149",
    /** Bloke */
    Si_150 = "SI_150",
    /** Braslovče */
    Si_151 = "SI_151",
    /** Cankova */
    Si_152 = "SI_152",
    /** Cerkvenjak */
    Si_153 = "SI_153",
    /** Dobje */
    Si_154 = "SI_154",
    /** Dobrna */
    Si_155 = "SI_155",
    /** Dobrovnik */
    Si_156 = "SI_156",
    /** Dolenjske Toplice */
    Si_157 = "SI_157",
    /** Grad */
    Si_158 = "SI_158",
    /** Hajdina */
    Si_159 = "SI_159",
    /** Hoče-Slivnica */
    Si_160 = "SI_160",
    /** Hodoš */
    Si_161 = "SI_161",
    /** Horjul */
    Si_162 = "SI_162",
    /** Jezersko */
    Si_163 = "SI_163",
    /** Komenda */
    Si_164 = "SI_164",
    /** Kostel */
    Si_165 = "SI_165",
    /** Križevci */
    Si_166 = "SI_166",
    /** Lovrenc na Pohorju */
    Si_167 = "SI_167",
    /** Markovci */
    Si_168 = "SI_168",
    /** Miklavž na Dravskem Polju */
    Si_169 = "SI_169",
    /** Mirna Peč */
    Si_170 = "SI_170",
    /** Oplotnica */
    Si_171 = "SI_171",
    /** Podlehnik */
    Si_172 = "SI_172",
    /** Polzela */
    Si_173 = "SI_173",
    /** Prebold */
    Si_174 = "SI_174",
    /** Prevalje */
    Si_175 = "SI_175",
    /** Razkrižje */
    Si_176 = "SI_176",
    /** Ribnica na Pohorju */
    Si_177 = "SI_177",
    /** Selnica ob Dravi */
    Si_178 = "SI_178",
    /** Sodražica */
    Si_179 = "SI_179",
    /** Solčava */
    Si_180 = "SI_180",
    /** Sveta Ana */
    Si_181 = "SI_181",
    /** Sveti Andraž v Slovenskih Goricah */
    Si_182 = "SI_182",
    /** Šempeter-Vrtojba */
    Si_183 = "SI_183",
    /** Tabor */
    Si_184 = "SI_184",
    /** Trnovska Vas */
    Si_185 = "SI_185",
    /** Trzin */
    Si_186 = "SI_186",
    /** Velika Polana */
    Si_187 = "SI_187",
    /** Veržej */
    Si_188 = "SI_188",
    /** Vransko */
    Si_189 = "SI_189",
    /** Žalec */
    Si_190 = "SI_190",
    /** Žetale */
    Si_191 = "SI_191",
    /** Žirovnica */
    Si_192 = "SI_192",
    /** Žužemberk */
    Si_193 = "SI_193",
    /** Šmartno pri Litiji */
    Si_194 = "SI_194",
    /** Apače */
    Si_195 = "SI_195",
    /** Cirkulane */
    Si_196 = "SI_196",
    /** Kosanjevica na Krki */
    Si_197 = "SI_197",
    /** Makole */
    Si_198 = "SI_198",
    /** Mokronog-Trebelno */
    Si_199 = "SI_199",
    /** Poljčane */
    Si_200 = "SI_200",
    /** Renče-Vogrsko */
    Si_201 = "SI_201",
    /** Središče ob Dravi */
    Si_202 = "SI_202",
    /** Straža */
    Si_203 = "SI_203",
    /** Sveta Trojica v Slovenskih Goricah */
    Si_204 = "SI_204",
    /** Sveti Tomaž */
    Si_205 = "SI_205",
    /** Šmarješke Toplice */
    Si_206 = "SI_206",
    /** Gorje */
    Si_207 = "SI_207",
    /** Log-Dragomer */
    Si_208 = "SI_208",
    /** Rečica ob Savinji */
    Si_209 = "SI_209",
    /** Sveti Jurij v Slovenskih Goricah */
    Si_210 = "SI_210",
    /** Šentrupert */
    Si_211 = "SI_211",
    /** Mirna */
    Si_212 = "SI_212",
    /** Banskobystrický kraj */
    SkBc = "SK_BC",
    /** Bratislavský kraj */
    SkBl = "SK_BL",
    /** Košický kraj */
    SkKi = "SK_KI",
    /** Nitriansky kraj */
    SkNi = "SK_NI",
    /** Prešovský kraj */
    SkPv = "SK_PV",
    /** Trnavský kraj */
    SkTa = "SK_TA",
    /** Trenčiansky kraj */
    SkTc = "SK_TC",
    /** Žilinský kraj */
    SkZi = "SK_ZI",
    /** Eastern */
    SlE = "SL_E",
    /** Northern */
    SlN = "SL_N",
    /** Southern */
    SlS = "SL_S",
    /** Western Area (Freetown) */
    SlW = "SL_W",
    /** Acquaviva */
    Sm_01 = "SM_01",
    /** Chiesanuova */
    Sm_02 = "SM_02",
    /** Domagnano */
    Sm_03 = "SM_03",
    /** Faetano */
    Sm_04 = "SM_04",
    /** Fiorentino */
    Sm_05 = "SM_05",
    /** Borgo Maggiore */
    Sm_06 = "SM_06",
    /** San Marino */
    Sm_07 = "SM_07",
    /** Montegiardino */
    Sm_08 = "SM_08",
    /** Serravalle */
    Sm_09 = "SM_09",
    /** Diourbel */
    SnDb = "SN_DB",
    /** Dakar */
    SnDk = "SN_DK",
    /** Fatick */
    SnFk = "SN_FK",
    /** Kaffrine */
    SnKa = "SN_KA",
    /** Kolda */
    SnKd = "SN_KD",
    /** Kédougou */
    SnKe = "SN_KE",
    /** Kaolack */
    SnKl = "SN_KL",
    /** Louga */
    SnLg = "SN_LG",
    /** Matam */
    SnMt = "SN_MT",
    /** Sédhiou */
    SnSe = "SN_SE",
    /** Saint-Louis */
    SnSl = "SN_SL",
    /** Tambacounda */
    SnTc = "SN_TC",
    /** Thiès */
    SnTh = "SN_TH",
    /** Ziguinchor */
    SnZg = "SN_ZG",
    /** Awdal */
    SoAw = "SO_AW",
    /** Bakool */
    SoBk = "SO_BK",
    /** Banaadir */
    SoBn = "SO_BN",
    /** Bari */
    SoBr = "SO_BR",
    /** Bay */
    SoBy = "SO_BY",
    /** Galguduud */
    SoGa = "SO_GA",
    /** Gedo */
    SoGe = "SO_GE",
    /** Hiiraan */
    SoHi = "SO_HI",
    /** Jubbada Dhexe */
    SoJd = "SO_JD",
    /** Jubbada Hoose */
    SoJh = "SO_JH",
    /** Mudug */
    SoMu = "SO_MU",
    /** Nugaal */
    SoNu = "SO_NU",
    /** Sanaag */
    SoSa = "SO_SA",
    /** Shabeellaha Dhexe */
    SoSd = "SO_SD",
    /** Shabeellaha Hoose */
    SoSh = "SO_SH",
    /** Sool */
    SoSo = "SO_SO",
    /** Togdheer */
    SoTo = "SO_TO",
    /** Woqooyi Galbeed */
    SoWo = "SO_WO",
    /** Brokopondo */
    SrBr = "SR_BR",
    /** Commewijne */
    SrCm = "SR_CM",
    /** Coronie */
    SrCr = "SR_CR",
    /** Marowijne */
    SrMa = "SR_MA",
    /** Nickerie */
    SrNi = "SR_NI",
    /** Paramaribo */
    SrPm = "SR_PM",
    /** Para */
    SrPr = "SR_PR",
    /** Saramacca */
    SrSa = "SR_SA",
    /** Sipaliwini */
    SrSi = "SR_SI",
    /** Wanica */
    SrWa = "SR_WA",
    /** Northern Bahr el Ghazal */
    SsBn = "SS_BN",
    /** Western Bahr el  Ghazal */
    SsBw = "SS_BW",
    /** Central Equatoria */
    SsEc = "SS_EC",
    /** Eastern Equatoria */
    SsEe = "SS_EE",
    /** Western Equatoria */
    SsEw = "SS_EW",
    /** Jonglei */
    SsJg = "SS_JG",
    /** Lakes */
    SsLk = "SS_LK",
    /** Upper Nile */
    SsNu = "SS_NU",
    /** Unity */
    SsUy = "SS_UY",
    /** Warrap */
    SsWr = "SS_WR",
    /** Príncipe */
    StP = "ST_P",
    /** São Tomé */
    StS = "ST_S",
    /** Ahuachapán */
    SvAh = "SV_AH",
    /** Cabañas */
    SvCa = "SV_CA",
    /** Chalatenango */
    SvCh = "SV_CH",
    /** Cuscatlán */
    SvCu = "SV_CU",
    /** La Libertad */
    SvLi = "SV_LI",
    /** Morazán */
    SvMo = "SV_MO",
    /** La Paz */
    SvPa = "SV_PA",
    /** Santa Ana */
    SvSa = "SV_SA",
    /** San Miguel */
    SvSm = "SV_SM",
    /** Sonsonate */
    SvSo = "SV_SO",
    /** San Salvador */
    SvSs = "SV_SS",
    /** San Vicente */
    SvSv = "SV_SV",
    /** La Unión */
    SvUn = "SV_UN",
    /** Usulután */
    SvUs = "SV_US",
    /** Dimashq */
    SyDi = "SY_DI",
    /** Dar'ā */
    SyDr = "SY_DR",
    /** Dayr az Zawr */
    SyDy = "SY_DY",
    /** Al Ḩasakah */
    SyHa = "SY_HA",
    /** Ḩimş */
    SyHi = "SY_HI",
    /** Ḩalab */
    SyHl = "SY_HL",
    /** Ḩamāh */
    SyHm = "SY_HM",
    /** Idlib */
    SyId = "SY_ID",
    /** Al Lādhiqīyah */
    SyLa = "SY_LA",
    /** Al Qunayţirah */
    SyQu = "SY_QU",
    /** Ar Raqqah */
    SyRa = "SY_RA",
    /** Rīf Dimashq */
    SyRd = "SY_RD",
    /** As Suwaydā' */
    SySu = "SY_SU",
    /** Ţarţūs */
    SyTa = "SY_TA",
    /** Hhohho */
    SzHh = "SZ_HH",
    /** Lubombo */
    SzLu = "SZ_LU",
    /** Manzini */
    SzMa = "SZ_MA",
    /** Shiselweni */
    SzSh = "SZ_SH",
    /** Batha */
    TdBa = "TD_BA",
    /** Baḩr al Ghazāl */
    TdBg = "TD_BG",
    /** Būrkū */
    TdBo = "TD_BO",
    /** Shārī Bāqirmī */
    TdCb = "TD_CB",
    /** Ennedi-Est */
    TdEe = "TD_EE",
    /** Ennedi-Ouest */
    TdEo = "TD_EO",
    /** Guéra */
    TdGr = "TD_GR",
    /** Ḩajjar Lamīs */
    TdHl = "TD_HL",
    /** Kānim */
    TdKa = "TD_KA",
    /** Lac */
    TdLc = "TD_LC",
    /** Logone-Occidental */
    TdLo = "TD_LO",
    /** Lūqūn ash Sharqī */
    TdLr = "TD_LR",
    /** Mandoul */
    TdMa = "TD_MA",
    /** Shārī al Awsaţ */
    TdMc = "TD_MC",
    /** Māyū Kībbī ash Sharqī */
    TdMe = "TD_ME",
    /** Māyū Kībbī al Gharbī */
    TdMo = "TD_MO",
    /** Madīnat Injamīnā */
    TdNd = "TD_ND",
    /** Waddāy */
    TdOd = "TD_OD",
    /** Salamat */
    TdSa = "TD_SA",
    /** Sila */
    TdSi = "TD_SI",
    /** Tānjilī */
    TdTa = "TD_TA",
    /** Tibastī */
    TdTi = "TD_TI",
    /** Wadi Fira */
    TdWf = "TD_WF",
    /** Centre */
    TgC = "TG_C",
    /** Kara */
    TgK = "TG_K",
    /** Maritime (Région) */
    TgM = "TG_M",
    /** Plateaux */
    TgP = "TG_P",
    /** Savannes */
    TgS = "TG_S",
    /** Krung Thep Maha Nakhon */
    Th_10 = "TH_10",
    /** Samut Prakan */
    Th_11 = "TH_11",
    /** Nonthaburi */
    Th_12 = "TH_12",
    /** Pathum Thani */
    Th_13 = "TH_13",
    /** Phra Nakhon Si Ayutthaya */
    Th_14 = "TH_14",
    /** Ang Thong */
    Th_15 = "TH_15",
    /** Lop Buri */
    Th_16 = "TH_16",
    /** Sing Buri */
    Th_17 = "TH_17",
    /** Chai Nat */
    Th_18 = "TH_18",
    /** Saraburi */
    Th_19 = "TH_19",
    /** Chon Buri */
    Th_20 = "TH_20",
    /** Rayong */
    Th_21 = "TH_21",
    /** Chanthaburi */
    Th_22 = "TH_22",
    /** Trat */
    Th_23 = "TH_23",
    /** Chachoengsao */
    Th_24 = "TH_24",
    /** Prachin Buri */
    Th_25 = "TH_25",
    /** Nakhon Nayok */
    Th_26 = "TH_26",
    /** Sa Kaeo */
    Th_27 = "TH_27",
    /** Nakhon Ratchasima */
    Th_30 = "TH_30",
    /** Buri Ram */
    Th_31 = "TH_31",
    /** Surin */
    Th_32 = "TH_32",
    /** Si Sa Ket */
    Th_33 = "TH_33",
    /** Ubon Ratchathani */
    Th_34 = "TH_34",
    /** Yasothon */
    Th_35 = "TH_35",
    /** Chaiyaphum */
    Th_36 = "TH_36",
    /** Amnat Charoen */
    Th_37 = "TH_37",
    /** Bueng Kan */
    Th_38 = "TH_38",
    /** Nong Bua Lam Phu */
    Th_39 = "TH_39",
    /** Khon Kaen */
    Th_40 = "TH_40",
    /** Udon Thani */
    Th_41 = "TH_41",
    /** Loei */
    Th_42 = "TH_42",
    /** Nong Khai */
    Th_43 = "TH_43",
    /** Maha Sarakham */
    Th_44 = "TH_44",
    /** Roi Et */
    Th_45 = "TH_45",
    /** Kalasin */
    Th_46 = "TH_46",
    /** Sakon Nakhon */
    Th_47 = "TH_47",
    /** Nakhon Phanom */
    Th_48 = "TH_48",
    /** Mukdahan */
    Th_49 = "TH_49",
    /** Chiang Mai */
    Th_50 = "TH_50",
    /** Lamphun */
    Th_51 = "TH_51",
    /** Lampang */
    Th_52 = "TH_52",
    /** Uttaradit */
    Th_53 = "TH_53",
    /** Phrae */
    Th_54 = "TH_54",
    /** Nan */
    Th_55 = "TH_55",
    /** Phayao */
    Th_56 = "TH_56",
    /** Chiang Rai */
    Th_57 = "TH_57",
    /** Mae Hong Son */
    Th_58 = "TH_58",
    /** Nakhon Sawan */
    Th_60 = "TH_60",
    /** Uthai Thani */
    Th_61 = "TH_61",
    /** Kamphaeng Phet */
    Th_62 = "TH_62",
    /** Tak */
    Th_63 = "TH_63",
    /** Sukhothai */
    Th_64 = "TH_64",
    /** Phitsanulok */
    Th_65 = "TH_65",
    /** Phichit */
    Th_66 = "TH_66",
    /** Phetchabun */
    Th_67 = "TH_67",
    /** Ratchaburi */
    Th_70 = "TH_70",
    /** Kanchanaburi */
    Th_71 = "TH_71",
    /** Suphan Buri */
    Th_72 = "TH_72",
    /** Nakhon Pathom */
    Th_73 = "TH_73",
    /** Samut Sakhon */
    Th_74 = "TH_74",
    /** Samut Songkhram */
    Th_75 = "TH_75",
    /** Phetchaburi */
    Th_76 = "TH_76",
    /** Prachuap Khiri Khan */
    Th_77 = "TH_77",
    /** Nakhon Si Thammarat */
    Th_80 = "TH_80",
    /** Krabi */
    Th_81 = "TH_81",
    /** Phangnga */
    Th_82 = "TH_82",
    /** Phuket */
    Th_83 = "TH_83",
    /** Surat Thani */
    Th_84 = "TH_84",
    /** Ranong */
    Th_85 = "TH_85",
    /** Chumphon */
    Th_86 = "TH_86",
    /** Songkhla */
    Th_90 = "TH_90",
    /** Satun */
    Th_91 = "TH_91",
    /** Trang */
    Th_92 = "TH_92",
    /** Phatthalung */
    Th_93 = "TH_93",
    /** Pattani */
    Th_94 = "TH_94",
    /** Yala */
    Th_95 = "TH_95",
    /** Narathiwat */
    Th_96 = "TH_96",
    /** Phatthaya */
    ThS = "TH_S",
    /** Dushanbe */
    TjDu = "TJ_DU",
    /** Kŭhistoni Badakhshon */
    TjGb = "TJ_GB",
    /** Khatlon */
    TjKt = "TJ_KT",
    /** Sughd */
    TjSu = "TJ_SU",
    /** Aileu */
    TlAl = "TL_AL",
    /** Ainaru */
    TlAn = "TL_AN",
    /** Baucau */
    TlBa = "TL_BA",
    /** Bobonaru */
    TlBo = "TL_BO",
    /** Cova Lima */
    TlCo = "TL_CO",
    /** Díli */
    TlDi = "TL_DI",
    /** Ermera */
    TlEr = "TL_ER",
    /** Lautém */
    TlLa = "TL_LA",
    /** Likisá */
    TlLi = "TL_LI",
    /** Manufahi */
    TlMf = "TL_MF",
    /** Manatutu */
    TlMt = "TL_MT",
    /** Oekusi-Ambenu */
    TlOe = "TL_OE",
    /** Viqueque */
    TlVi = "TL_VI",
    /** Ahal */
    TmA = "TM_A",
    /** Balkan */
    TmB = "TM_B",
    /** Daşoguz */
    TmD = "TM_D",
    /** Lebap */
    TmL = "TM_L",
    /** Mary */
    TmM = "TM_M",
    /** Aşgabat */
    TmS = "TM_S",
    /** Tunis */
    Tn_11 = "TN_11",
    /** Ariana */
    Tn_12 = "TN_12",
    /** Ben Arous */
    Tn_13 = "TN_13",
    /** La Manouba */
    Tn_14 = "TN_14",
    /** Nabeul */
    Tn_21 = "TN_21",
    /** Zaghouan */
    Tn_22 = "TN_22",
    /** Bizerte */
    Tn_23 = "TN_23",
    /** Béja */
    Tn_31 = "TN_31",
    /** Jendouba */
    Tn_32 = "TN_32",
    /** Le Kef */
    Tn_33 = "TN_33",
    /** Siliana */
    Tn_34 = "TN_34",
    /** Kairouan */
    Tn_41 = "TN_41",
    /** Kasserine */
    Tn_42 = "TN_42",
    /** Sidi Bouzid */
    Tn_43 = "TN_43",
    /** Sousse */
    Tn_51 = "TN_51",
    /** Monastir */
    Tn_52 = "TN_52",
    /** Mahdia */
    Tn_53 = "TN_53",
    /** Sfax */
    Tn_61 = "TN_61",
    /** Gafsa */
    Tn_71 = "TN_71",
    /** Tozeur */
    Tn_72 = "TN_72",
    /** Kebili */
    Tn_73 = "TN_73",
    /** Gabès */
    Tn_81 = "TN_81",
    /** Medenine */
    Tn_82 = "TN_82",
    /** Tataouine */
    Tn_83 = "TN_83",
    /** 'Eua */
    To_01 = "TO_01",
    /** Ha'apai */
    To_02 = "TO_02",
    /** Niuas */
    To_03 = "TO_03",
    /** Tongatapu */
    To_04 = "TO_04",
    /** Vava'u */
    To_05 = "TO_05",
    /** Adana */
    Tr_01 = "TR_01",
    /** Adıyaman */
    Tr_02 = "TR_02",
    /** Afyonkarahisar */
    Tr_03 = "TR_03",
    /** Ağrı */
    Tr_04 = "TR_04",
    /** Amasya */
    Tr_05 = "TR_05",
    /** Ankara */
    Tr_06 = "TR_06",
    /** Antalya */
    Tr_07 = "TR_07",
    /** Artvin */
    Tr_08 = "TR_08",
    /** Aydın */
    Tr_09 = "TR_09",
    /** Balıkesir */
    Tr_10 = "TR_10",
    /** Bilecik */
    Tr_11 = "TR_11",
    /** Bingöl */
    Tr_12 = "TR_12",
    /** Bitlis */
    Tr_13 = "TR_13",
    /** Bolu */
    Tr_14 = "TR_14",
    /** Burdur */
    Tr_15 = "TR_15",
    /** Bursa */
    Tr_16 = "TR_16",
    /** Çanakkale */
    Tr_17 = "TR_17",
    /** Çankırı */
    Tr_18 = "TR_18",
    /** Çorum */
    Tr_19 = "TR_19",
    /** Denizli */
    Tr_20 = "TR_20",
    /** Diyarbakır */
    Tr_21 = "TR_21",
    /** Edirne */
    Tr_22 = "TR_22",
    /** Elazığ */
    Tr_23 = "TR_23",
    /** Erzincan */
    Tr_24 = "TR_24",
    /** Erzurum */
    Tr_25 = "TR_25",
    /** Eskişehir */
    Tr_26 = "TR_26",
    /** Gaziantep */
    Tr_27 = "TR_27",
    /** Giresun */
    Tr_28 = "TR_28",
    /** Gümüşhane */
    Tr_29 = "TR_29",
    /** Hakkâri */
    Tr_30 = "TR_30",
    /** Hatay */
    Tr_31 = "TR_31",
    /** Isparta */
    Tr_32 = "TR_32",
    /** Mersin */
    Tr_33 = "TR_33",
    /** İstanbul */
    Tr_34 = "TR_34",
    /** İzmir */
    Tr_35 = "TR_35",
    /** Kars */
    Tr_36 = "TR_36",
    /** Kastamonu */
    Tr_37 = "TR_37",
    /** Kayseri */
    Tr_38 = "TR_38",
    /** Kırklareli */
    Tr_39 = "TR_39",
    /** Kırşehir */
    Tr_40 = "TR_40",
    /** Kocaeli */
    Tr_41 = "TR_41",
    /** Konya */
    Tr_42 = "TR_42",
    /** Kütahya */
    Tr_43 = "TR_43",
    /** Malatya */
    Tr_44 = "TR_44",
    /** Manisa */
    Tr_45 = "TR_45",
    /** Kahramanmaraş */
    Tr_46 = "TR_46",
    /** Mardin */
    Tr_47 = "TR_47",
    /** Muğla */
    Tr_48 = "TR_48",
    /** Muş */
    Tr_49 = "TR_49",
    /** Nevşehir */
    Tr_50 = "TR_50",
    /** Niğde */
    Tr_51 = "TR_51",
    /** Ordu */
    Tr_52 = "TR_52",
    /** Rize */
    Tr_53 = "TR_53",
    /** Sakarya */
    Tr_54 = "TR_54",
    /** Samsun */
    Tr_55 = "TR_55",
    /** Siirt */
    Tr_56 = "TR_56",
    /** Sinop */
    Tr_57 = "TR_57",
    /** Sivas */
    Tr_58 = "TR_58",
    /** Tekirdağ */
    Tr_59 = "TR_59",
    /** Tokat */
    Tr_60 = "TR_60",
    /** Trabzon */
    Tr_61 = "TR_61",
    /** Tunceli */
    Tr_62 = "TR_62",
    /** Şanlıurfa */
    Tr_63 = "TR_63",
    /** Uşak */
    Tr_64 = "TR_64",
    /** Van */
    Tr_65 = "TR_65",
    /** Yozgat */
    Tr_66 = "TR_66",
    /** Zonguldak */
    Tr_67 = "TR_67",
    /** Aksaray */
    Tr_68 = "TR_68",
    /** Bayburt */
    Tr_69 = "TR_69",
    /** Karaman */
    Tr_70 = "TR_70",
    /** Kırıkkale */
    Tr_71 = "TR_71",
    /** Batman */
    Tr_72 = "TR_72",
    /** Şırnak */
    Tr_73 = "TR_73",
    /** Bartın */
    Tr_74 = "TR_74",
    /** Ardahan */
    Tr_75 = "TR_75",
    /** Iğdır */
    Tr_76 = "TR_76",
    /** Yalova */
    Tr_77 = "TR_77",
    /** Karabük */
    Tr_78 = "TR_78",
    /** Kilis */
    Tr_79 = "TR_79",
    /** Osmaniye */
    Tr_80 = "TR_80",
    /** Düzce */
    Tr_81 = "TR_81",
    /** Arima */
    TtAri = "TT_ARI",
    /** Chaguanas */
    TtCha = "TT_CHA",
    /** Couva-Tabaquite-Talparo */
    TtCtt = "TT_CTT",
    /** Diego Martin */
    TtDmn = "TT_DMN",
    /** Eastern Tobago */
    TtEto = "TT_ETO",
    /** Penal-Debe */
    TtPed = "TT_PED",
    /** Port of Spain */
    TtPos = "TT_POS",
    /** Princes Town */
    TtPrt = "TT_PRT",
    /** Point Fortin */
    TtPtf = "TT_PTF",
    /** Rio Claro-Mayaro */
    TtRcm = "TT_RCM",
    /** San Fernando */
    TtSfo = "TT_SFO",
    /** Sangre Grande */
    TtSge = "TT_SGE",
    /** Siparia */
    TtSip = "TT_SIP",
    /** San Juan-Laventille */
    TtSjl = "TT_SJL",
    /** Tunapuna-Piarco */
    TtTup = "TT_TUP",
    /** Western Tobago */
    TtWto = "TT_WTO",
    /** Funafuti */
    TvFun = "TV_FUN",
    /** Niutao */
    TvNit = "TV_NIT",
    /** Nukufetau */
    TvNkf = "TV_NKF",
    /** Nukulaelae */
    TvNkl = "TV_NKL",
    /** Nanumea */
    TvNma = "TV_NMA",
    /** Nanumanga */
    TvNmg = "TV_NMG",
    /** Nui */
    TvNui = "TV_NUI",
    /** Vaitupu */
    TvVai = "TV_VAI",
    /** Changhua */
    TwCha = "TW_CHA",
    /** Chiayi */
    TwCyi = "TW_CYI",
    /** Chiayi */
    TwCyq = "TW_CYQ",
    /** Hsinchu */
    TwHsq = "TW_HSQ",
    /** Hsinchu */
    TwHsz = "TW_HSZ",
    /** Hualien */
    TwHua = "TW_HUA",
    /** Ilan */
    TwIla = "TW_ILA",
    /** Keelung */
    TwKee = "TW_KEE",
    /** Kaohsiung */
    TwKhh = "TW_KHH",
    /** Kaohsiung */
    TwKhq = "TW_KHQ",
    /** Miaoli */
    TwMia = "TW_MIA",
    /** Nantou */
    TwNan = "TW_NAN",
    /** Penghu */
    TwPen = "TW_PEN",
    /** Pingtung */
    TwPif = "TW_PIF",
    /** Taoyuan */
    TwTao = "TW_TAO",
    /** Tainan */
    TwTnn = "TW_TNN",
    /** Tainan */
    TwTnq = "TW_TNQ",
    /** Taipei */
    TwTpe = "TW_TPE",
    /** Taipei */
    TwTpq = "TW_TPQ",
    /** Taitung */
    TwTtt = "TW_TTT",
    /** Taichung */
    TwTxg = "TW_TXG",
    /** Taichung */
    TwTxq = "TW_TXQ",
    /** Yunlin */
    TwYun = "TW_YUN",
    /** Arusha */
    Tz_01 = "TZ_01",
    /** Dar es Salaam */
    Tz_02 = "TZ_02",
    /** Dodoma */
    Tz_03 = "TZ_03",
    /** Iringa */
    Tz_04 = "TZ_04",
    /** Kagera */
    Tz_05 = "TZ_05",
    /** Pemba North */
    Tz_06 = "TZ_06",
    /** Zanzibar North */
    Tz_07 = "TZ_07",
    /** Kigoma */
    Tz_08 = "TZ_08",
    /** Kilimanjaro */
    Tz_09 = "TZ_09",
    /** Pemba South */
    Tz_10 = "TZ_10",
    /** Zanzibar South */
    Tz_11 = "TZ_11",
    /** Lindi */
    Tz_12 = "TZ_12",
    /** Mara */
    Tz_13 = "TZ_13",
    /** Mbeya */
    Tz_14 = "TZ_14",
    /** Zanzibar West */
    Tz_15 = "TZ_15",
    /** Morogoro */
    Tz_16 = "TZ_16",
    /** Mtwara */
    Tz_17 = "TZ_17",
    /** Mwanza */
    Tz_18 = "TZ_18",
    /** Coast */
    Tz_19 = "TZ_19",
    /** Rukwa */
    Tz_20 = "TZ_20",
    /** Ruvuma */
    Tz_21 = "TZ_21",
    /** Shinyanga */
    Tz_22 = "TZ_22",
    /** Singida */
    Tz_23 = "TZ_23",
    /** Tabora */
    Tz_24 = "TZ_24",
    /** Tanga */
    Tz_25 = "TZ_25",
    /** Manyara */
    Tz_26 = "TZ_26",
    /** Geita */
    Tz_27 = "TZ_27",
    /** Katavi */
    Tz_28 = "TZ_28",
    /** Njombe */
    Tz_29 = "TZ_29",
    /** Simiyu */
    Tz_30 = "TZ_30",
    /** Vinnytska oblast */
    Ua_05 = "UA_05",
    /** Volynska oblast */
    Ua_07 = "UA_07",
    /** Luhanska oblast */
    Ua_09 = "UA_09",
    /** Dnipropetrovska oblast */
    Ua_12 = "UA_12",
    /** Donetska oblast */
    Ua_14 = "UA_14",
    /** Zhytomyrska oblast */
    Ua_18 = "UA_18",
    /** Zakarpatska oblast */
    Ua_21 = "UA_21",
    /** Zaporizka oblast */
    Ua_23 = "UA_23",
    /** Ivano-Frankivska oblast */
    Ua_26 = "UA_26",
    /** Kyiv */
    Ua_30 = "UA_30",
    /** Kyivska oblast */
    Ua_32 = "UA_32",
    /** Kirovohradska oblast */
    Ua_35 = "UA_35",
    /** Sevastopol */
    Ua_40 = "UA_40",
    /** Avtonomna Respublika Krym */
    Ua_43 = "UA_43",
    /** Lvivska oblast */
    Ua_46 = "UA_46",
    /** Mykolaivska oblast */
    Ua_48 = "UA_48",
    /** Odeska oblast */
    Ua_51 = "UA_51",
    /** Poltavska oblast */
    Ua_53 = "UA_53",
    /** Rivnenska oblast */
    Ua_56 = "UA_56",
    /** Sumska oblast */
    Ua_59 = "UA_59",
    /** Ternopilska oblast */
    Ua_61 = "UA_61",
    /** Kharkivska oblast */
    Ua_63 = "UA_63",
    /** Khersonska oblast */
    Ua_65 = "UA_65",
    /** Khmelnytska oblast */
    Ua_68 = "UA_68",
    /** Cherkaska oblast */
    Ua_71 = "UA_71",
    /** Chernihivska oblast */
    Ua_74 = "UA_74",
    /** Chernivetska oblast */
    Ua_77 = "UA_77",
    /** Kalangala */
    Ug_101 = "UG_101",
    /** Kampala */
    Ug_102 = "UG_102",
    /** Kiboga */
    Ug_103 = "UG_103",
    /** Luwero */
    Ug_104 = "UG_104",
    /** Masaka */
    Ug_105 = "UG_105",
    /** Mpigi */
    Ug_106 = "UG_106",
    /** Mubende */
    Ug_107 = "UG_107",
    /** Mukono */
    Ug_108 = "UG_108",
    /** Nakasongola */
    Ug_109 = "UG_109",
    /** Rakai */
    Ug_110 = "UG_110",
    /** Sembabule */
    Ug_111 = "UG_111",
    /** Kayunga */
    Ug_112 = "UG_112",
    /** Wakiso */
    Ug_113 = "UG_113",
    /** Mityana */
    Ug_114 = "UG_114",
    /** Nakaseke */
    Ug_115 = "UG_115",
    /** Lyantonde */
    Ug_116 = "UG_116",
    /** Buikwe */
    Ug_117 = "UG_117",
    /** Bukomansibi */
    Ug_118 = "UG_118",
    /** Butambala */
    Ug_119 = "UG_119",
    /** Buvuma */
    Ug_120 = "UG_120",
    /** Gomba */
    Ug_121 = "UG_121",
    /** Kalungu */
    Ug_122 = "UG_122",
    /** Kyankwanzi */
    Ug_123 = "UG_123",
    /** Lwengo */
    Ug_124 = "UG_124",
    /** Bugiri */
    Ug_201 = "UG_201",
    /** Busia */
    Ug_202 = "UG_202",
    /** Iganga */
    Ug_203 = "UG_203",
    /** Jinja */
    Ug_204 = "UG_204",
    /** Kamuli */
    Ug_205 = "UG_205",
    /** Kapchorwa */
    Ug_206 = "UG_206",
    /** Katakwi */
    Ug_207 = "UG_207",
    /** Kumi */
    Ug_208 = "UG_208",
    /** Mbale */
    Ug_209 = "UG_209",
    /** Pallisa */
    Ug_210 = "UG_210",
    /** Soroti */
    Ug_211 = "UG_211",
    /** Tororo */
    Ug_212 = "UG_212",
    /** Kaberamaido */
    Ug_213 = "UG_213",
    /** Mayuge */
    Ug_214 = "UG_214",
    /** Sironko */
    Ug_215 = "UG_215",
    /** Amuria */
    Ug_216 = "UG_216",
    /** Budaka */
    Ug_217 = "UG_217",
    /** Bukwa */
    Ug_218 = "UG_218",
    /** Butaleja */
    Ug_219 = "UG_219",
    /** Kaliro */
    Ug_220 = "UG_220",
    /** Manafwa */
    Ug_221 = "UG_221",
    /** Namutumba */
    Ug_222 = "UG_222",
    /** Bududa */
    Ug_223 = "UG_223",
    /** Bukedea */
    Ug_224 = "UG_224",
    /** Bulambuli */
    Ug_225 = "UG_225",
    /** Buyende */
    Ug_226 = "UG_226",
    /** Kibuku */
    Ug_227 = "UG_227",
    /** Kween */
    Ug_228 = "UG_228",
    /** Luuka */
    Ug_229 = "UG_229",
    /** Namayingo */
    Ug_230 = "UG_230",
    /** Ngora */
    Ug_231 = "UG_231",
    /** Serere */
    Ug_232 = "UG_232",
    /** Adjumani */
    Ug_301 = "UG_301",
    /** Apac */
    Ug_302 = "UG_302",
    /** Arua */
    Ug_303 = "UG_303",
    /** Gulu */
    Ug_304 = "UG_304",
    /** Kitgum */
    Ug_305 = "UG_305",
    /** Kotido */
    Ug_306 = "UG_306",
    /** Lira */
    Ug_307 = "UG_307",
    /** Moroto */
    Ug_308 = "UG_308",
    /** Moyo */
    Ug_309 = "UG_309",
    /** Nebbi */
    Ug_310 = "UG_310",
    /** Nakapiripirit */
    Ug_311 = "UG_311",
    /** Pader */
    Ug_312 = "UG_312",
    /** Yumbe */
    Ug_313 = "UG_313",
    /** Amolatar */
    Ug_314 = "UG_314",
    /** Kaabong */
    Ug_315 = "UG_315",
    /** Koboko */
    Ug_316 = "UG_316",
    /** Abim */
    Ug_317 = "UG_317",
    /** Dokolo */
    Ug_318 = "UG_318",
    /** Amuru */
    Ug_319 = "UG_319",
    /** Maracha */
    Ug_320 = "UG_320",
    /** Oyam */
    Ug_321 = "UG_321",
    /** Agago */
    Ug_322 = "UG_322",
    /** Alebtong */
    Ug_323 = "UG_323",
    /** Amudat */
    Ug_324 = "UG_324",
    /** Buhweju */
    Ug_325 = "UG_325",
    /** Kole */
    Ug_326 = "UG_326",
    /** Lamwo */
    Ug_327 = "UG_327",
    /** Napak */
    Ug_328 = "UG_328",
    /** Nwoya */
    Ug_329 = "UG_329",
    /** Otuke */
    Ug_330 = "UG_330",
    /** Zombo */
    Ug_331 = "UG_331",
    /** Bundibugyo */
    Ug_401 = "UG_401",
    /** Bushenyi */
    Ug_402 = "UG_402",
    /** Hoima */
    Ug_403 = "UG_403",
    /** Kabale */
    Ug_404 = "UG_404",
    /** Kabarole */
    Ug_405 = "UG_405",
    /** Kasese */
    Ug_406 = "UG_406",
    /** Kibaale */
    Ug_407 = "UG_407",
    /** Kisoro */
    Ug_408 = "UG_408",
    /** Masindi */
    Ug_409 = "UG_409",
    /** Mbarara */
    Ug_410 = "UG_410",
    /** Ntungamo */
    Ug_411 = "UG_411",
    /** Rukungiri */
    Ug_412 = "UG_412",
    /** Kamwenge */
    Ug_413 = "UG_413",
    /** Kanungu */
    Ug_414 = "UG_414",
    /** Kyenjojo */
    Ug_415 = "UG_415",
    /** Ibanda */
    Ug_416 = "UG_416",
    /** Isingiro */
    Ug_417 = "UG_417",
    /** Kiruhura */
    Ug_418 = "UG_418",
    /** Buliisa */
    Ug_419 = "UG_419",
    /** Kiryandongo */
    Ug_420 = "UG_420",
    /** Kyegegwa */
    Ug_421 = "UG_421",
    /** Mitooma */
    Ug_422 = "UG_422",
    /** Ntoroko */
    Ug_423 = "UG_423",
    /** Rubirizi */
    Ug_424 = "UG_424",
    /** Sheema */
    Ug_425 = "UG_425",
    /** Central */
    UgC = "UG_C",
    /** Eastern */
    UgE = "UG_E",
    /** Northern */
    UgN = "UG_N",
    /** Western */
    UgW = "UG_W",
    /** Johnston Atoll */
    Um_67 = "UM_67",
    /** Midway Islands */
    Um_71 = "UM_71",
    /** Navassa Island */
    Um_76 = "UM_76",
    /** Wake Island */
    Um_79 = "UM_79",
    /** Baker Island */
    Um_81 = "UM_81",
    /** Howland Island */
    Um_84 = "UM_84",
    /** Jarvis Island */
    Um_86 = "UM_86",
    /** Kingman Reef */
    Um_89 = "UM_89",
    /** Palmyra Atoll */
    Um_95 = "UM_95",
    /** Armed Forces of the Americas */
    UsAa = "US_AA",
    /** Armed Forces of Europe */
    UsAe = "US_AE",
    /** Alaska */
    UsAk = "US_AK",
    /** Alabama */
    UsAl = "US_AL",
    /** Armed Forces of the Pacific */
    UsAp = "US_AP",
    /** Arkansas */
    UsAr = "US_AR",
    /** American Samoa */
    UsAs = "US_AS",
    /** Arizona */
    UsAz = "US_AZ",
    /** California */
    UsCa = "US_CA",
    /** Colorado */
    UsCo = "US_CO",
    /** Connecticut */
    UsCt = "US_CT",
    /** District of Columbia */
    UsDc = "US_DC",
    /** Delaware */
    UsDe = "US_DE",
    /** Florida */
    UsFl = "US_FL",
    /** Georgia */
    UsGa = "US_GA",
    /** Guam  */
    UsGu = "US_GU",
    /** Hawaii */
    UsHi = "US_HI",
    /** Iowa */
    UsIa = "US_IA",
    /** Idaho */
    UsId = "US_ID",
    /** Illinois */
    UsIl = "US_IL",
    /** Indiana */
    UsIn = "US_IN",
    /** Kansas */
    UsKs = "US_KS",
    /** Kentucky */
    UsKy = "US_KY",
    /** Louisiana */
    UsLa = "US_LA",
    /** Massachusetts */
    UsMa = "US_MA",
    /** Maryland */
    UsMd = "US_MD",
    /** Maine */
    UsMe = "US_ME",
    /** Michigan */
    UsMi = "US_MI",
    /** Minnesota */
    UsMn = "US_MN",
    /** Missouri */
    UsMo = "US_MO",
    /** Northern Mariana Islands */
    UsMp = "US_MP",
    /** Mississippi */
    UsMs = "US_MS",
    /** Montana */
    UsMt = "US_MT",
    /** North Carolina */
    UsNc = "US_NC",
    /** North Dakota */
    UsNd = "US_ND",
    /** Nebraska */
    UsNe = "US_NE",
    /** New Hampshire */
    UsNh = "US_NH",
    /** New Jersey */
    UsNj = "US_NJ",
    /** New Mexico */
    UsNm = "US_NM",
    /** Nevada */
    UsNv = "US_NV",
    /** New York */
    UsNy = "US_NY",
    /** Ohio */
    UsOh = "US_OH",
    /** Oklahoma */
    UsOk = "US_OK",
    /** Oregon */
    UsOr = "US_OR",
    /** Pennsylvania */
    UsPa = "US_PA",
    /** Puerto Rico  */
    UsPr = "US_PR",
    /** Rhode Island */
    UsRi = "US_RI",
    /** South Carolina */
    UsSc = "US_SC",
    /** South Dakota */
    UsSd = "US_SD",
    /** Tennessee */
    UsTn = "US_TN",
    /** Texas */
    UsTx = "US_TX",
    /** United States Minor Outlying Islands */
    UsUm = "US_UM",
    /** Utah */
    UsUt = "US_UT",
    /** Virginia */
    UsVa = "US_VA",
    /** Virgin Islands, U.S. */
    UsVi = "US_VI",
    /** Vermont */
    UsVt = "US_VT",
    /** Washington */
    UsWa = "US_WA",
    /** Wisconsin */
    UsWi = "US_WI",
    /** West Virginia */
    UsWv = "US_WV",
    /** Wyoming */
    UsWy = "US_WY",
    /** Artigas */
    UyAr = "UY_AR",
    /** Canelones */
    UyCa = "UY_CA",
    /** Cerro Largo */
    UyCl = "UY_CL",
    /** Colonia */
    UyCo = "UY_CO",
    /** Durazno */
    UyDu = "UY_DU",
    /** Florida */
    UyFd = "UY_FD",
    /** Flores */
    UyFs = "UY_FS",
    /** Lavalleja */
    UyLa = "UY_LA",
    /** Maldonado */
    UyMa = "UY_MA",
    /** Montevideo */
    UyMo = "UY_MO",
    /** Paysandú */
    UyPa = "UY_PA",
    /** Río Negro */
    UyRn = "UY_RN",
    /** Rocha */
    UyRo = "UY_RO",
    /** Rivera */
    UyRv = "UY_RV",
    /** Salto */
    UySa = "UY_SA",
    /** San José */
    UySj = "UY_SJ",
    /** Soriano */
    UySo = "UY_SO",
    /** Tacuarembó */
    UyTa = "UY_TA",
    /** Treinta y Tres */
    UyTt = "UY_TT",
    /** Andijon */
    UzAn = "UZ_AN",
    /** Buxoro */
    UzBu = "UZ_BU",
    /** Farg‘ona */
    UzFa = "UZ_FA",
    /** Jizzax */
    UzJi = "UZ_JI",
    /** Namangan */
    UzNg = "UZ_NG",
    /** Navoiy */
    UzNw = "UZ_NW",
    /** Qashqadaryo */
    UzQa = "UZ_QA",
    /** Qoraqalpog‘iston Respublikasi */
    UzQr = "UZ_QR",
    /** Samarqand */
    UzSa = "UZ_SA",
    /** Sirdaryo */
    UzSi = "UZ_SI",
    /** Surxondaryo */
    UzSu = "UZ_SU",
    /** Toshkent */
    UzTk = "UZ_TK",
    /** Toshkent */
    UzTo = "UZ_TO",
    /** Xorazm */
    UzXo = "UZ_XO",
    /** Charlotte */
    Vc_01 = "VC_01",
    /** Saint Andrew */
    Vc_02 = "VC_02",
    /** Saint David */
    Vc_03 = "VC_03",
    /** Saint George */
    Vc_04 = "VC_04",
    /** Saint Patrick */
    Vc_05 = "VC_05",
    /** Grenadines */
    Vc_06 = "VC_06",
    /** Distrito Capital */
    VeA = "VE_A",
    /** Anzoátegui */
    VeB = "VE_B",
    /** Apure */
    VeC = "VE_C",
    /** Aragua */
    VeD = "VE_D",
    /** Barinas */
    VeE = "VE_E",
    /** Bolívar */
    VeF = "VE_F",
    /** Carabobo */
    VeG = "VE_G",
    /** Cojedes */
    VeH = "VE_H",
    /** Falcón */
    VeI = "VE_I",
    /** Guárico */
    VeJ = "VE_J",
    /** Lara */
    VeK = "VE_K",
    /** Mérida */
    VeL = "VE_L",
    /** Miranda */
    VeM = "VE_M",
    /** Monagas */
    VeN = "VE_N",
    /** Nueva Esparta */
    VeO = "VE_O",
    /** Portuguesa */
    VeP = "VE_P",
    /** Sucre */
    VeR = "VE_R",
    /** Táchira */
    VeS = "VE_S",
    /** Trujillo */
    VeT = "VE_T",
    /** Yaracuy */
    VeU = "VE_U",
    /** Zulia */
    VeV = "VE_V",
    /** Dependencias Federales */
    VeW = "VE_W",
    /** Vargas */
    VeX = "VE_X",
    /** Delta Amacuro */
    VeY = "VE_Y",
    /** Amazonas */
    VeZ = "VE_Z",
    /** Lai Châu */
    Vn_01 = "VN_01",
    /** Lào Cai */
    Vn_02 = "VN_02",
    /** Hà Giang */
    Vn_03 = "VN_03",
    /** Cao Bằng */
    Vn_04 = "VN_04",
    /** Sơn La */
    Vn_05 = "VN_05",
    /** Yên Bái */
    Vn_06 = "VN_06",
    /** Tuyên Quang */
    Vn_07 = "VN_07",
    /** Lạng Sơn */
    Vn_09 = "VN_09",
    /** Quảng Ninh */
    Vn_13 = "VN_13",
    /** Hòa Bình */
    Vn_14 = "VN_14",
    /** Ninh Bình */
    Vn_18 = "VN_18",
    /** Thái Bình */
    Vn_20 = "VN_20",
    /** Thanh Hóa */
    Vn_21 = "VN_21",
    /** Nghệ An */
    Vn_22 = "VN_22",
    /** Hà Tĩnh */
    Vn_23 = "VN_23",
    /** Quảng Bình */
    Vn_24 = "VN_24",
    /** Quảng Trị */
    Vn_25 = "VN_25",
    /** Thừa Thiên-Huế */
    Vn_26 = "VN_26",
    /** Quảng Nam */
    Vn_27 = "VN_27",
    /** Kon Tum */
    Vn_28 = "VN_28",
    /** Quảng Ngãi */
    Vn_29 = "VN_29",
    /** Gia Lai */
    Vn_30 = "VN_30",
    /** Bình Định */
    Vn_31 = "VN_31",
    /** Phú Yên */
    Vn_32 = "VN_32",
    /** Đắk Lắk */
    Vn_33 = "VN_33",
    /** Khánh Hòa */
    Vn_34 = "VN_34",
    /** Lâm Ðồng */
    Vn_35 = "VN_35",
    /** Ninh Thuận */
    Vn_36 = "VN_36",
    /** Tây Ninh */
    Vn_37 = "VN_37",
    /** Ðồng Nai */
    Vn_39 = "VN_39",
    /** Bình Thuận */
    Vn_40 = "VN_40",
    /** Long An */
    Vn_41 = "VN_41",
    /** Bà Rịa - Vũng Tàu */
    Vn_43 = "VN_43",
    /** An Giang */
    Vn_44 = "VN_44",
    /** Ðồng Tháp */
    Vn_45 = "VN_45",
    /** Tiền Giang */
    Vn_46 = "VN_46",
    /** Kiến Giang */
    Vn_47 = "VN_47",
    /** Vĩnh Long */
    Vn_49 = "VN_49",
    /** Bến Tre */
    Vn_50 = "VN_50",
    /** Trà Vinh */
    Vn_51 = "VN_51",
    /** Sóc Trăng */
    Vn_52 = "VN_52",
    /** Bắc Kạn */
    Vn_53 = "VN_53",
    /** Bắc Giang */
    Vn_54 = "VN_54",
    /** Bạc Liêu */
    Vn_55 = "VN_55",
    /** Bắc Ninh */
    Vn_56 = "VN_56",
    /** Bình Dương */
    Vn_57 = "VN_57",
    /** Bình Phước */
    Vn_58 = "VN_58",
    /** Cà Mau */
    Vn_59 = "VN_59",
    /** Hải Dương */
    Vn_61 = "VN_61",
    /** Hà Nam */
    Vn_63 = "VN_63",
    /** Hưng Yên */
    Vn_66 = "VN_66",
    /** Nam Ðịnh */
    Vn_67 = "VN_67",
    /** Phú Thọ */
    Vn_68 = "VN_68",
    /** Thái Nguyên */
    Vn_69 = "VN_69",
    /** Vĩnh Phúc */
    Vn_70 = "VN_70",
    /** Điện Biên */
    Vn_71 = "VN_71",
    /** Đắk Nông */
    Vn_72 = "VN_72",
    /** Hậu Giang */
    Vn_73 = "VN_73",
    /** Can Tho */
    VnCt = "VN_CT",
    /** Da Nang */
    VnDn = "VN_DN",
    /** Ha Noi */
    VnHn = "VN_HN",
    /** Hai Phong */
    VnHp = "VN_HP",
    /** Ho Chi Minh */
    VnSg = "VN_SG",
    /** Malampa */
    VuMap = "VU_MAP",
    /** Pénama */
    VuPam = "VU_PAM",
    /** Sanma */
    VuSam = "VU_SAM",
    /** Shéfa */
    VuSee = "VU_SEE",
    /** Taféa */
    VuTae = "VU_TAE",
    /** Torba */
    VuTob = "VU_TOB",
    /** A'ana */
    WsAa = "WS_AA",
    /** Aiga-i-le-Tai */
    WsAl = "WS_AL",
    /** Atua */
    WsAt = "WS_AT",
    /** Fa'asaleleaga */
    WsFa = "WS_FA",
    /** Gaga'emauga */
    WsGe = "WS_GE",
    /** Gagaifomauga */
    WsGi = "WS_GI",
    /** Palauli */
    WsPa = "WS_PA",
    /** Satupa'itea */
    WsSa = "WS_SA",
    /** Tuamasaga */
    WsTu = "WS_TU",
    /** Va'a-o-Fonoti */
    WsVf = "WS_VF",
    /** Vaisigano */
    WsVs = "WS_VS",
    /** Abyān */
    YeAb = "YE_AB",
    /** 'Adan */
    YeAd = "YE_AD",
    /** 'Amrān */
    YeAm = "YE_AM",
    /** Al Bayḑā' */
    YeBa = "YE_BA",
    /** Aḑ Ḑāli' */
    YeDa = "YE_DA",
    /** Dhamār */
    YeDh = "YE_DH",
    /** Ḩaḑramawt */
    YeHd = "YE_HD",
    /** Ḩajjah */
    YeHj = "YE_HJ",
    /** Al Ḩudaydah */
    YeHu = "YE_HU",
    /** Ibb */
    YeIb = "YE_IB",
    /** Al Jawf */
    YeJa = "YE_JA",
    /** Laḩij */
    YeLa = "YE_LA",
    /** Ma'rib */
    YeMa = "YE_MA",
    /** Al Mahrah */
    YeMr = "YE_MR",
    /** Al Maḩwīt */
    YeMw = "YE_MW",
    /** Raymah */
    YeRa = "YE_RA",
    /** Amānat al ‘Āşimah  */
    YeSa = "YE_SA",
    /** Şāʻdah */
    YeSd = "YE_SD",
    /** Shabwah */
    YeSh = "YE_SH",
    /** Şanʻā' */
    YeSn = "YE_SN",
    /** Tāʻizz */
    YeTa = "YE_TA",
    /** Eastern Cape */
    ZaEc = "ZA_EC",
    /** Free State */
    ZaFs = "ZA_FS",
    /** Gauteng */
    ZaGt = "ZA_GT",
    /** Limpopo */
    ZaLp = "ZA_LP",
    /** Mpumalanga */
    ZaMp = "ZA_MP",
    /** Northern Cape */
    ZaNc = "ZA_NC",
    /** Kwazulu-Natal */
    ZaNl = "ZA_NL",
    /** North-West */
    ZaNw = "ZA_NW",
    /** Western Cape */
    ZaWc = "ZA_WC",
    /** Western */
    Zm_01 = "ZM_01",
    /** Central */
    Zm_02 = "ZM_02",
    /** Eastern */
    Zm_03 = "ZM_03",
    /** Luapula */
    Zm_04 = "ZM_04",
    /** Northern */
    Zm_05 = "ZM_05",
    /** North-Western */
    Zm_06 = "ZM_06",
    /** Southern */
    Zm_07 = "ZM_07",
    /** Copperbelt */
    Zm_08 = "ZM_08",
    /** Lusaka */
    Zm_09 = "ZM_09",
    /** Muchinga */
    Zm_10 = "ZM_10",
    /** Bulawayo */
    ZwBu = "ZW_BU",
    /** Harare */
    ZwHa = "ZW_HA",
    /** Manicaland */
    ZwMa = "ZW_MA",
    /** Mashonaland Central */
    ZwMc = "ZW_MC",
    /** Mashonaland East */
    ZwMe = "ZW_ME",
    /** Midlands */
    ZwMi = "ZW_MI",
    /** Matabeleland North */
    ZwMn = "ZW_MN",
    /** Matabeleland South */
    ZwMs = "ZW_MS",
    /** Masvingo */
    ZwMv = "ZW_MV",
    /** Mashonaland West */
    ZwMw = "ZW_MW"
}
/** An IPv4/IPv6 subnet. */
export type Subnet = AccessloggableInterface & LoggableInterface & NoteableInterface & SearchableInterface & {
    __typename: 'Subnet';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A device that sits inline with customer traffic to impose network policy. */
    inline_devices: InlineDeviceConnection;
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** An IP pool, used for single address assignments (e.g. DHCP, PPPoE.) */
    ip_pools: IpPoolConnection;
    /** The largest subnet available, as a CIDR mask. */
    largest_cidr_available?: Maybe<Scalars['Int']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A `Poller`. */
    poller?: Maybe<Poller>;
    /** The ID of a `Poller`. */
    poller_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Polling priority. */
    polling_priority: Scalars['Int']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['output'];
    /** The largest example of a unique subnet on your network. A supernet contains many subnets. An example of a supernet is 10.0.0.0/8. */
    supernet?: Maybe<Supernet>;
    /** The ID of a `Supernet`. */
    supernet_id: Scalars['Int64Bit']['output'];
    /** The type. */
    type: SubnetType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An IPv4/IPv6 subnet. */
export type SubnetAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IPv4/IPv6 subnet. */
export type SubnetInline_DevicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_subnets?: InputMaybe<Scalars['Boolean']['input']>;
    bandwidth_collection_queued?: InputMaybe<Scalars['Boolean']['input']>;
    bandwidth_collection_start?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    last_synchronized?: InputMaybe<Scalars['Datetime']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    port?: InputMaybe<Scalars['Port']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<ProvisioningDeviceStatus>;
    status_message?: InputMaybe<Scalars['String']['input']>;
    synchronization_queued?: InputMaybe<Scalars['Boolean']['input']>;
    synchronization_start?: InputMaybe<Scalars['Datetime']['input']>;
    type?: InputMaybe<InlineDeviceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IPv4/IPv6 subnet. */
export type SubnetIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IPv4/IPv6 subnet. */
export type SubnetIp_PoolsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_range?: InputMaybe<Scalars['IpRange']['input']>;
    ips_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An IPv4/IPv6 subnet. */
export type SubnetLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IPv4/IPv6 subnet. */
export type SubnetNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An IPv4/IPv6 subnet. */
export type SubnetPollerArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    api_key?: InputMaybe<Scalars['String']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_time_taken?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    results_last_received?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_time_taken?: InputMaybe<Scalars['Int']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    time_of_last_account_poll?: InputMaybe<Scalars['Datetime']['input']>;
    time_of_last_infrastructure_poll?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    version?: InputMaybe<Scalars['String']['input']>;
};
/** An IPv4/IPv6 subnet. */
export type SubnetSupernetArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SubnetConnection` type. */
export type SubnetConnection = {
    __typename: 'SubnetConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Subnet>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A subnet type defines what kind of entity an IP assignment within an subnet can be assigned to. */
export declare enum SubnetType {
    /** A subnet that is only allowed to be used for assignment to an account */
    Account = "ACCOUNT",
    /** A subnet that cannot be currently used for assignment */
    Excluded = "EXCLUDED",
    /** A subnet that allows assignments to any entity */
    Mixed = "MIXED",
    /** A subnet that is only allowed to be used for assignment to a network site */
    Network = "NETWORK"
}
/** The entity subscribed to. */
export type SubscribableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of entity subscribed to. */
export declare enum SubscribableType {
    /** A `Ticket`. */
    Ticket = "Ticket"
}
/** A subscription to notifications for an entity. */
export type Subscription = AccessloggableInterface & LoggableInterface & {
    __typename: 'Subscription';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** When suspended, the subscription will not send notifications. Permission changes and other actions may cause a subscription to become suspended. */
    is_suspended: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The entity that this `Subscription` is associated with. */
    subscribable?: Maybe<SubscribableInterface>;
    /** The id of the entity that is being subscribed to. */
    subscribable_id: Scalars['Int64Bit']['output'];
    /** The type of entity that is being subscribed to. */
    subscribable_type: SubscribableType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A subscription to notifications for an entity. */
export type SubscriptionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A subscription to notifications for an entity. */
export type SubscriptionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A subscription to notifications for an entity. */
export type SubscriptionSubscribableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A subscription to notifications for an entity. */
export type SubscriptionUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `SubscriptionConnection` type. */
export type SubscriptionConnection = {
    __typename: 'SubscriptionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Subscription>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Allows subscribing to notifications for an entity. */
export type SubscriptionMutationInput = {
    /** Whether or not you're subscribed to notifications for this entity. */
    subscribed_to?: InputMaybe<Scalars['Boolean']['input']>;
};
/** Returned when the result of a mutation is only true or false, and there is no other data to return. The `message` property can sometimes contain a description of the failure, if `success` is false. */
export type SuccessResponse = {
    __typename: 'SuccessResponse';
    /** The message. */
    message?: Maybe<Scalars['Text']['output']>;
    /** Will be true if the operation succeeded. */
    success: Scalars['Boolean']['output'];
};
/** Returned when the result of a mutation is not consistent. The `message` property can sometimes contain a description of the failure, if `success` is false. The id may contain the model created if `success` is true. */
export type SuccessResponseWithId = {
    __typename: 'SuccessResponseWithId';
    /** The ID of the entity. */
    id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The message. */
    message?: Maybe<Scalars['Text']['output']>;
    /** Will be true if the operation succeeded. */
    success: Scalars['Boolean']['output'];
};
/** The largest example of a unique subnet on your network. A supernet contains many subnets. An example of a supernet is 10.0.0.0/8. */
export type Supernet = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Supernet';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The largest subnet available, as a CIDR mask. */
    largest_cidr_available?: Maybe<Scalars['Int']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name?: Maybe<Scalars['String']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An IPv4/IPv6 subnet. */
    subnet: Scalars['SubnetScalar']['output'];
    /** An IPv4/IPv6 subnet. */
    subnets: SubnetConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The largest example of a unique subnet on your network. A supernet contains many subnets. An example of a supernet is 10.0.0.0/8. */
export type SupernetAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The largest example of a unique subnet on your network. A supernet contains many subnets. An example of a supernet is 10.0.0.0/8. */
export type SupernetLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The largest example of a unique subnet on your network. A supernet contains many subnets. An example of a supernet is 10.0.0.0/8. */
export type SupernetNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The largest example of a unique subnet on your network. A supernet contains many subnets. An example of a supernet is 10.0.0.0/8. */
export type SupernetSubnetsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    largest_cidr_available?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    supernet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<SubnetType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SupernetConnection` type. */
export type SupernetConnection = {
    __typename: 'SupernetConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Supernet>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the synchronizeCableModemProvisioner mutation. */
export type SynchronizeCableModemProvisionerMutationInput = {
    /** The ID of a `CableModemProvisioner`. */
    cable_modem_provisioner_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the synchronizeDhcpServer mutation. */
export type SynchronizeDhcpServerMutationInput = {
    /** The ID of a `DhcpServer`. */
    dhcp_server_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the synchronizeInlineDevice mutation. */
export type SynchronizeInlineDeviceMutationInput = {
    /** The ID of an `InlineDevice`. */
    inline_device_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the synchronizeLteProvider mutation. */
export type SynchronizeLteProviderMutationInput = {
    /** The ID of an `LteProvider`. */
    lte_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the synchronizeRadiusServer mutation. */
export type SynchronizeRadiusServerMutationInput = {
    /** The ID of a `RadiusServer`. */
    radius_server_id: Scalars['Int64Bit']['input'];
};
/** A backup of your Sonar instance's data. */
export type SystemBackup = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'SystemBackup';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** A password. */
    password?: Maybe<Scalars['Text']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status: SystemBackupStatus;
    /** A log of a system backup export attempt. */
    system_backup_exports: SystemBackupExportConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A backup of your Sonar instance's data. */
export type SystemBackupAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A backup of your Sonar instance's data. */
export type SystemBackupFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A backup of your Sonar instance's data. */
export type SystemBackupLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A backup of your Sonar instance's data. */
export type SystemBackupNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A backup of your Sonar instance's data. */
export type SystemBackupNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A backup of your Sonar instance's data. */
export type SystemBackupSystem_Backup_ExportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    pruned?: InputMaybe<Scalars['Boolean']['input']>;
    response?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SystemBackupExportStatus>;
    system_backup_destination_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    system_backup_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SystemBackupConnection` type. */
export type SystemBackupConnection = {
    __typename: 'SystemBackupConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SystemBackup>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A configured destination to export system backups to. */
export type SystemBackupDestination = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SystemBackupDestination';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The base path to the directory that the file will be stored in. */
    base_path?: Maybe<Scalars['Text']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** When last system backup export was attempted. */
    last_export_at?: Maybe<Scalars['Datetime']['output']>;
    /** The status of the last system backup export. */
    last_export_status?: Maybe<SystemBackupExportStatus>;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The service that a system backup will be exported to. */
    provider: SystemBackupDestinationProvider;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A credential used to authenticate against configured destinations to export system backups to. */
    system_backup_destination_credentials: SystemBackupDestinationCredentialConnection;
    /** A log of a system backup export attempt. */
    system_backup_exports: SystemBackupExportConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A configured destination to export system backups to. */
export type SystemBackupDestinationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configured destination to export system backups to. */
export type SystemBackupDestinationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configured destination to export system backups to. */
export type SystemBackupDestinationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configured destination to export system backups to. */
export type SystemBackupDestinationSystem_Backup_Destination_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<SystemBackupDestinationProviderCredential>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    system_backup_destination_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['Text']['input']>;
};
/** A configured destination to export system backups to. */
export type SystemBackupDestinationSystem_Backup_ExportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    pruned?: InputMaybe<Scalars['Boolean']['input']>;
    response?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SystemBackupExportStatus>;
    system_backup_destination_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    system_backup_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SystemBackupDestinationConnection` type. */
export type SystemBackupDestinationConnection = {
    __typename: 'SystemBackupDestinationConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SystemBackupDestination>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A credential used to authenticate against configured destinations to export system backups to. */
export type SystemBackupDestinationCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SystemBackupDestinationCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The credential name. */
    credential: SystemBackupDestinationProviderCredential;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A configured destination to export system backups to. */
    system_backup_destination?: Maybe<SystemBackupDestination>;
    /** The ID of a destination that a system backup can be exported to. */
    system_backup_destination_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['Text']['output'];
};
/** A credential used to authenticate against configured destinations to export system backups to. */
export type SystemBackupDestinationCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credential used to authenticate against configured destinations to export system backups to. */
export type SystemBackupDestinationCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credential used to authenticate against configured destinations to export system backups to. */
export type SystemBackupDestinationCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A credential used to authenticate against configured destinations to export system backups to. */
export type SystemBackupDestinationCredentialSystem_Backup_DestinationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    base_path?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_export_at?: InputMaybe<Scalars['Datetime']['input']>;
    last_export_status?: InputMaybe<SystemBackupExportStatus>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<SystemBackupDestinationProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SystemBackupDestinationCredentialConnection` type. */
export type SystemBackupDestinationCredentialConnection = {
    __typename: 'SystemBackupDestinationCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SystemBackupDestinationCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for the system backup destination provider. */
export type SystemBackupDestinationCredentialInput = {
    /** The name of a credential used to authenticate against a system backup destination provider. */
    credential: SystemBackupDestinationProviderCredential;
    /** The value of a credential used to authenticate against a system backup destination provider. */
    value: Scalars['String']['input'];
};
/** A provider that a system backup can be exported to. */
export declare enum SystemBackupDestinationProvider {
    /** Amazon S3 */
    AwsS3 = "AWS_S3",
    /** Azure Blob Storage */
    AzureBlobStorage = "AZURE_BLOB_STORAGE",
    /** DigitalOcean Spaces */
    DigitaloceanSpaces = "DIGITALOCEAN_SPACES",
    /** Dropbox */
    Dropbox = "DROPBOX",
    /** Google Cloud Storage */
    GoogleCloudStorage = "GOOGLE_CLOUD_STORAGE",
    /** Scaleway Object Storage */
    ScalewayObjectStorage = "SCALEWAY_OBJECT_STORAGE",
    /** SFTP */
    Sftp = "SFTP"
}
/** The name of a credential used to authenticate against configured destinations to export system backups to. */
export declare enum SystemBackupDestinationProviderCredential {
    /** Your AWS S3 bucket. */
    AwsS3BucketName = "AWS_S3_BUCKET_NAME",
    /** Your AWS S3 account key. */
    AwsS3Key = "AWS_S3_KEY",
    /** Your AWS S3 region. */
    AwsS3Region = "AWS_S3_REGION",
    /** Your AWS S3 account secret. */
    AwsS3Secret = "AWS_S3_SECRET",
    /** The AWS S3 API version. */
    AwsS3Version = "AWS_S3_VERSION",
    /** Your account key. */
    AzureBlobStorageAccountKey = "AZURE_BLOB_STORAGE_ACCOUNT_KEY",
    /** Your account name. */
    AzureBlobStorageAccountName = "AZURE_BLOB_STORAGE_ACCOUNT_NAME",
    /** The container name. */
    AzureBlobStorageContainerName = "AZURE_BLOB_STORAGE_CONTAINER_NAME",
    /** Your DigitalOcean Spaces bucket. */
    DigitaloceanSpacesBucketName = "DIGITALOCEAN_SPACES_BUCKET_NAME",
    /** The DigitalOcean Spaces endpoint. */
    DigitaloceanSpacesEndpoint = "DIGITALOCEAN_SPACES_ENDPOINT",
    /** Your DigitalOcean Spaces account key. */
    DigitaloceanSpacesKey = "DIGITALOCEAN_SPACES_KEY",
    /** Your DigitalOcean Spaces region. */
    DigitaloceanSpacesRegion = "DIGITALOCEAN_SPACES_REGION",
    /** Your DigitalOcean Spaces account secret. */
    DigitaloceanSpacesSecret = "DIGITALOCEAN_SPACES_SECRET",
    /** The DigitalOcean Spaces API version. */
    DigitaloceanSpacesVersion = "DIGITALOCEAN_SPACES_VERSION",
    /** Your Dropbox account authorization token. */
    DropboxAuthorizationToken = "DROPBOX_AUTHORIZATION_TOKEN",
    /** Your Google Cloud Storage bucket. */
    GoogleCloudStorageBucketName = "GOOGLE_CLOUD_STORAGE_BUCKET_NAME",
    /** The contents of your key file. */
    GoogleCloudStorageKeyFileContents = "GOOGLE_CLOUD_STORAGE_KEY_FILE_CONTENTS",
    /** Your Google project ID. */
    GoogleCloudStorageProjectId = "GOOGLE_CLOUD_STORAGE_PROJECT_ID",
    /** Your Scaleway Object Storage bucket. */
    ScalewayObjectStorageBucketName = "SCALEWAY_OBJECT_STORAGE_BUCKET_NAME",
    /** The Scaleway Object Storage endpoint. */
    ScalewayObjectStorageEndpoint = "SCALEWAY_OBJECT_STORAGE_ENDPOINT",
    /** Your Scaleway Object Storage account key. */
    ScalewayObjectStorageKey = "SCALEWAY_OBJECT_STORAGE_KEY",
    /** Your Scaleway Object Storage region. */
    ScalewayObjectStorageRegion = "SCALEWAY_OBJECT_STORAGE_REGION",
    /** Your Scaleway Object Storage account secret. */
    ScalewayObjectStorageSecret = "SCALEWAY_OBJECT_STORAGE_SECRET",
    /** The Scaleway Object Storage API version. */
    ScalewayObjectStorageVersion = "SCALEWAY_OBJECT_STORAGE_VERSION",
    /** The host of the SFTP server. */
    SftpHost = "SFTP_HOST",
    /** Your SFTP password. */
    SftpPassword = "SFTP_PASSWORD",
    /** The port of the SFTP server. */
    SftpPort = "SFTP_PORT",
    /** Your SFTP username. */
    SftpUsername = "SFTP_USERNAME"
}
/** A log of a system backup export attempt. */
export type SystemBackupExport = AccessloggableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'SystemBackupExport';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** Indicates that this entity has been deleted as part of a pruning. */
    pruned: Scalars['Boolean']['output'];
    /** The message of the SMTP response. */
    response?: Maybe<Scalars['Text']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status: SystemBackupExportStatus;
    /** A backup of your Sonar instance's data. */
    system_backup?: Maybe<SystemBackup>;
    /** A configured destination to export system backups to. */
    system_backup_destination?: Maybe<SystemBackupDestination>;
    /** The ID of a destination that a system backup can be exported to. */
    system_backup_destination_id: Scalars['Int64Bit']['output'];
    /** The ID of a system backup. */
    system_backup_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A log of a system backup export attempt. */
export type SystemBackupExportAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log of a system backup export attempt. */
export type SystemBackupExportLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log of a system backup export attempt. */
export type SystemBackupExportNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log of a system backup export attempt. */
export type SystemBackupExportNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A log of a system backup export attempt. */
export type SystemBackupExportSystem_BackupArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    password?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SystemBackupStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A log of a system backup export attempt. */
export type SystemBackupExportSystem_Backup_DestinationArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    base_path?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_export_at?: InputMaybe<Scalars['Datetime']['input']>;
    last_export_status?: InputMaybe<SystemBackupExportStatus>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<SystemBackupDestinationProvider>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `SystemBackupExportConnection` type. */
export type SystemBackupExportConnection = {
    __typename: 'SystemBackupExportConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<SystemBackupExport>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The status of an export attempt of a system backup. */
export declare enum SystemBackupExportStatus {
    /** The export of the system backup has failed. */
    Failed = "FAILED",
    /** The export of the system backup is pending. */
    Pending = "PENDING",
    /** The export of the system backup has successfully completed. */
    Successful = "SUCCESSFUL"
}
/** The settings for system backups in your Sonar instance. */
export type SystemBackupSetting = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'SystemBackupSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether or not to automatically perform a backup every day. */
    automatic_backups: Scalars['Boolean']['output'];
    /** Whether or not to automatically export backups to configured destinations every day. */
    automatic_exports: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not to automatically delete an exported system backup on a destination configured by a client when pruning exports. */
    delete_exported_backups: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The number of minutes to wait until a backup in progress is considered to have failed and is ready to be marked as such. */
    in_progress_backup_expire_minutes: Scalars['Int']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The maximum number of backups allowed to exist at any given time. */
    maximum_backups: Scalars['Int']['output'];
    /** The maximum number of backup exports allowed to exist at any given time. */
    maximum_exports: Scalars['Int']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The settings for system backups in your Sonar instance. */
export type SystemBackupSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The settings for system backups in your Sonar instance. */
export type SystemBackupSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The settings for system backups in your Sonar instance. */
export type SystemBackupSettingNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The status of a system backup */
export declare enum SystemBackupStatus {
    /** The system backup has failed. */
    Failed = "FAILED",
    /** The system backup is running. */
    InProgress = "IN_PROGRESS",
    /** The system backup is pending. */
    Pending = "PENDING",
    /** The system backup has successfully completed. */
    Successful = "SUCCESSFUL"
}
/** System configuration settings. */
export type SystemSetting = AccessloggableInterface & LoggableInterface & {
    __typename: 'SystemSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Application firewall enabled. */
    application_firewall_enabled: Scalars['Boolean']['output'];
    /** Invoices will be created in both English and French for all customers. */
    bilingual_invoices?: Maybe<Scalars['Boolean']['output']>;
    /** If enabled allow external calendar integrations to sync. */
    calendar_allow_external_sync: Scalars['Boolean']['output'];
    /** Number of months to sync calendar history, 0-3 allowed.  Future will always sync. */
    calendar_history_sync_maximum: Scalars['Int']['output'];
    /** A city. */
    city?: Maybe<Scalars['String']['output']>;
    /** A two character country code. */
    country: Country;
    /** Automatically create a RADIUS account when a new account is created. */
    create_radius_account_on_account_creation: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The currency the system displays money in. */
    currency: Currency;
    /** Whether all or only primary contacts may access the customer portal. */
    customer_portal_contact_access: CustomerPortalContactAccess;
    /** The date format to use. */
    date_format: DateFormat;
    /** The character used to separate decimals in numbers. */
    decimal_separator: DecimalSeparator;
    /** The id of the Email Domain to use in email From address. */
    default_message_from_email_domain_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The default user name to use in email From address.  For example the 'jane' in jane@domain.com */
    default_message_from_email_user_prefix?: Maybe<Scalars['String']['output']>;
    /** The default name to use in email From fields */
    default_message_from_name?: Maybe<Scalars['String']['output']>;
    /** the id of the Phone Number to use as default sender for SMS messages. */
    default_message_from_phone_number_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The default language for messages. */
    default_message_language?: Maybe<Scalars['String']['output']>;
    /** The character used to separate digits in numbers. */
    digit_separator: DigitSeparator;
    /** The source for the company used to populate the DBA name on the FCC Form 477. Supports one of service, account, or default. */
    fcc_form_477_company_source: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The starting number for system generated purchase order numbers. */
    initial_purchase_order_number: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this Sonar instance. */
    instance_id: Scalars['Int64Bit']['output'];
    /** A supported language. */
    language: Language;
    /** A decimal latitude. */
    latitude?: Maybe<Scalars['Latitude']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude?: Maybe<Scalars['Longitude']['output']>;
    /** The id of the default signature to use for Mass Messages. */
    mass_message_signature_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** If true then DHCP leases with Option82 remote_id will assign the IP address to a matching customer MAC address instead of a matching remote_id MAC address. */
    option_82_assign_to_customer_mac?: Maybe<Scalars['Boolean']['output']>;
    /** If an invoice is past due, will include red watermark stamp saying "Past Due" in the local language. */
    past_due_stamp_invoice?: Maybe<Scalars['Boolean']['output']>;
    /** A text prefix to use when automatically creating a new RADIUS account. */
    radius_account_prefix: Scalars['String']['output'];
    /** The id of the default signature to use for Single Recipient Messages. */
    single_recipient_signature_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A state, province, or other country subdivision. */
    subdivision: Subdivision;
    /** The date and time to suppress inventory item status alerts until. */
    suppress_alerts_until_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** Whether or not a test billing run has been executed for this instance. */
    test_billing_run: Scalars['Boolean']['output'];
    /** Whether or not the system is in test mode. In test mode, credit card and bank payments cannot be processed, and emails will not be sent. */
    test_mode: Scalars['Boolean']['output'];
    /** The time format to use. */
    time_format: TimeFormat;
    /** The timezone you want times in the system displayed in. */
    timezone: Timezone;
    /** The id of the default signature to use for Triggered Messages. */
    triggered_message_signature_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The system of units. */
    units: Units;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** System configuration settings. */
export type SystemSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** System configuration settings. */
export type SystemSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A task. */
export type Task = AccessloggableInterface & LoggableInterface & NotifiableInterface & {
    __typename: 'Task';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An entity that can complete a task. */
    completable?: Maybe<CompletableInterface>;
    /** The ID of the entity that completes or completed this task. */
    completable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that completes this task. */
    completable_type?: Maybe<CompletableType>;
    /** Whether or not this is complete. */
    complete: Scalars['Boolean']['output'];
    /** The date and time this was completed. */
    completed_at?: Maybe<Scalars['Datetime']['output']>;
    /** The `User` that completed this. */
    completed_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** How this task gets marked as completed. */
    completion_type: TaskCompletionType;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The date on which the task is due. */
    due?: Maybe<Scalars['Date']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The order this item is shown in a list. */
    list_order?: Maybe<Scalars['Int']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The task to be performed. */
    task: Scalars['Text']['output'];
    /** The entity that this `Task` is associated with. */
    taskable?: Maybe<TaskableInterface>;
    /** The ID of the entity that the task is associated with. */
    taskable_id: Scalars['Int64Bit']['output'];
    /** The entity that the task is associated with. */
    taskable_type: TaskableType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A task. */
export type TaskAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A task. */
export type TaskCompletableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A task. */
export type TaskLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A task. */
export type TaskNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A task. */
export type TaskTaskableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A task. */
export type TaskUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** How a task gets marked as complete. */
export declare enum TaskCompletionType {
    /** Checking a box completes the task. */
    Boolean = "BOOLEAN",
    /** Providing the configured field value completes the task. */
    CustomField = "CUSTOM_FIELD",
    /** Attaching a file completes the task. */
    File = "FILE",
    /** Attaching an image file completes the task. */
    ImageFile = "IMAGE_FILE"
}
/** The connection wrapper around the `TaskConnection` type. */
export type TaskConnection = {
    __typename: 'TaskConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Task>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the createTask mutation. */
export type TaskMutationInput = {
    /** The ID of the entity that completes or completed this task. */
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that completes this task. */
    completable_type?: InputMaybe<CompletableType>;
    /** How this task gets marked as completed. */
    completion_type: TaskCompletionType;
    /** The date on which the task is due. */
    due?: InputMaybe<Scalars['Date']['input']>;
    /** The task to be performed. */
    task: Scalars['Text']['input'];
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `task template`. */
export type TaskTemplate = AccessloggableInterface & LoggableInterface & {
    __typename: 'TaskTemplate';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The type of a `Job`. */
    job_types: JobTypeConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A `task template item`. */
    task_template_items: TaskTemplateItemConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A `task template`. */
export type TaskTemplateAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `task template`. */
export type TaskTemplateJob_TypesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `task template`. */
export type TaskTemplateLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `task template`. */
export type TaskTemplateTask_Template_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['String']['input']>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `TaskTemplateConnection` type. */
export type TaskTemplateConnection = {
    __typename: 'TaskTemplateConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TaskTemplate>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A `task template item`. */
export type TaskTemplateItem = AccessloggableInterface & LoggableInterface & {
    __typename: 'TaskTemplateItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An entity that can complete a task. */
    completable?: Maybe<CompletableInterface>;
    /** The ID of the entity that completes or completed this task. */
    completable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that completes this task. */
    completable_type?: Maybe<CompletableType>;
    /** How this task gets marked as completed. */
    completion_type: TaskCompletionType;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The order this item is shown in a list. */
    list_order?: Maybe<Scalars['Int']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The task to be performed. */
    task: Scalars['String']['output'];
    /** A `task template`. */
    task_template?: Maybe<TaskTemplate>;
    /** The ID of a `TaskTemplate`. */
    task_template_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A `task template item`. */
export type TaskTemplateItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `task template item`. */
export type TaskTemplateItemCompletableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A `task template item`. */
export type TaskTemplateItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `task template item`. */
export type TaskTemplateItemTask_TemplateArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `TaskTemplateItemConnection` type. */
export type TaskTemplateItemConnection = {
    __typename: 'TaskTemplateItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TaskTemplateItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that can own a `Task`. */
export type TaskableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A type of entity that can have a task associated with it. */
export declare enum TaskableType {
    /** A customer account. */
    Account = "Account",
    /** An inventory item. */
    InventoryItem = "InventoryItem",
    /** A job, typically in the field. */
    Job = "Job",
    /** A network site. */
    NetworkSite = "NetworkSite",
    /** types.test_read_only_file_model */
    TestReadOnlyFileModel = "TestReadOnlyFileModel",
    /** A ticket. */
    Ticket = "Ticket"
}
/** A tax. */
export type Tax = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Tax';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Whether this `Tax` is applied as a percentage of the `Service` charge, or as a flat rate. */
    application: TaxApplication;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A geographical tax zone. */
    geo_tax_zones: GeoTaxZoneConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A line item on a purchase order. */
    purchase_order_items: PurchaseOrderItemConnection;
    /** The rate for a tax. For a percentage based tax, this is a percentage. For a flat tax, it is a currency value in the smallest currency unit (e.g. cents, pence, pesos.) */
    rate: Scalars['Float']['output'];
    /** The relationship between a `Service` and a `Tax`. */
    service_taxes: ServiceTaxConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** An override to the default taxation rate. */
    tax_overrides: TaxOverrideConnection;
    /** Whether this tax is applied based on the account being in a specific geography, or whether it is applied to all accounts. */
    type: TaxType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A third party vendor of inventory models. */
    vendors: VendorConnection;
    /** The relationship between a `VoiceServiceGenericParameter` and a `Tax`. */
    voice_service_generic_parameter_taxes: VoiceServiceGenericParameterTaxConnection;
};
/** A tax. */
export type TaxAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax. */
export type TaxGeo_Tax_ZonesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
    zip_partial_match?: InputMaybe<Scalars['Boolean']['input']>;
};
/** A tax. */
export type TaxLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax. */
export type TaxNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax. */
export type TaxPurchase_Order_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calculated_tax?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic_quantity_received?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderItemStatus>;
    units?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax. */
export type TaxService_TaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    exemption_amount?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax. */
export type TaxTax_OverridesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax. */
export type TaxVendorsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    automate_approved_purchase_orders?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    currency?: InputMaybe<Currency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax. */
export type TaxVoice_Service_Generic_Parameter_TaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    exemption_amount?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Whether a `Tax` is applied as a percentage of the `Service` charge, or as a flat rate. */
export declare enum TaxApplication {
    /** A flat rate charge, regardless of the service charge */
    Flat = "FLAT",
    /** A percentage of the service charge */
    Percentage = "PERCENTAGE"
}
/** The connection wrapper around the `TaxConnection` type. */
export type TaxConnection = {
    __typename: 'TaxConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Tax>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A tax exemption. */
export type TaxExemption = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TaxExemption';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** A tax category defined by Avalara. */
    avalara_tax_categories: AvalaraTaxCategoryConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The jurisdictions of this `TaxExemption`. */
    jurisdictions?: Maybe<Array<Maybe<TaxJurisdiction>>>;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax provider. */
    tax_provider?: Maybe<TaxProvider>;
    /** The ID of an `TaxProvider`. */
    tax_provider_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A tax exemption. */
export type TaxExemptionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax exemption. */
export type TaxExemptionAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax exemption. */
export type TaxExemptionAvalara_Tax_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['Int']['input']>;
};
/** A tax exemption. */
export type TaxExemptionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax exemption. */
export type TaxExemptionNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax exemption. */
export type TaxExemptionTax_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    type?: InputMaybe<TaxProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `TaxExemptionConnection` type. */
export type TaxExemptionConnection = {
    __typename: 'TaxExemptionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TaxExemption>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A tax jurisdiction. */
export declare enum TaxJurisdiction {
    /** City */
    City = "CITY",
    /** County */
    County = "COUNTY",
    /** Federal */
    Federal = "FEDERAL",
    /** State */
    State = "STATE"
}
/** An override to the default taxation rate. */
export type TaxOverride = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TaxOverride';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The rate. */
    rate: Scalars['Float']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax. */
    tax?: Maybe<Tax>;
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An override to the default taxation rate. */
export type TaxOverrideAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An override to the default taxation rate. */
export type TaxOverrideAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An override to the default taxation rate. */
export type TaxOverrideLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An override to the default taxation rate. */
export type TaxOverrideNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An override to the default taxation rate. */
export type TaxOverrideTaxArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `TaxOverrideConnection` type. */
export type TaxOverrideConnection = {
    __typename: 'TaxOverrideConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TaxOverride>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A tax provider. */
export type TaxProvider = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TaxProvider';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The list of subdivisions where this tax provider will collect taxes. */
    subdivisions?: Maybe<Array<Maybe<Subdivision>>>;
    /** A tax exemption. */
    tax_exemptions: TaxExemptionConnection;
    /** Credentials for a `TaxProvider`. */
    tax_provider_credentials: TaxProviderCredentialConnection;
    /** The type. */
    type: TaxProviderType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A tax provider. */
export type TaxProviderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax provider. */
export type TaxProviderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax provider. */
export type TaxProviderNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax provider. */
export type TaxProviderTax_ExemptionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jurisdictions?: InputMaybe<Array<InputMaybe<TaxJurisdiction>>>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax provider. */
export type TaxProviderTax_Provider_CredentialsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    credential?: InputMaybe<TaxProviderCredentialType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `TaxProviderConnection` type. */
export type TaxProviderConnection = {
    __typename: 'TaxProviderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TaxProvider>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for a `TaxProvider`. */
export type TaxProviderCredential = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TaxProviderCredential';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The credential name. */
    credential: TaxProviderCredentialType;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax provider. */
    tax_provider?: Maybe<TaxProvider>;
    /** The ID of an `TaxProvider`. */
    tax_provider_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The value. */
    value: Scalars['String']['output'];
};
/** Credentials for a `TaxProvider`. */
export type TaxProviderCredentialAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Credentials for a `TaxProvider`. */
export type TaxProviderCredentialLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Credentials for a `TaxProvider`. */
export type TaxProviderCredentialNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Credentials for a `TaxProvider`. */
export type TaxProviderCredentialTax_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    type?: InputMaybe<TaxProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `TaxProviderCredentialConnection` type. */
export type TaxProviderCredentialConnection = {
    __typename: 'TaxProviderCredentialConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TaxProviderCredential>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Credentials for a tax provider. */
export type TaxProviderCredentialMutationInput = {
    /** An individual credential to authenticate to a tax provider. */
    credential: TaxProviderCredentialType;
    /** The credential value (e.g. username, password, etc.) */
    value: Scalars['String']['input'];
};
/** An authentication credential for a tax provider. */
export declare enum TaxProviderCredentialType {
    /** Avalara client ID */
    AvalaraClientId = "AVALARA_CLIENT_ID",
    /** Avalara client profile ID */
    AvalaraClientProfileId = "AVALARA_CLIENT_PROFILE_ID",
    /** Avalara facilities based. Allowed values: '1' or '0'. */
    AvalaraFacilitiesBased = "AVALARA_FACILITIES_BASED",
    /** Avalara franchise agreement. Allowed values: '1' or '0'. */
    AvalaraFranchiseAgreement = "AVALARA_FRANCHISE_AGREEMENT",
    /** Avalara password */
    AvalaraPassword = "AVALARA_PASSWORD",
    /** Avalara regulated. Allowed values: '1' or '0'. */
    AvalaraRegulated = "AVALARA_REGULATED",
    /** Avalara service type. Allowed values: 'LOCAL' or 'LONG_DISTANCE'. */
    AvalaraServiceType = "AVALARA_SERVICE_TYPE",
    /** Avalara username */
    AvalaraUsername = "AVALARA_USERNAME"
}
/** The type of tax provider. */
export declare enum TaxProviderType {
    /** Avalara */
    Avalara = "AVALARA",
    /** Manual */
    Manual = "MANUAL"
}
/** A tax transaction. */
export type TaxTransaction = AccessloggableInterface & LoggableInterface & {
    __typename: 'TaxTransaction';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount: Scalars['Int']['output'];
    /** The amount of this `Debit` that was taxed. */
    amount_taxed: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description: Scalars['Text']['output'];
    /** A fractional tax transaction, stored to accurately calculate multi month billing. */
    fractional_tax_transactions: FractionalTaxTransactionConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax provider. */
    tax_provider?: Maybe<TaxProvider>;
    /** The ID of an `TaxProvider`. */
    tax_provider_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The entity that this `TaxDefinition` is assigned to. */
    taxdefinitionable?: Maybe<TaxdefinitionableInterface>;
    /** The ID of entity this tax definition is related to. */
    taxdefinitionable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity this tax definition is related to. */
    taxdefinitionable_type?: Maybe<TaxdefinitionableType>;
    /** The entity that this `TaxTransaction` was generated for. */
    taxtransactionable?: Maybe<TaxtransactionableInterface>;
    /** The ID of the entity this tax transaction is related to. */
    taxtransactionable_id: Scalars['Int64Bit']['output'];
    /** The type of entity this tax transaction is related to. */
    taxtransactionable_type: TaxtransactionableType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A tax transaction. */
export type TaxTransactionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax transaction. */
export type TaxTransactionFractional_Tax_TransactionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_taxed?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_transaction_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax transaction. */
export type TaxTransactionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A tax transaction. */
export type TaxTransactionTax_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    type?: InputMaybe<TaxProviderType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax transaction. */
export type TaxTransactionTaxdefinitionableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A tax transaction. */
export type TaxTransactionTaxtransactionableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `TaxTransactionConnection` type. */
export type TaxTransactionConnection = {
    __typename: 'TaxTransactionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TaxTransaction>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Whether a `Tax` is applied globally or geographically. */
export declare enum TaxType {
    /** A tax that is only applied in a certain geography */
    Geographical = "GEOGRAPHICAL",
    /** A tax that is applied to all customers, regardless of geography */
    Global = "GLOBAL"
}
/** An entity that can own a `TaxDefinition`. */
export type TaxdefinitionableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of `TaxDefinition` that this entity is associated with. */
export declare enum TaxdefinitionableType {
    /** An `AvalaraTaxDefinition`. */
    AvalaraTaxDefinition = "AvalaraTaxDefinition"
}
/** An entity that can own a `TaxTransaction`. */
export type TaxtransactionableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The entity that this `TaxTransaction` is associated with. */
export declare enum TaxtransactionableType {
    /** A `Debit`. */
    Debit = "Debit",
    /** A `Discount`. */
    Discount = "Discount"
}
/** An FCC technology code. */
export declare enum TechnologyCode {
    /** Asymmetric xDSL */
    Asymmetricxdsl = "ASYMMETRICXDSL",
    /** Cable Modem */
    Cablemodem = "CABLEMODEM",
    /** Copper Wireline */
    Copperwireline = "COPPERWIRELINE",
    /** Electric Power Line */
    Electricpowerline = "ELECTRICPOWERLINE",
    /** Fiber Optic */
    Fiber = "FIBER",
    /** Licensed-by-Rule Terrestrial Fixed Wireless */
    Licensedbyruleterrestrialfixedwireless = "LICENSEDBYRULETERRESTRIALFIXEDWIRELESS",
    /** Licensed Terrestrial Fixed Wireless */
    Licensedterrestrialfixedwireless = "LICENSEDTERRESTRIALFIXEDWIRELESS",
    /** Non-geostationary Satellite */
    Nongeostationarysatellite = "NONGEOSTATIONARYSATELLITE",
    /** Other */
    Other = "OTHER",
    /** Satellite */
    Satellite = "SATELLITE",
    /** Symmetric xDSL */
    Symmetricxdsl = "SYMMETRICXDSL",
    /** Terrestrial Fixed Wireless */
    Terrestrialfixedwireless = "TERRESTRIALFIXEDWIRELESS",
    /** Unlicensed Terrestrial Fixed Wireless */
    Unlicensedterrestrialfixedwireless = "UNLICENSEDTERRESTRIALFIXEDWIRELESS"
}
/** The key and value pair variables for this triggered email. */
export type TestTriggeredEmailVariableInput = {
    /** The triggered email variable key. */
    key: Scalars['String']['input'];
    /** The triggered email variable value. */
    value: Scalars['String']['input'];
};
/** A ticket. */
export type Ticket = AccessloggableInterface & CustomfielddataableInterface & EmailableInterface & FileableInterface & LoggableInterface & NotifiableInterface & RecentitemableInterface & SearchableInterface & SubscribableInterface & TaskableInterface & {
    __typename: 'Ticket';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** `Ticket`s that are children of this `Ticket`. */
    child_tickets: TicketConnection;
    /** The time this was closed at. */
    closed_at?: Maybe<Scalars['Datetime']['output']>;
    /** The `User` that closed this. */
    closed_by_user?: Maybe<User>;
    /** The ID of the `User` that closed this. */
    closed_by_user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Data entered into a `CustomField`. */
    custom_field_data: CustomFieldDataConnection;
    /** A human readable description. */
    description: Scalars['Text']['output'];
    /** The date this invoice is due by. */
    due_date?: Maybe<Scalars['Date']['output']>;
    /** An email. */
    emails: EmailConnection;
    /** A file. */
    files: FileConnection;
    /** The last date and time this entity was updated, or was the subject of a log. */
    global_updated_at?: Maybe<Scalars['Datetime']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inbound mailbox. */
    inbound_mailbox?: Maybe<InboundMailbox>;
    /** The ID of an `InboundMailbox`. */
    inbound_mailbox_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** A job, typically in the field. */
    jobs: JobConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A network site. */
    network_sites: NetworkSiteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** The `Ticket` that is a parent of this `Ticket`. */
    parent_ticket?: Maybe<Ticket>;
    /** The ID of the `Ticket` that this `Ticket` is a child of. */
    parent_ticket_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The priority of this item. */
    priority: TicketPriority;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Mail processor's spam rating for whether or not this is spam. */
    spam_score?: Maybe<Scalars['Float']['output']>;
    /** The status. */
    status: TicketStatus;
    /** The subject. */
    subject: Scalars['String']['output'];
    /** A subscription to notifications for an entity. */
    subscriptions: SubscriptionConnection;
    /** A task. */
    tasks: TaskConnection;
    /** A ticket category. */
    ticket_categories: TicketCategoryConnection;
    /** A comment on a `Ticket`. */
    ticket_comments: TicketCommentConnection;
    /** A ticket group. */
    ticket_group?: Maybe<TicketGroup>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A ticket recipient. */
    ticket_recipients: TicketRecipientConnection;
    /** A reply on a `Ticket`. */
    ticket_replies: TicketReplyConnection;
    /** The entity that this `Ticket` is associated with. */
    ticketable?: Maybe<TicketableInterface>;
    /** The ID of the entity that this `Ticket` is associated with. */
    ticketable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that this `Ticket` is associated with. */
    ticketable_type?: Maybe<TicketableType>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A ticket. */
export type TicketAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketChild_TicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketClosed_By_UserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A ticket. */
export type TicketCustom_Field_DataArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    custom_field_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    customfielddataable_type?: InputMaybe<CustomfielddataableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    value?: InputMaybe<Scalars['String']['input']>;
};
/** A ticket. */
export type TicketEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketInbound_MailboxArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    append_signature?: InputMaybe<Scalars['Boolean']['input']>;
    auto_reply?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enable_slack_integration?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    from_mailbox?: InputMaybe<Scalars['String']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    post_email_body_to_slack?: InputMaybe<Scalars['Boolean']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    send_auto_reply?: InputMaybe<Scalars['Boolean']['input']>;
    signature?: InputMaybe<Scalars['Text']['input']>;
    slack_webhook_url?: InputMaybe<Scalars['URL']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketJobsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completed_successfully?: InputMaybe<Scalars['Boolean']['input']>;
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_type?: InputMaybe<JobbableType>;
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    skips_validation?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketNetwork_SitesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    height_in_meters?: InputMaybe<Scalars['Float']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketParent_TicketArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketSubscriptionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_suspended?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subscribable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    subscribable_type?: InputMaybe<SubscribableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketTicket_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketTicket_CommentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketTicket_GroupArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    private?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketTicket_RecipientsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketTicket_RepliesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    author?: InputMaybe<Scalars['String']['input']>;
    author_email?: InputMaybe<Scalars['EmailAddress']['input']>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    headers?: InputMaybe<Scalars['Text']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    incoming?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    raw_body?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature?: InputMaybe<Scalars['Text']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket. */
export type TicketTicketableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket. */
export type TicketUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A ticket category. */
export type TicketCategory = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TicketCategory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A ticket. */
    tickets: TicketConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A ticket category. */
export type TicketCategoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket category. */
export type TicketCategoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket category. */
export type TicketCategoryNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket category. */
export type TicketCategoryTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `TicketCategoryConnection` type. */
export type TicketCategoryConnection = {
    __typename: 'TicketCategoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TicketCategory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A comment on a `Ticket`. */
export type TicketComment = AccessloggableInterface & FileableInterface & LoggableInterface & {
    __typename: 'TicketComment';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The body. */
    body: Scalars['Text']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A ticket. */
    ticket?: Maybe<Ticket>;
    /** The ID of a `Ticket`. */
    ticket_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id: Scalars['Int64Bit']['output'];
};
/** A comment on a `Ticket`. */
export type TicketCommentAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A comment on a `Ticket`. */
export type TicketCommentFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A comment on a `Ticket`. */
export type TicketCommentLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A comment on a `Ticket`. */
export type TicketCommentTicketArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A comment on a `Ticket`. */
export type TicketCommentUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `TicketCommentConnection` type. */
export type TicketCommentConnection = {
    __typename: 'TicketCommentConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TicketComment>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The connection wrapper around the `TicketConnection` type. */
export type TicketConnection = {
    __typename: 'TicketConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Ticket>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A ticket group. */
export type TicketGroup = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TicketGroup';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A contract template. */
    contract_templates: ContractTemplateConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inbound mailbox. */
    inbound_mailboxes: InboundMailboxConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** If a group is private, only members of the group can view emails within it. */
    private: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A ticket. */
    tickets: TicketConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
};
/** A ticket group. */
export type TicketGroupAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket group. */
export type TicketGroupContract_TemplatesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket group. */
export type TicketGroupInbound_MailboxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    append_signature?: InputMaybe<Scalars['Boolean']['input']>;
    auto_reply?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    enable_slack_integration?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    from_mailbox?: InputMaybe<Scalars['String']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    post_email_body_to_slack?: InputMaybe<Scalars['Boolean']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    send_auto_reply?: InputMaybe<Scalars['Boolean']['input']>;
    signature?: InputMaybe<Scalars['Text']['input']>;
    slack_webhook_url?: InputMaybe<Scalars['URL']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A ticket group. */
export type TicketGroupLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket group. */
export type TicketGroupNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket group. */
export type TicketGroupTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket group. */
export type TicketGroupUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `TicketGroupConnection` type. */
export type TicketGroupConnection = {
    __typename: 'TicketGroupConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TicketGroup>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A type of entity that can be linked to a `Ticket`. */
export declare enum TicketLinkableEntityType {
    /** An `InventoryItem`. */
    InventoryItem = "InventoryItem",
    /** A `Job`. */
    Job = "Job",
    /** A `Network Site`. */
    NetworkSite = "NetworkSite"
}
/** The priority of a `Ticket`. */
export declare enum TicketPriority {
    /** Critical. */
    Critical = "CRITICAL",
    /** High. */
    High = "HIGH",
    /** Low. */
    Low = "LOW",
    /** Medium. */
    Medium = "MEDIUM"
}
/** A ticket recipient. */
export type TicketRecipient = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TicketRecipient';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email address. */
    email_address: Scalars['EmailAddress']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A ticket. */
    ticket?: Maybe<Ticket>;
    /** The ID of a `Ticket`. */
    ticket_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A ticket recipient. */
export type TicketRecipientAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket recipient. */
export type TicketRecipientLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket recipient. */
export type TicketRecipientNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A ticket recipient. */
export type TicketRecipientTicketArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `TicketRecipientConnection` type. */
export type TicketRecipientConnection = {
    __typename: 'TicketRecipientConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TicketRecipient>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A reply on a `Ticket`. */
export type TicketReply = AccessloggableInterface & EmailableInterface & FileableInterface & LoggableInterface & {
    __typename: 'TicketReply';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The author. */
    author?: Maybe<Scalars['String']['output']>;
    /** The email address of the author. */
    author_email?: Maybe<Scalars['EmailAddress']['output']>;
    /** The body. */
    body: Scalars['Text']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email. */
    emails: EmailConnection;
    /** A file. */
    files: FileConnection;
    /** The email headers. */
    headers?: Maybe<Scalars['Text']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** Whether or not the reply was incoming (from an external party) or outgoing (from a Sonar `User`.) */
    incoming: Scalars['Boolean']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The raw body, before any Sonar parsing. */
    raw_body?: Maybe<Scalars['Text']['output']>;
    /** The signature to append. You can include `[PUBLIC_NAME]` as a variable to insert the user's public name when the signature is appended. */
    signature?: Maybe<Scalars['Text']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A ticket. */
    ticket?: Maybe<Ticket>;
    /** The ID of a `Ticket`. */
    ticket_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A reply on a `Ticket`. */
export type TicketReplyAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A reply on a `Ticket`. */
export type TicketReplyEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A reply on a `Ticket`. */
export type TicketReplyFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A reply on a `Ticket`. */
export type TicketReplyLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A reply on a `Ticket`. */
export type TicketReplyTicketArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A reply on a `Ticket`. */
export type TicketReplyUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `TicketReplyConnection` type. */
export type TicketReplyConnection = {
    __typename: 'TicketReplyConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TicketReply>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The status of a `Ticket`. */
export declare enum TicketStatus {
    /** Closed. */
    Closed = "CLOSED",
    /** Open. */
    Open = "OPEN",
    /** Pending an update from an external party. */
    PendingExternal = "PENDING_EXTERNAL",
    /** Pending an update from an internal party. */
    PendingInternal = "PENDING_INTERNAL"
}
/** The entity that has a `Ticket` associated with it. */
export type TicketableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The type of entity that owns this `Ticket`. */
export declare enum TicketableType {
    /** An `Account`. */
    Account = "Account",
    /** A `NetworkSite`. */
    NetworkSite = "NetworkSite"
}
/** Ticketing configuration settings. */
export type TicketingSetting = AccessloggableInterface & LoggableInterface & {
    __typename: 'TicketingSetting';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The number of days a ticket needs to be closed before new inbound emails will create a new ticket rather than re-open the existing one. */
    days_closed_before_inbound_email_creates_new_ticket?: Maybe<Scalars['Int']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** Ticketing configuration settings. */
export type TicketingSettingAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Ticketing configuration settings. */
export type TicketingSettingLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** How time is formatted when displayed. */
export declare enum TimeFormat {
    /** Twelve hour time (e.g. 1:23PM) */
    TwelveHour = "TWELVE_HOUR",
    /** Twenty four hour time (e.g. 13:23) */
    TwentyFourHour = "TWENTY_FOUR_HOUR"
}
/** The system time zone. */
export declare enum Timezone {
    /** Africa/Abidjan */
    Africaabidjan = "AFRICAABIDJAN",
    /** Africa/Accra */
    Africaaccra = "AFRICAACCRA",
    /** Africa/Addis_Ababa */
    Africaaddisababa = "AFRICAADDISABABA",
    /** Africa/Algiers */
    Africaalgiers = "AFRICAALGIERS",
    /** Africa/Asmara */
    Africaasmara = "AFRICAASMARA",
    /** Africa/Asmera */
    Africaasmera = "AFRICAASMERA",
    /** Africa/Bamako */
    Africabamako = "AFRICABAMAKO",
    /** Africa/Bangui */
    Africabangui = "AFRICABANGUI",
    /** Africa/Banjul */
    Africabanjul = "AFRICABANJUL",
    /** Africa/Bissau */
    Africabissau = "AFRICABISSAU",
    /** Africa/Blantyre */
    Africablantyre = "AFRICABLANTYRE",
    /** Africa/Brazzaville */
    Africabrazzaville = "AFRICABRAZZAVILLE",
    /** Africa/Bujumbura */
    Africabujumbura = "AFRICABUJUMBURA",
    /** Africa/Cairo */
    Africacairo = "AFRICACAIRO",
    /** Africa/Casablanca */
    Africacasablanca = "AFRICACASABLANCA",
    /** Africa/Ceuta */
    Africaceuta = "AFRICACEUTA",
    /** Africa/Conakry */
    Africaconakry = "AFRICACONAKRY",
    /** Africa/Dakar */
    Africadakar = "AFRICADAKAR",
    /** Africa/Dar_es_Salaam */
    Africadaressalaam = "AFRICADARESSALAAM",
    /** Africa/Djibouti */
    Africadjibouti = "AFRICADJIBOUTI",
    /** Africa/Douala */
    Africadouala = "AFRICADOUALA",
    /** Africa/El_Aaiun */
    Africaelaaiun = "AFRICAELAAIUN",
    /** Africa/Freetown */
    Africafreetown = "AFRICAFREETOWN",
    /** Africa/Gaborone */
    Africagaborone = "AFRICAGABORONE",
    /** Africa/Harare */
    Africaharare = "AFRICAHARARE",
    /** Africa/Johannesburg */
    Africajohannesburg = "AFRICAJOHANNESBURG",
    /** Africa/Juba */
    Africajuba = "AFRICAJUBA",
    /** Africa/Kampala */
    Africakampala = "AFRICAKAMPALA",
    /** Africa/Khartoum */
    Africakhartoum = "AFRICAKHARTOUM",
    /** Africa/Kigali */
    Africakigali = "AFRICAKIGALI",
    /** Africa/Kinshasa */
    Africakinshasa = "AFRICAKINSHASA",
    /** Africa/Lagos */
    Africalagos = "AFRICALAGOS",
    /** Africa/Libreville */
    Africalibreville = "AFRICALIBREVILLE",
    /** Africa/Lome */
    Africalome = "AFRICALOME",
    /** Africa/Luanda */
    Africaluanda = "AFRICALUANDA",
    /** Africa/Lubumbashi */
    Africalubumbashi = "AFRICALUBUMBASHI",
    /** Africa/Lusaka */
    Africalusaka = "AFRICALUSAKA",
    /** Africa/Malabo */
    Africamalabo = "AFRICAMALABO",
    /** Africa/Maputo */
    Africamaputo = "AFRICAMAPUTO",
    /** Africa/Maseru */
    Africamaseru = "AFRICAMASERU",
    /** Africa/Mbabane */
    Africambabane = "AFRICAMBABANE",
    /** Africa/Mogadishu */
    Africamogadishu = "AFRICAMOGADISHU",
    /** Africa/Monrovia */
    Africamonrovia = "AFRICAMONROVIA",
    /** Africa/Nairobi */
    Africanairobi = "AFRICANAIROBI",
    /** Africa/Ndjamena */
    Africandjamena = "AFRICANDJAMENA",
    /** Africa/Niamey */
    Africaniamey = "AFRICANIAMEY",
    /** Africa/Nouakchott */
    Africanouakchott = "AFRICANOUAKCHOTT",
    /** Africa/Ouagadougou */
    Africaouagadougou = "AFRICAOUAGADOUGOU",
    /** Africa/Porto-Novo */
    Africaportonovo = "AFRICAPORTONOVO",
    /** Africa/Sao_Tome */
    Africasaotome = "AFRICASAOTOME",
    /** Africa/Timbuktu */
    Africatimbuktu = "AFRICATIMBUKTU",
    /** Africa/Tripoli */
    Africatripoli = "AFRICATRIPOLI",
    /** Africa/Tunis */
    Africatunis = "AFRICATUNIS",
    /** Africa/Windhoek */
    Africawindhoek = "AFRICAWINDHOEK",
    /** America/Adak */
    Americaadak = "AMERICAADAK",
    /** America/Anchorage */
    Americaanchorage = "AMERICAANCHORAGE",
    /** America/Anguilla */
    Americaanguilla = "AMERICAANGUILLA",
    /** America/Antigua */
    Americaantigua = "AMERICAANTIGUA",
    /** America/Araguaina */
    Americaaraguaina = "AMERICAARAGUAINA",
    /** America/Argentina/Buenos_Aires */
    Americaargentinabuenosaires = "AMERICAARGENTINABUENOSAIRES",
    /** America/Argentina/Catamarca */
    Americaargentinacatamarca = "AMERICAARGENTINACATAMARCA",
    /** America/Argentina/ComodRivadavia */
    Americaargentinacomodrivadavia = "AMERICAARGENTINACOMODRIVADAVIA",
    /** America/Argentina/Cordoba */
    Americaargentinacordoba = "AMERICAARGENTINACORDOBA",
    /** America/Argentina/Jujuy */
    Americaargentinajujuy = "AMERICAARGENTINAJUJUY",
    /** America/Argentina/La_Rioja */
    Americaargentinalarioja = "AMERICAARGENTINALARIOJA",
    /** America/Argentina/Mendoza */
    Americaargentinamendoza = "AMERICAARGENTINAMENDOZA",
    /** America/Argentina/Rio_Gallegos */
    Americaargentinariogallegos = "AMERICAARGENTINARIOGALLEGOS",
    /** America/Argentina/Salta */
    Americaargentinasalta = "AMERICAARGENTINASALTA",
    /** America/Argentina/San_Juan */
    Americaargentinasanjuan = "AMERICAARGENTINASANJUAN",
    /** America/Argentina/San_Luis */
    Americaargentinasanluis = "AMERICAARGENTINASANLUIS",
    /** America/Argentina/Tucuman */
    Americaargentinatucuman = "AMERICAARGENTINATUCUMAN",
    /** America/Argentina/Ushuaia */
    Americaargentinaushuaia = "AMERICAARGENTINAUSHUAIA",
    /** America/Aruba */
    Americaaruba = "AMERICAARUBA",
    /** America/Asuncion */
    Americaasuncion = "AMERICAASUNCION",
    /** America/Atikokan */
    Americaatikokan = "AMERICAATIKOKAN",
    /** America/Atka */
    Americaatka = "AMERICAATKA",
    /** America/Bahia */
    Americabahia = "AMERICABAHIA",
    /** America/Bahia_Banderas */
    Americabahiabanderas = "AMERICABAHIABANDERAS",
    /** America/Barbados */
    Americabarbados = "AMERICABARBADOS",
    /** America/Belem */
    Americabelem = "AMERICABELEM",
    /** America/Belize */
    Americabelize = "AMERICABELIZE",
    /** America/Blanc-Sablon */
    Americablancsablon = "AMERICABLANCSABLON",
    /** America/Boa_Vista */
    Americaboavista = "AMERICABOAVISTA",
    /** America/Bogota */
    Americabogota = "AMERICABOGOTA",
    /** America/Boise */
    Americaboise = "AMERICABOISE",
    /** America/Buenos_Aires */
    Americabuenosaires = "AMERICABUENOSAIRES",
    /** America/Cambridge_Bay */
    Americacambridgebay = "AMERICACAMBRIDGEBAY",
    /** America/Campo_Grande */
    Americacampogrande = "AMERICACAMPOGRANDE",
    /** America/Cancun */
    Americacancun = "AMERICACANCUN",
    /** America/Caracas */
    Americacaracas = "AMERICACARACAS",
    /** America/Catamarca */
    Americacatamarca = "AMERICACATAMARCA",
    /** America/Cayenne */
    Americacayenne = "AMERICACAYENNE",
    /** America/Cayman */
    Americacayman = "AMERICACAYMAN",
    /** America/Chicago */
    Americachicago = "AMERICACHICAGO",
    /** America/Chihuahua */
    Americachihuahua = "AMERICACHIHUAHUA",
    /** America/Ciudad_Juarez */
    Americaciudadjuarez = "AMERICACIUDADJUAREZ",
    /** America/Coral_Harbour */
    Americacoralharbour = "AMERICACORALHARBOUR",
    /** America/Cordoba */
    Americacordoba = "AMERICACORDOBA",
    /** America/Costa_Rica */
    Americacostarica = "AMERICACOSTARICA",
    /** America/Creston */
    Americacreston = "AMERICACRESTON",
    /** America/Cuiaba */
    Americacuiaba = "AMERICACUIABA",
    /** America/Curacao */
    Americacuracao = "AMERICACURACAO",
    /** America/Danmarkshavn */
    Americadanmarkshavn = "AMERICADANMARKSHAVN",
    /** America/Dawson */
    Americadawson = "AMERICADAWSON",
    /** America/Dawson_Creek */
    Americadawsoncreek = "AMERICADAWSONCREEK",
    /** America/Denver */
    Americadenver = "AMERICADENVER",
    /** America/Detroit */
    Americadetroit = "AMERICADETROIT",
    /** America/Dominica */
    Americadominica = "AMERICADOMINICA",
    /** America/Edmonton */
    Americaedmonton = "AMERICAEDMONTON",
    /** America/Eirunepe */
    Americaeirunepe = "AMERICAEIRUNEPE",
    /** America/El_Salvador */
    Americaelsalvador = "AMERICAELSALVADOR",
    /** America/Ensenada */
    Americaensenada = "AMERICAENSENADA",
    /** America/Fortaleza */
    Americafortaleza = "AMERICAFORTALEZA",
    /** America/Fort_Nelson */
    Americafortnelson = "AMERICAFORTNELSON",
    /** America/Fort_Wayne */
    Americafortwayne = "AMERICAFORTWAYNE",
    /** America/Glace_Bay */
    Americaglacebay = "AMERICAGLACEBAY",
    /** America/Godthab */
    Americagodthab = "AMERICAGODTHAB",
    /** America/Goose_Bay */
    Americagoosebay = "AMERICAGOOSEBAY",
    /** America/Grand_Turk */
    Americagrandturk = "AMERICAGRANDTURK",
    /** America/Grenada */
    Americagrenada = "AMERICAGRENADA",
    /** America/Guadeloupe */
    Americaguadeloupe = "AMERICAGUADELOUPE",
    /** America/Guatemala */
    Americaguatemala = "AMERICAGUATEMALA",
    /** America/Guayaquil */
    Americaguayaquil = "AMERICAGUAYAQUIL",
    /** America/Guyana */
    Americaguyana = "AMERICAGUYANA",
    /** America/Halifax */
    Americahalifax = "AMERICAHALIFAX",
    /** America/Havana */
    Americahavana = "AMERICAHAVANA",
    /** America/Hermosillo */
    Americahermosillo = "AMERICAHERMOSILLO",
    /** America/Indiana/Indianapolis */
    Americaindianaindianapolis = "AMERICAINDIANAINDIANAPOLIS",
    /** America/Indiana/Knox */
    Americaindianaknox = "AMERICAINDIANAKNOX",
    /** America/Indiana/Marengo */
    Americaindianamarengo = "AMERICAINDIANAMARENGO",
    /** America/Indiana/Petersburg */
    Americaindianapetersburg = "AMERICAINDIANAPETERSBURG",
    /** America/Indianapolis */
    Americaindianapolis = "AMERICAINDIANAPOLIS",
    /** America/Indiana/Tell_City */
    Americaindianatellcity = "AMERICAINDIANATELLCITY",
    /** America/Indiana/Vevay */
    Americaindianavevay = "AMERICAINDIANAVEVAY",
    /** America/Indiana/Vincennes */
    Americaindianavincennes = "AMERICAINDIANAVINCENNES",
    /** America/Indiana/Winamac */
    Americaindianawinamac = "AMERICAINDIANAWINAMAC",
    /** America/Inuvik */
    Americainuvik = "AMERICAINUVIK",
    /** America/Iqaluit */
    Americaiqaluit = "AMERICAIQALUIT",
    /** America/Jamaica */
    Americajamaica = "AMERICAJAMAICA",
    /** America/Jujuy */
    Americajujuy = "AMERICAJUJUY",
    /** America/Juneau */
    Americajuneau = "AMERICAJUNEAU",
    /** America/Kentucky/Louisville */
    Americakentuckylouisville = "AMERICAKENTUCKYLOUISVILLE",
    /** America/Kentucky/Monticello */
    Americakentuckymonticello = "AMERICAKENTUCKYMONTICELLO",
    /** America/Knox_IN */
    Americaknoxin = "AMERICAKNOXIN",
    /** America/Kralendijk */
    Americakralendijk = "AMERICAKRALENDIJK",
    /** America/La_Paz */
    Americalapaz = "AMERICALAPAZ",
    /** America/Lima */
    Americalima = "AMERICALIMA",
    /** America/Los_Angeles */
    Americalosangeles = "AMERICALOSANGELES",
    /** America/Louisville */
    Americalouisville = "AMERICALOUISVILLE",
    /** America/Lower_Princes */
    Americalowerprinces = "AMERICALOWERPRINCES",
    /** America/Maceio */
    Americamaceio = "AMERICAMACEIO",
    /** America/Managua */
    Americamanagua = "AMERICAMANAGUA",
    /** America/Manaus */
    Americamanaus = "AMERICAMANAUS",
    /** America/Marigot */
    Americamarigot = "AMERICAMARIGOT",
    /** America/Martinique */
    Americamartinique = "AMERICAMARTINIQUE",
    /** America/Matamoros */
    Americamatamoros = "AMERICAMATAMOROS",
    /** America/Mazatlan */
    Americamazatlan = "AMERICAMAZATLAN",
    /** America/Mendoza */
    Americamendoza = "AMERICAMENDOZA",
    /** America/Menominee */
    Americamenominee = "AMERICAMENOMINEE",
    /** America/Merida */
    Americamerida = "AMERICAMERIDA",
    /** America/Metlakatla */
    Americametlakatla = "AMERICAMETLAKATLA",
    /** America/Mexico_City */
    Americamexicocity = "AMERICAMEXICOCITY",
    /** America/Miquelon */
    Americamiquelon = "AMERICAMIQUELON",
    /** America/Moncton */
    Americamoncton = "AMERICAMONCTON",
    /** America/Monterrey */
    Americamonterrey = "AMERICAMONTERREY",
    /** America/Montevideo */
    Americamontevideo = "AMERICAMONTEVIDEO",
    /** America/Montreal */
    Americamontreal = "AMERICAMONTREAL",
    /** America/Montserrat */
    Americamontserrat = "AMERICAMONTSERRAT",
    /** America/Nassau */
    Americanassau = "AMERICANASSAU",
    /** America/New_York */
    Americanewyork = "AMERICANEWYORK",
    /** America/Nipigon */
    Americanipigon = "AMERICANIPIGON",
    /** America/Nome */
    Americanome = "AMERICANOME",
    /** America/Noronha */
    Americanoronha = "AMERICANORONHA",
    /** America/North_Dakota/Beulah */
    Americanorthdakotabeulah = "AMERICANORTHDAKOTABEULAH",
    /** America/North_Dakota/Center */
    Americanorthdakotacenter = "AMERICANORTHDAKOTACENTER",
    /** America/North_Dakota/New_Salem */
    Americanorthdakotanewsalem = "AMERICANORTHDAKOTANEWSALEM",
    /** America/Nuuk */
    Americanuuk = "AMERICANUUK",
    /** America/Ojinaga */
    Americaojinaga = "AMERICAOJINAGA",
    /** America/Panama */
    Americapanama = "AMERICAPANAMA",
    /** America/Pangnirtung */
    Americapangnirtung = "AMERICAPANGNIRTUNG",
    /** America/Paramaribo */
    Americaparamaribo = "AMERICAPARAMARIBO",
    /** America/Phoenix */
    Americaphoenix = "AMERICAPHOENIX",
    /** America/Port-au-Prince */
    Americaportauprince = "AMERICAPORTAUPRINCE",
    /** America/Porto_Acre */
    Americaportoacre = "AMERICAPORTOACRE",
    /** America/Port_of_Spain */
    Americaportofspain = "AMERICAPORTOFSPAIN",
    /** America/Porto_Velho */
    Americaportovelho = "AMERICAPORTOVELHO",
    /** America/Puerto_Rico */
    Americapuertorico = "AMERICAPUERTORICO",
    /** America/Punta_Arenas */
    Americapuntaarenas = "AMERICAPUNTAARENAS",
    /** America/Rainy_River */
    Americarainyriver = "AMERICARAINYRIVER",
    /** America/Rankin_Inlet */
    Americarankininlet = "AMERICARANKININLET",
    /** America/Recife */
    Americarecife = "AMERICARECIFE",
    /** America/Regina */
    Americaregina = "AMERICAREGINA",
    /** America/Resolute */
    Americaresolute = "AMERICARESOLUTE",
    /** America/Rio_Branco */
    Americariobranco = "AMERICARIOBRANCO",
    /** America/Rosario */
    Americarosario = "AMERICAROSARIO",
    /** America/Santa_Isabel */
    Americasantaisabel = "AMERICASANTAISABEL",
    /** America/Santarem */
    Americasantarem = "AMERICASANTAREM",
    /** America/Santiago */
    Americasantiago = "AMERICASANTIAGO",
    /** America/Santo_Domingo */
    Americasantodomingo = "AMERICASANTODOMINGO",
    /** America/Sao_Paulo */
    Americasaopaulo = "AMERICASAOPAULO",
    /** America/Scoresbysund */
    Americascoresbysund = "AMERICASCORESBYSUND",
    /** America/Shiprock */
    Americashiprock = "AMERICASHIPROCK",
    /** America/Sitka */
    Americasitka = "AMERICASITKA",
    /** America/St_Barthelemy */
    Americastbarthelemy = "AMERICASTBARTHELEMY",
    /** America/St_Johns */
    Americastjohns = "AMERICASTJOHNS",
    /** America/St_Kitts */
    Americastkitts = "AMERICASTKITTS",
    /** America/St_Lucia */
    Americastlucia = "AMERICASTLUCIA",
    /** America/St_Thomas */
    Americastthomas = "AMERICASTTHOMAS",
    /** America/St_Vincent */
    Americastvincent = "AMERICASTVINCENT",
    /** America/Swift_Current */
    Americaswiftcurrent = "AMERICASWIFTCURRENT",
    /** America/Tegucigalpa */
    Americategucigalpa = "AMERICATEGUCIGALPA",
    /** America/Thule */
    Americathule = "AMERICATHULE",
    /** America/Thunder_Bay */
    Americathunderbay = "AMERICATHUNDERBAY",
    /** America/Tijuana */
    Americatijuana = "AMERICATIJUANA",
    /** America/Toronto */
    Americatoronto = "AMERICATORONTO",
    /** America/Tortola */
    Americatortola = "AMERICATORTOLA",
    /** America/Vancouver */
    Americavancouver = "AMERICAVANCOUVER",
    /** America/Virgin */
    Americavirgin = "AMERICAVIRGIN",
    /** America/Whitehorse */
    Americawhitehorse = "AMERICAWHITEHORSE",
    /** America/Winnipeg */
    Americawinnipeg = "AMERICAWINNIPEG",
    /** America/Yakutat */
    Americayakutat = "AMERICAYAKUTAT",
    /** America/Yellowknife */
    Americayellowknife = "AMERICAYELLOWKNIFE",
    /** Antarctica/Casey */
    Antarcticacasey = "ANTARCTICACASEY",
    /** Antarctica/Davis */
    Antarcticadavis = "ANTARCTICADAVIS",
    /** Antarctica/DumontDUrville */
    Antarcticadumontdurville = "ANTARCTICADUMONTDURVILLE",
    /** Antarctica/Macquarie */
    Antarcticamacquarie = "ANTARCTICAMACQUARIE",
    /** Antarctica/Mawson */
    Antarcticamawson = "ANTARCTICAMAWSON",
    /** Antarctica/McMurdo */
    Antarcticamcmurdo = "ANTARCTICAMCMURDO",
    /** Antarctica/Palmer */
    Antarcticapalmer = "ANTARCTICAPALMER",
    /** Antarctica/Rothera */
    Antarcticarothera = "ANTARCTICAROTHERA",
    /** Antarctica/South_Pole */
    Antarcticasouthpole = "ANTARCTICASOUTHPOLE",
    /** Antarctica/Syowa */
    Antarcticasyowa = "ANTARCTICASYOWA",
    /** Antarctica/Troll */
    Antarcticatroll = "ANTARCTICATROLL",
    /** Antarctica/Vostok */
    Antarcticavostok = "ANTARCTICAVOSTOK",
    /** Arctic/Longyearbyen */
    Arcticlongyearbyen = "ARCTICLONGYEARBYEN",
    /** Asia/Aden */
    Asiaaden = "ASIAADEN",
    /** Asia/Almaty */
    Asiaalmaty = "ASIAALMATY",
    /** Asia/Amman */
    Asiaamman = "ASIAAMMAN",
    /** Asia/Anadyr */
    Asiaanadyr = "ASIAANADYR",
    /** Asia/Aqtau */
    Asiaaqtau = "ASIAAQTAU",
    /** Asia/Aqtobe */
    Asiaaqtobe = "ASIAAQTOBE",
    /** Asia/Ashgabat */
    Asiaashgabat = "ASIAASHGABAT",
    /** Asia/Ashkhabad */
    Asiaashkhabad = "ASIAASHKHABAD",
    /** Asia/Atyrau */
    Asiaatyrau = "ASIAATYRAU",
    /** Asia/Baghdad */
    Asiabaghdad = "ASIABAGHDAD",
    /** Asia/Bahrain */
    Asiabahrain = "ASIABAHRAIN",
    /** Asia/Baku */
    Asiabaku = "ASIABAKU",
    /** Asia/Bangkok */
    Asiabangkok = "ASIABANGKOK",
    /** Asia/Barnaul */
    Asiabarnaul = "ASIABARNAUL",
    /** Asia/Beirut */
    Asiabeirut = "ASIABEIRUT",
    /** Asia/Bishkek */
    Asiabishkek = "ASIABISHKEK",
    /** Asia/Brunei */
    Asiabrunei = "ASIABRUNEI",
    /** Asia/Calcutta */
    Asiacalcutta = "ASIACALCUTTA",
    /** Asia/Chita */
    Asiachita = "ASIACHITA",
    /** Asia/Choibalsan */
    Asiachoibalsan = "ASIACHOIBALSAN",
    /** Asia/Chongqing */
    Asiachongqing = "ASIACHONGQING",
    /** Asia/Chungking */
    Asiachungking = "ASIACHUNGKING",
    /** Asia/Colombo */
    Asiacolombo = "ASIACOLOMBO",
    /** Asia/Dacca */
    Asiadacca = "ASIADACCA",
    /** Asia/Damascus */
    Asiadamascus = "ASIADAMASCUS",
    /** Asia/Dhaka */
    Asiadhaka = "ASIADHAKA",
    /** Asia/Dili */
    Asiadili = "ASIADILI",
    /** Asia/Dubai */
    Asiadubai = "ASIADUBAI",
    /** Asia/Dushanbe */
    Asiadushanbe = "ASIADUSHANBE",
    /** Asia/Famagusta */
    Asiafamagusta = "ASIAFAMAGUSTA",
    /** Asia/Gaza */
    Asiagaza = "ASIAGAZA",
    /** Asia/Harbin */
    Asiaharbin = "ASIAHARBIN",
    /** Asia/Hebron */
    Asiahebron = "ASIAHEBRON",
    /** Asia/Ho_Chi_Minh */
    Asiahochiminh = "ASIAHOCHIMINH",
    /** Asia/Hong_Kong */
    Asiahongkong = "ASIAHONGKONG",
    /** Asia/Hovd */
    Asiahovd = "ASIAHOVD",
    /** Asia/Irkutsk */
    Asiairkutsk = "ASIAIRKUTSK",
    /** Asia/Istanbul */
    Asiaistanbul = "ASIAISTANBUL",
    /** Asia/Jakarta */
    Asiajakarta = "ASIAJAKARTA",
    /** Asia/Jayapura */
    Asiajayapura = "ASIAJAYAPURA",
    /** Asia/Jerusalem */
    Asiajerusalem = "ASIAJERUSALEM",
    /** Asia/Kabul */
    Asiakabul = "ASIAKABUL",
    /** Asia/Kamchatka */
    Asiakamchatka = "ASIAKAMCHATKA",
    /** Asia/Karachi */
    Asiakarachi = "ASIAKARACHI",
    /** Asia/Kashgar */
    Asiakashgar = "ASIAKASHGAR",
    /** Asia/Kathmandu */
    Asiakathmandu = "ASIAKATHMANDU",
    /** Asia/Katmandu */
    Asiakatmandu = "ASIAKATMANDU",
    /** Asia/Khandyga */
    Asiakhandyga = "ASIAKHANDYGA",
    /** Asia/Kolkata */
    Asiakolkata = "ASIAKOLKATA",
    /** Asia/Krasnoyarsk */
    Asiakrasnoyarsk = "ASIAKRASNOYARSK",
    /** Asia/Kuala_Lumpur */
    Asiakualalumpur = "ASIAKUALALUMPUR",
    /** Asia/Kuching */
    Asiakuching = "ASIAKUCHING",
    /** Asia/Kuwait */
    Asiakuwait = "ASIAKUWAIT",
    /** Asia/Macao */
    Asiamacao = "ASIAMACAO",
    /** Asia/Macau */
    Asiamacau = "ASIAMACAU",
    /** Asia/Magadan */
    Asiamagadan = "ASIAMAGADAN",
    /** Asia/Makassar */
    Asiamakassar = "ASIAMAKASSAR",
    /** Asia/Manila */
    Asiamanila = "ASIAMANILA",
    /** Asia/Muscat */
    Asiamuscat = "ASIAMUSCAT",
    /** Asia/Nicosia */
    Asianicosia = "ASIANICOSIA",
    /** Asia/Novokuznetsk */
    Asianovokuznetsk = "ASIANOVOKUZNETSK",
    /** Asia/Novosibirsk */
    Asianovosibirsk = "ASIANOVOSIBIRSK",
    /** Asia/Omsk */
    Asiaomsk = "ASIAOMSK",
    /** Asia/Oral */
    Asiaoral = "ASIAORAL",
    /** Asia/Phnom_Penh */
    Asiaphnompenh = "ASIAPHNOMPENH",
    /** Asia/Pontianak */
    Asiapontianak = "ASIAPONTIANAK",
    /** Asia/Pyongyang */
    Asiapyongyang = "ASIAPYONGYANG",
    /** Asia/Qatar */
    Asiaqatar = "ASIAQATAR",
    /** Asia/Qostanay */
    Asiaqostanay = "ASIAQOSTANAY",
    /** Asia/Qyzylorda */
    Asiaqyzylorda = "ASIAQYZYLORDA",
    /** Asia/Rangoon */
    Asiarangoon = "ASIARANGOON",
    /** Asia/Riyadh */
    Asiariyadh = "ASIARIYADH",
    /** Asia/Saigon */
    Asiasaigon = "ASIASAIGON",
    /** Asia/Sakhalin */
    Asiasakhalin = "ASIASAKHALIN",
    /** Asia/Samarkand */
    Asiasamarkand = "ASIASAMARKAND",
    /** Asia/Seoul */
    Asiaseoul = "ASIASEOUL",
    /** Asia/Shanghai */
    Asiashanghai = "ASIASHANGHAI",
    /** Asia/Singapore */
    Asiasingapore = "ASIASINGAPORE",
    /** Asia/Srednekolymsk */
    Asiasrednekolymsk = "ASIASREDNEKOLYMSK",
    /** Asia/Taipei */
    Asiataipei = "ASIATAIPEI",
    /** Asia/Tashkent */
    Asiatashkent = "ASIATASHKENT",
    /** Asia/Tbilisi */
    Asiatbilisi = "ASIATBILISI",
    /** Asia/Tehran */
    Asiatehran = "ASIATEHRAN",
    /** Asia/Tel_Aviv */
    Asiatelaviv = "ASIATELAVIV",
    /** Asia/Thimbu */
    Asiathimbu = "ASIATHIMBU",
    /** Asia/Thimphu */
    Asiathimphu = "ASIATHIMPHU",
    /** Asia/Tokyo */
    Asiatokyo = "ASIATOKYO",
    /** Asia/Tomsk */
    Asiatomsk = "ASIATOMSK",
    /** Asia/Ujung_Pandang */
    Asiaujungpandang = "ASIAUJUNGPANDANG",
    /** Asia/Ulaanbaatar */
    Asiaulaanbaatar = "ASIAULAANBAATAR",
    /** Asia/Ulan_Bator */
    Asiaulanbator = "ASIAULANBATOR",
    /** Asia/Urumqi */
    Asiaurumqi = "ASIAURUMQI",
    /** Asia/Ust-Nera */
    Asiaustnera = "ASIAUSTNERA",
    /** Asia/Vientiane */
    Asiavientiane = "ASIAVIENTIANE",
    /** Asia/Vladivostok */
    Asiavladivostok = "ASIAVLADIVOSTOK",
    /** Asia/Yakutsk */
    Asiayakutsk = "ASIAYAKUTSK",
    /** Asia/Yangon */
    Asiayangon = "ASIAYANGON",
    /** Asia/Yekaterinburg */
    Asiayekaterinburg = "ASIAYEKATERINBURG",
    /** Asia/Yerevan */
    Asiayerevan = "ASIAYEREVAN",
    /** Atlantic/Azores */
    Atlanticazores = "ATLANTICAZORES",
    /** Atlantic/Bermuda */
    Atlanticbermuda = "ATLANTICBERMUDA",
    /** Atlantic/Canary */
    Atlanticcanary = "ATLANTICCANARY",
    /** Atlantic/Cape_Verde */
    Atlanticcapeverde = "ATLANTICCAPEVERDE",
    /** Atlantic/Faeroe */
    Atlanticfaeroe = "ATLANTICFAEROE",
    /** Atlantic/Faroe */
    Atlanticfaroe = "ATLANTICFAROE",
    /** Atlantic/Jan_Mayen */
    Atlanticjanmayen = "ATLANTICJANMAYEN",
    /** Atlantic/Madeira */
    Atlanticmadeira = "ATLANTICMADEIRA",
    /** Atlantic/Reykjavik */
    Atlanticreykjavik = "ATLANTICREYKJAVIK",
    /** Atlantic/South_Georgia */
    Atlanticsouthgeorgia = "ATLANTICSOUTHGEORGIA",
    /** Atlantic/Stanley */
    Atlanticstanley = "ATLANTICSTANLEY",
    /** Atlantic/St_Helena */
    Atlanticsthelena = "ATLANTICSTHELENA",
    /** Australia/ACT */
    Australiaact = "AUSTRALIAACT",
    /** Australia/Adelaide */
    Australiaadelaide = "AUSTRALIAADELAIDE",
    /** Australia/Brisbane */
    Australiabrisbane = "AUSTRALIABRISBANE",
    /** Australia/Broken_Hill */
    Australiabrokenhill = "AUSTRALIABROKENHILL",
    /** Australia/Canberra */
    Australiacanberra = "AUSTRALIACANBERRA",
    /** Australia/Currie */
    Australiacurrie = "AUSTRALIACURRIE",
    /** Australia/Darwin */
    Australiadarwin = "AUSTRALIADARWIN",
    /** Australia/Eucla */
    Australiaeucla = "AUSTRALIAEUCLA",
    /** Australia/Hobart */
    Australiahobart = "AUSTRALIAHOBART",
    /** Australia/LHI */
    Australialhi = "AUSTRALIALHI",
    /** Australia/Lindeman */
    Australialindeman = "AUSTRALIALINDEMAN",
    /** Australia/Lord_Howe */
    Australialordhowe = "AUSTRALIALORDHOWE",
    /** Australia/Melbourne */
    Australiamelbourne = "AUSTRALIAMELBOURNE",
    /** Australia/North */
    Australianorth = "AUSTRALIANORTH",
    /** Australia/NSW */
    Australiansw = "AUSTRALIANSW",
    /** Australia/Perth */
    Australiaperth = "AUSTRALIAPERTH",
    /** Australia/Queensland */
    Australiaqueensland = "AUSTRALIAQUEENSLAND",
    /** Australia/South */
    Australiasouth = "AUSTRALIASOUTH",
    /** Australia/Sydney */
    Australiasydney = "AUSTRALIASYDNEY",
    /** Australia/Tasmania */
    Australiatasmania = "AUSTRALIATASMANIA",
    /** Australia/Victoria */
    Australiavictoria = "AUSTRALIAVICTORIA",
    /** Australia/West */
    Australiawest = "AUSTRALIAWEST",
    /** Australia/Yancowinna */
    Australiayancowinna = "AUSTRALIAYANCOWINNA",
    /** Brazil/Acre */
    Brazilacre = "BRAZILACRE",
    /** Brazil/DeNoronha */
    Brazildenoronha = "BRAZILDENORONHA",
    /** Brazil/East */
    Brazileast = "BRAZILEAST",
    /** Brazil/West */
    Brazilwest = "BRAZILWEST",
    /** Canada/Atlantic */
    Canadaatlantic = "CANADAATLANTIC",
    /** Canada/Central */
    Canadacentral = "CANADACENTRAL",
    /** Canada/Eastern */
    Canadaeastern = "CANADAEASTERN",
    /** Canada/Mountain */
    Canadamountain = "CANADAMOUNTAIN",
    /** Canada/Newfoundland */
    Canadanewfoundland = "CANADANEWFOUNDLAND",
    /** Canada/Pacific */
    Canadapacific = "CANADAPACIFIC",
    /** Canada/Saskatchewan */
    Canadasaskatchewan = "CANADASASKATCHEWAN",
    /** Canada/Yukon */
    Canadayukon = "CANADAYUKON",
    /** CET */
    Cet = "CET",
    /** Chile/Continental */
    Chilecontinental = "CHILECONTINENTAL",
    /** Chile/EasterIsland */
    Chileeasterisland = "CHILEEASTERISLAND",
    /** CST6CDT */
    Cst6Cdt = "CST6CDT",
    /** Cuba */
    Cuba = "CUBA",
    /** EET */
    Eet = "EET",
    /** Egypt */
    Egypt = "EGYPT",
    /** Eire */
    Eire = "EIRE",
    /** EST */
    Est = "EST",
    /** EST5EDT */
    Est5Edt = "EST5EDT",
    /** Etc/GMT */
    Etcgmt = "ETCGMT",
    /** Etc/GMT0 */
    Etcgmt0 = "ETCGMT0",
    /** Etc/GMT-0 */
    Etcgmtminus0 = "ETCGMTMINUS0",
    /** Etc/GMT-1 */
    Etcgmtminus1 = "ETCGMTMINUS1",
    /** Etc/GMT-2 */
    Etcgmtminus2 = "ETCGMTMINUS2",
    /** Etc/GMT-3 */
    Etcgmtminus3 = "ETCGMTMINUS3",
    /** Etc/GMT-4 */
    Etcgmtminus4 = "ETCGMTMINUS4",
    /** Etc/GMT-5 */
    Etcgmtminus5 = "ETCGMTMINUS5",
    /** Etc/GMT-6 */
    Etcgmtminus6 = "ETCGMTMINUS6",
    /** Etc/GMT-7 */
    Etcgmtminus7 = "ETCGMTMINUS7",
    /** Etc/GMT-8 */
    Etcgmtminus8 = "ETCGMTMINUS8",
    /** Etc/GMT-9 */
    Etcgmtminus9 = "ETCGMTMINUS9",
    /** Etc/GMT-10 */
    Etcgmtminus10 = "ETCGMTMINUS10",
    /** Etc/GMT-11 */
    Etcgmtminus11 = "ETCGMTMINUS11",
    /** Etc/GMT-12 */
    Etcgmtminus12 = "ETCGMTMINUS12",
    /** Etc/GMT-13 */
    Etcgmtminus13 = "ETCGMTMINUS13",
    /** Etc/GMT-14 */
    Etcgmtminus14 = "ETCGMTMINUS14",
    /** Etc/GMT+0 */
    Etcgmtplus0 = "ETCGMTPLUS0",
    /** Etc/GMT+1 */
    Etcgmtplus1 = "ETCGMTPLUS1",
    /** Etc/GMT+2 */
    Etcgmtplus2 = "ETCGMTPLUS2",
    /** Etc/GMT+3 */
    Etcgmtplus3 = "ETCGMTPLUS3",
    /** Etc/GMT+4 */
    Etcgmtplus4 = "ETCGMTPLUS4",
    /** Etc/GMT+5 */
    Etcgmtplus5 = "ETCGMTPLUS5",
    /** Etc/GMT+6 */
    Etcgmtplus6 = "ETCGMTPLUS6",
    /** Etc/GMT+7 */
    Etcgmtplus7 = "ETCGMTPLUS7",
    /** Etc/GMT+8 */
    Etcgmtplus8 = "ETCGMTPLUS8",
    /** Etc/GMT+9 */
    Etcgmtplus9 = "ETCGMTPLUS9",
    /** Etc/GMT+10 */
    Etcgmtplus10 = "ETCGMTPLUS10",
    /** Etc/GMT+11 */
    Etcgmtplus11 = "ETCGMTPLUS11",
    /** Etc/GMT+12 */
    Etcgmtplus12 = "ETCGMTPLUS12",
    /** Etc/Greenwich */
    Etcgreenwich = "ETCGREENWICH",
    /** Etc/UCT */
    Etcuct = "ETCUCT",
    /** Etc/Universal */
    Etcuniversal = "ETCUNIVERSAL",
    /** Etc/UTC */
    Etcutc = "ETCUTC",
    /** Etc/Zulu */
    Etczulu = "ETCZULU",
    /** Europe/Amsterdam */
    Europeamsterdam = "EUROPEAMSTERDAM",
    /** Europe/Andorra */
    Europeandorra = "EUROPEANDORRA",
    /** Europe/Astrakhan */
    Europeastrakhan = "EUROPEASTRAKHAN",
    /** Europe/Athens */
    Europeathens = "EUROPEATHENS",
    /** Europe/Belfast */
    Europebelfast = "EUROPEBELFAST",
    /** Europe/Belgrade */
    Europebelgrade = "EUROPEBELGRADE",
    /** Europe/Berlin */
    Europeberlin = "EUROPEBERLIN",
    /** Europe/Bratislava */
    Europebratislava = "EUROPEBRATISLAVA",
    /** Europe/Brussels */
    Europebrussels = "EUROPEBRUSSELS",
    /** Europe/Bucharest */
    Europebucharest = "EUROPEBUCHAREST",
    /** Europe/Budapest */
    Europebudapest = "EUROPEBUDAPEST",
    /** Europe/Busingen */
    Europebusingen = "EUROPEBUSINGEN",
    /** Europe/Chisinau */
    Europechisinau = "EUROPECHISINAU",
    /** Europe/Copenhagen */
    Europecopenhagen = "EUROPECOPENHAGEN",
    /** Europe/Dublin */
    Europedublin = "EUROPEDUBLIN",
    /** Europe/Gibraltar */
    Europegibraltar = "EUROPEGIBRALTAR",
    /** Europe/Guernsey */
    Europeguernsey = "EUROPEGUERNSEY",
    /** Europe/Helsinki */
    Europehelsinki = "EUROPEHELSINKI",
    /** Europe/Isle_of_Man */
    Europeisleofman = "EUROPEISLEOFMAN",
    /** Europe/Istanbul */
    Europeistanbul = "EUROPEISTANBUL",
    /** Europe/Jersey */
    Europejersey = "EUROPEJERSEY",
    /** Europe/Kaliningrad */
    Europekaliningrad = "EUROPEKALININGRAD",
    /** Europe/Kiev */
    Europekiev = "EUROPEKIEV",
    /** Europe/Kirov */
    Europekirov = "EUROPEKIROV",
    /** Europe/Kyiv */
    Europekyiv = "EUROPEKYIV",
    /** Europe/Lisbon */
    Europelisbon = "EUROPELISBON",
    /** Europe/Ljubljana */
    Europeljubljana = "EUROPELJUBLJANA",
    /** Europe/London */
    Europelondon = "EUROPELONDON",
    /** Europe/Luxembourg */
    Europeluxembourg = "EUROPELUXEMBOURG",
    /** Europe/Madrid */
    Europemadrid = "EUROPEMADRID",
    /** Europe/Malta */
    Europemalta = "EUROPEMALTA",
    /** Europe/Mariehamn */
    Europemariehamn = "EUROPEMARIEHAMN",
    /** Europe/Minsk */
    Europeminsk = "EUROPEMINSK",
    /** Europe/Monaco */
    Europemonaco = "EUROPEMONACO",
    /** Europe/Moscow */
    Europemoscow = "EUROPEMOSCOW",
    /** Europe/Nicosia */
    Europenicosia = "EUROPENICOSIA",
    /** Europe/Oslo */
    Europeoslo = "EUROPEOSLO",
    /** Europe/Paris */
    Europeparis = "EUROPEPARIS",
    /** Europe/Podgorica */
    Europepodgorica = "EUROPEPODGORICA",
    /** Europe/Prague */
    Europeprague = "EUROPEPRAGUE",
    /** Europe/Riga */
    Europeriga = "EUROPERIGA",
    /** Europe/Rome */
    Europerome = "EUROPEROME",
    /** Europe/Samara */
    Europesamara = "EUROPESAMARA",
    /** Europe/San_Marino */
    Europesanmarino = "EUROPESANMARINO",
    /** Europe/Sarajevo */
    Europesarajevo = "EUROPESARAJEVO",
    /** Europe/Saratov */
    Europesaratov = "EUROPESARATOV",
    /** Europe/Simferopol */
    Europesimferopol = "EUROPESIMFEROPOL",
    /** Europe/Skopje */
    Europeskopje = "EUROPESKOPJE",
    /** Europe/Sofia */
    Europesofia = "EUROPESOFIA",
    /** Europe/Stockholm */
    Europestockholm = "EUROPESTOCKHOLM",
    /** Europe/Tallinn */
    Europetallinn = "EUROPETALLINN",
    /** Europe/Tirane */
    Europetirane = "EUROPETIRANE",
    /** Europe/Tiraspol */
    Europetiraspol = "EUROPETIRASPOL",
    /** Europe/Ulyanovsk */
    Europeulyanovsk = "EUROPEULYANOVSK",
    /** Europe/Uzhgorod */
    Europeuzhgorod = "EUROPEUZHGOROD",
    /** Europe/Vaduz */
    Europevaduz = "EUROPEVADUZ",
    /** Europe/Vatican */
    Europevatican = "EUROPEVATICAN",
    /** Europe/Vienna */
    Europevienna = "EUROPEVIENNA",
    /** Europe/Vilnius */
    Europevilnius = "EUROPEVILNIUS",
    /** Europe/Volgograd */
    Europevolgograd = "EUROPEVOLGOGRAD",
    /** Europe/Warsaw */
    Europewarsaw = "EUROPEWARSAW",
    /** Europe/Zagreb */
    Europezagreb = "EUROPEZAGREB",
    /** Europe/Zaporozhye */
    Europezaporozhye = "EUROPEZAPOROZHYE",
    /** Europe/Zurich */
    Europezurich = "EUROPEZURICH",
    /** Factory */
    Factory = "FACTORY",
    /** GB */
    Gb = "GB",
    /** GB-Eire */
    Gbeire = "GBEIRE",
    /** GMT */
    Gmt = "GMT",
    /** GMT0 */
    Gmt0 = "GMT0",
    /** GMT-0 */
    Gmtminus0 = "GMTMINUS0",
    /** GMT+0 */
    Gmtplus0 = "GMTPLUS0",
    /** Greenwich */
    Greenwich = "GREENWICH",
    /** Hongkong */
    Hongkong = "HONGKONG",
    /** HST */
    Hst = "HST",
    /** Iceland */
    Iceland = "ICELAND",
    /** Indian/Antananarivo */
    Indianantananarivo = "INDIANANTANANARIVO",
    /** Indian/Chagos */
    Indianchagos = "INDIANCHAGOS",
    /** Indian/Christmas */
    Indianchristmas = "INDIANCHRISTMAS",
    /** Indian/Cocos */
    Indiancocos = "INDIANCOCOS",
    /** Indian/Comoro */
    Indiancomoro = "INDIANCOMORO",
    /** Indian/Kerguelen */
    Indiankerguelen = "INDIANKERGUELEN",
    /** Indian/Mahe */
    Indianmahe = "INDIANMAHE",
    /** Indian/Maldives */
    Indianmaldives = "INDIANMALDIVES",
    /** Indian/Mauritius */
    Indianmauritius = "INDIANMAURITIUS",
    /** Indian/Mayotte */
    Indianmayotte = "INDIANMAYOTTE",
    /** Indian/Reunion */
    Indianreunion = "INDIANREUNION",
    /** Iran */
    Iran = "IRAN",
    /** Israel */
    Israel = "ISRAEL",
    /** Jamaica */
    Jamaica = "JAMAICA",
    /** Japan */
    Japan = "JAPAN",
    /** Kwajalein */
    Kwajalein = "KWAJALEIN",
    /** Libya */
    Libya = "LIBYA",
    /** localtime */
    Localtime = "LOCALTIME",
    /** MET */
    Met = "MET",
    /** Mexico/BajaNorte */
    Mexicobajanorte = "MEXICOBAJANORTE",
    /** Mexico/BajaSur */
    Mexicobajasur = "MEXICOBAJASUR",
    /** Mexico/General */
    Mexicogeneral = "MEXICOGENERAL",
    /** MST */
    Mst = "MST",
    /** MST7MDT */
    Mst7Mdt = "MST7MDT",
    /** Navajo */
    Navajo = "NAVAJO",
    /** NZ */
    Nz = "NZ",
    /** NZ-CHAT */
    Nzchat = "NZCHAT",
    /** Pacific/Apia */
    Pacificapia = "PACIFICAPIA",
    /** Pacific/Auckland */
    Pacificauckland = "PACIFICAUCKLAND",
    /** Pacific/Bougainville */
    Pacificbougainville = "PACIFICBOUGAINVILLE",
    /** Pacific/Chatham */
    Pacificchatham = "PACIFICCHATHAM",
    /** Pacific/Chuuk */
    Pacificchuuk = "PACIFICCHUUK",
    /** Pacific/Easter */
    Pacificeaster = "PACIFICEASTER",
    /** Pacific/Efate */
    Pacificefate = "PACIFICEFATE",
    /** Pacific/Enderbury */
    Pacificenderbury = "PACIFICENDERBURY",
    /** Pacific/Fakaofo */
    Pacificfakaofo = "PACIFICFAKAOFO",
    /** Pacific/Fiji */
    Pacificfiji = "PACIFICFIJI",
    /** Pacific/Funafuti */
    Pacificfunafuti = "PACIFICFUNAFUTI",
    /** Pacific/Galapagos */
    Pacificgalapagos = "PACIFICGALAPAGOS",
    /** Pacific/Gambier */
    Pacificgambier = "PACIFICGAMBIER",
    /** Pacific/Guadalcanal */
    Pacificguadalcanal = "PACIFICGUADALCANAL",
    /** Pacific/Guam */
    Pacificguam = "PACIFICGUAM",
    /** Pacific/Honolulu */
    Pacifichonolulu = "PACIFICHONOLULU",
    /** Pacific/Johnston */
    Pacificjohnston = "PACIFICJOHNSTON",
    /** Pacific/Kanton */
    Pacifickanton = "PACIFICKANTON",
    /** Pacific/Kiritimati */
    Pacifickiritimati = "PACIFICKIRITIMATI",
    /** Pacific/Kosrae */
    Pacifickosrae = "PACIFICKOSRAE",
    /** Pacific/Kwajalein */
    Pacifickwajalein = "PACIFICKWAJALEIN",
    /** Pacific/Majuro */
    Pacificmajuro = "PACIFICMAJURO",
    /** Pacific/Marquesas */
    Pacificmarquesas = "PACIFICMARQUESAS",
    /** Pacific/Midway */
    Pacificmidway = "PACIFICMIDWAY",
    /** Pacific/Nauru */
    Pacificnauru = "PACIFICNAURU",
    /** Pacific/Niue */
    Pacificniue = "PACIFICNIUE",
    /** Pacific/Norfolk */
    Pacificnorfolk = "PACIFICNORFOLK",
    /** Pacific/Noumea */
    Pacificnoumea = "PACIFICNOUMEA",
    /** Pacific/Pago_Pago */
    Pacificpagopago = "PACIFICPAGOPAGO",
    /** Pacific/Palau */
    Pacificpalau = "PACIFICPALAU",
    /** Pacific/Pitcairn */
    Pacificpitcairn = "PACIFICPITCAIRN",
    /** Pacific/Pohnpei */
    Pacificpohnpei = "PACIFICPOHNPEI",
    /** Pacific/Ponape */
    Pacificponape = "PACIFICPONAPE",
    /** Pacific/Port_Moresby */
    Pacificportmoresby = "PACIFICPORTMORESBY",
    /** Pacific/Rarotonga */
    Pacificrarotonga = "PACIFICRAROTONGA",
    /** Pacific/Saipan */
    Pacificsaipan = "PACIFICSAIPAN",
    /** Pacific/Samoa */
    Pacificsamoa = "PACIFICSAMOA",
    /** Pacific/Tahiti */
    Pacifictahiti = "PACIFICTAHITI",
    /** Pacific/Tarawa */
    Pacifictarawa = "PACIFICTARAWA",
    /** Pacific/Tongatapu */
    Pacifictongatapu = "PACIFICTONGATAPU",
    /** Pacific/Truk */
    Pacifictruk = "PACIFICTRUK",
    /** Pacific/Wake */
    Pacificwake = "PACIFICWAKE",
    /** Pacific/Wallis */
    Pacificwallis = "PACIFICWALLIS",
    /** Pacific/Yap */
    Pacificyap = "PACIFICYAP",
    /** Poland */
    Poland = "POLAND",
    /** Portugal */
    Portugal = "PORTUGAL",
    /** PRC */
    Prc = "PRC",
    /** PST8PDT */
    Pst8Pdt = "PST8PDT",
    /** ROC */
    Roc = "ROC",
    /** ROK */
    Rok = "ROK",
    /** Singapore */
    Singapore = "SINGAPORE",
    /** SystemV/AST4 */
    Systemvast4 = "SYSTEMVAST4",
    /** SystemV/AST4ADT */
    Systemvast4Adt = "SYSTEMVAST4ADT",
    /** SystemV/CST6 */
    Systemvcst6 = "SYSTEMVCST6",
    /** SystemV/CST6CDT */
    Systemvcst6Cdt = "SYSTEMVCST6CDT",
    /** SystemV/EST5 */
    Systemvest5 = "SYSTEMVEST5",
    /** SystemV/EST5EDT */
    Systemvest5Edt = "SYSTEMVEST5EDT",
    /** SystemV/HST10 */
    Systemvhst10 = "SYSTEMVHST10",
    /** SystemV/MST7 */
    Systemvmst7 = "SYSTEMVMST7",
    /** SystemV/MST7MDT */
    Systemvmst7Mdt = "SYSTEMVMST7MDT",
    /** SystemV/PST8 */
    Systemvpst8 = "SYSTEMVPST8",
    /** SystemV/PST8PDT */
    Systemvpst8Pdt = "SYSTEMVPST8PDT",
    /** SystemV/YST9 */
    Systemvyst9 = "SYSTEMVYST9",
    /** SystemV/YST9YDT */
    Systemvyst9Ydt = "SYSTEMVYST9YDT",
    /** Turkey */
    Turkey = "TURKEY",
    /** UCT */
    Uct = "UCT",
    /** Universal */
    Universal = "UNIVERSAL",
    /** US/Alaska */
    Usalaska = "USALASKA",
    /** US/Aleutian */
    Usaleutian = "USALEUTIAN",
    /** US/Arizona */
    Usarizona = "USARIZONA",
    /** US/Central */
    Uscentral = "USCENTRAL",
    /** US/Eastern */
    Useastern = "USEASTERN",
    /** US/East-Indiana */
    Useastindiana = "USEASTINDIANA",
    /** US/Hawaii */
    Ushawaii = "USHAWAII",
    /** US/Indiana-Starke */
    Usindianastarke = "USINDIANASTARKE",
    /** US/Michigan */
    Usmichigan = "USMICHIGAN",
    /** US/Mountain */
    Usmountain = "USMOUNTAIN",
    /** US/Pacific */
    Uspacific = "USPACIFIC",
    /** US/Samoa */
    Ussamoa = "USSAMOA",
    /** UTC */
    Utc = "UTC",
    /** WET */
    Wet = "WET",
    /** W-SU */
    Wsu = "WSU",
    /** Zulu */
    Zulu = "ZULU"
}
/** The input object that defines the fields for the toggleAllNotifications mutation. */
export type ToggleAllNotificationsMutationInput = {
    /** Whether to mark these notifications as read or unread. */
    read?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the toggleNotifications mutation. */
export type ToggleNotificationsMutationInput = {
    /** A list of notification IDs. */
    notification_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Whether to mark these notifications as read or unread. */
    read?: InputMaybe<Scalars['Boolean']['input']>;
};
/** TowerCoverage integration. */
export type TowercoverageConfiguration = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TowercoverageConfiguration';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The status of an account. */
    account_status?: Maybe<AccountStatus>;
    /** The ID of an AccountStatus. */
    account_status_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The account type. */
    account_type?: Maybe<AccountType>;
    /** The ID of an AccountType. */
    account_type_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An API key. */
    api_key?: Maybe<Scalars['String']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A phone number type (e.g. mobile, home, work.) */
    phone_number_type?: Maybe<PhoneNumberType>;
    /** The ID of the PhoneNumberType associated with this phone number. */
    phone_number_type_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** TowerCoverage integration. */
export type TowercoverageConfigurationAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** TowerCoverage integration. */
export type TowercoverageConfigurationAccount_StatusArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** TowerCoverage integration. */
export type TowercoverageConfigurationAccount_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<AccountTypeEnum>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** TowerCoverage integration. */
export type TowercoverageConfigurationLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** TowerCoverage integration. */
export type TowercoverageConfigurationNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** TowerCoverage integration. */
export type TowercoverageConfigurationPhone_Number_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_capable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A TowerCoverage submission. */
export type TowercoverageSubmission = AccessloggableInterface & AddressableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TowercoverageSubmission';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A geographical address. */
    addresses: AddressConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An email address. */
    email_address?: Maybe<Scalars['EmailAddress']['output']>;
    /** A file. */
    files: FileConnection;
    /** The full name. */
    full_name?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The message. */
    message: Scalars['Text']['output'];
    /** A note about this TowerCoverage submission. */
    note?: Maybe<Scalars['Text']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** A telephone number. */
    phone_number?: Maybe<Scalars['Numeric']['output']>;
    /** The raw XML. */
    raw_xml: Scalars['Text']['output'];
    /** The time that the TowerCoverage submission was received. */
    received_at: Scalars['Datetime']['output'];
    /** The serviceable address. */
    serviceable_address?: Maybe<Address>;
    /** The ID of the serviceable address to use for this account. */
    serviceable_address_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Will be true if the operation succeeded. */
    success: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A TowerCoverage submission. */
export type TowercoverageSubmissionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A TowerCoverage submission. */
export type TowercoverageSubmissionAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A TowerCoverage submission. */
export type TowercoverageSubmissionFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A TowerCoverage submission. */
export type TowercoverageSubmissionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A TowerCoverage submission. */
export type TowercoverageSubmissionNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A TowerCoverage submission. */
export type TowercoverageSubmissionServiceable_AddressArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The connection wrapper around the `TowercoverageSubmissionConnection` type. */
export type TowercoverageSubmissionConnection = {
    __typename: 'TowercoverageSubmissionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TowercoverageSubmission>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** types.transaction */
export type Transaction = {
    __typename: 'Transaction';
    /** A customer account. */
    account: Account;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The type. */
    amount: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The date and time of the transaction. */
    datetime?: Maybe<Scalars['Datetime']['output']>;
    /** A debit. */
    debit?: Maybe<Debit>;
    /** A description for the transaction. */
    description?: Maybe<Scalars['String']['output']>;
    /** A discount. */
    discount?: Maybe<Discount>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A payment. */
    payment?: Maybe<Payment>;
    /** The balance in relation to prior transactions. */
    running_balance: Scalars['Int']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Whether or not this was successful. */
    successful?: Maybe<Scalars['Boolean']['output']>;
    /** The total of all taxes on this transaction. */
    tax_total: Scalars['Int']['output'];
    /** The type of transaction this is. */
    type: TransactionType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** The connection wrapper around the `Transaction` type. */
export type TransactionConnection = {
    __typename: 'TransactionConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Transaction>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A type of transaction. */
export type TransactionInterface = {
    /** The ID of an Account. */
    account_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: Maybe<Scalars['Int']['output']>;
    /** The ID of the company that this entity operates under. */
    company_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description?: Maybe<Scalars['String']['output']>;
    /** A general ledger code. */
    general_ledger_code?: Maybe<Scalars['String']['output']>;
    /** A general ledger code description. */
    general_ledger_code_description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The quantity for this service. */
    quantity?: Maybe<Scalars['Int']['output']>;
    /** The ID of a Service. */
    service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The name of a service. */
    service_name?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The type. */
    type?: Maybe<ServiceType>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** The ID of the user who created this transaction. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
};
/** A type of transaction. */
export declare enum TransactionType {
    /** Debit. */
    Debit = "DEBIT",
    /** Discount. */
    Discount = "DISCOUNT",
    /** Payment. */
    Payment = "PAYMENT"
}
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TriggeredEmail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Accounts exceeding a data usage triggered email. */
    accounts_exceeding_usage_triggers: AccountConnection;
    /** Whether or not child accounts are allowed. */
    allow_children: Scalars['Boolean']['output'];
    /** The count associated with this `TriggeredEmail`. This is defined by the trigger, and could be something like a number of days, months, gigabytes, etc. */
    count?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A categorization of an `Email` by type. */
    email_categories: EmailCategoryConnection;
    /** An email message. */
    email_message?: Maybe<EmailMessage>;
    /** The ID of an EmailMessage. */
    email_message_id: Scalars['Int64Bit']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoices: InvoiceConnection;
    /** The type of a `Job`. */
    job_type?: Maybe<JobType>;
    /** The ID of a `JobType`. */
    job_type_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A categorization of a message by type. */
    message_categories: MessageCategoryConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** If an item is protected, it cannot be modified or deleted. */
    protected: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The trigger for this message. */
    trigger: EmailTrigger;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailAccounts_Exceeding_Usage_TriggersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailEmail_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailEmail_MessageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    saved_message_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailInvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailJob_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailMessage_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An `Email` that is sent when a particular event occurs. */
export type TriggeredEmailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `TriggeredEmailConnection` type. */
export type TriggeredEmailConnection = {
    __typename: 'TriggeredEmailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TriggeredEmail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessage = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'TriggeredMessage';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** Accounts exceeding a data usage triggered email. */
    accounts_exceeding_usage_triggers: AccountConnection;
    /** Whether or not child accounts are allowed. */
    allow_children: Scalars['Boolean']['output'];
    /** The count associated with this `TriggeredMessage`. This is defined by the trigger, and could be something like a number of days, months, gigabytes, etc. */
    count?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A categorization of an `Email` by type. */
    email_categories: EmailCategoryConnection;
    /** An email message. */
    email_message?: Maybe<EmailMessage>;
    /** The ID of an EmailMessage. */
    email_message_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An invoice. */
    invoices: InvoiceConnection;
    /** The type of a `Job`. */
    job_type?: Maybe<JobType>;
    /** The ID of a `JobType`. */
    job_type_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A log entry. */
    logs: LogConnection;
    /** A categorization of a message by type. */
    message_categories: MessageCategoryConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** If an item is protected, it cannot be modified or deleted. */
    protected: Scalars['Boolean']['output'];
    /** An external reference to a dynamic template at SendGrid. */
    sendgrid_dynamic_template_external_references: SendgridDynamicTemplateExternalReferenceConnection;
    /** A signature. */
    signature?: Maybe<Signature>;
    /** The ID of a signature. */
    signature_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An SMS message. */
    sms_message?: Maybe<SmsMessage>;
    /** The ID of the SMS message. */
    sms_message_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The trigger for this message. */
    trigger: MessageTrigger;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageAccounts_Exceeding_Usage_TriggersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageEmail_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageEmail_MessageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    from_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    saved_message_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageInvoicesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    auto_pay_attempts?: InputMaybe<Scalars['Int']['input']>;
    auto_pay_date?: InputMaybe<Scalars['Date']['input']>;
    child_invoice_remaining_due?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    delinquency_date?: InputMaybe<Scalars['Date']['input']>;
    delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    end_date?: InputMaybe<Scalars['Date']['input']>;
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    late_fee_applied?: InputMaybe<Scalars['Boolean']['input']>;
    late_fee_only?: InputMaybe<Scalars['Boolean']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    pending_email?: InputMaybe<Scalars['Boolean']['input']>;
    remaining_due?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<Scalars['String']['input']>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    total_debits?: InputMaybe<Scalars['Int']['input']>;
    total_taxes?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    void?: InputMaybe<Scalars['Boolean']['input']>;
    voided_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageJob_TypeArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    action_on_completion?: InputMaybe<JobTypeAction>;
    action_on_failure?: InputMaybe<JobTypeAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icon?: InputMaybe<Icon>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageMessage_CategoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    default?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageSendgrid_Dynamic_Template_External_ReferencesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_message_content_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sendgrid_identifier?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    triggered_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageSignatureArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    department_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mass_default?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sms_signature?: InputMaybe<SmsContactPrefix>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    triggered_default?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A message that is sent when a specific event occurs. */
export type TriggeredMessageSms_MessageArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_trigger?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `TriggeredMessageConnection` type. */
export type TriggeredMessageConnection = {
    __typename: 'TriggeredMessageConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<TriggeredMessage>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the unclaimInventoryItems mutation. */
export type UnclaimInventoryItemsMutationInput = {
    /** The ID of an `InventoryItem`. */
    ids: Array<Scalars['Int64Bit']['input']>;
};
/** A MAC address that is not recorded in the inventory system. */
export type UninventoriedMacAddress = AccessloggableInterface & IpassignmentableInterface & LoggableInterface & NoteableInterface & SearchableInterface & {
    __typename: 'UninventoriedMacAddress';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A customer account. */
    account?: Maybe<Account>;
    /** The ID of an Account. */
    account_id: Scalars['Int64Bit']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A historical record of an IP assignment. */
    ip_assignment_histories: IpAssignmentHistoryConnection;
    /** An IP address assignment. */
    ip_assignments: IpAssignmentConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A MAC address. */
    mac_address: Scalars['MacAddress']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** A MAC address that is not recorded in the inventory system. */
export type UninventoriedMacAddressAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A MAC address that is not recorded in the inventory system. */
export type UninventoriedMacAddressAccountArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    activation_date?: InputMaybe<Scalars['Date']['input']>;
    activation_time?: InputMaybe<Scalars['Time']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_percentage?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_delinquent?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    next_recurring_charge_amount?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A MAC address that is not recorded in the inventory system. */
export type UninventoriedMacAddressIp_Assignment_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    assigned_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_assignment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    ipassignmenthistoryable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmenthistoryable_type?: InputMaybe<IpassignmenthistoryableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    removed_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    unique_identifier?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A MAC address that is not recorded in the inventory system. */
export type UninventoriedMacAddressIp_AssignmentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ip_pool_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    paginator?: InputMaybe<Paginator>;
    reference?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    subnet_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A MAC address that is not recorded in the inventory system. */
export type UninventoriedMacAddressLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A MAC address that is not recorded in the inventory system. */
export type UninventoriedMacAddressNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `UninventoriedMacAddressConnection` type. */
export type UninventoriedMacAddressConnection = {
    __typename: 'UninventoriedMacAddressConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<UninventoriedMacAddress>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The unique setting of a field. */
export declare enum Uniqueness {
    /** The field must be unique amongst all other fields of the same type. */
    Global = "GLOBAL",
    /** The value of the field must be unique, but only in the context of other values entered into this field specifically. */
    Local = "LOCAL",
    /** The value of the field is not required to be unique. */
    None = "NONE"
}
/** The unit designator (APT, STE, UNIT,...) associated with an address. */
export declare enum UnitDesignator {
    /** Apartment */
    Apt = "APT",
    /** Building */
    Bldg = "BLDG",
    /** Department */
    Dept = "DEPT",
    /** Floor */
    Fl = "FL",
    /** Hanger */
    Hngr = "HNGR",
    /** Key */
    Key = "KEY",
    /** Lot */
    Lot = "LOT",
    /** Pier */
    Pier = "PIER",
    /** Room */
    Rm = "RM",
    /** Slip */
    Slip = "SLIP",
    /** Space */
    Spc = "SPC",
    /** Suite */
    Ste = "STE",
    /** Stop */
    Stop = "STOP",
    /** Trailer */
    Trlr = "TRLR",
    /** Unit */
    Unit = "UNIT"
}
/** The system of units. */
export declare enum Units {
    /** Imperial. */
    Imperial = "IMPERIAL",
    /** Metric. */
    Metric = "METRIC"
}
/** The input object that defines the fields for the unlinkEntityFromTicket mutation. */
export type UnlinkEntityFromTicketMutationInput = {
    /** The entity ID to unlink. */
    linked_entityable_id: Scalars['Int64Bit']['input'];
    /** The entity type to unlink. */
    linked_entityable_type: TicketLinkableEntityType;
};
/** The input object that defines the fields for the updateAccountBillingParameter mutation. */
export type UpdateAccountBillingParameterMutationInput = {
    /** Whether or not to aggregate invoice taxes instead of printing with each charge. */
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to aggregate linked debits on Anchor invoices. */
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    /** If `invoice_day` is not null, this allows you to select whether `auto_pay_days` is calculated from the billing day, or the invoice day. */
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    /** The number of days after `auto_pay_day` that auto pay runs for an invoice. */
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    /** The day that billing runs. */
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether the account bill and invoice day are fixed, the account activation day is used as bill day, or the account activation day is used as the invoice day. */
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    /** The type of bill this account receives. */
    bill_mode?: InputMaybe<BillMode>;
    /** If `switch_status_after_delinquency` is `true`, then this is the number of days of delinquency to allow before the status switch. */
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    /** If `switch_status_after_delinquency` is true, this is the account status that the account will be moved into after `days_of_delinquency_for_status_switch` days of delinquency. */
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If `switch_status_after_delinquency` is `true`, then this is the status the account will be moved back into if delinquency is cleared while the account is set to the `delinquency_account_status_id` account status. */
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The number of days after the invoice date that it is due. */
    due_days?: InputMaybe<Scalars['Int']['input']>;
    /** If `invoice_day` is not null, this allows you to select whether `due_days` is calculated from the billing day, or the invoice day. */
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    /** The number of days after the invoice due date that the invoice is marked delinquent. */
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    /** A temporary override that stops the account becoming delinquent until this date. */
    grace_until?: InputMaybe<Scalars['Date']['input']>;
    /** The day that automatic billing invoices are generated for. If this is `null`, then `bill_day` is used. */
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not this account participates in the federal Lifeline program. */
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of months to bill at a time. */
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    /** The next date this service will bill. If this is null, it will bill on the next account billing date. */
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    /** Whether this account receives a printed invoice. */
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not changing an account bill day is prorated by default. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this account should be moved into another status after being delinquent for a preset period. */
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this account is tax exempt. */
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `delinquency_removal_account_status_id` to null. */
    unset_delinquency_removal_account_status_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `grace_until` to null. */
    unset_grace_until?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `invoice_day` to null. */
    unset_invoice_day?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateAccountCalixServiceDetail mutation. */
export type UpdateAccountCalixServiceDetailMutationInput = {
    /** Custom JSON. */
    custom_json?: InputMaybe<Scalars['String']['input']>;
    /** C-VLAN. */
    cvlan?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Global VLAN. */
    global_vlan?: InputMaybe<Scalars['String']['input']>;
    /** ONT Port ID. */
    ont_port_id?: InputMaybe<Scalars['String']['input']>;
    /** Policy Map. */
    policy_map?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `custom_json` to null. */
    unset_custom_json?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `cvlan` to null. */
    unset_cvlan?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `global_vlan` to null. */
    unset_global_vlan?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ont_port_id` to null. */
    unset_ont_port_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `policy_map` to null. */
    unset_policy_map?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `vlan` to null. */
    unset_vlan?: InputMaybe<Scalars['Boolean']['input']>;
    /** Use Custom JSON. */
    use_custom_json?: InputMaybe<Scalars['Boolean']['input']>;
    /** VLAN. */
    vlan?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateAccountGroup mutation. */
export type UpdateAccountGroupMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateAccount mutation. */
export type UpdateAccountMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of an AccountStatus. */
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** If you are changing the account status from an active status to an inactive status, this allows you to override the system default proration policy, if you have the appropriate permissions. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of the serviceable address to use for this account. */
    serviceable_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Setting this value to `true` will set `serviceable_address_id` to null. */
    unset_serviceable_address_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateAccountService mutation. */
export type UpdateAccountServiceMutationInput = {
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Overriding the service name will alter the service name printed on an invoice. */
    name_override?: InputMaybe<Scalars['String']['input']>;
    /** The next date this service will bill. If this is null, it will bill on the next account billing date. */
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: InputMaybe<Scalars['Int']['input']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The quantity for this service. */
    quantity?: InputMaybe<Scalars['Int']['input']>;
    /** Service metadata allows you to store individualized information about a service, as it relates to a specific account. For example, on a domain renewal service, you could store the domain name as metadata. */
    service_metadata?: InputMaybe<Array<InputMaybe<AccountServiceMetadataMutationInput>>>;
    /** Setting this value to `true` will set `name_override` to null. */
    unset_name_override?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `next_bill_date` to null. */
    unset_next_bill_date?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `price_override` to null. */
    unset_price_override?: InputMaybe<Scalars['Boolean']['input']>;
    /** Unset the values inside service metadata fields for this `AccountService`. */
    unset_service_metadata?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateAccountStatus mutation. */
export type UpdateAccountStatusMutationInput = {
    /** Whether or not this status activates the account. */
    activates_account?: InputMaybe<Scalars['Boolean']['input']>;
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** An icon. */
    icon?: InputMaybe<Icon>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateAccountType mutation. */
export type UpdateAccountTypeMutationInput = {
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** An icon. */
    icon?: InputMaybe<Icon>;
    /** The ID of an `InvoiceMessage`. */
    invoice_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The type. */
    type?: InputMaybe<AccountTypeEnum>;
    /** Setting this value to `true` will set `invoice_message_id` to null. */
    unset_invoice_message_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateAccountVoiceServiceDetail mutation. */
export type UpdateAccountVoiceServiceDetailMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: InputMaybe<Scalars['Int']['input']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** The quantity for this service. */
    quantity?: InputMaybe<Scalars['Int']['input']>;
    /** Setting this value to `true` will set `price_override` to null. */
    unset_price_override?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `price_override_reason` to null. */
    unset_price_override_reason?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateAddressList mutation. */
export type UpdateAddressListMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The types of account statuses for accounts that are part of this grouping. */
    account_status?: InputMaybe<AddressListAccountStatus>;
    /** IDs of `AccountStatus`es. */
    account_status_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of data `Service`s. */
    data_service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The delinquency state for accounts that are part of this grouping. */
    delinquency?: InputMaybe<AddressListDelinquency>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A list of IDs of `UsageBasedBillingPolicy` objects. */
    usage_based_billing_policy_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateAddressStatus mutation. */
export type UpdateAddressStatusMutationInput = {
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** An icon. */
    icon?: InputMaybe<Icon>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateAdjustmentService mutation. */
export type UpdateAdjustmentServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount that can be adjusted using this service within the period defined in `adjustment_service_days`. */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application?: InputMaybe<ServiceApplication>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The period of time in which transactions are tracked to calculate against the total defined in `adjustment_service_amount`. */
    days?: InputMaybe<Scalars['Int']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The IDs of `Role`s that are allowed to use this adjustment service. */
    role_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** Setting this value to `true` will set `amount` to null. */
    unset_amount?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `days` to null. */
    unset_days?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateAlertingRotationDay mutation. */
export type UpdateAlertingRotationDayMutationInput = {
    /** A day. */
    day?: InputMaybe<Day>;
    /** The end time for the day. */
    end_time?: InputMaybe<Scalars['Time']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The start time for the day. */
    start_time?: InputMaybe<Scalars['Time']['input']>;
};
/** The input object that defines the fields for the updateAlertingRotation mutation. */
export type UpdateAlertingRotationMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Whether to include all account equipment in this rotation. */
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether to include all inventory models in this rotation. */
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether to include all network site equipment in this rotation. */
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of minutes a device can be in a down state before generating alert. */
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    /** The number of minutes a device can remain in a down state before sending a repeat alert. */
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether this repeats forever or not. */
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `InventoryModel`s. */
    inventory_model_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** IDs of `NetworkSite`s. */
    network_site_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The number of times this repeats. */
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    /** The start. */
    start?: InputMaybe<Scalars['Date']['input']>;
    /** Setting this value to `true` will set `repetitions` to null. */
    unset_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The number of minutes a device can be in a warning state before generating alert. */
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    /** The number of minutes a device can remain in a warning state before sending a repeat alert. */
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    /** The number of weeks between repetitions. */
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateApplicationFirewallRule mutation. */
export type UpdateApplicationFirewallRuleMutationInput = {
    /** A human readable description. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
};
/** The input object that defines the fields for the updateAuthProvider mutation. */
export type UpdateAuthProviderMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateAvalaraTaxDefinition mutation. */
export type UpdateAvalaraTaxDefinitionMutationInput = {
    /** Whether or not this entity is archived. */
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    /** The service name as defined by Avalara. */
    service_name?: InputMaybe<Scalars['String']['input']>;
    /** The service type as defined by Avalara. */
    service_type?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateBankAccount mutation. */
export type UpdateBankAccountMutationInput = {
    /** The billing address for the payment method. */
    address?: InputMaybe<CreateAddressMutationInput>;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    /** The type of bank account this is. */
    bank_account_type?: InputMaybe<BankAccountType>;
    /** The name on the account. */
    name_on_account?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateBankAccountProcessor mutation. */
export type UpdateBankAccountProcessorMutationInput = {
    /** The credentials to use to authenticate against the bank account provider. */
    bank_account_processor_credentials?: InputMaybe<Array<InputMaybe<BankAccountProcessorCredentialInput>>>;
    /** IDs of `Companies`. */
    company_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is the primary provider to use when transacting against newly added bank accounts. */
    primary?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateBillingDefault mutation. */
export type UpdateBillingDefaultLinkedInput = {
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not to aggregate invoice taxes instead of printing with each charge. */
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to aggregate linked debits on Anchor invoices. */
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    /** Determines if delinquency settings on an Anchor default is applied only to the Anchor account or the Linked accounts as well. */
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    /** If `invoice_day` is not null, this allows you to select whether `auto_pay_days` is calculated from the billing day, or the invoice day. */
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    /** The number of days after `auto_pay_day` that auto pay runs for an invoice. */
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    /** The day that billing runs. */
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether the account bill and invoice day are fixed, the account activation day is used as bill day, or the account activation day is used as the invoice day. */
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    /** The type of bill this account receives. */
    bill_mode?: InputMaybe<BillMode>;
    /** Services specific to a Linked billing default. Includes the service, name override, price override, and anchor allowance of each. */
    billing_services?: InputMaybe<Array<InputMaybe<BillingServiceMutationInput>>>;
    /** If `switch_status_after_delinquency` is `true`, then this is the number of days of delinquency to allow before the status switch. */
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    /** If `switch_status_after_delinquency` is true, this is the account status that the account will be moved into after `days_of_delinquency_for_status_switch` days of delinquency. */
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If `switch_status_after_delinquency` is `true`, then this is the status the account will be moved back into if delinquency is cleared while the account is set to the `delinquency_account_status_id` account status. */
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The number of days after the invoice date that it is due. */
    due_days?: InputMaybe<Scalars['Int']['input']>;
    /** If `invoice_day` is not null, this allows you to select whether `due_days` is calculated from the billing day, or the invoice day. */
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    /** Whether or not to use a fixed bill day, versus anniversary day billing. Use `bill_day_mode` for further customization. */
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of days after the invoice due date that the invoice is marked delinquent. */
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    /** The day that automatic billing invoices are generated for. If this is `null`, then `bill_day` is used. */
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not this account participates in the federal Lifeline program. */
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of months to bill at a time. */
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** Whether this account receives a printed invoice. */
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this account should be moved into another status after being delinquent for a preset period. */
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this account is tax exempt. */
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `account_type_id` to null. */
    unset_account_type_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `bill_day` to null. */
    unset_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `delinquency_removal_account_status_id` to null. */
    unset_delinquency_removal_account_status_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `invoice_day` to null. */
    unset_invoice_day?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateBillingDefault mutation. */
export type UpdateBillingDefaultMutationInput = {
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not to aggregate invoice taxes instead of printing with each charge. */
    aggregate_invoice_taxes?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to aggregate linked debits on Anchor invoices. */
    aggregate_linked_debits?: InputMaybe<Scalars['Boolean']['input']>;
    /** Determines if delinquency settings on an Anchor default is applied only to the Anchor account or the Linked accounts as well. */
    anchor_delinquency_logic?: InputMaybe<AnchorDelinquencyLogic>;
    /** If `invoice_day` is not null, this allows you to select whether `auto_pay_days` is calculated from the billing day, or the invoice day. */
    auto_pay_day?: InputMaybe<BillingParameterDayOption>;
    /** The number of days after `auto_pay_day` that auto pay runs for an invoice. */
    auto_pay_days?: InputMaybe<Scalars['Int']['input']>;
    /** The day that billing runs. */
    bill_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether the account bill and invoice day are fixed, the account activation day is used as bill day, or the account activation day is used as the invoice day. */
    bill_day_mode?: InputMaybe<BillDayModeOption>;
    /** The type of bill this account receives. */
    bill_mode?: InputMaybe<BillMode>;
    /** Services specific to a Linked billing default. Includes the service, name override, price override, and anchor allowance of each. */
    billing_services?: InputMaybe<Array<InputMaybe<BillingServiceMutationInput>>>;
    /** If `switch_status_after_delinquency` is `true`, then this is the number of days of delinquency to allow before the status switch. */
    days_of_delinquency_for_status_switch?: InputMaybe<Scalars['Int']['input']>;
    /** If `switch_status_after_delinquency` is true, this is the account status that the account will be moved into after `days_of_delinquency_for_status_switch` days of delinquency. */
    delinquency_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If `switch_status_after_delinquency` is `true`, then this is the status the account will be moved back into if delinquency is cleared while the account is set to the `delinquency_account_status_id` account status. */
    delinquency_removal_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The number of days after the invoice date that it is due. */
    due_days?: InputMaybe<Scalars['Int']['input']>;
    /** If `invoice_day` is not null, this allows you to select whether `due_days` is calculated from the billing day, or the invoice day. */
    due_days_day?: InputMaybe<BillingParameterDayOption>;
    /** Whether or not to use a fixed bill day, versus anniversary day billing. Use `bill_day_mode` for further customization. */
    fixed_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of days after the invoice due date that the invoice is marked delinquent. */
    grace_days?: InputMaybe<Scalars['Int']['input']>;
    /** The day that automatic billing invoices are generated for. If this is `null`, then `bill_day` is used. */
    invoice_day?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not this account participates in the federal Lifeline program. */
    lifeline?: InputMaybe<Scalars['Boolean']['input']>;
    /** The linked billing defaults for the anchor. */
    linked_billing_default?: InputMaybe<UpdateBillingDefaultLinkedInput>;
    /** The number of months to bill at a time. */
    months_to_bill?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** Whether this account receives a printed invoice. */
    print_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this account should be moved into another status after being delinquent for a preset period. */
    switch_status_after_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this account is tax exempt. */
    tax_exempt?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `account_type_id` to null. */
    unset_account_type_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `bill_day` to null. */
    unset_bill_day?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `delinquency_removal_account_status_id` to null. */
    unset_delinquency_removal_account_status_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `invoice_day` to null. */
    unset_invoice_day?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateBillingSettings mutation. */
export type UpdateBillingSettingsMutationInput = {
    /** Accounts of these types will be excluded from late fee application. */
    account_type_ids_to_exclude_from_late_fees?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** How often the accounting period automatically closes. */
    accounting_period_auto_close?: InputMaybe<AccountingPeriodCloseOption>;
    /** The date that the accounting period was closed. */
    accounting_period_close_date?: InputMaybe<Scalars['Date']['input']>;
    /** Always round taxes up. */
    always_round_taxes_up?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to apply a late fee to past due invoices. */
    apply_late_fees?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether late fees should be applied to child invoices. */
    apply_late_fees_to_child_invoices?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of times to attempt a bank account automatic payment. */
    autopay_bank_account_attempts?: InputMaybe<Scalars['Int']['input']>;
    /** The number of days between retries for bank account automatic payments. */
    autopay_bank_account_retry_interval_in_days?: InputMaybe<Scalars['Int']['input']>;
    /** The number of times to attempt a credit card automatic payment. */
    autopay_credit_card_attempts?: InputMaybe<Scalars['Int']['input']>;
    /** The number of days between retries for credit card automatic payments. */
    autopay_credit_card_retry_interval_in_days?: InputMaybe<Scalars['Int']['input']>;
    /** Whether the automatic payment process should just run the invoice amount, or the entire amount due on the account. */
    autopay_runs_entire_amount_due?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not the daily billing process is enabled. */
    daily_billing?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of days after the due date on a delinquent invoice for a late fee to be applied. */
    days_after_invoice_due_for_late_fee_application?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not to delete expired credit cards from Sonar. */
    delete_expired_credit_cards?: InputMaybe<Scalars['Boolean']['input']>;
    /** Friday. */
    delinquency_check_day_friday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Monday. */
    delinquency_check_day_monday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Saturday. */
    delinquency_check_day_saturday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Sunday. */
    delinquency_check_day_sunday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Thursday. */
    delinquency_check_day_thursday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Tuesday. */
    delinquency_check_day_tuesday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Wednesday. */
    delinquency_check_day_wednesday?: InputMaybe<Scalars['Boolean']['input']>;
    /** The `AccountStatus` for disconnected accounts. */
    disconnect_account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether to exclude inactive accounts from late fee application. */
    exclude_inactive_accounts_from_late_fees?: InputMaybe<Scalars['Boolean']['input']>;
    /** Generate an invoice on an account when it is first activated, if there are any uninvoiced debits. */
    generate_invoice_on_initial_activation?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether to invoice and email late fees immediately, or add them to the next invoice. */
    invoice_and_email_late_fees_immediately?: InputMaybe<Scalars['Boolean']['input']>;
    /** The minimum amount an invoice must be past due for a late fee to be applied. */
    late_fee_minimum_delinquency_amount?: InputMaybe<Scalars['Int']['input']>;
    /** The mode for late fee application. */
    late_fee_mode?: InputMaybe<LateFeeMode>;
    /** If late fees are applied as a percentage, the percentage of the past due balance to apply. */
    late_fee_percentage?: InputMaybe<Scalars['Float']['input']>;
    /** The ID of a one time `Service` to use for late fee application. */
    late_fee_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The minimum account an invoice must be delinquent for before being flagged delinquent. */
    minimum_amount_due_for_delinquency?: InputMaybe<Scalars['Int']['input']>;
    /** The smallest bank account payment amount allowed. */
    minimum_bank_account_payment?: InputMaybe<Scalars['Int']['input']>;
    /** The smallest credit card payment amount allowed. */
    minimum_credit_card_payment?: InputMaybe<Scalars['Int']['input']>;
    /** Printed invoice batch duplex. */
    printed_invoice_batch_duplex?: InputMaybe<Scalars['Boolean']['input']>;
    /** The service ID of a one time `Service` to charge for accounts with `print_invoice` enabled in their `AccountBillingParameter`. */
    printed_invoice_fee_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not changing the status from an active to inactive status is prorated by default. */
    prorate_account_status_change?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not changing an account bill day is prorated by default. */
    prorate_billing_day_change?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not service quantity changes are prorated by default. */
    prorate_service_quantity?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not service addition and removal is prorated by default. */
    prorate_services?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to round prorated transactions to the nearest major unit (e.g. to the nearest dollar, euro, pound, etc.) */
    round_prorated_amounts?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `printed_invoice_fee_service_id` to null. */
    unset_printed_invoice_fee_service_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateCableModemProvisioner mutation. */
export type UpdateCableModemProvisionerMutationInput = {
    /** Credentials for a cable modem provisioner. */
    cable_modem_provisioner_credentials?: InputMaybe<Array<InputMaybe<CableModemAuthenticationCredentialMutationInput>>>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The cable modem provisioner hostname or IP address. */
    hostname?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateCalendarIcal mutation. */
export type UpdateCalendarIcalMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `name` to null. */
    unset_name?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateCalendarSystemSettings mutation. */
export type UpdateCalendarSystemSettingsMutationInput = {
    /** If enabled allow external calendar integrations to sync. */
    calendar_allow_external_sync?: InputMaybe<Scalars['Boolean']['input']>;
    /** Number of months to sync calendar history, 0-3 allowed.  Future will always sync. */
    calendar_history_sync_maximum?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateCalixIntegration mutation. */
export type UpdateCalixIntegrationMutationInput = {
    /** Controls if Sonar updates the ICMP device status from SMx alarms */
    alarms_change_device_status?: InputMaybe<Scalars['Boolean']['input']>;
    /** Controls if Sonar should add SMx device alarms to inventory item logs */
    alarms_create_logs?: InputMaybe<Scalars['Boolean']['input']>;
    /** Controls if Sonar updates the inventory item's soft IP address from SMx DHCP lease alarms. */
    alarms_update_ip_assignment?: InputMaybe<Scalars['Boolean']['input']>;
    /** Disable, pause, then re-enable Calix ONT ports after creating or removing service.  Recommended for deployments using DHCP within SMx. */
    bounce_ports?: InputMaybe<Scalars['Boolean']['input']>;
    /** The Calix policy map name to use when a commercial account becomes delinquent. */
    commercial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a commercial account becomes delinquent. */
    commercial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** Controls whether to turn on synchronization of Calix ONTs and Subscribers, from Sonar Inventory Items and Accounts. */
    enable_ont_synchronization?: InputMaybe<Scalars['Boolean']['input']>;
    /** The Calix policy map name to use when a government account becomes delinquent. */
    government_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a government account becomes delinquent. */
    government_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** The Calix policy map name to use when an industrial account becomes delinquent. */
    industrial_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when an industrial account becomes delinquent. */
    industrial_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** An entity which maps an inventory model field to a vendor specific integration field type (ie serial number) */
    integration_field_mappings?: InputMaybe<Array<InputMaybe<IntegrationFieldMappingInput>>>;
    /** An entity which maps a service to a vendor specific service name */
    integration_service_mappings?: InputMaybe<Array<InputMaybe<IntegrationServiceMappingInput>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Subscriber organization ID to use for integration */
    org_id?: InputMaybe<Scalars['String']['input']>;
    /** The Calix policy map name to use when a residential account becomes delinquent. */
    residential_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a residential account becomes delinquent. */
    residential_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** The Calix policy map name to use when a senior citizen account becomes delinquent. */
    senior_citizen_delinquency_policy_map?: InputMaybe<Scalars['String']['input']>;
    /** The Calix service template name to use when a senior citizen account becomes delinquent. */
    senior_citizen_delinquency_service_template?: InputMaybe<Scalars['String']['input']>;
    /** The basic auth credentials to use with SMx, username:password */
    smx_credentials?: InputMaybe<Scalars['String']['input']>;
    /** The URL of the SMx server including the SMx API port, eg. mysmx.org:18443 (SMx uses 18443 as the default API port) */
    smx_url?: InputMaybe<Scalars['String']['input']>;
    /** The software version of SMx that will be used in integration */
    smx_version?: InputMaybe<CalixIntegrationVersion>;
    /** Setting this value to `true` will set `commercial_delinquency_policy_map` to null. */
    unset_commercial_delinquency_policy_map?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `commercial_delinquency_service_template` to null. */
    unset_commercial_delinquency_service_template?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `government_delinquency_policy_map` to null. */
    unset_government_delinquency_policy_map?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `government_delinquency_service_template` to null. */
    unset_government_delinquency_service_template?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `industrial_delinquency_policy_map` to null. */
    unset_industrial_delinquency_policy_map?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `industrial_delinquency_service_template` to null. */
    unset_industrial_delinquency_service_template?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `residential_delinquency_policy_map` to null. */
    unset_residential_delinquency_policy_map?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `residential_delinquency_service_template` to null. */
    unset_residential_delinquency_service_template?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `senior_citizen_delinquency_policy_map` to null. */
    unset_senior_citizen_delinquency_policy_map?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `senior_citizen_delinquency_service_template` to null. */
    unset_senior_citizen_delinquency_service_template?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateCallDetailRecord mutation. */
export type UpdateCallDetailRecordMutationInput = {
    /** The total length of the call in seconds. */
    length_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    /** The DID that initiated the call. */
    originating_number?: InputMaybe<Scalars['String']['input']>;
    /** The DID that received the call. */
    receiving_number?: InputMaybe<Scalars['String']['input']>;
    /** When the call was started. */
    started_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The input object that defines the fields for the updateCallLog mutation. */
export type UpdateCallLogMutationInput = {
    /** The body. */
    body?: InputMaybe<Scalars['Text']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The subject. */
    subject?: InputMaybe<Scalars['String']['input']>;
    /** The time in seconds. */
    time_in_seconds?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateCannedReplyCategory mutation. */
export type UpdateCannedReplyCategoryMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateCannedReply mutation. */
export type UpdateCannedReplyMutationInput = {
    /** The body. */
    body?: InputMaybe<Scalars['Text']['input']>;
    /** The ID of a `CannedReplyCategory`. */
    canned_reply_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateCompany mutation. */
export type UpdateCompanyMutationInput = {
    /** The address shown on the invoice, and on the remittance slip, if it is enabled. */
    address?: InputMaybe<UpdateOrCreateAddressMutationInput>;
    /** On an enabled remittance slip, who should checks be made payable to? */
    checks_payable_to?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** The IDs of `CustomField`s that should be displayed on invoices. A maximum of 3 fields can be selected, and they must all be associated with `Account`s. */
    custom_field_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The URL to your customer portal. */
    customer_portal_url?: InputMaybe<Scalars['URL']['input']>;
    /** Whether or not this entity is a default entry. */
    default?: InputMaybe<Scalars['Boolean']['input']>;
    /** Departments. */
    departments?: InputMaybe<Array<InputMaybe<CompanyDepartmentInput>>>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ISP type of this `Company`. */
    isp_type?: InputMaybe<IspType>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A telephone number. */
    phone_number?: InputMaybe<Scalars['Numeric']['input']>;
    /** The primary color to use in Sonar. */
    primary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** The secondary color to use in Sonar. */
    secondary_color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** Whether or not to include a detachable remittance slip on the invoice. */
    show_remittance_slip?: InputMaybe<Scalars['Boolean']['input']>;
    /** A tax identification number. Should only be entered if you are required to share some type of tax identification information with your customers. */
    tax_identification?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `checks_payable_to` to null. */
    unset_checks_payable_to?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `customer_portal_url` to null. */
    unset_customer_portal_url?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `isp_type` to null. */
    unset_isp_type?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `phone_number` to null. */
    unset_phone_number?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_identification` to null. */
    unset_tax_identification?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `website_address` to null. */
    unset_website_address?: InputMaybe<Scalars['Boolean']['input']>;
    /** The address of the company website. */
    website_address?: InputMaybe<Scalars['URL']['input']>;
};
/** The input object that defines the fields for the updateContact mutation. */
export type UpdateContactMutationInput = {
    /** Make this the new primary contact. */
    become_primary?: InputMaybe<Scalars['Boolean']['input']>;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** An email address. */
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    email_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A supported language. */
    language?: InputMaybe<Language>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A password. */
    password?: InputMaybe<Scalars['String']['input']>;
    /** The role of the contact, e.g. "CEO" or "Network Engineer". */
    role?: InputMaybe<Scalars['String']['input']>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Setting this value to `true` will set `email_address` to null. */
    unset_email_address?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `role` to null. */
    unset_role?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `username` to null. */
    unset_username?: InputMaybe<Scalars['Boolean']['input']>;
    /** A username, used for authentication. */
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateContract mutation. */
export type UpdateContractMutationInput = {
    /** The custom message. */
    custom_message?: InputMaybe<Scalars['Text']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `custom_message` to null. */
    unset_custom_message?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateContractTemplate mutation. */
export type UpdateContractTemplateMutationInput = {
    /** The body. */
    body?: InputMaybe<Scalars['Text']['input']>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The term in months. */
    term_in_months?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `term_in_months` to null. */
    unset_term_in_months?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticket_group_id` to null. */
    unset_ticket_group_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateCreditCard mutation. */
export type UpdateCreditCardMutationInput = {
    /** The billing address for the payment method. */
    address?: InputMaybe<CreateAddressMutationInput>;
    /** Whether or not this payment method is enabled for automatic payments. */
    auto?: InputMaybe<Scalars['Boolean']['input']>;
    /** The month the credit card expires. */
    expiration_month?: InputMaybe<Scalars['Int']['input']>;
    /** The year the credit card expires. */
    expiration_year?: InputMaybe<Scalars['Int']['input']>;
    /** The name on the credit card. */
    name_on_card?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateCreditCardProcessor mutation. */
export type UpdateCreditCardProcessorMutationInput = {
    /** Enable American Express transactions. */
    amex?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `Companies`. */
    company_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A list of credentials for the provider. Check the enum `CreditCardProviderCredential` - all values that begin with the same string as the `CreditCardProvider` entered in the `provider` field must be included. */
    credit_card_processor_credentials?: InputMaybe<Array<InputMaybe<CreditCardProcessorCredentialInput>>>;
    /** Enable Dankort transactions. */
    dankort?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Diners Club transactions. */
    dinersclub?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Discover transactions. */
    discover?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Forbrugsforeningen transactions. */
    forbrugsforeningen?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable JCB transactions. */
    jcb?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Maestro transactions. */
    maestro?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable Mastercard transactions. */
    mastercard?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enables processor specific `Mail Or Telephone Order` functionality. Currently only applicable for `Stripe`. */
    moto_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is the primary type of entity. */
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable UnionPay transactions. */
    unionpay?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable VISA transactions. */
    visa?: InputMaybe<Scalars['Boolean']['input']>;
    /** Enable VISA Electron transactions. */
    visaelectron?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateCustomField mutation. */
export type UpdateCustomFieldMutationInput = {
    /** A list of values that are valid for this field, if this is a TEXT field. If this is empty, and the field is a TEXT type, then any value will be allowed. */
    enum_options?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether or not this custom field must be filled in upon creation of an entity. */
    required?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not the value of this custom field must be unique throughout the system. */
    unique?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateDataService mutation. */
export type UpdateDataServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application?: InputMaybe<ServiceApplication>;
    /** How often this service bills, in months. */
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** The download speed of the service in kilobits per second. */
    download_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** The FCC technology code for the service. Only relevant to US ISPs filing FCC Form 477. */
    technology_code?: InputMaybe<TechnologyCode>;
    /** The global service profile name for this service if using Telrad provisioning. */
    telrad_global_service_profile_name?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `telrad_global_service_profile_name` to null. */
    unset_telrad_global_service_profile_name?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `usage_based_billing_policy_id` to null. */
    unset_usage_based_billing_policy_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** The upload speed of the service in kilobits per second. */
    upload_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a `UsageBasedBillingPolicy`. */
    usage_based_billing_policy_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateDataUsageHistory mutation. */
export type UpdateDataUsageHistoryMutationInput = {
    /** The total billable inbound data in bytes. */
    billable_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The total billable outbound data in bytes. */
    billable_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The total free inbound data in bytes. */
    free_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The total free outbound data in bytes. */
    free_out_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateDebit mutation. */
export type UpdateDebitMutationInput = {
    /** A description for the transaction. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `description` to null. */
    unset_description?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateDelinquencyExclusion mutation. */
export type UpdateDelinquencyExclusionMutationInput = {
    /** The day that this exclusion covers. */
    day?: InputMaybe<Scalars['Int']['input']>;
    /** The month that this exclusion covers. */
    month?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `year` to null. */
    unset_year?: InputMaybe<Scalars['Boolean']['input']>;
    /** The year that this exclusion covers. */
    year?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateDepartment mutation. */
export type UpdateDepartmentMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateDeploymentType mutation. */
export type UpdateDeploymentTypeMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** The ID of a `NetworkMonitoringTemplate`. */
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `network_monitoring_template_id` to null. */
    unset_network_monitoring_template_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateDepositSlip mutation. */
export type UpdateDepositSlipMutationInput = {
    /** The bank account name/number */
    bank_account_line?: InputMaybe<Scalars['String']['input']>;
    /** A date */
    date?: InputMaybe<Scalars['Date']['input']>;
    /** A single file to associate with this object. Any existing file will be overwritten. */
    file?: InputMaybe<AssociateFileMutationInput>;
    /** The memo. */
    memo?: InputMaybe<Scalars['Text']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The payment IDs. */
    payment_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Setting this value to `true` will set `memo` to null. */
    unset_memo?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateDhcpServerIdentifier mutation. */
export type UpdateDhcpServerIdentifierMutationInput = {
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateDhcpServer mutation. */
export type UpdateDhcpServerMutationInput = {
    /** Credentials for the `DhcpServer.` */
    dhcp_server_credentials?: InputMaybe<Array<InputMaybe<DhcpServerAuthenticationCredentialMutationInput>>>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** An IPv4/IPv6 address. */
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A TCP port. */
    port?: InputMaybe<Scalars['Port']['input']>;
    /** Does this `DhcpServer` provide DHCP for all IP pools? */
    serves_all_pools?: InputMaybe<Scalars['Boolean']['input']>;
    /** If this is `true`, then Sonar will use the MAC address of the DHCP relay rather than the MAC address of the requesting device when writing a lease. This should generally be disabled unless you have a specific reason to enable it. */
    use_source_mac_address?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateDidAssignment mutation. */
export type UpdateDidAssignmentMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a Service. */
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `service_id` to null. */
    unset_service_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateDid mutation. */
export type UpdateDidMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a `RateCenter`. */
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateDiscount mutation. */
export type UpdateDiscountMutationInput = {
    /** A description for the transaction. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `description` to null. */
    unset_description?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateDrivers mutation. */
export type UpdateDriversMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** IDs of `User`s. */
    user_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
};
/** The input object that defines the fields for the updateEmailCategory mutation. */
export type UpdateEmailCategoryMutationInput = {
    /** If `true`, this category will be added to all existing contacts. */
    apply_to_existing_contacts?: InputMaybe<Scalars['Boolean']['input']>;
    /** If this is `true`, then any contacts created will have this category associated with them by default. */
    default?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** If `true`, this category will be removed from all existing contacts. Ignored if apply_to_existing_contacts is `true` */
    remove_from_existing_contacts?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateEmailMessageContent mutation. */
export type UpdateEmailMessageContentMutationInput = {
    /** The body. */
    body?: InputMaybe<Scalars['Text']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A short sentence that will be shown as a preview in compatible email clients. */
    inbox_preview?: InputMaybe<Scalars['String']['input']>;
    /** A supported language. */
    language?: InputMaybe<Language>;
    /** The subject. */
    subject?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `inbox_preview` to null. */
    unset_inbox_preview?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateEmailMessage mutation. */
export type UpdateEmailMessageMutationInput = {
    /** The email address to send from when using this email message. If `null`, then the system default will be used. */
    from_email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** ID of the Saved Message Category. */
    saved_message_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `saved_message_category_id` to null. */
    unset_saved_message_category_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateEntityCustomFields mutation. */
export type UpdateEntityCustomFieldsMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateEpc mutation. */
export type UpdateEpcMutationInput = {
    /** The identifier used by the EPC, this is typically numeric. */
    identifier?: InputMaybe<Scalars['String']['input']>;
    /** IDs of `IpPool`s. */
    ip_pool_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateExpiringService mutation. */
export type UpdateExpiringServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application?: InputMaybe<ServiceApplication>;
    /** How often this service bills, in months. */
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this entity is active. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** The number of times this expiring service should run. */
    times_to_run?: InputMaybe<Scalars['Int']['input']>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateExternalMarketingProvider mutation. */
export type UpdateExternalMarketingProviderMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The credentials to use to authenticate against the external marketing provider. */
    external_marketing_provider_credentials?: InputMaybe<Array<InputMaybe<ExternalMarketingProviderCredentialInput>>>;
};
/** The input object that defines the fields for the updateFibermapIntegration mutation. */
export type UpdateFibermapIntegrationMutationInput = {
    /** The ID of an AccountStatus. */
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Always create new network sites */
    always_create_new_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    /** An API token. */
    api_token?: InputMaybe<Scalars['String']['input']>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Import plans and contacts */
    import_accounts_and_contacts?: InputMaybe<Scalars['Boolean']['input']>;
    /** Import serviceable addresses */
    import_serviceable_addresses?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateFibermapPlan mutation. */
export type UpdateFibermapPlanMutationInput = {
    /** is_visible of the information */
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Network site id. */
    unset_network_site_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateFibermapServiceLocation mutation. */
export type UpdateFibermapServiceLocationMutationInput = {
    /** is_visible of the information */
    is_visible?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of the address. */
    unset_address_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateFile mutation. */
export type UpdateFileMutationInput = {
    /** A human readable description. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** An image file may be set to the primary image. This will be used as the displayed image for the object that this file is associated to throughout Sonar. */
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `description` to null. */
    unset_description?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateGeneralLedgerCode mutation. */
export type UpdateGeneralLedgerCodeMutationInput = {
    /** A code for this general ledger code. This is typically numeric, but does not have to be. */
    code?: InputMaybe<Scalars['String']['input']>;
    /** A human readable description for this general ledger code (e.g. Internet Services.) */
    description?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateGenericInventoryAssignee mutation. */
export type UpdateGenericInventoryAssigneeMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateGeoTaxZone mutation. */
export type UpdateGeoTaxZoneMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** A US county. Only used for US addresses. */
    county?: InputMaybe<UsCounty>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The rate for a tax. For a percentage based tax, this is a percentage. For a flat tax, it is a currency value in the smallest currency unit (e.g. cents, pence, pesos.) */
    rate?: InputMaybe<Scalars['Float']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** Setting this value to `true` will set `city` to null. */
    unset_city?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `country` to null. */
    unset_country?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `county` to null. */
    unset_county?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `subdivision` to null. */
    unset_subdivision?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `zip` to null. */
    unset_zip?: InputMaybe<Scalars['Boolean']['input']>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
    /** Whether to match on partial ZIP/postal codes. */
    zip_partial_match?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateGeofence mutation. */
export type UpdateGeofenceMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A collection of points that makes up a polygon. */
    vertexes?: InputMaybe<Array<InputMaybe<Array<VertexMutationInput>>>>;
};
/** The input object that defines the fields for the updateGlobalInventoryModelMinMax mutation. */
export type UpdateGlobalInventoryModelMinMaxMutationInput = {
    /** Maximum value */
    maximum?: InputMaybe<Scalars['Int']['input']>;
    /** Minimum value */
    minimum: Scalars['Int']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `maximum` to null. */
    unset_maximum?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateGpsTrackingProvider mutation. */
export type UpdateGpsTrackingProviderMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** `GpsTrackingProvider` Credentials. */
    gps_tracking_provider_credentials?: InputMaybe<Array<InputMaybe<GpsTrackingProviderCredentialInput>>>;
};
/** The input object that defines the fields for the updateIdentityProviderActiveDirectory mutation. */
export type UpdateIdentityProviderActiveDirectoryMutationInput = {
    /** Whether to use client SSL certificate authentication or not. */
    cert_auth?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether to disable the cache or not. */
    disable_cache?: InputMaybe<Scalars['Boolean']['input']>;
    /** The display name. */
    display_name?: InputMaybe<Scalars['String']['input']>;
    /** The list of domains that can be authenticated. */
    domain_aliases?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ActiveDirectory icon URL. */
    icon_url?: InputMaybe<Scalars['URL']['input']>;
    /** The range of IPs with which to use Windows Integrated Auth (Kerberos). */
    ips?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
    /** Whether to use Windows Integrated Auth (Kerberos) or not. */
    kerberos?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `icon_url` to null. */
    unset_icon_url?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateIdentityProviderGoogle mutation. */
export type UpdateIdentityProviderGoogleMutationInput = {
    /** The client ID for this identity provider. */
    client_id?: InputMaybe<Scalars['String']['input']>;
    /** The client secret for this identity provider. */
    client_secret?: InputMaybe<Scalars['String']['input']>;
    /** The display name. */
    display_name?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateIdentityProviderMicrosoft mutation. */
export type UpdateIdentityProviderMicrosoftMutationInput = {
    /** The client ID for this identity provider. */
    client_id?: InputMaybe<Scalars['String']['input']>;
    /** The client secret for this identity provider. */
    client_secret?: InputMaybe<Scalars['String']['input']>;
    /** The display name. */
    display_name?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateIdentityProviderSaml mutation. */
export type UpdateIdentityProviderSamlMutationInput = {
    /** Authentication domains. */
    auth_domains?: InputMaybe<Scalars['String']['input']>;
    /** The X.509 signing certificate contents. */
    certificate?: InputMaybe<Scalars['Text']['input']>;
    /** Whether to include more verbose logging during the authentication process or not. */
    debug?: InputMaybe<Scalars['Boolean']['input']>;
    /** The sign request algorithm digest. */
    digest_algorithm?: InputMaybe<SamlDigestAlgorithm>;
    /** The display name. */
    display_name?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The SAML protocol binding. */
    protocol_binding?: InputMaybe<SamlProtocolBinding>;
    /** The SAML sign in URL. */
    sign_in_endpoint?: InputMaybe<Scalars['URL']['input']>;
    /** The SAML sign out URL. */
    sign_out_endpoint?: InputMaybe<Scalars['URL']['input']>;
    /** Whether to sign the SAML request or not. */
    sign_saml_request?: InputMaybe<Scalars['Boolean']['input']>;
    /** The sign request algorithm. */
    signature_algorithm?: InputMaybe<SamlSignatureAlgorithm>;
    /** Setting this value to `true` will set `sign_out_endpoint` to null. */
    unset_sign_out_endpoint?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `user_id_attribute` to null. */
    unset_user_id_attribute?: InputMaybe<Scalars['Boolean']['input']>;
    /** The attribute in the SAML token that will be mapped to the user_id property. */
    user_id_attribute?: InputMaybe<Scalars['URL']['input']>;
};
/** The input object that defines the fields for the updateInboundMailbox mutation. */
export type UpdateInboundMailboxMutationInput = {
    /** Whether or not to append a signature. */
    append_signature?: InputMaybe<Scalars['Boolean']['input']>;
    /** The auto reply to send. */
    auto_reply?: InputMaybe<Scalars['Text']['input']>;
    /** The ID of an `EmailDomain`. */
    email_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not to enable Slack integration. */
    enable_slack_integration?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The mailbox email is sent from. */
    from_mailbox?: InputMaybe<Scalars['String']['input']>;
    /** The name to send from when using this email message. If `null`, then the system default will be used. */
    from_name?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether the email body should be posted to Slack, or just the email subject. */
    post_email_body_to_slack?: InputMaybe<Scalars['Boolean']['input']>;
    /** The priority of a `Ticket`. */
    priority?: InputMaybe<TicketPriority>;
    /** Whether or not an auto reply should be sent. */
    send_auto_reply?: InputMaybe<Scalars['Boolean']['input']>;
    /** The signature to append. You can include `[PUBLIC_NAME]` as a variable to insert the user's public name when the signature is appended. */
    signature?: InputMaybe<Scalars['Text']['input']>;
    /** The URL of a Slack webhook. You can generate one at https://my.slack.com/services/new/incoming-webhook. */
    slack_webhook_url?: InputMaybe<Scalars['URL']['input']>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateInlineDevice mutation. */
export type UpdateInlineDeviceMutationInput = {
    /** Whether this device should write entries for all subnets or not. */
    all_subnets?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Credentials for an inline device. */
    inline_device_credentials?: InputMaybe<Array<InputMaybe<InlineDeviceAuthenticationCredentialMutationInput>>>;
    /** An IPv4/IPv6 address. */
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A TCP port. */
    port?: InputMaybe<Scalars['Port']['input']>;
    /** IDs of `Subnet`s. */
    subnet_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateInstanceServiceFundAutoPay mutation. */
export type UpdateInstanceServiceFundAutoPayMutationInput = {
    /** Whether the instance service is paid for automatically. */
    auto_pay: Scalars['Boolean']['input'];
    /** The instance service fund type. */
    instance_service_fund_type: InstanceServiceFundType;
};
/** The input object that defines the fields for the updateInternalLocation mutation. */
export type UpdateInternalLocationMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** Inventory model field data information when updating inventory item fields. */
export type UpdateInventoryItemFieldMutationInput = {
    /** The ID of an `InventoryModelField`. */
    inventory_model_field_id: Scalars['Int64Bit']['input'];
    /** Unset the contents of this field. */
    unset?: InputMaybe<Scalars['Boolean']['input']>;
    /** The value. */
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateInventoryItemFields mutation. */
export type UpdateInventoryItemFieldsMutationInput = {
    /** The contents of the fields for the items being added. */
    fields: Array<InputMaybe<UpdateInventoryItemFieldMutationInput>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
};
/** The input object that defines the fields for the updateInventoryItems mutation. */
export type UpdateInventoryItemsMutationInput = {
    /** The ID of a `DeploymentType`. */
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of the entity that this inventory item is assigned to. */
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that this inventory item is assigned to. */
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    /** A decimal latitude. */
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    /** A decimal latitude. */
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The purchase price of this item. */
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    /** The physical status of this item. */
    status?: InputMaybe<InventoryItemStatus>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** Setting this value to `true` will set `deployment_type_id` to null. */
    unset_deployment_type_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `latitude` to null. */
    unset_latitude?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `longitude` to null. */
    unset_longitude?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `purchase_price` to null. */
    unset_purchase_price?: InputMaybe<Scalars['Boolean']['input']>;
};
/** Update the address details for an inventory location. */
export type UpdateInventoryLocationAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** A decimal latitude. */
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal longitude. */
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateInventoryLocation mutation. */
export type UpdateInventoryLocationMutationInput = {
    /** The physical address of the inventory location. */
    address?: InputMaybe<UpdateInventoryLocationAddressMutationInput>;
    /** Marks this inventory location as the default shipping location for purchase orders. */
    default_shipping_location?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateInventoryModelCategory mutation. */
export type UpdateInventoryModelCategoryMutationInput = {
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** An icon. */
    icon?: InputMaybe<Icon>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateInventoryModelField mutation. */
export type UpdateInventoryModelFieldMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A single inventory model field can be set to be the primary field. This will be used as the primary identifier for items of this model throughout Sonar. */
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    /** A PCRE regular expression. Omit the leading and closing /. */
    regexp?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this field is required. */
    required?: InputMaybe<Scalars['Boolean']['input']>;
    /** Secondary types that inventory model fields can be set to. */
    secondary_type?: InputMaybe<InventoryModelFieldSecondaryType>;
    /** Types that inventory model fields can be set to. */
    type?: InputMaybe<InventoryModelFieldType>;
    /** Whether or not the field contents must be unique. */
    unique?: InputMaybe<Uniqueness>;
    /** Setting this value to `true` will set `secondary_type` to null. */
    unset_secondary_type?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateInventoryModelMinMax mutation. */
export type UpdateInventoryModelMinMaxMutationInput = {
    /** The ID of an `InventoryLocation`. */
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Maximum value */
    maximum?: InputMaybe<Scalars['Int']['input']>;
    /** Minimum value */
    minimum: Scalars['Int']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `maximum` to null. */
    unset_maximum?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateInventoryModel mutation. */
export type UpdateInventoryModelMutationInput = {
    /** Sets the default vendor to be used for purchasing this inventory model. */
    default_vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of inventory model. */
    device_type?: InputMaybe<InventoryModelDeviceType>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A generic inventory model does not have any fields, and is used for items that you don't need to track individually (for example, a box of screws, or a spool of cable.) */
    generic?: InputMaybe<Scalars['Boolean']['input']>;
    /** An icon. */
    icon?: InputMaybe<Icon>;
    /** The ID of an InventoryModelCategory. */
    inventory_model_category_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If this is a SIM card for LTE provisioning, which provider this SIM is for. */
    lte_sim_type?: InputMaybe<LteProviderType>;
    /** The ID of a Manufacturer. */
    manufacturer_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The actual model name/part number. */
    model_name?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** The ID of a `NetworkMonitoringTemplate`. */
    network_monitoring_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The TCP port that the web interface of this type of device is available on. */
    port?: InputMaybe<Scalars['Int']['input']>;
    /** The protocol used to access the web interface. */
    protocol?: InputMaybe<Protocol>;
    /** Setting this value to `true` will set `lte_sim_type` to null. */
    unset_lte_sim_type?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `model_name` to null. */
    unset_model_name?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `network_monitoring_template_id` to null. */
    unset_network_monitoring_template_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `port` to null. */
    unset_port?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `protocol` to null. */
    unset_protocol?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateInvoiceAttachment mutation. */
export type UpdateInvoiceAttachmentMutationInput = {
    /** The date to stop attaching this PDF to invoices. */
    end?: InputMaybe<Scalars['Date']['input']>;
    /** A single file to associate with this object. Any existing file will be overwritten. */
    file?: InputMaybe<AssociateFileMutationInput>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The date to start attaching this PDF to invoices. */
    start?: InputMaybe<Scalars['Date']['input']>;
    /** Setting this value to `true` will set `end` to null. */
    unset_end?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `start` to null. */
    unset_start?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateInvoiceMessage mutation. */
export type UpdateInvoiceMessageMutationInput = {
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The message. */
    message?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateInvoice mutation. */
export type UpdateInvoiceMutationInput = {
    /** If an invoice is frozen, payments will not be automatically applied to it, and it cannot be modified. */
    frozen?: InputMaybe<Scalars['Boolean']['input']>;
    /** A custom message to print on the invoice. */
    message?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `message` to null. */
    unset_message?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateIpAssignment mutation. */
export type UpdateIpAssignmentMutationInput = {
    /** A human readable description. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The ID of the owner of this `IpAssignment`. */
    ipassignmentable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The owner of this `IpAssignment`. */
    ipassignmentable_type?: InputMaybe<IpassignmentableType>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Some reference data regarding this IP assignment. */
    reference?: InputMaybe<Scalars['Text']['input']>;
    /** If this IP was assigned automatically (e.g. via DHCP or RADIUS) then it will be marked as a soft assignment. */
    soft?: InputMaybe<Scalars['Boolean']['input']>;
    /** An IPv4/IPv6 subnet. */
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    /** Setting this value to `true` will set `description` to null. */
    unset_description?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reference` to null. */
    unset_reference?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateIpPool mutation. */
export type UpdateIpPoolMutationInput = {
    /** The ID of a `DhcpServerIdentifier`. */
    dhcp_server_identifier_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** IDs of `DhcpServer`s. */
    dhcp_server_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `EPC`s. */
    epc_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A range of IPv4 addresses. */
    ip_range?: InputMaybe<Scalars['IpRange']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `dhcp_server_identifier_id` to null. */
    unset_dhcp_server_identifier_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateJob mutation. */
export type UpdateJobMutationInput = {
    /** Any notes entered when this `Job` was completed. */
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of a `JobType`. */
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the entity that this `Job` is associated with. */
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that this `Job` is associated with. */
    jobbable_type?: InputMaybe<JobbableType>;
    /** The length in minutes for this `Job`. */
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** If this is `true` then the new `JobType`'s task template will be applied and existing uncompleted tasks will be removed. */
    replace_existing_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    /** The date and time this `Job` is scheduled for. */
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** The ID of a `Ticket`. */
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `completion_notes` to null. */
    unset_completion_notes?: InputMaybe<Scalars['Boolean']['input']>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Setting this value to `true` will set `scheduled_datetime` to null. */
    unset_scheduled_datetime?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticket_id` to null. */
    unset_ticket_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateJobService mutation. */
export type UpdateJobServiceMutationInput = {
    /** The quantity for this service. */
    quantity: Scalars['Int']['input'];
};
/** The input object that defines the fields for the updateJobType mutation. */
export type UpdateJobTypeMutationInput = {
    /** If this is set, any `Job` using this `JobType` that is completed successfully while associated with an `Account` will change the `Account` to this `AccountStatus`. */
    account_status_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If this is set, any `Job` using this `JobType` that is completed unsuccessfully while associated with an `Account` will change the `Account` to this `AccountStatus`. */
    account_status_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Completion ticket action. */
    action_on_completion?: InputMaybe<JobTypeAction>;
    /** Failure ticket action. */
    action_on_failure?: InputMaybe<JobTypeAction>;
    /** Whether or not this `JobType` is valid for all `Companies`. */
    all_companies?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether `Job`s associated with this `JobType` should be able to be completed with incomplete tasks. */
    allow_completion_with_incomplete_tasks?: InputMaybe<Scalars['Boolean']['input']>;
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** IDs of `Companies`. */
    company_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a `ContractTemplate`. */
    contract_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The default length for a `Job` created using this `JobType`. */
    default_length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** If this is set, any `Job` using this `JobType` that is completed successfully while associated with an `Account` will trigger the disconnection of the `Account`. */
    disconnects_account?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** An icon. */
    icon?: InputMaybe<Icon>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** IDs of `Service`s. */
    service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a `TaskTemplate`. */
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If this is set, any `Job` using this `JobType` that is completed successfully will create a `Ticket` and assign it to this `TicketGroup`. */
    ticket_group_id_completion?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If this is set, any `Job` using this `JobType` that is completed unsuccessfully will create a `Ticket` and assign it to this `TicketGroup`. */
    ticket_group_id_failure?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Ticket status on completion. */
    ticket_status_on_completion?: InputMaybe<TicketStatus>;
    /** Ticket status on failure. */
    ticket_status_on_failure?: InputMaybe<TicketStatus>;
    /** Setting this value to `true` will set `account_status_id_completion` to null. */
    unset_account_status_id_completion?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `account_status_id_failure` to null. */
    unset_account_status_id_failure?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `contract_template_id` to null. */
    unset_contract_template_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `task_template_id` to null. */
    unset_task_template_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticket_group_id_completion` to null. */
    unset_ticket_group_id_completion?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticket_group_id_failure` to null. */
    unset_ticket_group_id_failure?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateLocalPrefix mutation. */
export type UpdateLocalPrefixMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A telephone number prefix. */
    prefix: Scalars['Numeric']['input'];
};
/** The input object that defines the fields for the updateLookerExploreLicense mutation. */
export type UpdateLookerExploreLicenseMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `user_id` to null. */
    unset_user_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateLookerViewLicense mutation. */
export type UpdateLookerViewLicenseMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `user_id` to null. */
    unset_user_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateLteProvider mutation. */
export type UpdateLteProviderMutationInput = {
    /** Automatically detach UE when account is changed to delinquency status. */
    deactivate_on_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not a floating license model is used with BreezeVIEW. */
    floating_license?: InputMaybe<Scalars['Boolean']['input']>;
    /** Credentials for the LTE provider. */
    lte_provider_credentials?: InputMaybe<Array<InputMaybe<LteProviderAuthenticationCredentialMutationInput>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Write PDN address allocation into BreezeVIEW. */
    write_pdn_address_allocation?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateMailingAddress mutation. */
export type UpdateMailingAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Setting this value to `true` will set `line2` to null. */
    unset_line2?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `subdivision` to null. */
    unset_subdivision?: InputMaybe<Scalars['Boolean']['input']>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateManufacturer mutation. */
export type UpdateManufacturerMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateMapOverlay mutation. */
export type UpdateMapOverlayMutationInput = {
    /** Map Overlay Language (KML) file contents. */
    contents?: InputMaybe<Scalars['Base64Clob']['input']>;
    /** file type */
    file_type?: InputMaybe<MapOverlayFileType>;
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** Network site id. */
    network_site_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `network_site_id` to null. */
    unset_network_site_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateMe mutation. */
export type UpdateMeMutationInput = {
    /** An email address. */
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** The preferred language for this user. If none is set, then the system default will be used. This will affect the interface, as well as communications sent to this user. */
    language?: InputMaybe<Language>;
    /** A mobile phone number. This will be used to send SMS messages. */
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not the navigation bar on the side is loaded in an expanded state. */
    navigation_expanded?: InputMaybe<Scalars['Boolean']['input']>;
    /** Your notification settings. */
    notification_settings?: InputMaybe<Array<InputMaybe<NotificationSettingMutationInput>>>;
    /** A password. */
    password?: InputMaybe<Scalars['String']['input']>;
    /** The publicly viewable name of this user. */
    public_name?: InputMaybe<Scalars['String']['input']>;
    /** The number of records shown in a paginated table at once. */
    table_paginator_size?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Saved settings for the web application. This field is meant to be user configurable. */
    ui_preferences?: InputMaybe<Scalars['Text']['input']>;
    /** Setting this value to `true` will set `mobile_number` to null. */
    unset_mobile_number?: InputMaybe<Scalars['Boolean']['input']>;
    /** A username, used for authentication. */
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateMessageCategory mutation. */
export type UpdateMessageCategoryMutationInput = {
    /** If `true`, this category will be added to all existing contacts. */
    apply_to_existing_contacts?: InputMaybe<Scalars['Boolean']['input']>;
    /** If this is `true`, then any contacts created will have this category associated with them by default. */
    default?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** If `true`, this category will be removed from all existing contacts. Ignored if apply_to_existing_contacts is `true` */
    remove_from_existing_contacts?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateNetflowAllowedSubnet mutation. */
export type UpdateNetflowAllowedSubnetMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
};
/** The input object that defines the fields for the updateNetflowEndpoint mutation. */
export type UpdateNetflowEndpointMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whitelist mode. */
    whitelist_mode?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateNetflowWhitelist mutation. */
export type UpdateNetflowWhitelistMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
};
/** The input object that defines the fields for the updateNetworkMonitoringGraph mutation. */
export type UpdateNetworkMonitoringGraphMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Stacked */
    stacked?: InputMaybe<Scalars['Boolean']['input']>;
    /** The type. */
    type?: InputMaybe<NetworkMonitoringGraphType>;
};
/** The input object that defines the fields for the updateNetworkMonitoringTemplate mutation. */
export type UpdateNetworkMonitoringTemplateMutationInput = {
    /** Whether or not to collect interface statistics. */
    collect_interface_statistics?: InputMaybe<Scalars['Boolean']['input']>;
    /** ICMP latency threshold (ms). */
    icmp_latency_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** ICMP loss threshold (%). */
    icmp_loss_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** Whether or not ICMP monitoring is enabled. */
    icmp_monitoring?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** SNMPv3 auth passphrase */
    snmp3_auth_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 auth protocol */
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    /** SNMPv3 context engine ID */
    snmp3_context_engineid?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 context name */
    snmp3_context_name?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy passphrase */
    snmp3_priv_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy protocol */
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    /** SNMPv3 security level */
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    /** SNMP community/securityName */
    snmp_community?: InputMaybe<Scalars['String']['input']>;
    /** SNMP version */
    snmp_version?: InputMaybe<SnmpVersion>;
    /** Setting this value to `true` will set `icmp_latency_threshold` to null. */
    unset_icmp_latency_threshold?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `icmp_loss_threshold` to null. */
    unset_icmp_loss_threshold?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_auth_passphrase` to null. */
    unset_snmp3_auth_passphrase?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_auth_protocol` to null. */
    unset_snmp3_auth_protocol?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_context_engineid` to null. */
    unset_snmp3_context_engineid?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_context_name` to null. */
    unset_snmp3_context_name?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_priv_passphrase` to null. */
    unset_snmp3_priv_passphrase?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_priv_protocol` to null. */
    unset_snmp3_priv_protocol?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_sec_level` to null. */
    unset_snmp3_sec_level?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp_community` to null. */
    unset_snmp_community?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp_version` to null. */
    unset_snmp_version?: InputMaybe<Scalars['Boolean']['input']>;
};
/** Update the address details for a network site. */
export type UpdateNetworkSiteAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** A decimal latitude. */
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal longitude. */
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: InputMaybe<Timezone>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateNetworkSite mutation. */
export type UpdateNetworkSiteMutationInput = {
    /** The address for the network site. */
    address?: InputMaybe<UpdateNetworkSiteAddressMutationInput>;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** Height in meters. */
    height_in_meters?: InputMaybe<Scalars['Float']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateNonInventoryItem mutation. */
export type UpdateNonInventoryItemMutationInput = {
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateNote mutation. */
export type UpdateNoteMutationInput = {
    /** The message. */
    message?: InputMaybe<Scalars['Text']['input']>;
    /** The priority of the note. */
    priority?: InputMaybe<NotePriority>;
};
/** The input object that defines the fields for the updateOneTimeService mutation. */
export type UpdateOneTimeServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application?: InputMaybe<ServiceApplication>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The fields necessary to update or create an address. */
export type UpdateOrCreateAddressMutationInput = {
    /** A city. */
    city: Scalars['String']['input'];
    /** A two character country code. */
    country: Country;
    /** Address line 1. */
    line1: Scalars['String']['input'];
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** Address line 2. */
    unset_line2?: InputMaybe<Scalars['Boolean']['input']>;
    /** A ZIP or postal code. */
    zip: Scalars['String']['input'];
};
/** The input object that defines the fields for the updateOrderGroup mutation. */
export type UpdateOrderGroupMutationInput = {
    /** A list of user IDs that should have authority to approve purchase orders in this order group. */
    approver_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
    /** The threshold at which requesters require approval of their purchase orders. */
    automatic_approval_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** Disabled order groups cannot be assigned users or used to create purchase orders. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The name of an order group. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A list of user IDs that should have permission to create product requests in this group. */
    requester_ids: Array<InputMaybe<Scalars['Int64Bit']['input']>>;
};
/** The input object that defines the fields for the updateOverageService mutation. */
export type UpdateOverageServiceMutationInput = {
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application?: InputMaybe<ServiceApplication>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A value in gigabytes. */
    gigabytes?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updatePackage mutation. */
export type UpdatePackageMutationInput = {
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting to indicate if services in this package should be rolled up into a package total when this package is displayed. */
    rollup_services?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `Service`s. */
    services?: InputMaybe<Array<InputMaybe<PackageServiceMutationInput>>>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updatePasswordPolicy mutation. */
export type UpdatePasswordPolicyMutationInput = {
    /** The minimum length a password must be. */
    minimum_length?: InputMaybe<Scalars['Int']['input']>;
    /** A score for the zxcvbn password strength estimation library that this password must match. 0 allows all passwords, 4 requires a very strong password. See https://github.com/dropbox/zxcvbn for details. */
    minimum_password_strength?: InputMaybe<Scalars['Int']['input']>;
    /** Must a password be alpha-numeric (contain at least one letter and one number) or can it have any combination of characters? */
    requires_alpha_numeric?: InputMaybe<Scalars['Boolean']['input']>;
    /** Does a password require at least one special (non alpha-numeric) character? */
    requires_at_least_one_special_character?: InputMaybe<Scalars['Boolean']['input']>;
    /** Does a password require both upper and lower case characters? */
    requires_upper_and_lower_case_characters?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updatePayPalCredential mutation. */
export type UpdatePayPalCredentialInput = {
    /** The client ID for PayPal. */
    client_id?: InputMaybe<Scalars['String']['input']>;
    /** The client secret for PayPal. */
    client_secret?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updatePayment mutation. */
export type UpdatePaymentMutationInput = {
    /** A descriptive name. */
    reference?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `reference` to null. */
    unset_reference?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updatePhoneNumber mutation. */
export type UpdatePhoneNumberMutationInput = {
    /** A two character country code for this phone number. */
    country?: InputMaybe<Country>;
    /** The extension. */
    extension?: InputMaybe<Scalars['Numeric']['input']>;
    /** The number. */
    number?: InputMaybe<Scalars['Numeric']['input']>;
    /** The ID of the PhoneNumberType associated with this phone number. */
    phone_number_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not SMS messages accepted. */
    sms_opt_in?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `extension` to null. */
    unset_extension?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updatePhoneNumberType mutation. */
export type UpdatePhoneNumberTypeMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not phone numbers of this type are capable of sending and receiving SMS messages. */
    sms_capable?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updatePoller mutation. */
export type UpdatePollerMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Poller subnet configuration. */
    poller_subnets?: InputMaybe<Array<InputMaybe<PollerSubnetMutationInput>>>;
};
/** The input object that defines the fields for the updatePollerSettings mutation. */
export type UpdatePollerSettingsMutationInput = {
    /** How often to poll account equipment (minutes). */
    account_polling_frequency_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** How often to poll infrastructure equipment (minutes). */
    infrastructure_polling_frequency_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updatePreseem mutation. */
export type UpdatePreseemMutationInput = {
    /** An API key. */
    api_key?: InputMaybe<Scalars['Text']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updatePrintToMailOrderError mutation. */
export type UpdatePrintToMailOrderErrorMutationInput = {
    /** Whether or not the error has been marked as resolved. */
    resolved?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updatePrintToMailSettings mutation. */
export type UpdatePrintToMailSettingsMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A notification is sent if Print to Mail funds fall below this value. */
    low_funds_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** The print method for the print to mail batch. */
    print_method?: InputMaybe<PrintToMailPrintMethod>;
    /** The print type for the print to mail batch. */
    print_type?: InputMaybe<PrintToMailPrintType>;
};
/** The input object that defines the fields for the updatePurchaseOrder mutation. */
export type UpdatePurchaseOrderMutationInput = {
    /** The ID of the company that will be used in the header of this purchase order. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The currency used for all transactions with this vendor. */
    currency?: InputMaybe<Currency>;
    /** A message to be included on purchase orders when sent to vendors. */
    external_message?: InputMaybe<Scalars['String']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The source of the shipping address for a purchase order. */
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not the purchase order has been marked as being paid. */
    is_paid?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of an order group related to this purchase order. */
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A unique number identifying an approved purchase order. */
    order_number?: InputMaybe<Scalars['Int']['input']>;
    /** The terms of payment for deliveries from this vendor. */
    payment_terms?: InputMaybe<PaymentTerm>;
    /** The order items to attach to a new purchase order. */
    purchase_order_items?: InputMaybe<Array<InputMaybe<UpdatePurchaseOrderOrderItemsMutationInput>>>;
    /** The current status of this purchase order. */
    status?: InputMaybe<PurchaseOrderStatus>;
    /** Setting this value to `true` will set `external_message` to null. */
    unset_external_message?: InputMaybe<Scalars['Boolean']['input']>;
    /** The name of a vendor. */
    vendor_name?: InputMaybe<Scalars['String']['input']>;
};
/** Add items to a new purchase order. */
export type UpdatePurchaseOrderOrderItemsMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** The ID of a purchase order item */
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The order this item is shown in a list. */
    list_order?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** Part number used by the vendor to identify this vendor item. */
    part_number?: InputMaybe<Scalars['String']['input']>;
    /** The price of the vendor item at the time the purchase order was created. */
    price?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Number of inventory models that are included in a single unit of this vendors product. */
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    /** The current status of a purchase order item. */
    status?: InputMaybe<PurchaseOrderItemStatus>;
    /** A list of tax IDs that should be applied to this purchase order item. */
    taxes?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The quantity of a vendor item on a purchase order. */
    units?: InputMaybe<Scalars['Int']['input']>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Part number used by the vendor to identify this vendor item. */
    unset_part_number?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a vendor item. */
    vendor_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updatePurchaseOrderSystemSettings mutation. */
export type UpdatePurchaseOrderSystemSettingsInput = {
    /** The ID of an inventory location to be the default shipping location for purchase orders. */
    default_inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The starting number for system generated purchase order numbers. */
    initial_purchase_order_number?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateRadiusAccount mutation. */
export type UpdateRadiusAccountMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A password. */
    password?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `password` to null. */
    unset_password?: InputMaybe<Scalars['Boolean']['input']>;
    /** A username, used for authentication. */
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateRadiusGroup mutation. */
export type UpdateRadiusGroupMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The types of account statuses for accounts that are part of this grouping. */
    account_status?: InputMaybe<AddressListAccountStatus>;
    /** IDs of `AccountStatus`es. */
    account_status_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of `AccountType`s. */
    account_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** IDs of data `Service`s. */
    data_service_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The delinquency state for accounts that are part of this grouping. */
    delinquency?: InputMaybe<AddressListDelinquency>;
    /** Whether or not this is a fall through group. */
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The RADIUS group priority. */
    priority?: InputMaybe<Scalars['Int']['input']>;
    /** A list of IDs of `UsageBasedBillingPolicy` objects. */
    usage_based_billing_policy_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateRadiusGroupReplyAttribute mutation. */
export type UpdateRadiusGroupReplyAttributeMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A RADIUS reply operator. */
    operator?: InputMaybe<RadiusReplyOperator>;
    /** A RADIUS reply. */
    reply?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateRadiusServer mutation. */
export type UpdateRadiusServerMutationInput = {
    /** The secret used to send a change of authorization to this device. */
    coa_secret?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not Sonar should track bandwidth usage data from this RADIUS server. */
    collect_bandwidth?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** An IPv4/IPv6 address. */
    ip_address?: InputMaybe<Scalars['IP']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The RADIUS server credentials. */
    radius_server_credentials?: InputMaybe<Array<InputMaybe<RadiusServerCredentialInput>>>;
    /** Send a change of authorization on account delinquency to this device. */
    send_change_auth_on_delinquency?: InputMaybe<Scalars['Boolean']['input']>;
    /** Send a change of authorization on account service change to this device. */
    send_change_auth_on_service_change?: InputMaybe<Scalars['Boolean']['input']>;
    /** Send a change of authorization on account status change to this device. */
    send_change_auth_on_status_change?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `coa_secret` to null. */
    unset_coa_secret?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateRateCenter mutation. */
export type UpdateRateCenterMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateRecurringService mutation. */
export type UpdateRecurringServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application?: InputMaybe<ServiceApplication>;
    /** How often this service bills, in months. */
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateRole mutation. */
export type UpdateRoleMutationInput = {
    /** A list of permissions associated with this role. */
    applied_permissions?: InputMaybe<Array<Permission>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateSavedMessageCategory mutation. */
export type UpdateSavedMessageCategoryMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateScheduleAddress mutation. */
export type UpdateScheduleAddressMutationInput = {
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** A decimal latitude. */
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal latitude. */
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: InputMaybe<Timezone>;
    /** The type of schedule address that this is. */
    type?: InputMaybe<ScheduleAddressType>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateScheduleAvailabilityDayTime mutation. */
export type UpdateScheduleAvailabilityDayTimeMutationInput = {
    /** Whether this day is available from start to finish. */
    all_day?: InputMaybe<Scalars['Boolean']['input']>;
    /** A day. */
    day?: InputMaybe<Day>;
    /** The end time for the day. */
    end_time?: InputMaybe<Scalars['Time']['input']>;
    /** The start time for the day. */
    start_time?: InputMaybe<Scalars['Time']['input']>;
};
/** The input object that defines the fields for the updateScheduleAvailability mutation. */
export type UpdateScheduleAvailabilityMutationInput = {
    /** Whether or not this `ScheduleAvailability` creates or removes availability. */
    available?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a `Geofence`. */
    geofence_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether this repeats forever or not. */
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `JobType`s. */
    job_type_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The number of times this repeats. */
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    /** The start date for this `ScheduleAvailability`. */
    start_date?: InputMaybe<Scalars['Date']['input']>;
    /** Setting this value to `true` will set `geofence_id` to null. */
    unset_geofence_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The number of weeks between repetitions. */
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateScheduleBlockerDayTime mutation. */
export type UpdateScheduleBlockerDayTimeMutationInput = {
    /** A day. */
    day?: InputMaybe<Day>;
    /** The end time for the day. */
    end_time?: InputMaybe<Scalars['Time']['input']>;
    /** The start time for the day. */
    start_time?: InputMaybe<Scalars['Time']['input']>;
};
/** The input object that defines the fields for the updateScheduleBlocker mutation. */
export type UpdateScheduleBlockerMutationInput = {
    /** Whether this repeats forever or not. */
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The number of times this repeats. */
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    /** The start date for this `ScheduleAvailability`. */
    start_date?: InputMaybe<Scalars['Date']['input']>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The number of weeks between repetitions. */
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateScheduleTimeOff mutation. */
export type UpdateScheduleTimeOffMutationInput = {
    /** The date and time that this ends. */
    end_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The date and time that this starts. */
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** IDs of `User`s. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The fields necessary to update an account voice service detail on a scheduled event. */
export type UpdateScheduledEventAccountVoiceServiceDetailMutationInput = {
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    price_override?: InputMaybe<Scalars['Int']['input']>;
    /** The reason that the price of a service has been overridden. */
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    /** The quantity for this service. */
    quantity?: InputMaybe<Scalars['Int']['input']>;
    /** The amount that this service price has been overridden to. If this is null, then the service price is used. */
    unset_price_override?: InputMaybe<Scalars['Boolean']['input']>;
    /** The reason that the price of a service has been overridden. */
    unset_price_override_reason?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the updateScheduledEvent mutation. */
export type UpdateScheduledEventMutationInput = {
    /** Items specific to a voice service. Includes the quantity, price override, and related configuration parameter of each. */
    account_voice_service_details?: InputMaybe<Array<InputMaybe<UpdateScheduledEventAccountVoiceServiceDetailMutationInput>>>;
    /** The amount to be used for this scheduled event. Only applicable for events that relate to money (e.g. price override, payment.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** A date and time */
    datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** A human readable description. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** The ID of an object described by the `event` field. */
    primary_event_object_id?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not to prorate the transaction. */
    prorate?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `prorate` to null. */
    unset_prorate?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSearchFilter mutation. */
export type UpdateSearchFilterMutationInput = {
    /** Whether the filter is available to every user (admins only). */
    all_users?: InputMaybe<Scalars['Boolean']['input']>;
    /** The actual filter, as JSON. */
    filter?: InputMaybe<Scalars['String']['input']>;
    /** The filter's name. */
    name?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateServiceMetadata mutation. */
export type UpdateServiceMetadataMutationInput = {
    /** A descriptive name. */
    name: Scalars['String']['input'];
};
/** The input object that defines the fields for the updateServiceableAddress mutation. */
export type UpdateServiceableAddressMutationInput = {
    /** Address status ID. */
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The address ID for the Anchor address */
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a BillingDefault. */
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** Whether or not this address is an anchor */
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    /** A decimal latitude. */
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    /** Address line 1. */
    line1?: InputMaybe<Scalars['String']['input']>;
    /** Address line 2. */
    line2?: InputMaybe<Scalars['String']['input']>;
    /** A decimal latitude. */
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    /** IDs of `NetworkSite`s. */
    network_site_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The timezone you want times in the system displayed in. */
    timezone?: InputMaybe<Timezone>;
    /** Setting this value to `true` will set `anchor_address_id` to null. */
    unset_anchor_address_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `billing_default_id` to null. */
    unset_billing_default_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Setting this value to `true` will set `line2` to null. */
    unset_line2?: InputMaybe<Scalars['Boolean']['input']>;
    /** A ZIP or postal code. */
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateSignature mutation. */
export type UpdateSignatureMutationInput = {
    /** The ID of a department. */
    department_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not signature is default for mass messages. */
    mass_default?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Body of an SMS signature. */
    sms_signature?: InputMaybe<SmsContactPrefix>;
    /** Whether or not signature is default for triggered messages. */
    triggered_default?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSmsSettings mutation. */
export type UpdateSmsSettingsMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A notification is sent if SMS funds fall below this value. */
    low_funds_threshold?: InputMaybe<Scalars['Int']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** End of quiet time for sending SMS triggered messages. */
    triggered_quiet_end_time?: InputMaybe<Scalars['Time']['input']>;
    /** Start of quiet time for sending SMS triggered messages. */
    triggered_quiet_start_time?: InputMaybe<Scalars['Time']['input']>;
    /** Setting this value to `true` will set `triggered_quiet_end_time` to null. */
    unset_triggered_quiet_end_time?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `triggered_quiet_start_time` to null. */
    unset_triggered_quiet_start_time?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSnmpOid mutation. */
export type UpdateSnmpOidMutationInput = {
    /** Whether or not to auto scale. */
    auto_scale?: InputMaybe<Scalars['Boolean']['input']>;
    /** A 6 character hexadecimal string, representing a color used in HTML. */
    color?: InputMaybe<Scalars['HtmlHexColor']['input']>;
    /** Display as table */
    display_as_table?: InputMaybe<Scalars['Boolean']['input']>;
    /** Divide by */
    divide_by?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An OID */
    oid?: InputMaybe<Scalars['String']['input']>;
    /** Unit of measurement */
    unit_of_measurement?: InputMaybe<Scalars['String']['input']>;
    /** Setting this value to `true` will set `divide_by` to null. */
    unset_divide_by?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `unit_of_measurement` to null. */
    unset_unit_of_measurement?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSnmpOidThreshold mutation. */
export type UpdateSnmpOidThresholdMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An operator that defines how to apply the threshold value to the attribute. */
    operator?: InputMaybe<RangeOperator>;
    /** The ID of an `SnmpOid`. */
    snmp_oid_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The amount of time in minutes that the threshold must be violated before it is triggered. */
    time_period_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** The value. */
    value?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateSnmpOverride mutation. */
export type UpdateSnmpOverrideMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** SNMPv3 auth passphrase */
    snmp3_auth_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 auth protocol */
    snmp3_auth_protocol?: InputMaybe<Snmp3AuthProtocol>;
    /** SNMPv3 context engine ID */
    snmp3_context_engineid?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 context name */
    snmp3_context_name?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy passphrase */
    snmp3_priv_passphrase?: InputMaybe<Scalars['String']['input']>;
    /** SNMPv3 privacy protocol */
    snmp3_priv_protocol?: InputMaybe<Snmp3PrivProtocol>;
    /** SNMPv3 security level */
    snmp3_sec_level?: InputMaybe<Snmp3SecurityLevel>;
    /** SNMP community/securityName */
    snmp_community?: InputMaybe<Scalars['String']['input']>;
    /** SNMP version */
    snmp_version?: InputMaybe<SnmpVersion>;
    /** Setting this value to `true` will set `snmp3_auth_passphrase` to null. */
    unset_snmp3_auth_passphrase?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_auth_protocol` to null. */
    unset_snmp3_auth_protocol?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_context_engineid` to null. */
    unset_snmp3_context_engineid?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_context_name` to null. */
    unset_snmp3_context_name?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_priv_passphrase` to null. */
    unset_snmp3_priv_passphrase?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_priv_protocol` to null. */
    unset_snmp3_priv_protocol?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp3_sec_level` to null. */
    unset_snmp3_sec_level?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp_community` to null. */
    unset_snmp_community?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `snmp_version` to null. */
    unset_snmp_version?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateStoredView mutation. */
export type UpdateStoredViewMutationInput = {
    /** Whether or not this StoredView is available to all users. */
    is_global?: InputMaybe<Scalars['Boolean']['input']>;
    /** A name to identify this `StoredView`. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The column used to sort the filtered results. */
    sort_column?: InputMaybe<Scalars['String']['input']>;
    /** The direction to sort in. */
    sort_direction?: InputMaybe<SortDirection>;
    /** The list of filter groups for this `StoredView`. */
    stored_groups?: InputMaybe<Array<InputMaybe<StoredGroupMutationInput>>>;
    /** The type of `StoredView`. */
    type?: InputMaybe<StoredViewType>;
    /** Setting this value to `true` will set `sort_column` to null. */
    unset_sort_column?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `sort_direction` to null. */
    unset_sort_direction?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSubnet mutation. */
export type UpdateSubnetMutationInput = {
    /** A list of `InlineDevice` IDs. */
    inline_device_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a `Poller`. */
    poller_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Polling priority. */
    polling_priority?: InputMaybe<Scalars['Int']['input']>;
    /** An IPv4/IPv6 subnet. */
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    /** Subnet type. */
    type?: InputMaybe<SubnetType>;
    /** Setting this value to `true` will set `name` to null. */
    unset_name?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `poller_id` to null. */
    unset_poller_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSupernet mutation. */
export type UpdateSupernetMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** An IPv4/IPv6 subnet. */
    subnet?: InputMaybe<Scalars['SubnetScalar']['input']>;
    /** Setting this value to `true` will set `name` to null. */
    unset_name?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSystemBackupDestination mutation. */
export type UpdateSystemBackupDestinationMutationInput = {
    /** The base path to the directory that the file will be stored in. */
    base_path?: InputMaybe<Scalars['String']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The credentials used to authenticate against a system backup destination provider. */
    system_backup_destination_credentials?: InputMaybe<Array<InputMaybe<SystemBackupDestinationCredentialInput>>>;
    /** Setting this value to `true` will set `base_path` to null. */
    unset_base_path?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateSystemBackupSettings mutation. */
export type UpdateSystemBackupSettingsMutationInput = {
    /** Whether or not to automatically perform a backup every day. */
    automatic_backups?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to automatically export backups to configured destinations every day. */
    automatic_exports?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to automatically delete an exported system backup on a destination configured by a client when pruning exports. */
    delete_exported_backups?: InputMaybe<Scalars['Boolean']['input']>;
    /** The number of minutes to wait until a backup in progress is considered to have failed and is ready to be marked as such. */
    in_progress_backup_expire_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** The maximum number of backups allowed to exist at any given time. */
    maximum_backups?: InputMaybe<Scalars['Int']['input']>;
    /** The maximum number of backup exports allowed to exist at any given time. */
    maximum_exports?: InputMaybe<Scalars['Int']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateSystemSettings mutation. */
export type UpdateSystemSettingsMutationInput = {
    /** Application firewall enabled. */
    application_firewall_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Invoices will be created in both English and French for all customers. */
    bilingual_invoices?: InputMaybe<Scalars['Boolean']['input']>;
    /** A city. */
    city?: InputMaybe<Scalars['String']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** Automatically create a RADIUS account when a new account is created. */
    create_radius_account_on_account_creation?: InputMaybe<Scalars['Boolean']['input']>;
    /** The currency the system displays money in. */
    currency?: InputMaybe<Currency>;
    /** Whether all or only primary contacts may access the customer portal. */
    customer_portal_contact_access?: InputMaybe<CustomerPortalContactAccess>;
    /** The date format to use. */
    date_format?: InputMaybe<DateFormat>;
    /** The character used to separate decimals in numbers. */
    decimal_separator?: InputMaybe<DecimalSeparator>;
    /** The id of the Email Domain to use in email From address. */
    default_message_from_email_domain_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The default user name to use in email From address.  For example the 'jane' in jane@domain.com */
    default_message_from_email_user_prefix?: InputMaybe<Scalars['String']['input']>;
    /** The default name to use in email From fields */
    default_message_from_name?: InputMaybe<Scalars['String']['input']>;
    /** the id of the Phone Number to use as default sender for SMS messages. */
    default_message_from_phone_number_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The default language for messages. */
    default_message_language?: InputMaybe<Language>;
    /** The character used to separate digits in numbers. */
    digit_separator?: InputMaybe<DigitSeparator>;
    /** The source for the company used to populate the DBA name on the FCC Form 477. Supports one of service, account, or default. */
    fcc_form_477_company_source?: InputMaybe<FccForm477CompanySource>;
    /** A supported language. */
    language?: InputMaybe<Language>;
    /** The id of the default signature to use for Mass Messages. */
    mass_message_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If true then DHCP leases with Option82 remote_id will assign the IP address to a matching customer MAC address instead of a matching remote_id MAC address. */
    option_82_assign_to_customer_mac?: InputMaybe<Scalars['Boolean']['input']>;
    /** If an invoice is past due, will include red watermark stamp saying "Past Due" in the local language. */
    past_due_stamp_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    /** A text prefix to use when automatically creating a new RADIUS account. */
    radius_account_prefix?: InputMaybe<Scalars['String']['input']>;
    /** The id of the default signature to use for Single Recipient Messages. */
    single_recipient_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A state, province, or other country subdivision. */
    subdivision?: InputMaybe<Subdivision>;
    /** The date and time to suppress inventory item status alerts until. */
    suppress_alerts_until_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    /** The time format to use. */
    time_format?: InputMaybe<TimeFormat>;
    /** The timezone you want times in the system displayed in. */
    timezone?: InputMaybe<Timezone>;
    /** The id of the default signature to use for Triggered Messages. */
    triggered_message_signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The system of units. */
    units?: InputMaybe<Units>;
    /** Setting this value to `true` will set `city` to null. */
    unset_city?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `default_message_from_email_domain_id` to null. */
    unset_default_message_from_email_domain_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `default_message_from_phone_number_id` to null. */
    unset_default_message_from_phone_number_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `default_message_language` to null. */
    unset_default_message_language?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `mass_message_signature_id` to null. */
    unset_mass_message_signature_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `single_recipient_signature_id` to null. */
    unset_single_recipient_signature_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `suppress_alerts_until_datetime` to null. */
    unset_suppress_alerts_until_datetime?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `triggered_message_signature_id` to null. */
    unset_triggered_message_signature_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateTask mutation. */
export type UpdateTaskMutationInput = {
    /** The date on which the task is due. */
    due?: InputMaybe<Scalars['Date']['input']>;
    /** The order this item is shown in a list. */
    list_order?: InputMaybe<Scalars['Int']['input']>;
    /** The task to be performed. */
    task?: InputMaybe<Scalars['Text']['input']>;
    /** Setting this value to `true` will set `due` to null. */
    unset_due?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `user_id` to null. */
    unset_user_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateTaskTemplateItem mutation. */
export type UpdateTaskTemplateItemMutationInput = {
    /** The ID of the entity that completes or completed this task. Only required if completable_type is `CustomField`. */
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that completes this task. Only required when completion_type is not `BOOLEAN`. */
    completable_type?: InputMaybe<CompletableType>;
    /** How this task gets marked as completed. */
    completion_type?: InputMaybe<TaskCompletionType>;
    /** The order this item is shown in a list. */
    list_order?: InputMaybe<Scalars['Int']['input']>;
    /** The task to be performed. */
    task?: InputMaybe<Scalars['String']['input']>;
    /** The ID of a `TaskTemplate`. */
    task_template_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateTaskTemplate mutation. */
export type UpdateTaskTemplateMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateTaxExemption mutation. */
export type UpdateTaxExemptionMutationInput = {
    /** A list of `AvalaraTaxCategory` IDs. */
    avalara_tax_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The jurisdictions of this `TaxExemption`. */
    jurisdictions?: InputMaybe<Array<InputMaybe<TaxJurisdiction>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateTax mutation. */
export type UpdateTaxMutationInput = {
    /** Whether this `Tax` is applied as a percentage of the `Service` charge, or as a flat rate. */
    application?: InputMaybe<TaxApplication>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The rate for a tax. For a percentage based tax, this is a percentage. For a flat tax, it is a currency value in the smallest currency unit (e.g. cents, pence, pesos.) */
    rate?: InputMaybe<Scalars['Float']['input']>;
    /** Whether this tax is applied based on the account being in a specific geography, or whether it is applied to all accounts. */
    type?: InputMaybe<TaxType>;
};
/** The input object that defines the fields for the updateTaxOverride mutation. */
export type UpdateTaxOverrideMutationInput = {
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The rate for a tax. For a percentage based tax, this is a percentage. For a flat tax, it is a currency value in the smallest currency unit (e.g. cents, pence, pesos.) */
    rate: Scalars['Float']['input'];
};
/** The input object that defines the fields for the updateTaxProvider mutation. */
export type UpdateTaxProviderMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The list of subdivisions where this tax provider will collect taxes. */
    subdivisions?: InputMaybe<Array<InputMaybe<Subdivision>>>;
    /** Credentials for the tax provider. */
    tax_provider_credentials?: InputMaybe<Array<InputMaybe<TaxProviderCredentialMutationInput>>>;
};
/** The input object that defines the fields for the updateTicketCategory mutation. */
export type UpdateTicketCategoryMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateTicketComment mutation. */
export type UpdateTicketCommentMutationInput = {
    /** The body. */
    body?: InputMaybe<Scalars['Text']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
};
/** The input object that defines the fields for the updateTicketGroup mutation. */
export type UpdateTicketGroupMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether or not the group is private. */
    private?: InputMaybe<Scalars['Boolean']['input']>;
    /** The IDs of `Users` in this `TicketGroup`. */
    user_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateTicket mutation. */
export type UpdateTicketMutationInput = {
    /** Data to insert into custom fields. */
    custom_field_data?: InputMaybe<Array<InputMaybe<CustomFieldDataMutationInput>>>;
    /** A human readable description. */
    description?: InputMaybe<Scalars['Text']['input']>;
    /** The date this invoice is due by. */
    due_date?: InputMaybe<Scalars['Date']['input']>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** The ID of an `InboundMailbox`. */
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the `Ticket` that this `Ticket` is a child of. */
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The priority of a `Ticket`. */
    priority?: InputMaybe<TicketPriority>;
    /** The status. */
    status?: InputMaybe<TicketStatus>;
    /** The subject. */
    subject?: InputMaybe<Scalars['String']['input']>;
    /** Allows subscribing to notifications for this entity. */
    subscription?: InputMaybe<SubscriptionMutationInput>;
    /** The task to be performed. */
    tasks?: InputMaybe<Array<InputMaybe<TaskMutationInput>>>;
    /** IDs of `TicketCategory`s. */
    ticket_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of a `TicketGroup`. */
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Recipients for ticket replies. */
    ticket_recipients?: InputMaybe<Array<InputMaybe<CreateTicketRecipientDuringTicketCreationMutationInput>>>;
    /** The ID of the entity that this `Ticket` is associated with. */
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that this `Ticket` is associated with. */
    ticketable_type?: InputMaybe<TicketableType>;
    /** If IDs of `CustomField` objects that are associated with this entity are provided here, they will be unset and removed. You cannot unset data where the `CustomField` property `required` is set to `true`. */
    unset_custom_field_data?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** Setting this value to `true` will set `due_date` to null. */
    unset_due_date?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `inbound_mailbox_id` to null. */
    unset_inbound_mailbox_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `parent_ticket_id` to null. */
    unset_parent_ticket_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticket_group_id` to null. */
    unset_ticket_group_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticketable_id` to null. */
    unset_ticketable_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `ticketable_type` to null. */
    unset_ticketable_type?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `user_id` to null. */
    unset_user_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a User. */
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The input object that defines the fields for the updateTicketRecipient mutation. */
export type UpdateTicketRecipientMutationInput = {
    /** An email address. */
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateTicketingSettings mutation. */
export type UpdateTicketingSettingsMutationInput = {
    /** The number of days a ticket needs to be closed before new inbound emails will create a new ticket rather than re-open the existing one. */
    days_closed_before_inbound_email_creates_new_ticket?: InputMaybe<Scalars['Int']['input']>;
    /** Setting this value to `true` will set `days_closed_before_inbound_email_creates_new_ticket` to null. */
    unset_days_closed_before_inbound_email_creates_new_ticket?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateTowercoverageConfiguration mutation. */
export type UpdateTowercoverageConfigurationInput = {
    /** The ID of an AccountStatus. */
    account_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of an AccountType. */
    account_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The alphanumeric 64-character API key for TowerCoverage. */
    api_key?: InputMaybe<Scalars['Text']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of the PhoneNumberType associated with this phone number. */
    phone_number_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `account_status_id` to null. */
    unset_account_status_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `account_type_id` to null. */
    unset_account_type_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `api_key` to null. */
    unset_api_key?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `phone_number_type_id` to null. */
    unset_phone_number_type_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateTriggeredEmail mutation. */
export type UpdateTriggeredEmailMutationInput = {
    /** Whether or not child accounts are allowed. */
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    /** The count associated with this `TriggeredEmail`. This is defined by the trigger, and could be something like a number of days, months, gigabytes, etc. */
    count?: InputMaybe<Scalars['Int']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    email_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The ID of an EmailMessage. */
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The `Job` ID for this `TriggeredEmail`. This will only be saved for triggered emails using the trigger `JOB_SCHEDULED`. */
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A list of MessageCategory IDs to apply to this triggered email. If this triggered email sends to account contacts, then the contact must have at least one of the message categories defined here in order to receive this email. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The trigger for this message. */
    trigger?: InputMaybe<EmailTrigger>;
};
/** The input object that defines the fields for the updateTriggeredMessage mutation. */
export type UpdateTriggeredMessageMutationInput = {
    /** Whether or not child accounts are allowed. */
    allow_children?: InputMaybe<Scalars['Boolean']['input']>;
    /** The count associated with this `TriggeredMessage`. This is defined by the trigger, and could be something like a number of days, months, gigabytes, etc. */
    count?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of an EmailMessage. */
    email_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of a `JobType`. */
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** A list of MessageCategory IDs to apply to this contact. If this property is excluded, then the contact will inherit the default message categories, which is the typical behavior. You should only include this property if you want to override the default behavior. */
    message_category_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a signature. */
    signature_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of the SMS message. */
    sms_message_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The trigger for this message. */
    trigger?: InputMaybe<MessageTrigger>;
    /** Setting this value to `true` will set `email_message_id` to null. */
    unset_email_message_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `signature_id` to null. */
    unset_signature_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `sms_message_id` to null. */
    unset_sms_message_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateUninventoriedMacAddress mutation. */
export type UpdateUninventoriedMacAddressMutationInput = {
    /** A MAC address. */
    mac_address: Scalars['MacAddress']['input'];
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateUsageBasedBillingPolicyFreePeriod mutation. */
export type UpdateUsageBasedBillingPolicyFreePeriodMutationInput = {
    /** A day. */
    day?: InputMaybe<Day>;
    /** The end. */
    end?: InputMaybe<Scalars['Time']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The start. */
    start?: InputMaybe<Scalars['Time']['input']>;
};
/** The input object that defines the fields for the updateUsageBasedBillingPolicy mutation. */
export type UpdateUsageBasedBillingPolicyMutationInput = {
    /** Whether or not a customer can purchase additional data usage capacity during a billing period. */
    allow_purchase_of_additional_capacity_during_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not to assess charges for usage over the bandwidth limit at the end of the billing period. */
    assess_charges_at_end_of_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    /** The available data usage in this policy, measured in gigabytes. */
    cap_in_gigabytes?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Whether or not rollover is enabled. */
    rollover_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not rollover expiration is enabled. */
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** Rollover expires after this many months, if rollover expiration is enabled. */
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    /** The overage service that this policy uses to charge for service overages. */
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `service_id` to null. */
    unset_service_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateUser mutation. */
export type UpdateUserMutationInput = {
    /** An email address. */
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The preferred language for this user. If none is set, then the system default will be used. This will affect the interface, as well as communications sent to this user. */
    language?: InputMaybe<Language>;
    /** A mobile phone number. This will be used to send SMS messages. */
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A password. */
    password?: InputMaybe<Scalars['String']['input']>;
    /** The publicly viewable name of this user. */
    public_name?: InputMaybe<Scalars['String']['input']>;
    /** The ID of a Role. */
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Super admins receive all system permissions automatically, regardless of their role. Only a super admin can create another super admin. If you submit this property when you are not a super admin, the mutation will fail. */
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `mobile_number` to null. */
    unset_mobile_number?: InputMaybe<Scalars['Boolean']['input']>;
    /** A username, used for authentication. */
    username?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateVehicle mutation. */
export type UpdateVehicleMutationInput = {
    /** Whether or not to always track the vehicle. */
    gps_tracking_always?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Friday. */
    gps_tracking_day_friday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Monday. */
    gps_tracking_day_monday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Saturday. */
    gps_tracking_day_saturday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Sunday. */
    gps_tracking_day_sunday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Thursday. */
    gps_tracking_day_thursday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Tuesday. */
    gps_tracking_day_tuesday?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, then track on Wednesday. */
    gps_tracking_day_wednesday?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not GPS Tracking enabled for vehicle. */
    gps_tracking_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** If not always, end time for tracking. */
    gps_tracking_end_time?: InputMaybe<Scalars['Time']['input']>;
    /** A `GpsTrackingProvider` ID. */
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If not always, start time for tracking. */
    gps_tracking_start_time?: InputMaybe<Scalars['Time']['input']>;
    /** The timezone you want times in the system displayed in. */
    gps_tracking_timezone?: InputMaybe<Timezone>;
    /** A GPS Tracking Provider vehicle unique identifier. */
    gps_tracking_uid?: InputMaybe<Scalars['String']['input']>;
    /** The manufacturer. */
    manufacturer?: InputMaybe<Scalars['String']['input']>;
    /** The model. */
    model?: InputMaybe<Scalars['String']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Setting this value to `true` will set `gps_tracking_provider_id` to null. */
    unset_gps_tracking_provider_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `gps_tracking_timezone` to null. */
    unset_gps_tracking_timezone?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `gps_tracking_uid` to null. */
    unset_gps_tracking_uid?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `manufacturer` to null. */
    unset_manufacturer?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `model` to null. */
    unset_model?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `vin` to null. */
    unset_vin?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `year` to null. */
    unset_year?: InputMaybe<Scalars['Boolean']['input']>;
    /** The vehicle identification number. */
    vin?: InputMaybe<Scalars['String']['input']>;
    /** A year. */
    year?: InputMaybe<Scalars['Int']['input']>;
};
/** The input object that defines the fields for the updateVendorItem mutation. */
export type UpdateVendorItemMutationInput = {
    /** Archived vendor items may not be used for creating new purchase orders or product requests. */
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** Part number used by the vendor to identify this vendor item. */
    part_number?: InputMaybe<Scalars['String']['input']>;
    /** The purchase price of this item from the vendor. */
    price?: InputMaybe<Scalars['Int']['input']>;
    /** Number of inventory models that are included in a single unit of this vendors product. */
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    /** Flag for vendor items that should create a one-time service for retail sale to customers. */
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    /** The price of the one-time service created for this vendor item */
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of the one-time service created when this vendor item was created. */
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Setting this value to `true` will set `part_number` to null. */
    unset_part_number?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `retail_item_service_id` to null. */
    unset_retail_item_service_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** The ID of the entity that is referred to by this vendor item. */
    vendoritemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type of entity that is referred to by this vendor item. */
    vendoritemable_type?: InputMaybe<VendoritemableType>;
};
/** The input object that defines the fields for the updateVendor mutation. */
export type UpdateVendorMutationInput = {
    /** The physical address of the inventory location. */
    address?: InputMaybe<CreateAddressMutationInput>;
    /** Archived vendors may not be used for creating new Purchase Orders or Product Requests. */
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    /** Determines if approved purchase orders for this vendor should automatically dispatch an email to the vendor. */
    automate_approved_purchase_orders?: InputMaybe<Scalars['Boolean']['input']>;
    /** The currency used for all transactions with this vendor. */
    currency?: InputMaybe<Currency>;
    /** A list of file IDs to be associated with this object. These must first have been uploaded to the /files endpoint and must be currently unassociated. */
    files?: InputMaybe<Array<InputMaybe<AssociateFileMutationInput>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The terms of payment for deliveries from this vendor. */
    payment_terms?: InputMaybe<PaymentTerm>;
    /** A list of IDs belonging to the taxes that should be applied to each item sold by this vendor. */
    taxes?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
};
/** The input object that defines the fields for the updateVoiceProvider mutation. */
export type UpdateVoiceProviderMutationInput = {
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** The input object that defines the fields for the updateVoiceProviderRateChargePercent mutation. */
export type UpdateVoiceProviderRateChargePercentMutationInput = {
    /** The percentage over the base rate to charge the customer. */
    charge_percent: Scalars['Float']['input'];
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['input'];
};
/** The input object that defines the fields for the updateVoiceProviderRate mutation. */
export type UpdateVoiceProviderRateMutationInput = {
    /** The rate that is imported from a rate deck. */
    base_rate?: InputMaybe<Scalars['Float']['input']>;
    /** The percentage over the base rate to charge the customer. */
    charge_percent?: InputMaybe<Scalars['Float']['input']>;
    /** The description for the rate. */
    description?: InputMaybe<Scalars['String']['input']>;
};
/** The input object that defines the fields for the updateVoiceServiceGenericParameter mutation. */
export type UpdateVoiceServiceGenericParameterMutationInput = {
    /** A human readable description. */
    description?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The price per unit of this item. */
    price?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this voice service generic parameter creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<VoiceServiceGenericParameterTaxMutationInput>>>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateVoiceService mutation. */
export type UpdateVoiceServiceMutationInput = {
    /** A list of account group IDs that this account is part of. */
    account_group_ids?: InputMaybe<Array<InputMaybe<Scalars['Int64Bit']['input']>>>;
    /** The amount, in the smallest currency value (e.g. cents, pence, pesos.) */
    amount?: InputMaybe<Scalars['Int']['input']>;
    /** How this is applied. */
    application?: InputMaybe<ServiceApplication>;
    /** How often this service bills, in months. */
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of the company that this entity operates under. */
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The cost per minute for local calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    cost_per_minute_local_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    /** The cost per minute for long distance calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    cost_per_minute_long_distance_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    /** A two character country code. */
    country?: InputMaybe<Country>;
    /** If the amount for this service is zero, it will still display on invoices. */
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** This is the minimum amount of time the customer will be charged for a call. */
    first_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a GeneralLedgerCode. */
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** If a customer has a toll free number, this is the rate charged to them for inbound calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    inbound_toll_free_rate_per_minute_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    /** The quantity of free local minutes provided, if `unlimited_local_minutes` is false. */
    local_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** Which prefixes should be treated as local for this voice service. */
    local_prefixes?: InputMaybe<Array<InputMaybe<Scalars['Numeric']['input']>>>;
    /** The quantity of free long distance minutes provided, if `unlimited_long_distance_minutes` is false. */
    long_distance_minutes?: InputMaybe<Scalars['Int']['input']>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** Hide parameters of this service on customer invoices/statements and in the customer portal. */
    rollup_generic_parameters?: InputMaybe<Scalars['Boolean']['input']>;
    /** Indicates if Call Detail Records (CDRs) for this service should be displayed on an invoice. */
    show_call_detail_records_on_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    /** After the `first_interval_in_seconds` time is exceeded, this is the minimum amount of subsequent time. For example, if `first_interval_in_seconds` is 30, and `sub_interval_in_seconds` is 6, then a 31 second call would be charged at 36 seconds, and a 37 second call would be charged at 42 seconds. */
    sub_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The taxes applied when this service creates a transaction. */
    taxes?: InputMaybe<Array<InputMaybe<ServiceTaxMutationInput>>>;
    /** Whether this service provides unlimited local minutes. */
    unlimited_local_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    /** Whether this service provides unlimited long distance minutes. */
    unlimited_long_distance_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `company_id` to null. */
    unset_company_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `general_ledger_code_id` to null. */
    unset_general_ledger_code_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `reverse_tax_definition_id` to null. */
    unset_reverse_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
    /** Setting this value to `true` will set `tax_definition_id` to null. */
    unset_tax_definition_id?: InputMaybe<Scalars['Boolean']['input']>;
};
/** The input object that defines the fields for the updateWebhookEndpoint mutation. */
export type UpdateWebhookEndpointMutationInput = {
    /** Whether or not this is enabled. */
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    /** The endpoint. */
    endpoint?: InputMaybe<Scalars['HttpsUrl']['input']>;
    /** The model and event associated with a webhook endpoint. */
    model_events?: InputMaybe<Array<InputMaybe<WebhookEndpointModelEventInput>>>;
    /** A descriptive name. */
    name?: InputMaybe<Scalars['String']['input']>;
    /** A note about this entity. */
    note?: InputMaybe<NoteMutationInput>;
};
/** A US county. */
export declare enum UsCounty {
    /** Autauga, Alabama */
    County_01001 = "COUNTY_01001",
    /** Baldwin, Alabama */
    County_01003 = "COUNTY_01003",
    /** Barbour, Alabama */
    County_01005 = "COUNTY_01005",
    /** Bibb, Alabama */
    County_01007 = "COUNTY_01007",
    /** Blount, Alabama */
    County_01009 = "COUNTY_01009",
    /** Bullock, Alabama */
    County_01011 = "COUNTY_01011",
    /** Butler, Alabama */
    County_01013 = "COUNTY_01013",
    /** Calhoun, Alabama */
    County_01015 = "COUNTY_01015",
    /** Chambers, Alabama */
    County_01017 = "COUNTY_01017",
    /** Cherokee, Alabama */
    County_01019 = "COUNTY_01019",
    /** Chilton, Alabama */
    County_01021 = "COUNTY_01021",
    /** Choctaw, Alabama */
    County_01023 = "COUNTY_01023",
    /** Clarke, Alabama */
    County_01025 = "COUNTY_01025",
    /** Clay, Alabama */
    County_01027 = "COUNTY_01027",
    /** Cleburne, Alabama */
    County_01029 = "COUNTY_01029",
    /** Coffee, Alabama */
    County_01031 = "COUNTY_01031",
    /** Colbert, Alabama */
    County_01033 = "COUNTY_01033",
    /** Conecuh, Alabama */
    County_01035 = "COUNTY_01035",
    /** Coosa, Alabama */
    County_01037 = "COUNTY_01037",
    /** Covington, Alabama */
    County_01039 = "COUNTY_01039",
    /** Crenshaw, Alabama */
    County_01041 = "COUNTY_01041",
    /** Cullman, Alabama */
    County_01043 = "COUNTY_01043",
    /** Dale, Alabama */
    County_01045 = "COUNTY_01045",
    /** Dallas, Alabama */
    County_01047 = "COUNTY_01047",
    /** De Kalb, Alabama */
    County_01049 = "COUNTY_01049",
    /** Elmore, Alabama */
    County_01051 = "COUNTY_01051",
    /** Escambia, Alabama */
    County_01053 = "COUNTY_01053",
    /** Etowah, Alabama */
    County_01055 = "COUNTY_01055",
    /** Fayette, Alabama */
    County_01057 = "COUNTY_01057",
    /** Franklin, Alabama */
    County_01059 = "COUNTY_01059",
    /** Geneva, Alabama */
    County_01061 = "COUNTY_01061",
    /** Greene, Alabama */
    County_01063 = "COUNTY_01063",
    /** Hale, Alabama */
    County_01065 = "COUNTY_01065",
    /** Henry, Alabama */
    County_01067 = "COUNTY_01067",
    /** Houston, Alabama */
    County_01069 = "COUNTY_01069",
    /** Jackson, Alabama */
    County_01071 = "COUNTY_01071",
    /** Jefferson, Alabama */
    County_01073 = "COUNTY_01073",
    /** Lamar, Alabama */
    County_01075 = "COUNTY_01075",
    /** Lauderdale, Alabama */
    County_01077 = "COUNTY_01077",
    /** Lawrence, Alabama */
    County_01079 = "COUNTY_01079",
    /** Lee, Alabama */
    County_01081 = "COUNTY_01081",
    /** Limestone, Alabama */
    County_01083 = "COUNTY_01083",
    /** Lowndes, Alabama */
    County_01085 = "COUNTY_01085",
    /** Macon, Alabama */
    County_01087 = "COUNTY_01087",
    /** Madison, Alabama */
    County_01089 = "COUNTY_01089",
    /** Marengo, Alabama */
    County_01091 = "COUNTY_01091",
    /** Marion, Alabama */
    County_01093 = "COUNTY_01093",
    /** Marshall, Alabama */
    County_01095 = "COUNTY_01095",
    /** Mobile, Alabama */
    County_01097 = "COUNTY_01097",
    /** Monroe, Alabama */
    County_01099 = "COUNTY_01099",
    /** Montgomery, Alabama */
    County_01101 = "COUNTY_01101",
    /** Morgan, Alabama */
    County_01103 = "COUNTY_01103",
    /** Perry, Alabama */
    County_01105 = "COUNTY_01105",
    /** Pickens, Alabama */
    County_01107 = "COUNTY_01107",
    /** Pike, Alabama */
    County_01109 = "COUNTY_01109",
    /** Randolph, Alabama */
    County_01111 = "COUNTY_01111",
    /** Russell, Alabama */
    County_01113 = "COUNTY_01113",
    /** St Clair, Alabama */
    County_01115 = "COUNTY_01115",
    /** Shelby, Alabama */
    County_01117 = "COUNTY_01117",
    /** Sumter, Alabama */
    County_01119 = "COUNTY_01119",
    /** Talladega, Alabama */
    County_01121 = "COUNTY_01121",
    /** Tallapoosa, Alabama */
    County_01123 = "COUNTY_01123",
    /** Tuscaloosa, Alabama */
    County_01125 = "COUNTY_01125",
    /** Walker, Alabama */
    County_01127 = "COUNTY_01127",
    /** Washington, Alabama */
    County_01129 = "COUNTY_01129",
    /** Wilcox, Alabama */
    County_01131 = "COUNTY_01131",
    /** Winston, Alabama */
    County_01133 = "COUNTY_01133",
    /** Aleutians East, Alaska */
    County_02013 = "COUNTY_02013",
    /** Aleutians West, Alaska */
    County_02016 = "COUNTY_02016",
    /** Anchorage, Alaska */
    County_02020 = "COUNTY_02020",
    /** Bethel, Alaska */
    County_02050 = "COUNTY_02050",
    /** Bristol Bay, Alaska */
    County_02060 = "COUNTY_02060",
    /** Denali, Alaska */
    County_02068 = "COUNTY_02068",
    /** Dillingham, Alaska */
    County_02070 = "COUNTY_02070",
    /** Fairbanks North Star, Alaska */
    County_02090 = "COUNTY_02090",
    /** Haines, Alaska */
    County_02100 = "COUNTY_02100",
    /** Juneau, Alaska */
    County_02110 = "COUNTY_02110",
    /** Kenai Peninsula, Alaska */
    County_02122 = "COUNTY_02122",
    /** Ketchikan Gateway, Alaska */
    County_02130 = "COUNTY_02130",
    /** Kodiak Island, Alaska */
    County_02150 = "COUNTY_02150",
    /** Lake and Peninsula, Alaska */
    County_02164 = "COUNTY_02164",
    /** Matanuska Susitna, Alaska */
    County_02170 = "COUNTY_02170",
    /** Nome, Alaska */
    County_02180 = "COUNTY_02180",
    /** North Slope, Alaska */
    County_02185 = "COUNTY_02185",
    /** Northwest Arctic, Alaska */
    County_02188 = "COUNTY_02188",
    /** Prince Wales Ketchikan, Alaska */
    County_02201 = "COUNTY_02201",
    /** Sitka, Alaska */
    County_02220 = "COUNTY_02220",
    /** Skagway Hoonah Angoon, Alaska */
    County_02232 = "COUNTY_02232",
    /** Southeast Fairbanks, Alaska */
    County_02240 = "COUNTY_02240",
    /** Valdez Cordova, Alaska */
    County_02261 = "COUNTY_02261",
    /** Wade Hampton, Alaska */
    County_02270 = "COUNTY_02270",
    /** Wrangell Petersburg, Alaska */
    County_02280 = "COUNTY_02280",
    /** Yakutat, Alaska */
    County_02282 = "COUNTY_02282",
    /** Yukon Koyukuk, Alaska */
    County_02290 = "COUNTY_02290",
    /** Apache, Arizona */
    County_04001 = "COUNTY_04001",
    /** Cochise, Arizona */
    County_04003 = "COUNTY_04003",
    /** Coconino, Arizona */
    County_04005 = "COUNTY_04005",
    /** Gila, Arizona */
    County_04007 = "COUNTY_04007",
    /** Graham, Arizona */
    County_04009 = "COUNTY_04009",
    /** Greenlee, Arizona */
    County_04011 = "COUNTY_04011",
    /** La Paz, Arizona */
    County_04012 = "COUNTY_04012",
    /** Maricopa, Arizona */
    County_04013 = "COUNTY_04013",
    /** Mohave, Arizona */
    County_04015 = "COUNTY_04015",
    /** Navajo, Arizona */
    County_04017 = "COUNTY_04017",
    /** Pima, Arizona */
    County_04019 = "COUNTY_04019",
    /** Pinal, Arizona */
    County_04021 = "COUNTY_04021",
    /** Santa Cruz, Arizona */
    County_04023 = "COUNTY_04023",
    /** Yavapai, Arizona */
    County_04025 = "COUNTY_04025",
    /** Yuma, Arizona */
    County_04027 = "COUNTY_04027",
    /** Arkansas, Arkansas */
    County_05001 = "COUNTY_05001",
    /** Ashley, Arkansas */
    County_05003 = "COUNTY_05003",
    /** Baxter, Arkansas */
    County_05005 = "COUNTY_05005",
    /** Benton, Arkansas */
    County_05007 = "COUNTY_05007",
    /** Boone, Arkansas */
    County_05009 = "COUNTY_05009",
    /** Bradley, Arkansas */
    County_05011 = "COUNTY_05011",
    /** Calhoun, Arkansas */
    County_05013 = "COUNTY_05013",
    /** Carroll, Arkansas */
    County_05015 = "COUNTY_05015",
    /** Chicot, Arkansas */
    County_05017 = "COUNTY_05017",
    /** Clark, Arkansas */
    County_05019 = "COUNTY_05019",
    /** Clay, Arkansas */
    County_05021 = "COUNTY_05021",
    /** Cleburne, Arkansas */
    County_05023 = "COUNTY_05023",
    /** Cleveland, Arkansas */
    County_05025 = "COUNTY_05025",
    /** Columbia, Arkansas */
    County_05027 = "COUNTY_05027",
    /** Conway, Arkansas */
    County_05029 = "COUNTY_05029",
    /** Craighead, Arkansas */
    County_05031 = "COUNTY_05031",
    /** Crawford, Arkansas */
    County_05033 = "COUNTY_05033",
    /** Crittenden, Arkansas */
    County_05035 = "COUNTY_05035",
    /** Cross, Arkansas */
    County_05037 = "COUNTY_05037",
    /** Dallas, Arkansas */
    County_05039 = "COUNTY_05039",
    /** Desha, Arkansas */
    County_05041 = "COUNTY_05041",
    /** Drew, Arkansas */
    County_05043 = "COUNTY_05043",
    /** Faulkner, Arkansas */
    County_05045 = "COUNTY_05045",
    /** Franklin, Arkansas */
    County_05047 = "COUNTY_05047",
    /** Fulton, Arkansas */
    County_05049 = "COUNTY_05049",
    /** Garland, Arkansas */
    County_05051 = "COUNTY_05051",
    /** Grant, Arkansas */
    County_05053 = "COUNTY_05053",
    /** Greene, Arkansas */
    County_05055 = "COUNTY_05055",
    /** Hempstead, Arkansas */
    County_05057 = "COUNTY_05057",
    /** Hot Spring, Arkansas */
    County_05059 = "COUNTY_05059",
    /** Howard, Arkansas */
    County_05061 = "COUNTY_05061",
    /** Independence, Arkansas */
    County_05063 = "COUNTY_05063",
    /** Izard, Arkansas */
    County_05065 = "COUNTY_05065",
    /** Jackson, Arkansas */
    County_05067 = "COUNTY_05067",
    /** Jefferson, Arkansas */
    County_05069 = "COUNTY_05069",
    /** Johnson, Arkansas */
    County_05071 = "COUNTY_05071",
    /** Lafayette, Arkansas */
    County_05073 = "COUNTY_05073",
    /** Lawrence, Arkansas */
    County_05075 = "COUNTY_05075",
    /** Lee, Arkansas */
    County_05077 = "COUNTY_05077",
    /** Lincoln, Arkansas */
    County_05079 = "COUNTY_05079",
    /** Little River, Arkansas */
    County_05081 = "COUNTY_05081",
    /** Logan, Arkansas */
    County_05083 = "COUNTY_05083",
    /** Lonoke, Arkansas */
    County_05085 = "COUNTY_05085",
    /** Madison, Arkansas */
    County_05087 = "COUNTY_05087",
    /** Marion, Arkansas */
    County_05089 = "COUNTY_05089",
    /** Miller, Arkansas */
    County_05091 = "COUNTY_05091",
    /** Mississippi, Arkansas */
    County_05093 = "COUNTY_05093",
    /** Monroe, Arkansas */
    County_05095 = "COUNTY_05095",
    /** Nevada, Arkansas */
    County_05099 = "COUNTY_05099",
    /** Newton, Arkansas */
    County_05101 = "COUNTY_05101",
    /** Ouachita, Arkansas */
    County_05103 = "COUNTY_05103",
    /** Perry, Arkansas */
    County_05105 = "COUNTY_05105",
    /** Phillips, Arkansas */
    County_05107 = "COUNTY_05107",
    /** Pike, Arkansas */
    County_05109 = "COUNTY_05109",
    /** Poinsett, Arkansas */
    County_05111 = "COUNTY_05111",
    /** Polk, Arkansas */
    County_05113 = "COUNTY_05113",
    /** Pope, Arkansas */
    County_05115 = "COUNTY_05115",
    /** Prairie, Arkansas */
    County_05117 = "COUNTY_05117",
    /** Pulaski, Arkansas */
    County_05119 = "COUNTY_05119",
    /** Randolph, Arkansas */
    County_05121 = "COUNTY_05121",
    /** St Francis, Arkansas */
    County_05123 = "COUNTY_05123",
    /** Saline, Arkansas */
    County_05125 = "COUNTY_05125",
    /** Scott, Arkansas */
    County_05127 = "COUNTY_05127",
    /** Searcy, Arkansas */
    County_05129 = "COUNTY_05129",
    /** Sebastian, Arkansas */
    County_05131 = "COUNTY_05131",
    /** Sevier, Arkansas */
    County_05133 = "COUNTY_05133",
    /** Sharp, Arkansas */
    County_05135 = "COUNTY_05135",
    /** Stone, Arkansas */
    County_05137 = "COUNTY_05137",
    /** Union, Arkansas */
    County_05139 = "COUNTY_05139",
    /** Van Buren, Arkansas */
    County_05141 = "COUNTY_05141",
    /** Washington, Arkansas */
    County_05143 = "COUNTY_05143",
    /** White, Arkansas */
    County_05145 = "COUNTY_05145",
    /** Woodruff, Arkansas */
    County_05147 = "COUNTY_05147",
    /** Yell, Arkansas */
    County_05149 = "COUNTY_05149",
    /** Alameda, California */
    County_06001 = "COUNTY_06001",
    /** Alpine, California */
    County_06003 = "COUNTY_06003",
    /** Amador, California */
    County_06005 = "COUNTY_06005",
    /** Butte, California */
    County_06007 = "COUNTY_06007",
    /** Calaveras, California */
    County_06009 = "COUNTY_06009",
    /** Colusa, California */
    County_06011 = "COUNTY_06011",
    /** Contra Costa, California */
    County_06013 = "COUNTY_06013",
    /** Del Norte, California */
    County_06015 = "COUNTY_06015",
    /** El Dorado, California */
    County_06017 = "COUNTY_06017",
    /** Fresno, California */
    County_06019 = "COUNTY_06019",
    /** Glenn, California */
    County_06021 = "COUNTY_06021",
    /** Humboldt, California */
    County_06023 = "COUNTY_06023",
    /** Imperial, California */
    County_06025 = "COUNTY_06025",
    /** Inyo, California */
    County_06027 = "COUNTY_06027",
    /** Kern, California */
    County_06029 = "COUNTY_06029",
    /** Kings, California */
    County_06031 = "COUNTY_06031",
    /** Lake, California */
    County_06033 = "COUNTY_06033",
    /** Lassen, California */
    County_06035 = "COUNTY_06035",
    /** Los Angeles, California */
    County_06037 = "COUNTY_06037",
    /** Madera, California */
    County_06039 = "COUNTY_06039",
    /** Marin, California */
    County_06041 = "COUNTY_06041",
    /** Mariposa, California */
    County_06043 = "COUNTY_06043",
    /** Mendocino, California */
    County_06045 = "COUNTY_06045",
    /** Merced, California */
    County_06047 = "COUNTY_06047",
    /** Modoc, California */
    County_06049 = "COUNTY_06049",
    /** Mono, California */
    County_06051 = "COUNTY_06051",
    /** Monterey, California */
    County_06053 = "COUNTY_06053",
    /** Napa, California */
    County_06055 = "COUNTY_06055",
    /** Nevada, California */
    County_06057 = "COUNTY_06057",
    /** Orange, California */
    County_06059 = "COUNTY_06059",
    /** Placer, California */
    County_06061 = "COUNTY_06061",
    /** Plumas, California */
    County_06063 = "COUNTY_06063",
    /** Riverside, California */
    County_06065 = "COUNTY_06065",
    /** Sacramento, California */
    County_06067 = "COUNTY_06067",
    /** San Benito, California */
    County_06069 = "COUNTY_06069",
    /** San Bernardino, California */
    County_06071 = "COUNTY_06071",
    /** San Diego, California */
    County_06073 = "COUNTY_06073",
    /** San Francisco, California */
    County_06075 = "COUNTY_06075",
    /** San Joaquin, California */
    County_06077 = "COUNTY_06077",
    /** San Luis Obispo, California */
    County_06079 = "COUNTY_06079",
    /** San Mateo, California */
    County_06081 = "COUNTY_06081",
    /** Santa Barbara, California */
    County_06083 = "COUNTY_06083",
    /** Santa Clara, California */
    County_06085 = "COUNTY_06085",
    /** Santa Cruz, California */
    County_06087 = "COUNTY_06087",
    /** Shasta, California */
    County_06089 = "COUNTY_06089",
    /** Sierra, California */
    County_06091 = "COUNTY_06091",
    /** Siskiyou, California */
    County_06093 = "COUNTY_06093",
    /** Solano, California */
    County_06095 = "COUNTY_06095",
    /** Sonoma, California */
    County_06097 = "COUNTY_06097",
    /** Stanislaus, California */
    County_06099 = "COUNTY_06099",
    /** Sutter, California */
    County_06101 = "COUNTY_06101",
    /** Tehama, California */
    County_06103 = "COUNTY_06103",
    /** Trinity, California */
    County_06105 = "COUNTY_06105",
    /** Tulare, California */
    County_06107 = "COUNTY_06107",
    /** Tuolumne, California */
    County_06109 = "COUNTY_06109",
    /** Ventura, California */
    County_06111 = "COUNTY_06111",
    /** Yolo, California */
    County_06113 = "COUNTY_06113",
    /** Yuba, California */
    County_06115 = "COUNTY_06115",
    /** Adams, Colorado */
    County_08001 = "COUNTY_08001",
    /** Alamosa, Colorado */
    County_08003 = "COUNTY_08003",
    /** Arapahoe, Colorado */
    County_08005 = "COUNTY_08005",
    /** Archuleta, Colorado */
    County_08007 = "COUNTY_08007",
    /** Baca, Colorado */
    County_08009 = "COUNTY_08009",
    /** Bent, Colorado */
    County_08011 = "COUNTY_08011",
    /** Boulder, Colorado */
    County_08013 = "COUNTY_08013",
    /** Broomfield, Colorado */
    County_08014 = "COUNTY_08014",
    /** Chaffee, Colorado */
    County_08015 = "COUNTY_08015",
    /** Cheyenne, Colorado */
    County_08017 = "COUNTY_08017",
    /** Clear Creek, Colorado */
    County_08019 = "COUNTY_08019",
    /** Conejos, Colorado */
    County_08021 = "COUNTY_08021",
    /** Costilla, Colorado */
    County_08023 = "COUNTY_08023",
    /** Crowley, Colorado */
    County_08025 = "COUNTY_08025",
    /** Custer, Colorado */
    County_08027 = "COUNTY_08027",
    /** Delta, Colorado */
    County_08029 = "COUNTY_08029",
    /** Denver, Colorado */
    County_08031 = "COUNTY_08031",
    /** Dolores, Colorado */
    County_08033 = "COUNTY_08033",
    /** Douglas, Colorado */
    County_08035 = "COUNTY_08035",
    /** Eagle, Colorado */
    County_08037 = "COUNTY_08037",
    /** Elbert, Colorado */
    County_08039 = "COUNTY_08039",
    /** El Paso, Colorado */
    County_08041 = "COUNTY_08041",
    /** Fremont, Colorado */
    County_08043 = "COUNTY_08043",
    /** Garfield, Colorado */
    County_08045 = "COUNTY_08045",
    /** Gilpin, Colorado */
    County_08047 = "COUNTY_08047",
    /** Grand, Colorado */
    County_08049 = "COUNTY_08049",
    /** Gunnison, Colorado */
    County_08051 = "COUNTY_08051",
    /** Hinsdale, Colorado */
    County_08053 = "COUNTY_08053",
    /** Huerfano, Colorado */
    County_08055 = "COUNTY_08055",
    /** Jackson, Colorado */
    County_08057 = "COUNTY_08057",
    /** Jefferson, Colorado */
    County_08059 = "COUNTY_08059",
    /** Kiowa, Colorado */
    County_08061 = "COUNTY_08061",
    /** Kit Carson, Colorado */
    County_08063 = "COUNTY_08063",
    /** Lake, Colorado */
    County_08065 = "COUNTY_08065",
    /** La Plata, Colorado */
    County_08067 = "COUNTY_08067",
    /** Larimer, Colorado */
    County_08069 = "COUNTY_08069",
    /** Las Animas, Colorado */
    County_08071 = "COUNTY_08071",
    /** Lincoln, Colorado */
    County_08073 = "COUNTY_08073",
    /** Logan, Colorado */
    County_08075 = "COUNTY_08075",
    /** Mesa, Colorado */
    County_08077 = "COUNTY_08077",
    /** Mineral, Colorado */
    County_08079 = "COUNTY_08079",
    /** Moffat, Colorado */
    County_08081 = "COUNTY_08081",
    /** Montezuma, Colorado */
    County_08083 = "COUNTY_08083",
    /** Montrose, Colorado */
    County_08085 = "COUNTY_08085",
    /** Morgan, Colorado */
    County_08087 = "COUNTY_08087",
    /** Otero, Colorado */
    County_08089 = "COUNTY_08089",
    /** Ouray, Colorado */
    County_08091 = "COUNTY_08091",
    /** Park, Colorado */
    County_08093 = "COUNTY_08093",
    /** Phillips, Colorado */
    County_08095 = "COUNTY_08095",
    /** Pitkin, Colorado */
    County_08097 = "COUNTY_08097",
    /** Prowers, Colorado */
    County_08099 = "COUNTY_08099",
    /** Pueblo, Colorado */
    County_08101 = "COUNTY_08101",
    /** Rio Blanco, Colorado */
    County_08103 = "COUNTY_08103",
    /** Rio Grande, Colorado */
    County_08105 = "COUNTY_08105",
    /** Routt, Colorado */
    County_08107 = "COUNTY_08107",
    /** Saguache, Colorado */
    County_08109 = "COUNTY_08109",
    /** San Juan, Colorado */
    County_08111 = "COUNTY_08111",
    /** San Miguel, Colorado */
    County_08113 = "COUNTY_08113",
    /** Sedgwick, Colorado */
    County_08115 = "COUNTY_08115",
    /** Summit, Colorado */
    County_08117 = "COUNTY_08117",
    /** Teller, Colorado */
    County_08119 = "COUNTY_08119",
    /** Washington, Colorado */
    County_08121 = "COUNTY_08121",
    /** Weld, Colorado */
    County_08123 = "COUNTY_08123",
    /** Yuma, Colorado */
    County_08125 = "COUNTY_08125",
    /** Fairfield, Connecticut */
    County_09001 = "COUNTY_09001",
    /** Hartford, Connecticut */
    County_09003 = "COUNTY_09003",
    /** Litchfield, Connecticut */
    County_09005 = "COUNTY_09005",
    /** Middlesex, Connecticut */
    County_09007 = "COUNTY_09007",
    /** New Haven, Connecticut */
    County_09009 = "COUNTY_09009",
    /** New London, Connecticut */
    County_09011 = "COUNTY_09011",
    /** Tolland, Connecticut */
    County_09013 = "COUNTY_09013",
    /** Windham, Connecticut */
    County_09015 = "COUNTY_09015",
    /** Kent, Delaware */
    County_10001 = "COUNTY_10001",
    /** New Castle, Delaware */
    County_10003 = "COUNTY_10003",
    /** Sussex, Delaware */
    County_10005 = "COUNTY_10005",
    /** District of Columbia, District of Columbia */
    County_11001 = "COUNTY_11001",
    /** Montgomery, District of Columbia */
    County_11031 = "COUNTY_11031",
    /** Alachua, Florida */
    County_12001 = "COUNTY_12001",
    /** Baker, Florida */
    County_12003 = "COUNTY_12003",
    /** Bay, Florida */
    County_12005 = "COUNTY_12005",
    /** Bradford, Florida */
    County_12007 = "COUNTY_12007",
    /** Brevard, Florida */
    County_12009 = "COUNTY_12009",
    /** Broward, Florida */
    County_12011 = "COUNTY_12011",
    /** Calhoun, Florida */
    County_12013 = "COUNTY_12013",
    /** Charlotte, Florida */
    County_12015 = "COUNTY_12015",
    /** Citrus, Florida */
    County_12017 = "COUNTY_12017",
    /** Clay, Florida */
    County_12019 = "COUNTY_12019",
    /** Collier, Florida */
    County_12021 = "COUNTY_12021",
    /** Columbia, Florida */
    County_12023 = "COUNTY_12023",
    /** De Soto, Florida */
    County_12027 = "COUNTY_12027",
    /** Dixie, Florida */
    County_12029 = "COUNTY_12029",
    /** Duval, Florida */
    County_12031 = "COUNTY_12031",
    /** Escambia, Florida */
    County_12033 = "COUNTY_12033",
    /** Flagler, Florida */
    County_12035 = "COUNTY_12035",
    /** Franklin, Florida */
    County_12037 = "COUNTY_12037",
    /** Gadsden, Florida */
    County_12039 = "COUNTY_12039",
    /** Gilchrist, Florida */
    County_12041 = "COUNTY_12041",
    /** Glades, Florida */
    County_12043 = "COUNTY_12043",
    /** Gulf, Florida */
    County_12045 = "COUNTY_12045",
    /** Hamilton, Florida */
    County_12047 = "COUNTY_12047",
    /** Hardee, Florida */
    County_12049 = "COUNTY_12049",
    /** Hendry, Florida */
    County_12051 = "COUNTY_12051",
    /** Hernando, Florida */
    County_12053 = "COUNTY_12053",
    /** Highlands, Florida */
    County_12055 = "COUNTY_12055",
    /** Hillsborough, Florida */
    County_12057 = "COUNTY_12057",
    /** Holmes, Florida */
    County_12059 = "COUNTY_12059",
    /** Indian River, Florida */
    County_12061 = "COUNTY_12061",
    /** Jackson, Florida */
    County_12063 = "COUNTY_12063",
    /** Jefferson, Florida */
    County_12065 = "COUNTY_12065",
    /** Lafayette, Florida */
    County_12067 = "COUNTY_12067",
    /** Lake, Florida */
    County_12069 = "COUNTY_12069",
    /** Lee, Florida */
    County_12071 = "COUNTY_12071",
    /** Leon, Florida */
    County_12073 = "COUNTY_12073",
    /** Levy, Florida */
    County_12075 = "COUNTY_12075",
    /** Liberty, Florida */
    County_12077 = "COUNTY_12077",
    /** Madison, Florida */
    County_12079 = "COUNTY_12079",
    /** Manatee, Florida */
    County_12081 = "COUNTY_12081",
    /** Marion, Florida */
    County_12083 = "COUNTY_12083",
    /** Martin, Florida */
    County_12085 = "COUNTY_12085",
    /** Miami-Dade, Florida */
    County_12086 = "COUNTY_12086",
    /** Monroe, Florida */
    County_12087 = "COUNTY_12087",
    /** Nassau, Florida */
    County_12089 = "COUNTY_12089",
    /** Okaloosa, Florida */
    County_12091 = "COUNTY_12091",
    /** Okeechobee, Florida */
    County_12093 = "COUNTY_12093",
    /** Orange, Florida */
    County_12095 = "COUNTY_12095",
    /** Osceola, Florida */
    County_12097 = "COUNTY_12097",
    /** Palm Beach, Florida */
    County_12099 = "COUNTY_12099",
    /** Pasco, Florida */
    County_12101 = "COUNTY_12101",
    /** Pinellas, Florida */
    County_12103 = "COUNTY_12103",
    /** Polk, Florida */
    County_12105 = "COUNTY_12105",
    /** Putnam, Florida */
    County_12107 = "COUNTY_12107",
    /** St Johns, Florida */
    County_12109 = "COUNTY_12109",
    /** St Lucie, Florida */
    County_12111 = "COUNTY_12111",
    /** Santa Rosa, Florida */
    County_12113 = "COUNTY_12113",
    /** Sarasota, Florida */
    County_12115 = "COUNTY_12115",
    /** Seminole, Florida */
    County_12117 = "COUNTY_12117",
    /** Sumter, Florida */
    County_12119 = "COUNTY_12119",
    /** Suwannee, Florida */
    County_12121 = "COUNTY_12121",
    /** Taylor, Florida */
    County_12123 = "COUNTY_12123",
    /** Union, Florida */
    County_12125 = "COUNTY_12125",
    /** Volusia, Florida */
    County_12127 = "COUNTY_12127",
    /** Wakulla, Florida */
    County_12129 = "COUNTY_12129",
    /** Walton, Florida */
    County_12131 = "COUNTY_12131",
    /** Washington, Florida */
    County_12133 = "COUNTY_12133",
    /** Appling, Georgia */
    County_13001 = "COUNTY_13001",
    /** Atkinson, Georgia */
    County_13003 = "COUNTY_13003",
    /** Bacon, Georgia */
    County_13005 = "COUNTY_13005",
    /** Baker, Georgia */
    County_13007 = "COUNTY_13007",
    /** Baldwin, Georgia */
    County_13009 = "COUNTY_13009",
    /** Banks, Georgia */
    County_13011 = "COUNTY_13011",
    /** Barrow, Georgia */
    County_13013 = "COUNTY_13013",
    /** Bartow, Georgia */
    County_13015 = "COUNTY_13015",
    /** Ben Hill, Georgia */
    County_13017 = "COUNTY_13017",
    /** Berrien, Georgia */
    County_13019 = "COUNTY_13019",
    /** Bibb, Georgia */
    County_13021 = "COUNTY_13021",
    /** Bleckley, Georgia */
    County_13023 = "COUNTY_13023",
    /** Brantley, Georgia */
    County_13025 = "COUNTY_13025",
    /** Brooks, Georgia */
    County_13027 = "COUNTY_13027",
    /** Bryan, Georgia */
    County_13029 = "COUNTY_13029",
    /** Bulloch, Georgia */
    County_13031 = "COUNTY_13031",
    /** Burke, Georgia */
    County_13033 = "COUNTY_13033",
    /** Butts, Georgia */
    County_13035 = "COUNTY_13035",
    /** Calhoun, Georgia */
    County_13037 = "COUNTY_13037",
    /** Camden, Georgia */
    County_13039 = "COUNTY_13039",
    /** Candler, Georgia */
    County_13043 = "COUNTY_13043",
    /** Carroll, Georgia */
    County_13045 = "COUNTY_13045",
    /** Catoosa, Georgia */
    County_13047 = "COUNTY_13047",
    /** Charlton, Georgia */
    County_13049 = "COUNTY_13049",
    /** Chatham, Georgia */
    County_13051 = "COUNTY_13051",
    /** Chattahoochee, Georgia */
    County_13053 = "COUNTY_13053",
    /** Chattooga, Georgia */
    County_13055 = "COUNTY_13055",
    /** Cherokee, Georgia */
    County_13057 = "COUNTY_13057",
    /** Clarke, Georgia */
    County_13059 = "COUNTY_13059",
    /** Clay, Georgia */
    County_13061 = "COUNTY_13061",
    /** Clayton, Georgia */
    County_13063 = "COUNTY_13063",
    /** Clinch, Georgia */
    County_13065 = "COUNTY_13065",
    /** Cobb, Georgia */
    County_13067 = "COUNTY_13067",
    /** Coffee, Georgia */
    County_13069 = "COUNTY_13069",
    /** Colquitt, Georgia */
    County_13071 = "COUNTY_13071",
    /** Columbia, Georgia */
    County_13073 = "COUNTY_13073",
    /** Cook, Georgia */
    County_13075 = "COUNTY_13075",
    /** Coweta, Georgia */
    County_13077 = "COUNTY_13077",
    /** Crawford, Georgia */
    County_13079 = "COUNTY_13079",
    /** Crisp, Georgia */
    County_13081 = "COUNTY_13081",
    /** Dade, Georgia */
    County_13083 = "COUNTY_13083",
    /** Dawson, Georgia */
    County_13085 = "COUNTY_13085",
    /** Decatur, Georgia */
    County_13087 = "COUNTY_13087",
    /** De Kalb, Georgia */
    County_13089 = "COUNTY_13089",
    /** Dodge, Georgia */
    County_13091 = "COUNTY_13091",
    /** Dooly, Georgia */
    County_13093 = "COUNTY_13093",
    /** Dougherty, Georgia */
    County_13095 = "COUNTY_13095",
    /** Douglas, Georgia */
    County_13097 = "COUNTY_13097",
    /** Early, Georgia */
    County_13099 = "COUNTY_13099",
    /** Echols, Georgia */
    County_13101 = "COUNTY_13101",
    /** Effingham, Georgia */
    County_13103 = "COUNTY_13103",
    /** Elbert, Georgia */
    County_13105 = "COUNTY_13105",
    /** Emanuel, Georgia */
    County_13107 = "COUNTY_13107",
    /** Evans, Georgia */
    County_13109 = "COUNTY_13109",
    /** Fannin, Georgia */
    County_13111 = "COUNTY_13111",
    /** Fayette, Georgia */
    County_13113 = "COUNTY_13113",
    /** Floyd, Georgia */
    County_13115 = "COUNTY_13115",
    /** Forsyth, Georgia */
    County_13117 = "COUNTY_13117",
    /** Franklin, Georgia */
    County_13119 = "COUNTY_13119",
    /** Fulton, Georgia */
    County_13121 = "COUNTY_13121",
    /** Gilmer, Georgia */
    County_13123 = "COUNTY_13123",
    /** Glascock, Georgia */
    County_13125 = "COUNTY_13125",
    /** Glynn, Georgia */
    County_13127 = "COUNTY_13127",
    /** Gordon, Georgia */
    County_13129 = "COUNTY_13129",
    /** Grady, Georgia */
    County_13131 = "COUNTY_13131",
    /** Greene, Georgia */
    County_13133 = "COUNTY_13133",
    /** Gwinnett, Georgia */
    County_13135 = "COUNTY_13135",
    /** Habersham, Georgia */
    County_13137 = "COUNTY_13137",
    /** Hall, Georgia */
    County_13139 = "COUNTY_13139",
    /** Hancock, Georgia */
    County_13141 = "COUNTY_13141",
    /** Haralson, Georgia */
    County_13143 = "COUNTY_13143",
    /** Harris, Georgia */
    County_13145 = "COUNTY_13145",
    /** Hart, Georgia */
    County_13147 = "COUNTY_13147",
    /** Heard, Georgia */
    County_13149 = "COUNTY_13149",
    /** Henry, Georgia */
    County_13151 = "COUNTY_13151",
    /** Houston, Georgia */
    County_13153 = "COUNTY_13153",
    /** Irwin, Georgia */
    County_13155 = "COUNTY_13155",
    /** Jackson, Georgia */
    County_13157 = "COUNTY_13157",
    /** Jasper, Georgia */
    County_13159 = "COUNTY_13159",
    /** Jeff Davis, Georgia */
    County_13161 = "COUNTY_13161",
    /** Jefferson, Georgia */
    County_13163 = "COUNTY_13163",
    /** Jenkins, Georgia */
    County_13165 = "COUNTY_13165",
    /** Johnson, Georgia */
    County_13167 = "COUNTY_13167",
    /** Jones, Georgia */
    County_13169 = "COUNTY_13169",
    /** Lamar, Georgia */
    County_13171 = "COUNTY_13171",
    /** Lanier, Georgia */
    County_13173 = "COUNTY_13173",
    /** Laurens, Georgia */
    County_13175 = "COUNTY_13175",
    /** Lee, Georgia */
    County_13177 = "COUNTY_13177",
    /** Liberty, Georgia */
    County_13179 = "COUNTY_13179",
    /** Lincoln, Georgia */
    County_13181 = "COUNTY_13181",
    /** Long, Georgia */
    County_13183 = "COUNTY_13183",
    /** Lowndes, Georgia */
    County_13185 = "COUNTY_13185",
    /** Lumpkin, Georgia */
    County_13187 = "COUNTY_13187",
    /** McDuffie, Georgia */
    County_13189 = "COUNTY_13189",
    /** McIntosh, Georgia */
    County_13191 = "COUNTY_13191",
    /** Macon, Georgia */
    County_13193 = "COUNTY_13193",
    /** Madison, Georgia */
    County_13195 = "COUNTY_13195",
    /** Marion, Georgia */
    County_13197 = "COUNTY_13197",
    /** Meriwether, Georgia */
    County_13199 = "COUNTY_13199",
    /** Miller, Georgia */
    County_13201 = "COUNTY_13201",
    /** Mitchell, Georgia */
    County_13205 = "COUNTY_13205",
    /** Monroe, Georgia */
    County_13207 = "COUNTY_13207",
    /** Montgomery, Georgia */
    County_13209 = "COUNTY_13209",
    /** Morgan, Georgia */
    County_13211 = "COUNTY_13211",
    /** Murray, Georgia */
    County_13213 = "COUNTY_13213",
    /** Muscogee, Georgia */
    County_13215 = "COUNTY_13215",
    /** Newton, Georgia */
    County_13217 = "COUNTY_13217",
    /** Oconee, Georgia */
    County_13219 = "COUNTY_13219",
    /** Oglethorpe, Georgia */
    County_13221 = "COUNTY_13221",
    /** Paulding, Georgia */
    County_13223 = "COUNTY_13223",
    /** Peach, Georgia */
    County_13225 = "COUNTY_13225",
    /** Pickens, Georgia */
    County_13227 = "COUNTY_13227",
    /** Pierce, Georgia */
    County_13229 = "COUNTY_13229",
    /** Pike, Georgia */
    County_13231 = "COUNTY_13231",
    /** Polk, Georgia */
    County_13233 = "COUNTY_13233",
    /** Pulaski, Georgia */
    County_13235 = "COUNTY_13235",
    /** Putnam, Georgia */
    County_13237 = "COUNTY_13237",
    /** Quitman, Georgia */
    County_13239 = "COUNTY_13239",
    /** Rabun, Georgia */
    County_13241 = "COUNTY_13241",
    /** Randolph, Georgia */
    County_13243 = "COUNTY_13243",
    /** Richmond, Georgia */
    County_13245 = "COUNTY_13245",
    /** Rockdale, Georgia */
    County_13247 = "COUNTY_13247",
    /** Schley, Georgia */
    County_13249 = "COUNTY_13249",
    /** Screven, Georgia */
    County_13251 = "COUNTY_13251",
    /** Seminole, Georgia */
    County_13253 = "COUNTY_13253",
    /** Spalding, Georgia */
    County_13255 = "COUNTY_13255",
    /** Stephens, Georgia */
    County_13257 = "COUNTY_13257",
    /** Stewart, Georgia */
    County_13259 = "COUNTY_13259",
    /** Sumter, Georgia */
    County_13261 = "COUNTY_13261",
    /** Talbot, Georgia */
    County_13263 = "COUNTY_13263",
    /** Taliaferro, Georgia */
    County_13265 = "COUNTY_13265",
    /** Tattnall, Georgia */
    County_13267 = "COUNTY_13267",
    /** Taylor, Georgia */
    County_13269 = "COUNTY_13269",
    /** Telfair, Georgia */
    County_13271 = "COUNTY_13271",
    /** Terrell, Georgia */
    County_13273 = "COUNTY_13273",
    /** Thomas, Georgia */
    County_13275 = "COUNTY_13275",
    /** Tift, Georgia */
    County_13277 = "COUNTY_13277",
    /** Toombs, Georgia */
    County_13279 = "COUNTY_13279",
    /** Towns, Georgia */
    County_13281 = "COUNTY_13281",
    /** Treutlen, Georgia */
    County_13283 = "COUNTY_13283",
    /** Troup, Georgia */
    County_13285 = "COUNTY_13285",
    /** Turner, Georgia */
    County_13287 = "COUNTY_13287",
    /** Twiggs, Georgia */
    County_13289 = "COUNTY_13289",
    /** Union, Georgia */
    County_13291 = "COUNTY_13291",
    /** Upson, Georgia */
    County_13293 = "COUNTY_13293",
    /** Walker, Georgia */
    County_13295 = "COUNTY_13295",
    /** Walton, Georgia */
    County_13297 = "COUNTY_13297",
    /** Ware, Georgia */
    County_13299 = "COUNTY_13299",
    /** Warren, Georgia */
    County_13301 = "COUNTY_13301",
    /** Washington, Georgia */
    County_13303 = "COUNTY_13303",
    /** Wayne, Georgia */
    County_13305 = "COUNTY_13305",
    /** Webster, Georgia */
    County_13307 = "COUNTY_13307",
    /** Wheeler, Georgia */
    County_13309 = "COUNTY_13309",
    /** White, Georgia */
    County_13311 = "COUNTY_13311",
    /** Whitfield, Georgia */
    County_13313 = "COUNTY_13313",
    /** Wilcox, Georgia */
    County_13315 = "COUNTY_13315",
    /** Wilkes, Georgia */
    County_13317 = "COUNTY_13317",
    /** Wilkinson, Georgia */
    County_13319 = "COUNTY_13319",
    /** Worth, Georgia */
    County_13321 = "COUNTY_13321",
    /** Hawaii, Hawaii */
    County_15001 = "COUNTY_15001",
    /** Honolulu, Hawaii */
    County_15003 = "COUNTY_15003",
    /** Kauai, Hawaii */
    County_15007 = "COUNTY_15007",
    /** Maui, Hawaii */
    County_15009 = "COUNTY_15009",
    /** Ada, Idaho */
    County_16001 = "COUNTY_16001",
    /** Adams, Idaho */
    County_16003 = "COUNTY_16003",
    /** Bannock, Idaho */
    County_16005 = "COUNTY_16005",
    /** Bear Lake, Idaho */
    County_16007 = "COUNTY_16007",
    /** Benewah, Idaho */
    County_16009 = "COUNTY_16009",
    /** Bingham, Idaho */
    County_16011 = "COUNTY_16011",
    /** Blaine, Idaho */
    County_16013 = "COUNTY_16013",
    /** Boise, Idaho */
    County_16015 = "COUNTY_16015",
    /** Bonner, Idaho */
    County_16017 = "COUNTY_16017",
    /** Bonneville, Idaho */
    County_16019 = "COUNTY_16019",
    /** Boundary, Idaho */
    County_16021 = "COUNTY_16021",
    /** Butte, Idaho */
    County_16023 = "COUNTY_16023",
    /** Camas, Idaho */
    County_16025 = "COUNTY_16025",
    /** Canyon, Idaho */
    County_16027 = "COUNTY_16027",
    /** Caribou, Idaho */
    County_16029 = "COUNTY_16029",
    /** Cassia, Idaho */
    County_16031 = "COUNTY_16031",
    /** Clark, Idaho */
    County_16033 = "COUNTY_16033",
    /** Clearwater, Idaho */
    County_16035 = "COUNTY_16035",
    /** Custer, Idaho */
    County_16037 = "COUNTY_16037",
    /** Elmore, Idaho */
    County_16039 = "COUNTY_16039",
    /** Franklin, Idaho */
    County_16041 = "COUNTY_16041",
    /** Fremont, Idaho */
    County_16043 = "COUNTY_16043",
    /** Gem, Idaho */
    County_16045 = "COUNTY_16045",
    /** Gooding, Idaho */
    County_16047 = "COUNTY_16047",
    /** Idaho, Idaho */
    County_16049 = "COUNTY_16049",
    /** Jefferson, Idaho */
    County_16051 = "COUNTY_16051",
    /** Jerome, Idaho */
    County_16053 = "COUNTY_16053",
    /** Kootenai, Idaho */
    County_16055 = "COUNTY_16055",
    /** Latah, Idaho */
    County_16057 = "COUNTY_16057",
    /** Lemhi, Idaho */
    County_16059 = "COUNTY_16059",
    /** Lewis, Idaho */
    County_16061 = "COUNTY_16061",
    /** Lincoln, Idaho */
    County_16063 = "COUNTY_16063",
    /** Madison, Idaho */
    County_16065 = "COUNTY_16065",
    /** Minidoka, Idaho */
    County_16067 = "COUNTY_16067",
    /** Nez Perce, Idaho */
    County_16069 = "COUNTY_16069",
    /** Oneida, Idaho */
    County_16071 = "COUNTY_16071",
    /** Owyhee, Idaho */
    County_16073 = "COUNTY_16073",
    /** Payette, Idaho */
    County_16075 = "COUNTY_16075",
    /** Power, Idaho */
    County_16077 = "COUNTY_16077",
    /** Shoshone, Idaho */
    County_16079 = "COUNTY_16079",
    /** Teton, Idaho */
    County_16081 = "COUNTY_16081",
    /** Twin Falls, Idaho */
    County_16083 = "COUNTY_16083",
    /** Valley, Idaho */
    County_16085 = "COUNTY_16085",
    /** Washington, Idaho */
    County_16087 = "COUNTY_16087",
    /** Adams, Illinois */
    County_17001 = "COUNTY_17001",
    /** Alexander, Illinois */
    County_17003 = "COUNTY_17003",
    /** Bond, Illinois */
    County_17005 = "COUNTY_17005",
    /** Boone, Illinois */
    County_17007 = "COUNTY_17007",
    /** Brown, Illinois */
    County_17009 = "COUNTY_17009",
    /** Bureau, Illinois */
    County_17011 = "COUNTY_17011",
    /** Calhoun, Illinois */
    County_17013 = "COUNTY_17013",
    /** Carroll, Illinois */
    County_17015 = "COUNTY_17015",
    /** Cass, Illinois */
    County_17017 = "COUNTY_17017",
    /** Champaign, Illinois */
    County_17019 = "COUNTY_17019",
    /** Christian, Illinois */
    County_17021 = "COUNTY_17021",
    /** Clark, Illinois */
    County_17023 = "COUNTY_17023",
    /** Clay, Illinois */
    County_17025 = "COUNTY_17025",
    /** Clinton, Illinois */
    County_17027 = "COUNTY_17027",
    /** Coles, Illinois */
    County_17029 = "COUNTY_17029",
    /** Cook, Illinois */
    County_17031 = "COUNTY_17031",
    /** Crawford, Illinois */
    County_17033 = "COUNTY_17033",
    /** Cumberland, Illinois */
    County_17035 = "COUNTY_17035",
    /** De Kalb, Illinois */
    County_17037 = "COUNTY_17037",
    /** Dewitt, Illinois */
    County_17039 = "COUNTY_17039",
    /** Douglas, Illinois */
    County_17041 = "COUNTY_17041",
    /** Du Page, Illinois */
    County_17043 = "COUNTY_17043",
    /** Edgar, Illinois */
    County_17045 = "COUNTY_17045",
    /** Edwards, Illinois */
    County_17047 = "COUNTY_17047",
    /** Effingham, Illinois */
    County_17049 = "COUNTY_17049",
    /** Fayette, Illinois */
    County_17051 = "COUNTY_17051",
    /** Ford, Illinois */
    County_17053 = "COUNTY_17053",
    /** Franklin, Illinois */
    County_17055 = "COUNTY_17055",
    /** Fulton, Illinois */
    County_17057 = "COUNTY_17057",
    /** Gallatin, Illinois */
    County_17059 = "COUNTY_17059",
    /** Greene, Illinois */
    County_17061 = "COUNTY_17061",
    /** Grundy, Illinois */
    County_17063 = "COUNTY_17063",
    /** Hamilton, Illinois */
    County_17065 = "COUNTY_17065",
    /** Hancock, Illinois */
    County_17067 = "COUNTY_17067",
    /** Hardin, Illinois */
    County_17069 = "COUNTY_17069",
    /** Henderson, Illinois */
    County_17071 = "COUNTY_17071",
    /** Henry, Illinois */
    County_17073 = "COUNTY_17073",
    /** Iroquois, Illinois */
    County_17075 = "COUNTY_17075",
    /** Jackson, Illinois */
    County_17077 = "COUNTY_17077",
    /** Jasper, Illinois */
    County_17079 = "COUNTY_17079",
    /** Jefferson, Illinois */
    County_17081 = "COUNTY_17081",
    /** Jersey, Illinois */
    County_17083 = "COUNTY_17083",
    /** Jo Daviess, Illinois */
    County_17085 = "COUNTY_17085",
    /** Johnson, Illinois */
    County_17087 = "COUNTY_17087",
    /** Kane, Illinois */
    County_17089 = "COUNTY_17089",
    /** Kankakee, Illinois */
    County_17091 = "COUNTY_17091",
    /** Kendall, Illinois */
    County_17093 = "COUNTY_17093",
    /** Knox, Illinois */
    County_17095 = "COUNTY_17095",
    /** Lake, Illinois */
    County_17097 = "COUNTY_17097",
    /** La Salle, Illinois */
    County_17099 = "COUNTY_17099",
    /** Lawrence, Illinois */
    County_17101 = "COUNTY_17101",
    /** Lee, Illinois */
    County_17103 = "COUNTY_17103",
    /** Livingston, Illinois */
    County_17105 = "COUNTY_17105",
    /** Logan, Illinois */
    County_17107 = "COUNTY_17107",
    /** McDonough, Illinois */
    County_17109 = "COUNTY_17109",
    /** McHenry, Illinois */
    County_17111 = "COUNTY_17111",
    /** Mclean, Illinois */
    County_17113 = "COUNTY_17113",
    /** Macon, Illinois */
    County_17115 = "COUNTY_17115",
    /** Macoupin, Illinois */
    County_17117 = "COUNTY_17117",
    /** Madison, Illinois */
    County_17119 = "COUNTY_17119",
    /** Marion, Illinois */
    County_17121 = "COUNTY_17121",
    /** Marshall, Illinois */
    County_17123 = "COUNTY_17123",
    /** Mason, Illinois */
    County_17125 = "COUNTY_17125",
    /** Massac, Illinois */
    County_17127 = "COUNTY_17127",
    /** Menard, Illinois */
    County_17129 = "COUNTY_17129",
    /** Mercer, Illinois */
    County_17131 = "COUNTY_17131",
    /** Monroe, Illinois */
    County_17133 = "COUNTY_17133",
    /** Montgomery, Illinois */
    County_17135 = "COUNTY_17135",
    /** Morgan, Illinois */
    County_17137 = "COUNTY_17137",
    /** Moultrie, Illinois */
    County_17139 = "COUNTY_17139",
    /** Ogle, Illinois */
    County_17141 = "COUNTY_17141",
    /** Peoria, Illinois */
    County_17143 = "COUNTY_17143",
    /** Perry, Illinois */
    County_17145 = "COUNTY_17145",
    /** Piatt, Illinois */
    County_17147 = "COUNTY_17147",
    /** Pike, Illinois */
    County_17149 = "COUNTY_17149",
    /** Pope, Illinois */
    County_17151 = "COUNTY_17151",
    /** Pulaski, Illinois */
    County_17153 = "COUNTY_17153",
    /** Putnam, Illinois */
    County_17155 = "COUNTY_17155",
    /** Randolph, Illinois */
    County_17157 = "COUNTY_17157",
    /** Richland, Illinois */
    County_17159 = "COUNTY_17159",
    /** Rock Island, Illinois */
    County_17161 = "COUNTY_17161",
    /** St Clair, Illinois */
    County_17163 = "COUNTY_17163",
    /** Saline, Illinois */
    County_17165 = "COUNTY_17165",
    /** Sangamon, Illinois */
    County_17167 = "COUNTY_17167",
    /** Schuyler, Illinois */
    County_17169 = "COUNTY_17169",
    /** Scott, Illinois */
    County_17171 = "COUNTY_17171",
    /** Shelby, Illinois */
    County_17173 = "COUNTY_17173",
    /** Stark, Illinois */
    County_17175 = "COUNTY_17175",
    /** Stephenson, Illinois */
    County_17177 = "COUNTY_17177",
    /** Tazewell, Illinois */
    County_17179 = "COUNTY_17179",
    /** Union, Illinois */
    County_17181 = "COUNTY_17181",
    /** Vermilion, Illinois */
    County_17183 = "COUNTY_17183",
    /** Wabash, Illinois */
    County_17185 = "COUNTY_17185",
    /** Warren, Illinois */
    County_17187 = "COUNTY_17187",
    /** Washington, Illinois */
    County_17189 = "COUNTY_17189",
    /** Wayne, Illinois */
    County_17191 = "COUNTY_17191",
    /** White, Illinois */
    County_17193 = "COUNTY_17193",
    /** Whiteside, Illinois */
    County_17195 = "COUNTY_17195",
    /** Will, Illinois */
    County_17197 = "COUNTY_17197",
    /** Williamson, Illinois */
    County_17199 = "COUNTY_17199",
    /** Winnebago, Illinois */
    County_17201 = "COUNTY_17201",
    /** Woodford, Illinois */
    County_17203 = "COUNTY_17203",
    /** Adams, Indiana */
    County_18001 = "COUNTY_18001",
    /** Allen, Indiana */
    County_18003 = "COUNTY_18003",
    /** Bartholomew, Indiana */
    County_18005 = "COUNTY_18005",
    /** Benton, Indiana */
    County_18007 = "COUNTY_18007",
    /** Blackford, Indiana */
    County_18009 = "COUNTY_18009",
    /** Boone, Indiana */
    County_18011 = "COUNTY_18011",
    /** Brown, Indiana */
    County_18013 = "COUNTY_18013",
    /** Carroll, Indiana */
    County_18015 = "COUNTY_18015",
    /** Cass, Indiana */
    County_18017 = "COUNTY_18017",
    /** Clark, Indiana */
    County_18019 = "COUNTY_18019",
    /** Clay, Indiana */
    County_18021 = "COUNTY_18021",
    /** Clinton, Indiana */
    County_18023 = "COUNTY_18023",
    /** Crawford, Indiana */
    County_18025 = "COUNTY_18025",
    /** Daviess, Indiana */
    County_18027 = "COUNTY_18027",
    /** Dearborn, Indiana */
    County_18029 = "COUNTY_18029",
    /** Decatur, Indiana */
    County_18031 = "COUNTY_18031",
    /** De Kalb, Indiana */
    County_18033 = "COUNTY_18033",
    /** Delaware, Indiana */
    County_18035 = "COUNTY_18035",
    /** Dubois, Indiana */
    County_18037 = "COUNTY_18037",
    /** Elkhart, Indiana */
    County_18039 = "COUNTY_18039",
    /** Fayette, Indiana */
    County_18041 = "COUNTY_18041",
    /** Floyd, Indiana */
    County_18043 = "COUNTY_18043",
    /** Fountain, Indiana */
    County_18045 = "COUNTY_18045",
    /** Franklin, Indiana */
    County_18047 = "COUNTY_18047",
    /** Fulton, Indiana */
    County_18049 = "COUNTY_18049",
    /** Gibson, Indiana */
    County_18051 = "COUNTY_18051",
    /** Grant, Indiana */
    County_18053 = "COUNTY_18053",
    /** Greene, Indiana */
    County_18055 = "COUNTY_18055",
    /** Hamilton, Indiana */
    County_18057 = "COUNTY_18057",
    /** Hancock, Indiana */
    County_18059 = "COUNTY_18059",
    /** Harrison, Indiana */
    County_18061 = "COUNTY_18061",
    /** Hendricks, Indiana */
    County_18063 = "COUNTY_18063",
    /** Henry, Indiana */
    County_18065 = "COUNTY_18065",
    /** Howard, Indiana */
    County_18067 = "COUNTY_18067",
    /** Huntington, Indiana */
    County_18069 = "COUNTY_18069",
    /** Jackson, Indiana */
    County_18071 = "COUNTY_18071",
    /** Jasper, Indiana */
    County_18073 = "COUNTY_18073",
    /** Jay, Indiana */
    County_18075 = "COUNTY_18075",
    /** Jefferson, Indiana */
    County_18077 = "COUNTY_18077",
    /** Jennings, Indiana */
    County_18079 = "COUNTY_18079",
    /** Johnson, Indiana */
    County_18081 = "COUNTY_18081",
    /** Knox, Indiana */
    County_18083 = "COUNTY_18083",
    /** Kosciusko, Indiana */
    County_18085 = "COUNTY_18085",
    /** Lagrange, Indiana */
    County_18087 = "COUNTY_18087",
    /** Lake, Indiana */
    County_18089 = "COUNTY_18089",
    /** La Porte, Indiana */
    County_18091 = "COUNTY_18091",
    /** Lawrence, Indiana */
    County_18093 = "COUNTY_18093",
    /** Madison, Indiana */
    County_18095 = "COUNTY_18095",
    /** Marion, Indiana */
    County_18097 = "COUNTY_18097",
    /** Marshall, Indiana */
    County_18099 = "COUNTY_18099",
    /** Martin, Indiana */
    County_18101 = "COUNTY_18101",
    /** Miami, Indiana */
    County_18103 = "COUNTY_18103",
    /** Monroe, Indiana */
    County_18105 = "COUNTY_18105",
    /** Montgomery, Indiana */
    County_18107 = "COUNTY_18107",
    /** Morgan, Indiana */
    County_18109 = "COUNTY_18109",
    /** Newton, Indiana */
    County_18111 = "COUNTY_18111",
    /** Noble, Indiana */
    County_18113 = "COUNTY_18113",
    /** Ohio, Indiana */
    County_18115 = "COUNTY_18115",
    /** Orange, Indiana */
    County_18117 = "COUNTY_18117",
    /** Owen, Indiana */
    County_18119 = "COUNTY_18119",
    /** Parke, Indiana */
    County_18121 = "COUNTY_18121",
    /** Perry, Indiana */
    County_18123 = "COUNTY_18123",
    /** Pike, Indiana */
    County_18125 = "COUNTY_18125",
    /** Porter, Indiana */
    County_18127 = "COUNTY_18127",
    /** Posey, Indiana */
    County_18129 = "COUNTY_18129",
    /** Pulaski, Indiana */
    County_18131 = "COUNTY_18131",
    /** Putnam, Indiana */
    County_18133 = "COUNTY_18133",
    /** Randolph, Indiana */
    County_18135 = "COUNTY_18135",
    /** Ripley, Indiana */
    County_18137 = "COUNTY_18137",
    /** Rush, Indiana */
    County_18139 = "COUNTY_18139",
    /** St Joseph, Indiana */
    County_18141 = "COUNTY_18141",
    /** Scott, Indiana */
    County_18143 = "COUNTY_18143",
    /** Shelby, Indiana */
    County_18145 = "COUNTY_18145",
    /** Spencer, Indiana */
    County_18147 = "COUNTY_18147",
    /** Starke, Indiana */
    County_18149 = "COUNTY_18149",
    /** Steuben, Indiana */
    County_18151 = "COUNTY_18151",
    /** Sullivan, Indiana */
    County_18153 = "COUNTY_18153",
    /** Switzerland, Indiana */
    County_18155 = "COUNTY_18155",
    /** Tippecanoe, Indiana */
    County_18157 = "COUNTY_18157",
    /** Tipton, Indiana */
    County_18159 = "COUNTY_18159",
    /** Union, Indiana */
    County_18161 = "COUNTY_18161",
    /** Vanderburgh, Indiana */
    County_18163 = "COUNTY_18163",
    /** Vermillion, Indiana */
    County_18165 = "COUNTY_18165",
    /** Vigo, Indiana */
    County_18167 = "COUNTY_18167",
    /** Wabash, Indiana */
    County_18169 = "COUNTY_18169",
    /** Warren, Indiana */
    County_18171 = "COUNTY_18171",
    /** Warrick, Indiana */
    County_18173 = "COUNTY_18173",
    /** Washington, Indiana */
    County_18175 = "COUNTY_18175",
    /** Wayne, Indiana */
    County_18177 = "COUNTY_18177",
    /** Wells, Indiana */
    County_18179 = "COUNTY_18179",
    /** White, Indiana */
    County_18181 = "COUNTY_18181",
    /** Whitley, Indiana */
    County_18183 = "COUNTY_18183",
    /** Adair, Iowa */
    County_19001 = "COUNTY_19001",
    /** Adams, Iowa */
    County_19003 = "COUNTY_19003",
    /** Allamakee, Iowa */
    County_19005 = "COUNTY_19005",
    /** Appanoose, Iowa */
    County_19007 = "COUNTY_19007",
    /** Audubon, Iowa */
    County_19009 = "COUNTY_19009",
    /** Benton, Iowa */
    County_19011 = "COUNTY_19011",
    /** Black Hawk, Iowa */
    County_19013 = "COUNTY_19013",
    /** Boone, Iowa */
    County_19015 = "COUNTY_19015",
    /** Bremer, Iowa */
    County_19017 = "COUNTY_19017",
    /** Buchanan, Iowa */
    County_19019 = "COUNTY_19019",
    /** Buena Vista, Iowa */
    County_19021 = "COUNTY_19021",
    /** Butler, Iowa */
    County_19023 = "COUNTY_19023",
    /** Calhoun, Iowa */
    County_19025 = "COUNTY_19025",
    /** Carroll, Iowa */
    County_19027 = "COUNTY_19027",
    /** Cass, Iowa */
    County_19029 = "COUNTY_19029",
    /** Cedar, Iowa */
    County_19031 = "COUNTY_19031",
    /** Cerro Gordo, Iowa */
    County_19033 = "COUNTY_19033",
    /** Cherokee, Iowa */
    County_19035 = "COUNTY_19035",
    /** Chickasaw, Iowa */
    County_19037 = "COUNTY_19037",
    /** Clarke, Iowa */
    County_19039 = "COUNTY_19039",
    /** Clay, Iowa */
    County_19041 = "COUNTY_19041",
    /** Clayton, Iowa */
    County_19043 = "COUNTY_19043",
    /** Clinton, Iowa */
    County_19045 = "COUNTY_19045",
    /** Crawford, Iowa */
    County_19047 = "COUNTY_19047",
    /** Dallas, Iowa */
    County_19049 = "COUNTY_19049",
    /** Davis, Iowa */
    County_19051 = "COUNTY_19051",
    /** Decatur, Iowa */
    County_19053 = "COUNTY_19053",
    /** Delaware, Iowa */
    County_19055 = "COUNTY_19055",
    /** Des Moines, Iowa */
    County_19057 = "COUNTY_19057",
    /** Dickinson, Iowa */
    County_19059 = "COUNTY_19059",
    /** Dubuque, Iowa */
    County_19061 = "COUNTY_19061",
    /** Emmet, Iowa */
    County_19063 = "COUNTY_19063",
    /** Fayette, Iowa */
    County_19065 = "COUNTY_19065",
    /** Floyd, Iowa */
    County_19067 = "COUNTY_19067",
    /** Franklin, Iowa */
    County_19069 = "COUNTY_19069",
    /** Fremont, Iowa */
    County_19071 = "COUNTY_19071",
    /** Greene, Iowa */
    County_19073 = "COUNTY_19073",
    /** Grundy, Iowa */
    County_19075 = "COUNTY_19075",
    /** Guthrie, Iowa */
    County_19077 = "COUNTY_19077",
    /** Hamilton, Iowa */
    County_19079 = "COUNTY_19079",
    /** Hancock, Iowa */
    County_19081 = "COUNTY_19081",
    /** Hardin, Iowa */
    County_19083 = "COUNTY_19083",
    /** Harrison, Iowa */
    County_19085 = "COUNTY_19085",
    /** Henry, Iowa */
    County_19087 = "COUNTY_19087",
    /** Howard, Iowa */
    County_19089 = "COUNTY_19089",
    /** Humboldt, Iowa */
    County_19091 = "COUNTY_19091",
    /** Ida, Iowa */
    County_19093 = "COUNTY_19093",
    /** Iowa, Iowa */
    County_19095 = "COUNTY_19095",
    /** Jackson, Iowa */
    County_19097 = "COUNTY_19097",
    /** Jasper, Iowa */
    County_19099 = "COUNTY_19099",
    /** Jefferson, Iowa */
    County_19101 = "COUNTY_19101",
    /** Johnson, Iowa */
    County_19103 = "COUNTY_19103",
    /** Jones, Iowa */
    County_19105 = "COUNTY_19105",
    /** Keokuk, Iowa */
    County_19107 = "COUNTY_19107",
    /** Kossuth, Iowa */
    County_19109 = "COUNTY_19109",
    /** Lee, Iowa */
    County_19111 = "COUNTY_19111",
    /** Linn, Iowa */
    County_19113 = "COUNTY_19113",
    /** Louisa, Iowa */
    County_19115 = "COUNTY_19115",
    /** Lucas, Iowa */
    County_19117 = "COUNTY_19117",
    /** Lyon, Iowa */
    County_19119 = "COUNTY_19119",
    /** Madison, Iowa */
    County_19121 = "COUNTY_19121",
    /** Mahaska, Iowa */
    County_19123 = "COUNTY_19123",
    /** Marion, Iowa */
    County_19125 = "COUNTY_19125",
    /** Marshall, Iowa */
    County_19127 = "COUNTY_19127",
    /** Mills, Iowa */
    County_19129 = "COUNTY_19129",
    /** Mitchell, Iowa */
    County_19131 = "COUNTY_19131",
    /** Monona, Iowa */
    County_19133 = "COUNTY_19133",
    /** Monroe, Iowa */
    County_19135 = "COUNTY_19135",
    /** Montgomery, Iowa */
    County_19137 = "COUNTY_19137",
    /** Muscatine, Iowa */
    County_19139 = "COUNTY_19139",
    /** Obrien, Iowa */
    County_19141 = "COUNTY_19141",
    /** Osceola, Iowa */
    County_19143 = "COUNTY_19143",
    /** Page, Iowa */
    County_19145 = "COUNTY_19145",
    /** Palo Alto, Iowa */
    County_19147 = "COUNTY_19147",
    /** Plymouth, Iowa */
    County_19149 = "COUNTY_19149",
    /** Pocahontas, Iowa */
    County_19151 = "COUNTY_19151",
    /** Polk, Iowa */
    County_19153 = "COUNTY_19153",
    /** Pottawattamie, Iowa */
    County_19155 = "COUNTY_19155",
    /** Poweshiek, Iowa */
    County_19157 = "COUNTY_19157",
    /** Ringgold, Iowa */
    County_19159 = "COUNTY_19159",
    /** Sac, Iowa */
    County_19161 = "COUNTY_19161",
    /** Scott, Iowa */
    County_19163 = "COUNTY_19163",
    /** Shelby, Iowa */
    County_19165 = "COUNTY_19165",
    /** Sioux, Iowa */
    County_19167 = "COUNTY_19167",
    /** Story, Iowa */
    County_19169 = "COUNTY_19169",
    /** Tama, Iowa */
    County_19171 = "COUNTY_19171",
    /** Taylor, Iowa */
    County_19173 = "COUNTY_19173",
    /** Union, Iowa */
    County_19175 = "COUNTY_19175",
    /** Van Buren, Iowa */
    County_19177 = "COUNTY_19177",
    /** Wapello, Iowa */
    County_19179 = "COUNTY_19179",
    /** Warren, Iowa */
    County_19181 = "COUNTY_19181",
    /** Washington, Iowa */
    County_19183 = "COUNTY_19183",
    /** Wayne, Iowa */
    County_19185 = "COUNTY_19185",
    /** Webster, Iowa */
    County_19187 = "COUNTY_19187",
    /** Winnebago, Iowa */
    County_19189 = "COUNTY_19189",
    /** Winneshiek, Iowa */
    County_19191 = "COUNTY_19191",
    /** Woodbury, Iowa */
    County_19193 = "COUNTY_19193",
    /** Worth, Iowa */
    County_19195 = "COUNTY_19195",
    /** Wright, Iowa */
    County_19197 = "COUNTY_19197",
    /** Allen, Kansas */
    County_20001 = "COUNTY_20001",
    /** Anderson, Kansas */
    County_20003 = "COUNTY_20003",
    /** Atchison, Kansas */
    County_20005 = "COUNTY_20005",
    /** Barber, Kansas */
    County_20007 = "COUNTY_20007",
    /** Barton, Kansas */
    County_20009 = "COUNTY_20009",
    /** Bourbon, Kansas */
    County_20011 = "COUNTY_20011",
    /** Brown, Kansas */
    County_20013 = "COUNTY_20013",
    /** Butler, Kansas */
    County_20015 = "COUNTY_20015",
    /** Chase, Kansas */
    County_20017 = "COUNTY_20017",
    /** Chautauqua, Kansas */
    County_20019 = "COUNTY_20019",
    /** Cherokee, Kansas */
    County_20021 = "COUNTY_20021",
    /** Cheyenne, Kansas */
    County_20023 = "COUNTY_20023",
    /** Clark, Kansas */
    County_20025 = "COUNTY_20025",
    /** Clay, Kansas */
    County_20027 = "COUNTY_20027",
    /** Cloud, Kansas */
    County_20029 = "COUNTY_20029",
    /** Coffey, Kansas */
    County_20031 = "COUNTY_20031",
    /** Comanche, Kansas */
    County_20033 = "COUNTY_20033",
    /** Cowley, Kansas */
    County_20035 = "COUNTY_20035",
    /** Crawford, Kansas */
    County_20037 = "COUNTY_20037",
    /** Decatur, Kansas */
    County_20039 = "COUNTY_20039",
    /** Dickinson, Kansas */
    County_20041 = "COUNTY_20041",
    /** Doniphan, Kansas */
    County_20043 = "COUNTY_20043",
    /** Douglas, Kansas */
    County_20045 = "COUNTY_20045",
    /** Edwards, Kansas */
    County_20047 = "COUNTY_20047",
    /** Elk, Kansas */
    County_20049 = "COUNTY_20049",
    /** Ellis, Kansas */
    County_20051 = "COUNTY_20051",
    /** Ellsworth, Kansas */
    County_20053 = "COUNTY_20053",
    /** Finney, Kansas */
    County_20055 = "COUNTY_20055",
    /** Ford, Kansas */
    County_20057 = "COUNTY_20057",
    /** Franklin, Kansas */
    County_20059 = "COUNTY_20059",
    /** Geary, Kansas */
    County_20061 = "COUNTY_20061",
    /** Gove, Kansas */
    County_20063 = "COUNTY_20063",
    /** Graham, Kansas */
    County_20065 = "COUNTY_20065",
    /** Grant, Kansas */
    County_20067 = "COUNTY_20067",
    /** Gray, Kansas */
    County_20069 = "COUNTY_20069",
    /** Greeley, Kansas */
    County_20071 = "COUNTY_20071",
    /** Greenwood, Kansas */
    County_20073 = "COUNTY_20073",
    /** Hamilton, Kansas */
    County_20075 = "COUNTY_20075",
    /** Harper, Kansas */
    County_20077 = "COUNTY_20077",
    /** Harvey, Kansas */
    County_20079 = "COUNTY_20079",
    /** Haskell, Kansas */
    County_20081 = "COUNTY_20081",
    /** Hodgeman, Kansas */
    County_20083 = "COUNTY_20083",
    /** Jackson, Kansas */
    County_20085 = "COUNTY_20085",
    /** Jefferson, Kansas */
    County_20087 = "COUNTY_20087",
    /** Jewell, Kansas */
    County_20089 = "COUNTY_20089",
    /** Johnson, Kansas */
    County_20091 = "COUNTY_20091",
    /** Kearny, Kansas */
    County_20093 = "COUNTY_20093",
    /** Kingman, Kansas */
    County_20095 = "COUNTY_20095",
    /** Kiowa, Kansas */
    County_20097 = "COUNTY_20097",
    /** Labette, Kansas */
    County_20099 = "COUNTY_20099",
    /** Lane, Kansas */
    County_20101 = "COUNTY_20101",
    /** Leavenworth, Kansas */
    County_20103 = "COUNTY_20103",
    /** Lincoln, Kansas */
    County_20105 = "COUNTY_20105",
    /** Linn, Kansas */
    County_20107 = "COUNTY_20107",
    /** Logan, Kansas */
    County_20109 = "COUNTY_20109",
    /** Lyon, Kansas */
    County_20111 = "COUNTY_20111",
    /** McPherson, Kansas */
    County_20113 = "COUNTY_20113",
    /** Marion, Kansas */
    County_20115 = "COUNTY_20115",
    /** Marshall, Kansas */
    County_20117 = "COUNTY_20117",
    /** Meade, Kansas */
    County_20119 = "COUNTY_20119",
    /** Miami, Kansas */
    County_20121 = "COUNTY_20121",
    /** Mitchell, Kansas */
    County_20123 = "COUNTY_20123",
    /** Montgomery, Kansas */
    County_20125 = "COUNTY_20125",
    /** Morris, Kansas */
    County_20127 = "COUNTY_20127",
    /** Morton, Kansas */
    County_20129 = "COUNTY_20129",
    /** Nemaha, Kansas */
    County_20131 = "COUNTY_20131",
    /** Neosho, Kansas */
    County_20133 = "COUNTY_20133",
    /** Ness, Kansas */
    County_20135 = "COUNTY_20135",
    /** Norton, Kansas */
    County_20137 = "COUNTY_20137",
    /** Osage, Kansas */
    County_20139 = "COUNTY_20139",
    /** Osborne, Kansas */
    County_20141 = "COUNTY_20141",
    /** Ottawa, Kansas */
    County_20143 = "COUNTY_20143",
    /** Pawnee, Kansas */
    County_20145 = "COUNTY_20145",
    /** Phillips, Kansas */
    County_20147 = "COUNTY_20147",
    /** Pottawatomie, Kansas */
    County_20149 = "COUNTY_20149",
    /** Pratt, Kansas */
    County_20151 = "COUNTY_20151",
    /** Rawlins, Kansas */
    County_20153 = "COUNTY_20153",
    /** Reno, Kansas */
    County_20155 = "COUNTY_20155",
    /** Republic, Kansas */
    County_20157 = "COUNTY_20157",
    /** Rice, Kansas */
    County_20159 = "COUNTY_20159",
    /** Riley, Kansas */
    County_20161 = "COUNTY_20161",
    /** Rooks, Kansas */
    County_20163 = "COUNTY_20163",
    /** Rush, Kansas */
    County_20165 = "COUNTY_20165",
    /** Russell, Kansas */
    County_20167 = "COUNTY_20167",
    /** Saline, Kansas */
    County_20169 = "COUNTY_20169",
    /** Scott, Kansas */
    County_20171 = "COUNTY_20171",
    /** Sedgwick, Kansas */
    County_20173 = "COUNTY_20173",
    /** Seward, Kansas */
    County_20175 = "COUNTY_20175",
    /** Shawnee, Kansas */
    County_20177 = "COUNTY_20177",
    /** Sheridan, Kansas */
    County_20179 = "COUNTY_20179",
    /** Sherman, Kansas */
    County_20181 = "COUNTY_20181",
    /** Smith, Kansas */
    County_20183 = "COUNTY_20183",
    /** Stafford, Kansas */
    County_20185 = "COUNTY_20185",
    /** Stanton, Kansas */
    County_20187 = "COUNTY_20187",
    /** Stevens, Kansas */
    County_20189 = "COUNTY_20189",
    /** Sumner, Kansas */
    County_20191 = "COUNTY_20191",
    /** Thomas, Kansas */
    County_20193 = "COUNTY_20193",
    /** Trego, Kansas */
    County_20195 = "COUNTY_20195",
    /** Wabaunsee, Kansas */
    County_20197 = "COUNTY_20197",
    /** Wallace, Kansas */
    County_20199 = "COUNTY_20199",
    /** Washington, Kansas */
    County_20201 = "COUNTY_20201",
    /** Wichita, Kansas */
    County_20203 = "COUNTY_20203",
    /** Wilson, Kansas */
    County_20205 = "COUNTY_20205",
    /** Woodson, Kansas */
    County_20207 = "COUNTY_20207",
    /** Wyandotte, Kansas */
    County_20209 = "COUNTY_20209",
    /** Adair, Kentucky */
    County_21001 = "COUNTY_21001",
    /** Allen, Kentucky */
    County_21003 = "COUNTY_21003",
    /** Anderson, Kentucky */
    County_21005 = "COUNTY_21005",
    /** Ballard, Kentucky */
    County_21007 = "COUNTY_21007",
    /** Barren, Kentucky */
    County_21009 = "COUNTY_21009",
    /** Bath, Kentucky */
    County_21011 = "COUNTY_21011",
    /** Bell, Kentucky */
    County_21013 = "COUNTY_21013",
    /** Boone, Kentucky */
    County_21015 = "COUNTY_21015",
    /** Bourbon, Kentucky */
    County_21017 = "COUNTY_21017",
    /** Boyd, Kentucky */
    County_21019 = "COUNTY_21019",
    /** Boyle, Kentucky */
    County_21021 = "COUNTY_21021",
    /** Bracken, Kentucky */
    County_21023 = "COUNTY_21023",
    /** Breathitt, Kentucky */
    County_21025 = "COUNTY_21025",
    /** Breckinridge, Kentucky */
    County_21027 = "COUNTY_21027",
    /** Bullitt, Kentucky */
    County_21029 = "COUNTY_21029",
    /** Butler, Kentucky */
    County_21031 = "COUNTY_21031",
    /** Caldwell, Kentucky */
    County_21033 = "COUNTY_21033",
    /** Calloway, Kentucky */
    County_21035 = "COUNTY_21035",
    /** Campbell, Kentucky */
    County_21037 = "COUNTY_21037",
    /** Carlisle, Kentucky */
    County_21039 = "COUNTY_21039",
    /** Carroll, Kentucky */
    County_21041 = "COUNTY_21041",
    /** Carter, Kentucky */
    County_21043 = "COUNTY_21043",
    /** Casey, Kentucky */
    County_21045 = "COUNTY_21045",
    /** Christian, Kentucky */
    County_21047 = "COUNTY_21047",
    /** Clark, Kentucky */
    County_21049 = "COUNTY_21049",
    /** Clay, Kentucky */
    County_21051 = "COUNTY_21051",
    /** Clinton, Kentucky */
    County_21053 = "COUNTY_21053",
    /** Crittenden, Kentucky */
    County_21055 = "COUNTY_21055",
    /** Cumberland, Kentucky */
    County_21057 = "COUNTY_21057",
    /** Daviess, Kentucky */
    County_21059 = "COUNTY_21059",
    /** Edmonson, Kentucky */
    County_21061 = "COUNTY_21061",
    /** Elliott, Kentucky */
    County_21063 = "COUNTY_21063",
    /** Estill, Kentucky */
    County_21065 = "COUNTY_21065",
    /** Fayette, Kentucky */
    County_21067 = "COUNTY_21067",
    /** Fleming, Kentucky */
    County_21069 = "COUNTY_21069",
    /** Floyd, Kentucky */
    County_21071 = "COUNTY_21071",
    /** Franklin, Kentucky */
    County_21073 = "COUNTY_21073",
    /** Fulton, Kentucky */
    County_21075 = "COUNTY_21075",
    /** Gallatin, Kentucky */
    County_21077 = "COUNTY_21077",
    /** Garrard, Kentucky */
    County_21079 = "COUNTY_21079",
    /** Grant, Kentucky */
    County_21081 = "COUNTY_21081",
    /** Graves, Kentucky */
    County_21083 = "COUNTY_21083",
    /** Grayson, Kentucky */
    County_21085 = "COUNTY_21085",
    /** Green, Kentucky */
    County_21087 = "COUNTY_21087",
    /** Greenup, Kentucky */
    County_21089 = "COUNTY_21089",
    /** Hancock, Kentucky */
    County_21091 = "COUNTY_21091",
    /** Hardin, Kentucky */
    County_21093 = "COUNTY_21093",
    /** Harlan, Kentucky */
    County_21095 = "COUNTY_21095",
    /** Harrison, Kentucky */
    County_21097 = "COUNTY_21097",
    /** Hart, Kentucky */
    County_21099 = "COUNTY_21099",
    /** Henderson, Kentucky */
    County_21101 = "COUNTY_21101",
    /** Henry, Kentucky */
    County_21103 = "COUNTY_21103",
    /** Hickman, Kentucky */
    County_21105 = "COUNTY_21105",
    /** Hopkins, Kentucky */
    County_21107 = "COUNTY_21107",
    /** Jackson, Kentucky */
    County_21109 = "COUNTY_21109",
    /** Jefferson, Kentucky */
    County_21111 = "COUNTY_21111",
    /** Jessamine, Kentucky */
    County_21113 = "COUNTY_21113",
    /** Johnson, Kentucky */
    County_21115 = "COUNTY_21115",
    /** Kenton, Kentucky */
    County_21117 = "COUNTY_21117",
    /** Knott, Kentucky */
    County_21119 = "COUNTY_21119",
    /** Knox, Kentucky */
    County_21121 = "COUNTY_21121",
    /** Larue, Kentucky */
    County_21123 = "COUNTY_21123",
    /** Laurel, Kentucky */
    County_21125 = "COUNTY_21125",
    /** Lawrence, Kentucky */
    County_21127 = "COUNTY_21127",
    /** Lee, Kentucky */
    County_21129 = "COUNTY_21129",
    /** Leslie, Kentucky */
    County_21131 = "COUNTY_21131",
    /** Letcher, Kentucky */
    County_21133 = "COUNTY_21133",
    /** Lewis, Kentucky */
    County_21135 = "COUNTY_21135",
    /** Lincoln, Kentucky */
    County_21137 = "COUNTY_21137",
    /** Livingston, Kentucky */
    County_21139 = "COUNTY_21139",
    /** Logan, Kentucky */
    County_21141 = "COUNTY_21141",
    /** Lyon, Kentucky */
    County_21143 = "COUNTY_21143",
    /** McCracken, Kentucky */
    County_21145 = "COUNTY_21145",
    /** McCreary, Kentucky */
    County_21147 = "COUNTY_21147",
    /** Mclean, Kentucky */
    County_21149 = "COUNTY_21149",
    /** Madison, Kentucky */
    County_21151 = "COUNTY_21151",
    /** Magoffin, Kentucky */
    County_21153 = "COUNTY_21153",
    /** Marion, Kentucky */
    County_21155 = "COUNTY_21155",
    /** Marshall, Kentucky */
    County_21157 = "COUNTY_21157",
    /** Martin, Kentucky */
    County_21159 = "COUNTY_21159",
    /** Mason, Kentucky */
    County_21161 = "COUNTY_21161",
    /** Meade, Kentucky */
    County_21163 = "COUNTY_21163",
    /** Menifee, Kentucky */
    County_21165 = "COUNTY_21165",
    /** Mercer, Kentucky */
    County_21167 = "COUNTY_21167",
    /** Metcalfe, Kentucky */
    County_21169 = "COUNTY_21169",
    /** Monroe, Kentucky */
    County_21171 = "COUNTY_21171",
    /** Montgomery, Kentucky */
    County_21173 = "COUNTY_21173",
    /** Morgan, Kentucky */
    County_21175 = "COUNTY_21175",
    /** Muhlenberg, Kentucky */
    County_21177 = "COUNTY_21177",
    /** Nelson, Kentucky */
    County_21179 = "COUNTY_21179",
    /** Nicholas, Kentucky */
    County_21181 = "COUNTY_21181",
    /** Ohio, Kentucky */
    County_21183 = "COUNTY_21183",
    /** Oldham, Kentucky */
    County_21185 = "COUNTY_21185",
    /** Owen, Kentucky */
    County_21187 = "COUNTY_21187",
    /** Owsley, Kentucky */
    County_21189 = "COUNTY_21189",
    /** Pendleton, Kentucky */
    County_21191 = "COUNTY_21191",
    /** Perry, Kentucky */
    County_21193 = "COUNTY_21193",
    /** Pike, Kentucky */
    County_21195 = "COUNTY_21195",
    /** Powell, Kentucky */
    County_21197 = "COUNTY_21197",
    /** Pulaski, Kentucky */
    County_21199 = "COUNTY_21199",
    /** Robertson, Kentucky */
    County_21201 = "COUNTY_21201",
    /** Rockcastle, Kentucky */
    County_21203 = "COUNTY_21203",
    /** Rowan, Kentucky */
    County_21205 = "COUNTY_21205",
    /** Russell, Kentucky */
    County_21207 = "COUNTY_21207",
    /** Scott, Kentucky */
    County_21209 = "COUNTY_21209",
    /** Shelby, Kentucky */
    County_21211 = "COUNTY_21211",
    /** Simpson, Kentucky */
    County_21213 = "COUNTY_21213",
    /** Spencer, Kentucky */
    County_21215 = "COUNTY_21215",
    /** Taylor, Kentucky */
    County_21217 = "COUNTY_21217",
    /** Todd, Kentucky */
    County_21219 = "COUNTY_21219",
    /** Trigg, Kentucky */
    County_21221 = "COUNTY_21221",
    /** Trimble, Kentucky */
    County_21223 = "COUNTY_21223",
    /** Union, Kentucky */
    County_21225 = "COUNTY_21225",
    /** Warren, Kentucky */
    County_21227 = "COUNTY_21227",
    /** Washington, Kentucky */
    County_21229 = "COUNTY_21229",
    /** Wayne, Kentucky */
    County_21231 = "COUNTY_21231",
    /** Webster, Kentucky */
    County_21233 = "COUNTY_21233",
    /** Whitley, Kentucky */
    County_21235 = "COUNTY_21235",
    /** Wolfe, Kentucky */
    County_21237 = "COUNTY_21237",
    /** Woodford, Kentucky */
    County_21239 = "COUNTY_21239",
    /** Acadia, Louisiana */
    County_22001 = "COUNTY_22001",
    /** Allen, Louisiana */
    County_22003 = "COUNTY_22003",
    /** Ascension, Louisiana */
    County_22005 = "COUNTY_22005",
    /** Assumption, Louisiana */
    County_22007 = "COUNTY_22007",
    /** Avoyelles, Louisiana */
    County_22009 = "COUNTY_22009",
    /** Beauregard, Louisiana */
    County_22011 = "COUNTY_22011",
    /** Bienville, Louisiana */
    County_22013 = "COUNTY_22013",
    /** Bossier, Louisiana */
    County_22015 = "COUNTY_22015",
    /** Caddo, Louisiana */
    County_22017 = "COUNTY_22017",
    /** Calcasieu, Louisiana */
    County_22019 = "COUNTY_22019",
    /** Caldwell, Louisiana */
    County_22021 = "COUNTY_22021",
    /** Cameron, Louisiana */
    County_22023 = "COUNTY_22023",
    /** Catahoula, Louisiana */
    County_22025 = "COUNTY_22025",
    /** Claiborne, Louisiana */
    County_22027 = "COUNTY_22027",
    /** Concordia, Louisiana */
    County_22029 = "COUNTY_22029",
    /** De Soto, Louisiana */
    County_22031 = "COUNTY_22031",
    /** East Baton Rouge, Louisiana */
    County_22033 = "COUNTY_22033",
    /** East Carroll, Louisiana */
    County_22035 = "COUNTY_22035",
    /** East Feliciana, Louisiana */
    County_22037 = "COUNTY_22037",
    /** Evangeline, Louisiana */
    County_22039 = "COUNTY_22039",
    /** Franklin, Louisiana */
    County_22041 = "COUNTY_22041",
    /** Grant, Louisiana */
    County_22043 = "COUNTY_22043",
    /** Iberia, Louisiana */
    County_22045 = "COUNTY_22045",
    /** Iberville, Louisiana */
    County_22047 = "COUNTY_22047",
    /** Jackson, Louisiana */
    County_22049 = "COUNTY_22049",
    /** Jefferson, Louisiana */
    County_22051 = "COUNTY_22051",
    /** Jefferson Davis, Louisiana */
    County_22053 = "COUNTY_22053",
    /** Lafayette, Louisiana */
    County_22055 = "COUNTY_22055",
    /** Lafourche, Louisiana */
    County_22057 = "COUNTY_22057",
    /** La Salle, Louisiana */
    County_22059 = "COUNTY_22059",
    /** Lincoln, Louisiana */
    County_22061 = "COUNTY_22061",
    /** Livingston, Louisiana */
    County_22063 = "COUNTY_22063",
    /** Madison, Louisiana */
    County_22065 = "COUNTY_22065",
    /** Morehouse, Louisiana */
    County_22067 = "COUNTY_22067",
    /** Natchitoches, Louisiana */
    County_22069 = "COUNTY_22069",
    /** Orleans, Louisiana */
    County_22071 = "COUNTY_22071",
    /** Ouachita, Louisiana */
    County_22073 = "COUNTY_22073",
    /** Plaquemines, Louisiana */
    County_22075 = "COUNTY_22075",
    /** Pointe Coupee, Louisiana */
    County_22077 = "COUNTY_22077",
    /** Rapides, Louisiana */
    County_22079 = "COUNTY_22079",
    /** Red River, Louisiana */
    County_22081 = "COUNTY_22081",
    /** Richland, Louisiana */
    County_22083 = "COUNTY_22083",
    /** Sabine, Louisiana */
    County_22085 = "COUNTY_22085",
    /** St Bernard, Louisiana */
    County_22087 = "COUNTY_22087",
    /** St Charles, Louisiana */
    County_22089 = "COUNTY_22089",
    /** St Helena, Louisiana */
    County_22091 = "COUNTY_22091",
    /** St James, Louisiana */
    County_22093 = "COUNTY_22093",
    /** St John The Baptist, Louisiana */
    County_22095 = "COUNTY_22095",
    /** St Landry, Louisiana */
    County_22097 = "COUNTY_22097",
    /** St Martin, Louisiana */
    County_22099 = "COUNTY_22099",
    /** St Mary, Louisiana */
    County_22101 = "COUNTY_22101",
    /** St Tammany, Louisiana */
    County_22103 = "COUNTY_22103",
    /** Tangipahoa, Louisiana */
    County_22105 = "COUNTY_22105",
    /** Tensas, Louisiana */
    County_22107 = "COUNTY_22107",
    /** Terrebonne, Louisiana */
    County_22109 = "COUNTY_22109",
    /** Union, Louisiana */
    County_22111 = "COUNTY_22111",
    /** Vermilion, Louisiana */
    County_22113 = "COUNTY_22113",
    /** Vernon, Louisiana */
    County_22115 = "COUNTY_22115",
    /** Washington, Louisiana */
    County_22117 = "COUNTY_22117",
    /** Webster, Louisiana */
    County_22119 = "COUNTY_22119",
    /** West Baton Rouge, Louisiana */
    County_22121 = "COUNTY_22121",
    /** West Carroll, Louisiana */
    County_22123 = "COUNTY_22123",
    /** West Feliciana, Louisiana */
    County_22125 = "COUNTY_22125",
    /** Winn, Louisiana */
    County_22127 = "COUNTY_22127",
    /** Androscoggin, Maine */
    County_23001 = "COUNTY_23001",
    /** Aroostook, Maine */
    County_23003 = "COUNTY_23003",
    /** Cumberland, Maine */
    County_23005 = "COUNTY_23005",
    /** Franklin, Maine */
    County_23007 = "COUNTY_23007",
    /** Hancock, Maine */
    County_23009 = "COUNTY_23009",
    /** Kennebec, Maine */
    County_23011 = "COUNTY_23011",
    /** Knox, Maine */
    County_23013 = "COUNTY_23013",
    /** Lincoln, Maine */
    County_23015 = "COUNTY_23015",
    /** Oxford, Maine */
    County_23017 = "COUNTY_23017",
    /** Penobscot, Maine */
    County_23019 = "COUNTY_23019",
    /** Piscataquis, Maine */
    County_23021 = "COUNTY_23021",
    /** Sagadahoc, Maine */
    County_23023 = "COUNTY_23023",
    /** Somerset, Maine */
    County_23025 = "COUNTY_23025",
    /** Waldo, Maine */
    County_23027 = "COUNTY_23027",
    /** Washington, Maine */
    County_23029 = "COUNTY_23029",
    /** York, Maine */
    County_23031 = "COUNTY_23031",
    /** Allegany, Maryland */
    County_24001 = "COUNTY_24001",
    /** Anne Arundel, Maryland */
    County_24003 = "COUNTY_24003",
    /** Baltimore, Maryland */
    County_24005 = "COUNTY_24005",
    /** Calvert, Maryland */
    County_24009 = "COUNTY_24009",
    /** Caroline, Maryland */
    County_24011 = "COUNTY_24011",
    /** Carroll, Maryland */
    County_24013 = "COUNTY_24013",
    /** Cecil, Maryland */
    County_24015 = "COUNTY_24015",
    /** Charles, Maryland */
    County_24017 = "COUNTY_24017",
    /** Dorchester, Maryland */
    County_24019 = "COUNTY_24019",
    /** Frederick, Maryland */
    County_24021 = "COUNTY_24021",
    /** Garrett, Maryland */
    County_24023 = "COUNTY_24023",
    /** Harford, Maryland */
    County_24025 = "COUNTY_24025",
    /** Howard, Maryland */
    County_24027 = "COUNTY_24027",
    /** Kent, Maryland */
    County_24029 = "COUNTY_24029",
    /** Montgomery, Maryland */
    County_24031 = "COUNTY_24031",
    /** Prince Georges, Maryland */
    County_24033 = "COUNTY_24033",
    /** Queen Annes, Maryland */
    County_24035 = "COUNTY_24035",
    /** St Marys, Maryland */
    County_24037 = "COUNTY_24037",
    /** Somerset, Maryland */
    County_24039 = "COUNTY_24039",
    /** Talbot, Maryland */
    County_24041 = "COUNTY_24041",
    /** Washington, Maryland */
    County_24043 = "COUNTY_24043",
    /** Wicomico, Maryland */
    County_24045 = "COUNTY_24045",
    /** Worcester, Maryland */
    County_24047 = "COUNTY_24047",
    /** Baltimore City, Maryland */
    County_24510 = "COUNTY_24510",
    /** Barnstable, Massachusetts */
    County_25001 = "COUNTY_25001",
    /** Berkshire, Massachusetts */
    County_25003 = "COUNTY_25003",
    /** Bristol, Massachusetts */
    County_25005 = "COUNTY_25005",
    /** Dukes, Massachusetts */
    County_25007 = "COUNTY_25007",
    /** Essex, Massachusetts */
    County_25009 = "COUNTY_25009",
    /** Franklin, Massachusetts */
    County_25011 = "COUNTY_25011",
    /** Hampden, Massachusetts */
    County_25013 = "COUNTY_25013",
    /** Hampshire, Massachusetts */
    County_25015 = "COUNTY_25015",
    /** Middlesex, Massachusetts */
    County_25017 = "COUNTY_25017",
    /** Nantucket, Massachusetts */
    County_25019 = "COUNTY_25019",
    /** Norfolk, Massachusetts */
    County_25021 = "COUNTY_25021",
    /** Plymouth, Massachusetts */
    County_25023 = "COUNTY_25023",
    /** Suffolk, Massachusetts */
    County_25025 = "COUNTY_25025",
    /** Worcester, Massachusetts */
    County_25027 = "COUNTY_25027",
    /** Alcona, Michigan */
    County_26001 = "COUNTY_26001",
    /** Alger, Michigan */
    County_26003 = "COUNTY_26003",
    /** Allegan, Michigan */
    County_26005 = "COUNTY_26005",
    /** Alpena, Michigan */
    County_26007 = "COUNTY_26007",
    /** Antrim, Michigan */
    County_26009 = "COUNTY_26009",
    /** Arenac, Michigan */
    County_26011 = "COUNTY_26011",
    /** Baraga, Michigan */
    County_26013 = "COUNTY_26013",
    /** Barry, Michigan */
    County_26015 = "COUNTY_26015",
    /** Bay, Michigan */
    County_26017 = "COUNTY_26017",
    /** Benzie, Michigan */
    County_26019 = "COUNTY_26019",
    /** Berrien, Michigan */
    County_26021 = "COUNTY_26021",
    /** Branch, Michigan */
    County_26023 = "COUNTY_26023",
    /** Calhoun, Michigan */
    County_26025 = "COUNTY_26025",
    /** Cass, Michigan */
    County_26027 = "COUNTY_26027",
    /** Charlevoix, Michigan */
    County_26029 = "COUNTY_26029",
    /** Cheboygan, Michigan */
    County_26031 = "COUNTY_26031",
    /** Chippewa, Michigan */
    County_26033 = "COUNTY_26033",
    /** Clare, Michigan */
    County_26035 = "COUNTY_26035",
    /** Clinton, Michigan */
    County_26037 = "COUNTY_26037",
    /** Crawford, Michigan */
    County_26039 = "COUNTY_26039",
    /** Delta, Michigan */
    County_26041 = "COUNTY_26041",
    /** Dickinson, Michigan */
    County_26043 = "COUNTY_26043",
    /** Eaton, Michigan */
    County_26045 = "COUNTY_26045",
    /** Emmet, Michigan */
    County_26047 = "COUNTY_26047",
    /** Genesee, Michigan */
    County_26049 = "COUNTY_26049",
    /** Gladwin, Michigan */
    County_26051 = "COUNTY_26051",
    /** Gogebic, Michigan */
    County_26053 = "COUNTY_26053",
    /** Grand Traverse, Michigan */
    County_26055 = "COUNTY_26055",
    /** Gratiot, Michigan */
    County_26057 = "COUNTY_26057",
    /** Hillsdale, Michigan */
    County_26059 = "COUNTY_26059",
    /** Houghton, Michigan */
    County_26061 = "COUNTY_26061",
    /** Huron, Michigan */
    County_26063 = "COUNTY_26063",
    /** Ingham, Michigan */
    County_26065 = "COUNTY_26065",
    /** Ionia, Michigan */
    County_26067 = "COUNTY_26067",
    /** Iosco, Michigan */
    County_26069 = "COUNTY_26069",
    /** Iron, Michigan */
    County_26071 = "COUNTY_26071",
    /** Isabella, Michigan */
    County_26073 = "COUNTY_26073",
    /** Jackson, Michigan */
    County_26075 = "COUNTY_26075",
    /** Kalamazoo, Michigan */
    County_26077 = "COUNTY_26077",
    /** Kalkaska, Michigan */
    County_26079 = "COUNTY_26079",
    /** Kent, Michigan */
    County_26081 = "COUNTY_26081",
    /** Keweenaw, Michigan */
    County_26083 = "COUNTY_26083",
    /** Lake, Michigan */
    County_26085 = "COUNTY_26085",
    /** Lapeer, Michigan */
    County_26087 = "COUNTY_26087",
    /** Leelanau, Michigan */
    County_26089 = "COUNTY_26089",
    /** Lenawee, Michigan */
    County_26091 = "COUNTY_26091",
    /** Livingston, Michigan */
    County_26093 = "COUNTY_26093",
    /** Luce, Michigan */
    County_26095 = "COUNTY_26095",
    /** Mackinac, Michigan */
    County_26097 = "COUNTY_26097",
    /** Macomb, Michigan */
    County_26099 = "COUNTY_26099",
    /** Manistee, Michigan */
    County_26101 = "COUNTY_26101",
    /** Marquette, Michigan */
    County_26103 = "COUNTY_26103",
    /** Mason, Michigan */
    County_26105 = "COUNTY_26105",
    /** Mecosta, Michigan */
    County_26107 = "COUNTY_26107",
    /** Menominee, Michigan */
    County_26109 = "COUNTY_26109",
    /** Midland, Michigan */
    County_26111 = "COUNTY_26111",
    /** Missaukee, Michigan */
    County_26113 = "COUNTY_26113",
    /** Monroe, Michigan */
    County_26115 = "COUNTY_26115",
    /** Montcalm, Michigan */
    County_26117 = "COUNTY_26117",
    /** Montmorency, Michigan */
    County_26119 = "COUNTY_26119",
    /** Muskegon, Michigan */
    County_26121 = "COUNTY_26121",
    /** Newaygo, Michigan */
    County_26123 = "COUNTY_26123",
    /** Oakland, Michigan */
    County_26125 = "COUNTY_26125",
    /** Oceana, Michigan */
    County_26127 = "COUNTY_26127",
    /** Ogemaw, Michigan */
    County_26129 = "COUNTY_26129",
    /** Ontonagon, Michigan */
    County_26131 = "COUNTY_26131",
    /** Osceola, Michigan */
    County_26133 = "COUNTY_26133",
    /** Oscoda, Michigan */
    County_26135 = "COUNTY_26135",
    /** Otsego, Michigan */
    County_26137 = "COUNTY_26137",
    /** Ottawa, Michigan */
    County_26139 = "COUNTY_26139",
    /** Presque Isle, Michigan */
    County_26141 = "COUNTY_26141",
    /** Roscommon, Michigan */
    County_26143 = "COUNTY_26143",
    /** Saginaw, Michigan */
    County_26145 = "COUNTY_26145",
    /** St Clair, Michigan */
    County_26147 = "COUNTY_26147",
    /** St Joseph, Michigan */
    County_26149 = "COUNTY_26149",
    /** Sanilac, Michigan */
    County_26151 = "COUNTY_26151",
    /** Schoolcraft, Michigan */
    County_26153 = "COUNTY_26153",
    /** Shiawassee, Michigan */
    County_26155 = "COUNTY_26155",
    /** Tuscola, Michigan */
    County_26157 = "COUNTY_26157",
    /** Van Buren, Michigan */
    County_26159 = "COUNTY_26159",
    /** Washtenaw, Michigan */
    County_26161 = "COUNTY_26161",
    /** Wayne, Michigan */
    County_26163 = "COUNTY_26163",
    /** Wexford, Michigan */
    County_26165 = "COUNTY_26165",
    /** Aitkin, Minnesota */
    County_27001 = "COUNTY_27001",
    /** Anoka, Minnesota */
    County_27003 = "COUNTY_27003",
    /** Becker, Minnesota */
    County_27005 = "COUNTY_27005",
    /** Beltrami, Minnesota */
    County_27007 = "COUNTY_27007",
    /** Benton, Minnesota */
    County_27009 = "COUNTY_27009",
    /** Big Stone, Minnesota */
    County_27011 = "COUNTY_27011",
    /** Blue Earth, Minnesota */
    County_27013 = "COUNTY_27013",
    /** Brown, Minnesota */
    County_27015 = "COUNTY_27015",
    /** Carlton, Minnesota */
    County_27017 = "COUNTY_27017",
    /** Carver, Minnesota */
    County_27019 = "COUNTY_27019",
    /** Cass, Minnesota */
    County_27021 = "COUNTY_27021",
    /** Chippewa, Minnesota */
    County_27023 = "COUNTY_27023",
    /** Chisago, Minnesota */
    County_27025 = "COUNTY_27025",
    /** Clay, Minnesota */
    County_27027 = "COUNTY_27027",
    /** Clearwater, Minnesota */
    County_27029 = "COUNTY_27029",
    /** Cook, Minnesota */
    County_27031 = "COUNTY_27031",
    /** Cottonwood, Minnesota */
    County_27033 = "COUNTY_27033",
    /** Crow Wing, Minnesota */
    County_27035 = "COUNTY_27035",
    /** Dakota, Minnesota */
    County_27037 = "COUNTY_27037",
    /** Dodge, Minnesota */
    County_27039 = "COUNTY_27039",
    /** Douglas, Minnesota */
    County_27041 = "COUNTY_27041",
    /** Faribault, Minnesota */
    County_27043 = "COUNTY_27043",
    /** Fillmore, Minnesota */
    County_27045 = "COUNTY_27045",
    /** Freeborn, Minnesota */
    County_27047 = "COUNTY_27047",
    /** Goodhue, Minnesota */
    County_27049 = "COUNTY_27049",
    /** Grant, Minnesota */
    County_27051 = "COUNTY_27051",
    /** Hennepin, Minnesota */
    County_27053 = "COUNTY_27053",
    /** Houston, Minnesota */
    County_27055 = "COUNTY_27055",
    /** Hubbard, Minnesota */
    County_27057 = "COUNTY_27057",
    /** Isanti, Minnesota */
    County_27059 = "COUNTY_27059",
    /** Itasca, Minnesota */
    County_27061 = "COUNTY_27061",
    /** Jackson, Minnesota */
    County_27063 = "COUNTY_27063",
    /** Kanabec, Minnesota */
    County_27065 = "COUNTY_27065",
    /** Kandiyohi, Minnesota */
    County_27067 = "COUNTY_27067",
    /** Kittson, Minnesota */
    County_27069 = "COUNTY_27069",
    /** Koochiching, Minnesota */
    County_27071 = "COUNTY_27071",
    /** Lac Qui Parle, Minnesota */
    County_27073 = "COUNTY_27073",
    /** Lake, Minnesota */
    County_27075 = "COUNTY_27075",
    /** Lake of The Woods, Minnesota */
    County_27077 = "COUNTY_27077",
    /** Le Sueur, Minnesota */
    County_27079 = "COUNTY_27079",
    /** Lincoln, Minnesota */
    County_27081 = "COUNTY_27081",
    /** Lyon, Minnesota */
    County_27083 = "COUNTY_27083",
    /** McLeod, Minnesota */
    County_27085 = "COUNTY_27085",
    /** Mahnomen, Minnesota */
    County_27087 = "COUNTY_27087",
    /** Marshall, Minnesota */
    County_27089 = "COUNTY_27089",
    /** Martin, Minnesota */
    County_27091 = "COUNTY_27091",
    /** Meeker, Minnesota */
    County_27093 = "COUNTY_27093",
    /** Mille Lacs, Minnesota */
    County_27095 = "COUNTY_27095",
    /** Morrison, Minnesota */
    County_27097 = "COUNTY_27097",
    /** Mower, Minnesota */
    County_27099 = "COUNTY_27099",
    /** Murray, Minnesota */
    County_27101 = "COUNTY_27101",
    /** Nicollet, Minnesota */
    County_27103 = "COUNTY_27103",
    /** Nobles, Minnesota */
    County_27105 = "COUNTY_27105",
    /** Norman, Minnesota */
    County_27107 = "COUNTY_27107",
    /** Olmsted, Minnesota */
    County_27109 = "COUNTY_27109",
    /** Otter Tail, Minnesota */
    County_27111 = "COUNTY_27111",
    /** Pennington, Minnesota */
    County_27113 = "COUNTY_27113",
    /** Pine, Minnesota */
    County_27115 = "COUNTY_27115",
    /** Pipestone, Minnesota */
    County_27117 = "COUNTY_27117",
    /** Polk, Minnesota */
    County_27119 = "COUNTY_27119",
    /** Pope, Minnesota */
    County_27121 = "COUNTY_27121",
    /** Ramsey, Minnesota */
    County_27123 = "COUNTY_27123",
    /** Red Lake, Minnesota */
    County_27125 = "COUNTY_27125",
    /** Redwood, Minnesota */
    County_27127 = "COUNTY_27127",
    /** Renville, Minnesota */
    County_27129 = "COUNTY_27129",
    /** Rice, Minnesota */
    County_27131 = "COUNTY_27131",
    /** Rock, Minnesota */
    County_27133 = "COUNTY_27133",
    /** Roseau, Minnesota */
    County_27135 = "COUNTY_27135",
    /** St Louis, Minnesota */
    County_27137 = "COUNTY_27137",
    /** Scott, Minnesota */
    County_27139 = "COUNTY_27139",
    /** Sherburne, Minnesota */
    County_27141 = "COUNTY_27141",
    /** Sibley, Minnesota */
    County_27143 = "COUNTY_27143",
    /** Stearns, Minnesota */
    County_27145 = "COUNTY_27145",
    /** Steele, Minnesota */
    County_27147 = "COUNTY_27147",
    /** Stevens, Minnesota */
    County_27149 = "COUNTY_27149",
    /** Swift, Minnesota */
    County_27151 = "COUNTY_27151",
    /** Todd, Minnesota */
    County_27153 = "COUNTY_27153",
    /** Traverse, Minnesota */
    County_27155 = "COUNTY_27155",
    /** Wabasha, Minnesota */
    County_27157 = "COUNTY_27157",
    /** Wadena, Minnesota */
    County_27159 = "COUNTY_27159",
    /** Waseca, Minnesota */
    County_27161 = "COUNTY_27161",
    /** Washington, Minnesota */
    County_27163 = "COUNTY_27163",
    /** Watonwan, Minnesota */
    County_27165 = "COUNTY_27165",
    /** Wilkin, Minnesota */
    County_27167 = "COUNTY_27167",
    /** Winona, Minnesota */
    County_27169 = "COUNTY_27169",
    /** Wright, Minnesota */
    County_27171 = "COUNTY_27171",
    /** Yellow Medicine, Minnesota */
    County_27173 = "COUNTY_27173",
    /** Adams, Mississippi */
    County_28001 = "COUNTY_28001",
    /** Alcorn, Mississippi */
    County_28003 = "COUNTY_28003",
    /** Amite, Mississippi */
    County_28005 = "COUNTY_28005",
    /** Attala, Mississippi */
    County_28007 = "COUNTY_28007",
    /** Benton, Mississippi */
    County_28009 = "COUNTY_28009",
    /** Bolivar, Mississippi */
    County_28011 = "COUNTY_28011",
    /** Calhoun, Mississippi */
    County_28013 = "COUNTY_28013",
    /** Carroll, Mississippi */
    County_28015 = "COUNTY_28015",
    /** Chickasaw, Mississippi */
    County_28017 = "COUNTY_28017",
    /** Choctaw, Mississippi */
    County_28019 = "COUNTY_28019",
    /** Claiborne, Mississippi */
    County_28021 = "COUNTY_28021",
    /** Clarke, Mississippi */
    County_28023 = "COUNTY_28023",
    /** Clay, Mississippi */
    County_28025 = "COUNTY_28025",
    /** Coahoma, Mississippi */
    County_28027 = "COUNTY_28027",
    /** Copiah, Mississippi */
    County_28029 = "COUNTY_28029",
    /** Covington, Mississippi */
    County_28031 = "COUNTY_28031",
    /** De Soto, Mississippi */
    County_28033 = "COUNTY_28033",
    /** Forrest, Mississippi */
    County_28035 = "COUNTY_28035",
    /** Franklin, Mississippi */
    County_28037 = "COUNTY_28037",
    /** George, Mississippi */
    County_28039 = "COUNTY_28039",
    /** Greene, Mississippi */
    County_28041 = "COUNTY_28041",
    /** Grenada, Mississippi */
    County_28043 = "COUNTY_28043",
    /** Hancock, Mississippi */
    County_28045 = "COUNTY_28045",
    /** Harrison, Mississippi */
    County_28047 = "COUNTY_28047",
    /** Hinds, Mississippi */
    County_28049 = "COUNTY_28049",
    /** Holmes, Mississippi */
    County_28051 = "COUNTY_28051",
    /** Humphreys, Mississippi */
    County_28053 = "COUNTY_28053",
    /** Issaquena, Mississippi */
    County_28055 = "COUNTY_28055",
    /** Itawamba, Mississippi */
    County_28057 = "COUNTY_28057",
    /** Jackson, Mississippi */
    County_28059 = "COUNTY_28059",
    /** Jasper, Mississippi */
    County_28061 = "COUNTY_28061",
    /** Jefferson, Mississippi */
    County_28063 = "COUNTY_28063",
    /** Jefferson Davis, Mississippi */
    County_28065 = "COUNTY_28065",
    /** Jones, Mississippi */
    County_28067 = "COUNTY_28067",
    /** Kemper, Mississippi */
    County_28069 = "COUNTY_28069",
    /** Lafayette, Mississippi */
    County_28071 = "COUNTY_28071",
    /** Lamar, Mississippi */
    County_28073 = "COUNTY_28073",
    /** Lauderdale, Mississippi */
    County_28075 = "COUNTY_28075",
    /** Lawrence, Mississippi */
    County_28077 = "COUNTY_28077",
    /** Leake, Mississippi */
    County_28079 = "COUNTY_28079",
    /** Lee, Mississippi */
    County_28081 = "COUNTY_28081",
    /** Leflore, Mississippi */
    County_28083 = "COUNTY_28083",
    /** Lincoln, Mississippi */
    County_28085 = "COUNTY_28085",
    /** Lowndes, Mississippi */
    County_28087 = "COUNTY_28087",
    /** Madison, Mississippi */
    County_28089 = "COUNTY_28089",
    /** Marion, Mississippi */
    County_28091 = "COUNTY_28091",
    /** Marshall, Mississippi */
    County_28093 = "COUNTY_28093",
    /** Monroe, Mississippi */
    County_28095 = "COUNTY_28095",
    /** Montgomery, Mississippi */
    County_28097 = "COUNTY_28097",
    /** Neshoba, Mississippi */
    County_28099 = "COUNTY_28099",
    /** Newton, Mississippi */
    County_28101 = "COUNTY_28101",
    /** Noxubee, Mississippi */
    County_28103 = "COUNTY_28103",
    /** Oktibbeha, Mississippi */
    County_28105 = "COUNTY_28105",
    /** Panola, Mississippi */
    County_28107 = "COUNTY_28107",
    /** Pearl River, Mississippi */
    County_28109 = "COUNTY_28109",
    /** Perry, Mississippi */
    County_28111 = "COUNTY_28111",
    /** Pike, Mississippi */
    County_28113 = "COUNTY_28113",
    /** Pontotoc, Mississippi */
    County_28115 = "COUNTY_28115",
    /** Prentiss, Mississippi */
    County_28117 = "COUNTY_28117",
    /** Quitman, Mississippi */
    County_28119 = "COUNTY_28119",
    /** Rankin, Mississippi */
    County_28121 = "COUNTY_28121",
    /** Scott, Mississippi */
    County_28123 = "COUNTY_28123",
    /** Sharkey, Mississippi */
    County_28125 = "COUNTY_28125",
    /** Simpson, Mississippi */
    County_28127 = "COUNTY_28127",
    /** Smith, Mississippi */
    County_28129 = "COUNTY_28129",
    /** Stone, Mississippi */
    County_28131 = "COUNTY_28131",
    /** Sunflower, Mississippi */
    County_28133 = "COUNTY_28133",
    /** Tallahatchie, Mississippi */
    County_28135 = "COUNTY_28135",
    /** Tate, Mississippi */
    County_28137 = "COUNTY_28137",
    /** Tippah, Mississippi */
    County_28139 = "COUNTY_28139",
    /** Tishomingo, Mississippi */
    County_28141 = "COUNTY_28141",
    /** Tunica, Mississippi */
    County_28143 = "COUNTY_28143",
    /** Union, Mississippi */
    County_28145 = "COUNTY_28145",
    /** Walthall, Mississippi */
    County_28147 = "COUNTY_28147",
    /** Warren, Mississippi */
    County_28149 = "COUNTY_28149",
    /** Washington, Mississippi */
    County_28151 = "COUNTY_28151",
    /** Wayne, Mississippi */
    County_28153 = "COUNTY_28153",
    /** Webster, Mississippi */
    County_28155 = "COUNTY_28155",
    /** Wilkinson, Mississippi */
    County_28157 = "COUNTY_28157",
    /** Winston, Mississippi */
    County_28159 = "COUNTY_28159",
    /** Yalobusha, Mississippi */
    County_28161 = "COUNTY_28161",
    /** Yazoo, Mississippi */
    County_28163 = "COUNTY_28163",
    /** Adair, Missouri */
    County_29001 = "COUNTY_29001",
    /** Andrew, Missouri */
    County_29003 = "COUNTY_29003",
    /** Atchison, Missouri */
    County_29005 = "COUNTY_29005",
    /** Audrain, Missouri */
    County_29007 = "COUNTY_29007",
    /** Barry, Missouri */
    County_29009 = "COUNTY_29009",
    /** Barton, Missouri */
    County_29011 = "COUNTY_29011",
    /** Bates, Missouri */
    County_29013 = "COUNTY_29013",
    /** Benton, Missouri */
    County_29015 = "COUNTY_29015",
    /** Bollinger, Missouri */
    County_29017 = "COUNTY_29017",
    /** Boone, Missouri */
    County_29019 = "COUNTY_29019",
    /** Buchanan, Missouri */
    County_29021 = "COUNTY_29021",
    /** Butler, Missouri */
    County_29023 = "COUNTY_29023",
    /** Caldwell, Missouri */
    County_29025 = "COUNTY_29025",
    /** Callaway, Missouri */
    County_29027 = "COUNTY_29027",
    /** Camden, Missouri */
    County_29029 = "COUNTY_29029",
    /** Cape Girardeau, Missouri */
    County_29031 = "COUNTY_29031",
    /** Carroll, Missouri */
    County_29033 = "COUNTY_29033",
    /** Carter, Missouri */
    County_29035 = "COUNTY_29035",
    /** Cass, Missouri */
    County_29037 = "COUNTY_29037",
    /** Cedar, Missouri */
    County_29039 = "COUNTY_29039",
    /** Chariton, Missouri */
    County_29041 = "COUNTY_29041",
    /** Christian, Missouri */
    County_29043 = "COUNTY_29043",
    /** Clark, Missouri */
    County_29045 = "COUNTY_29045",
    /** Clay, Missouri */
    County_29047 = "COUNTY_29047",
    /** Clinton, Missouri */
    County_29049 = "COUNTY_29049",
    /** Cole, Missouri */
    County_29051 = "COUNTY_29051",
    /** Cooper, Missouri */
    County_29053 = "COUNTY_29053",
    /** Crawford, Missouri */
    County_29055 = "COUNTY_29055",
    /** Dade, Missouri */
    County_29057 = "COUNTY_29057",
    /** Dallas, Missouri */
    County_29059 = "COUNTY_29059",
    /** Daviess, Missouri */
    County_29061 = "COUNTY_29061",
    /** Dekalb, Missouri */
    County_29063 = "COUNTY_29063",
    /** Dent, Missouri */
    County_29065 = "COUNTY_29065",
    /** Douglas, Missouri */
    County_29067 = "COUNTY_29067",
    /** Dunklin, Missouri */
    County_29069 = "COUNTY_29069",
    /** Franklin, Missouri */
    County_29071 = "COUNTY_29071",
    /** Gasconade, Missouri */
    County_29073 = "COUNTY_29073",
    /** Gentry, Missouri */
    County_29075 = "COUNTY_29075",
    /** Greene, Missouri */
    County_29077 = "COUNTY_29077",
    /** Grundy, Missouri */
    County_29079 = "COUNTY_29079",
    /** Harrison, Missouri */
    County_29081 = "COUNTY_29081",
    /** Henry, Missouri */
    County_29083 = "COUNTY_29083",
    /** Hickory, Missouri */
    County_29085 = "COUNTY_29085",
    /** Holt, Missouri */
    County_29087 = "COUNTY_29087",
    /** Howard, Missouri */
    County_29089 = "COUNTY_29089",
    /** Howell, Missouri */
    County_29091 = "COUNTY_29091",
    /** Iron, Missouri */
    County_29093 = "COUNTY_29093",
    /** Jackson, Missouri */
    County_29095 = "COUNTY_29095",
    /** Jasper, Missouri */
    County_29097 = "COUNTY_29097",
    /** Jefferson, Missouri */
    County_29099 = "COUNTY_29099",
    /** Johnson, Missouri */
    County_29101 = "COUNTY_29101",
    /** Knox, Missouri */
    County_29103 = "COUNTY_29103",
    /** Laclede, Missouri */
    County_29105 = "COUNTY_29105",
    /** Lafayette, Missouri */
    County_29107 = "COUNTY_29107",
    /** Lawrence, Missouri */
    County_29109 = "COUNTY_29109",
    /** Lewis, Missouri */
    County_29111 = "COUNTY_29111",
    /** Lincoln, Missouri */
    County_29113 = "COUNTY_29113",
    /** Linn, Missouri */
    County_29115 = "COUNTY_29115",
    /** Livingston, Missouri */
    County_29117 = "COUNTY_29117",
    /** Mcdonald, Missouri */
    County_29119 = "COUNTY_29119",
    /** Macon, Missouri */
    County_29121 = "COUNTY_29121",
    /** Madison, Missouri */
    County_29123 = "COUNTY_29123",
    /** Maries, Missouri */
    County_29125 = "COUNTY_29125",
    /** Marion, Missouri */
    County_29127 = "COUNTY_29127",
    /** Mercer, Missouri */
    County_29129 = "COUNTY_29129",
    /** Miller, Missouri */
    County_29131 = "COUNTY_29131",
    /** Mississippi, Missouri */
    County_29133 = "COUNTY_29133",
    /** Moniteau, Missouri */
    County_29135 = "COUNTY_29135",
    /** Monroe, Missouri */
    County_29137 = "COUNTY_29137",
    /** Montgomery, Missouri */
    County_29139 = "COUNTY_29139",
    /** Morgan, Missouri */
    County_29141 = "COUNTY_29141",
    /** New Madrid, Missouri */
    County_29143 = "COUNTY_29143",
    /** Newton, Missouri */
    County_29145 = "COUNTY_29145",
    /** Nodaway, Missouri */
    County_29147 = "COUNTY_29147",
    /** Oregon, Missouri */
    County_29149 = "COUNTY_29149",
    /** Osage, Missouri */
    County_29151 = "COUNTY_29151",
    /** Ozark, Missouri */
    County_29153 = "COUNTY_29153",
    /** Pemiscot, Missouri */
    County_29155 = "COUNTY_29155",
    /** Perry, Missouri */
    County_29157 = "COUNTY_29157",
    /** Pettis, Missouri */
    County_29159 = "COUNTY_29159",
    /** Phelps, Missouri */
    County_29161 = "COUNTY_29161",
    /** Pike, Missouri */
    County_29163 = "COUNTY_29163",
    /** Platte, Missouri */
    County_29165 = "COUNTY_29165",
    /** Polk, Missouri */
    County_29167 = "COUNTY_29167",
    /** Pulaski, Missouri */
    County_29169 = "COUNTY_29169",
    /** Putnam, Missouri */
    County_29171 = "COUNTY_29171",
    /** Ralls, Missouri */
    County_29173 = "COUNTY_29173",
    /** Randolph, Missouri */
    County_29175 = "COUNTY_29175",
    /** Ray, Missouri */
    County_29177 = "COUNTY_29177",
    /** Reynolds, Missouri */
    County_29179 = "COUNTY_29179",
    /** Ripley, Missouri */
    County_29181 = "COUNTY_29181",
    /** St Charles, Missouri */
    County_29183 = "COUNTY_29183",
    /** St Clair, Missouri */
    County_29185 = "COUNTY_29185",
    /** Ste Genevieve, Missouri */
    County_29186 = "COUNTY_29186",
    /** St Francois, Missouri */
    County_29187 = "COUNTY_29187",
    /** St Louis, Missouri */
    County_29189 = "COUNTY_29189",
    /** Saline, Missouri */
    County_29195 = "COUNTY_29195",
    /** Schuyler, Missouri */
    County_29197 = "COUNTY_29197",
    /** Scotland, Missouri */
    County_29199 = "COUNTY_29199",
    /** Scott, Missouri */
    County_29201 = "COUNTY_29201",
    /** Shannon, Missouri */
    County_29203 = "COUNTY_29203",
    /** Shelby, Missouri */
    County_29205 = "COUNTY_29205",
    /** Stoddard, Missouri */
    County_29207 = "COUNTY_29207",
    /** Stone, Missouri */
    County_29209 = "COUNTY_29209",
    /** Sullivan, Missouri */
    County_29211 = "COUNTY_29211",
    /** Taney, Missouri */
    County_29213 = "COUNTY_29213",
    /** Texas, Missouri */
    County_29215 = "COUNTY_29215",
    /** Vernon, Missouri */
    County_29217 = "COUNTY_29217",
    /** Warren, Missouri */
    County_29219 = "COUNTY_29219",
    /** Washington, Missouri */
    County_29221 = "COUNTY_29221",
    /** Wayne, Missouri */
    County_29223 = "COUNTY_29223",
    /** Webster, Missouri */
    County_29225 = "COUNTY_29225",
    /** Worth, Missouri */
    County_29227 = "COUNTY_29227",
    /** Wright, Missouri */
    County_29229 = "COUNTY_29229",
    /** St Louis City, Missouri */
    County_29510 = "COUNTY_29510",
    /** Beaverhead, Montana */
    County_30001 = "COUNTY_30001",
    /** Big Horn, Montana */
    County_30003 = "COUNTY_30003",
    /** Blaine, Montana */
    County_30005 = "COUNTY_30005",
    /** Broadwater, Montana */
    County_30007 = "COUNTY_30007",
    /** Carbon, Montana */
    County_30009 = "COUNTY_30009",
    /** Carter, Montana */
    County_30011 = "COUNTY_30011",
    /** Cascade, Montana */
    County_30013 = "COUNTY_30013",
    /** Chouteau, Montana */
    County_30015 = "COUNTY_30015",
    /** Custer, Montana */
    County_30017 = "COUNTY_30017",
    /** Daniels, Montana */
    County_30019 = "COUNTY_30019",
    /** Dawson, Montana */
    County_30021 = "COUNTY_30021",
    /** Deer Lodge, Montana */
    County_30023 = "COUNTY_30023",
    /** Fallon, Montana */
    County_30025 = "COUNTY_30025",
    /** Fergus, Montana */
    County_30027 = "COUNTY_30027",
    /** Flathead, Montana */
    County_30029 = "COUNTY_30029",
    /** Gallatin, Montana */
    County_30031 = "COUNTY_30031",
    /** Garfield, Montana */
    County_30033 = "COUNTY_30033",
    /** Glacier, Montana */
    County_30035 = "COUNTY_30035",
    /** Golden Valley, Montana */
    County_30037 = "COUNTY_30037",
    /** Granite, Montana */
    County_30039 = "COUNTY_30039",
    /** Hill, Montana */
    County_30041 = "COUNTY_30041",
    /** Jefferson, Montana */
    County_30043 = "COUNTY_30043",
    /** Judith Basin, Montana */
    County_30045 = "COUNTY_30045",
    /** Lake, Montana */
    County_30047 = "COUNTY_30047",
    /** Lewis and Clark, Montana */
    County_30049 = "COUNTY_30049",
    /** Liberty, Montana */
    County_30051 = "COUNTY_30051",
    /** Lincoln, Montana */
    County_30053 = "COUNTY_30053",
    /** McCone, Montana */
    County_30055 = "COUNTY_30055",
    /** Madison, Montana */
    County_30057 = "COUNTY_30057",
    /** Meagher, Montana */
    County_30059 = "COUNTY_30059",
    /** Mineral, Montana */
    County_30061 = "COUNTY_30061",
    /** Missoula, Montana */
    County_30063 = "COUNTY_30063",
    /** Musselshell, Montana */
    County_30065 = "COUNTY_30065",
    /** Park, Montana */
    County_30067 = "COUNTY_30067",
    /** Petroleum, Montana */
    County_30069 = "COUNTY_30069",
    /** Phillips, Montana */
    County_30071 = "COUNTY_30071",
    /** Pondera, Montana */
    County_30073 = "COUNTY_30073",
    /** Powder River, Montana */
    County_30075 = "COUNTY_30075",
    /** Powell, Montana */
    County_30077 = "COUNTY_30077",
    /** Prairie, Montana */
    County_30079 = "COUNTY_30079",
    /** Ravalli, Montana */
    County_30081 = "COUNTY_30081",
    /** Richland, Montana */
    County_30083 = "COUNTY_30083",
    /** Roosevelt, Montana */
    County_30085 = "COUNTY_30085",
    /** Rosebud, Montana */
    County_30087 = "COUNTY_30087",
    /** Sanders, Montana */
    County_30089 = "COUNTY_30089",
    /** Sheridan, Montana */
    County_30091 = "COUNTY_30091",
    /** Silver Bow, Montana */
    County_30093 = "COUNTY_30093",
    /** Stillwater, Montana */
    County_30095 = "COUNTY_30095",
    /** Sweet Grass, Montana */
    County_30097 = "COUNTY_30097",
    /** Teton, Montana */
    County_30099 = "COUNTY_30099",
    /** Toole, Montana */
    County_30101 = "COUNTY_30101",
    /** Treasure, Montana */
    County_30103 = "COUNTY_30103",
    /** Valley, Montana */
    County_30105 = "COUNTY_30105",
    /** Wheatland, Montana */
    County_30107 = "COUNTY_30107",
    /** Wibaux, Montana */
    County_30109 = "COUNTY_30109",
    /** Yellowstone, Montana */
    County_30111 = "COUNTY_30111",
    /** Adams, Nebraska */
    County_31001 = "COUNTY_31001",
    /** Antelope, Nebraska */
    County_31003 = "COUNTY_31003",
    /** Arthur, Nebraska */
    County_31005 = "COUNTY_31005",
    /** Banner, Nebraska */
    County_31007 = "COUNTY_31007",
    /** Blaine, Nebraska */
    County_31009 = "COUNTY_31009",
    /** Boone, Nebraska */
    County_31011 = "COUNTY_31011",
    /** Box Butte, Nebraska */
    County_31013 = "COUNTY_31013",
    /** Boyd, Nebraska */
    County_31015 = "COUNTY_31015",
    /** Brown, Nebraska */
    County_31017 = "COUNTY_31017",
    /** Buffalo, Nebraska */
    County_31019 = "COUNTY_31019",
    /** Burt, Nebraska */
    County_31021 = "COUNTY_31021",
    /** Butler, Nebraska */
    County_31023 = "COUNTY_31023",
    /** Cass, Nebraska */
    County_31025 = "COUNTY_31025",
    /** Cedar, Nebraska */
    County_31027 = "COUNTY_31027",
    /** Chase, Nebraska */
    County_31029 = "COUNTY_31029",
    /** Cherry, Nebraska */
    County_31031 = "COUNTY_31031",
    /** Cheyenne, Nebraska */
    County_31033 = "COUNTY_31033",
    /** Clay, Nebraska */
    County_31035 = "COUNTY_31035",
    /** Colfax, Nebraska */
    County_31037 = "COUNTY_31037",
    /** Cuming, Nebraska */
    County_31039 = "COUNTY_31039",
    /** Custer, Nebraska */
    County_31041 = "COUNTY_31041",
    /** Dakota, Nebraska */
    County_31043 = "COUNTY_31043",
    /** Dawes, Nebraska */
    County_31045 = "COUNTY_31045",
    /** Dawson, Nebraska */
    County_31047 = "COUNTY_31047",
    /** Deuel, Nebraska */
    County_31049 = "COUNTY_31049",
    /** Dixon, Nebraska */
    County_31051 = "COUNTY_31051",
    /** Dodge, Nebraska */
    County_31053 = "COUNTY_31053",
    /** Douglas, Nebraska */
    County_31055 = "COUNTY_31055",
    /** Dundy, Nebraska */
    County_31057 = "COUNTY_31057",
    /** Fillmore, Nebraska */
    County_31059 = "COUNTY_31059",
    /** Franklin, Nebraska */
    County_31061 = "COUNTY_31061",
    /** Frontier, Nebraska */
    County_31063 = "COUNTY_31063",
    /** Furnas, Nebraska */
    County_31065 = "COUNTY_31065",
    /** Gage, Nebraska */
    County_31067 = "COUNTY_31067",
    /** Garden, Nebraska */
    County_31069 = "COUNTY_31069",
    /** Garfield, Nebraska */
    County_31071 = "COUNTY_31071",
    /** Gosper, Nebraska */
    County_31073 = "COUNTY_31073",
    /** Grant, Nebraska */
    County_31075 = "COUNTY_31075",
    /** Greeley, Nebraska */
    County_31077 = "COUNTY_31077",
    /** Hall, Nebraska */
    County_31079 = "COUNTY_31079",
    /** Hamilton, Nebraska */
    County_31081 = "COUNTY_31081",
    /** Harlan, Nebraska */
    County_31083 = "COUNTY_31083",
    /** Hayes, Nebraska */
    County_31085 = "COUNTY_31085",
    /** Hitchcock, Nebraska */
    County_31087 = "COUNTY_31087",
    /** Holt, Nebraska */
    County_31089 = "COUNTY_31089",
    /** Hooker, Nebraska */
    County_31091 = "COUNTY_31091",
    /** Howard, Nebraska */
    County_31093 = "COUNTY_31093",
    /** Jefferson, Nebraska */
    County_31095 = "COUNTY_31095",
    /** Johnson, Nebraska */
    County_31097 = "COUNTY_31097",
    /** Kearney, Nebraska */
    County_31099 = "COUNTY_31099",
    /** Keith, Nebraska */
    County_31101 = "COUNTY_31101",
    /** Keya Paha, Nebraska */
    County_31103 = "COUNTY_31103",
    /** Kimball, Nebraska */
    County_31105 = "COUNTY_31105",
    /** Knox, Nebraska */
    County_31107 = "COUNTY_31107",
    /** Lancaster, Nebraska */
    County_31109 = "COUNTY_31109",
    /** Lincoln, Nebraska */
    County_31111 = "COUNTY_31111",
    /** Logan, Nebraska */
    County_31113 = "COUNTY_31113",
    /** Loup, Nebraska */
    County_31115 = "COUNTY_31115",
    /** McPherson, Nebraska */
    County_31117 = "COUNTY_31117",
    /** Madison, Nebraska */
    County_31119 = "COUNTY_31119",
    /** Merrick, Nebraska */
    County_31121 = "COUNTY_31121",
    /** Morrill, Nebraska */
    County_31123 = "COUNTY_31123",
    /** Nance, Nebraska */
    County_31125 = "COUNTY_31125",
    /** Nemaha, Nebraska */
    County_31127 = "COUNTY_31127",
    /** Nuckolls, Nebraska */
    County_31129 = "COUNTY_31129",
    /** Otoe, Nebraska */
    County_31131 = "COUNTY_31131",
    /** Pawnee, Nebraska */
    County_31133 = "COUNTY_31133",
    /** Perkins, Nebraska */
    County_31135 = "COUNTY_31135",
    /** Phelps, Nebraska */
    County_31137 = "COUNTY_31137",
    /** Pierce, Nebraska */
    County_31139 = "COUNTY_31139",
    /** Platte, Nebraska */
    County_31141 = "COUNTY_31141",
    /** Polk, Nebraska */
    County_31143 = "COUNTY_31143",
    /** Red Willow, Nebraska */
    County_31145 = "COUNTY_31145",
    /** Richardson, Nebraska */
    County_31147 = "COUNTY_31147",
    /** Rock, Nebraska */
    County_31149 = "COUNTY_31149",
    /** Saline, Nebraska */
    County_31151 = "COUNTY_31151",
    /** Sarpy, Nebraska */
    County_31153 = "COUNTY_31153",
    /** Saunders, Nebraska */
    County_31155 = "COUNTY_31155",
    /** Scotts Bluff, Nebraska */
    County_31157 = "COUNTY_31157",
    /** Seward, Nebraska */
    County_31159 = "COUNTY_31159",
    /** Sheridan, Nebraska */
    County_31161 = "COUNTY_31161",
    /** Sherman, Nebraska */
    County_31163 = "COUNTY_31163",
    /** Sioux, Nebraska */
    County_31165 = "COUNTY_31165",
    /** Stanton, Nebraska */
    County_31167 = "COUNTY_31167",
    /** Thayer, Nebraska */
    County_31169 = "COUNTY_31169",
    /** Thomas, Nebraska */
    County_31171 = "COUNTY_31171",
    /** Thurston, Nebraska */
    County_31173 = "COUNTY_31173",
    /** Valley, Nebraska */
    County_31175 = "COUNTY_31175",
    /** Washington, Nebraska */
    County_31177 = "COUNTY_31177",
    /** Wayne, Nebraska */
    County_31179 = "COUNTY_31179",
    /** Webster, Nebraska */
    County_31181 = "COUNTY_31181",
    /** Wheeler, Nebraska */
    County_31183 = "COUNTY_31183",
    /** York, Nebraska */
    County_31185 = "COUNTY_31185",
    /** Churchill, Nevada */
    County_32001 = "COUNTY_32001",
    /** Clark, Nevada */
    County_32003 = "COUNTY_32003",
    /** Douglas, Nevada */
    County_32005 = "COUNTY_32005",
    /** Elko, Nevada */
    County_32007 = "COUNTY_32007",
    /** Esmeralda, Nevada */
    County_32009 = "COUNTY_32009",
    /** Eureka, Nevada */
    County_32011 = "COUNTY_32011",
    /** Humboldt, Nevada */
    County_32013 = "COUNTY_32013",
    /** Lander, Nevada */
    County_32015 = "COUNTY_32015",
    /** Lincoln, Nevada */
    County_32017 = "COUNTY_32017",
    /** Lyon, Nevada */
    County_32019 = "COUNTY_32019",
    /** Mineral, Nevada */
    County_32021 = "COUNTY_32021",
    /** Nye, Nevada */
    County_32023 = "COUNTY_32023",
    /** Pershing, Nevada */
    County_32027 = "COUNTY_32027",
    /** Storey, Nevada */
    County_32029 = "COUNTY_32029",
    /** Washoe, Nevada */
    County_32031 = "COUNTY_32031",
    /** White Pine, Nevada */
    County_32033 = "COUNTY_32033",
    /** Carson City, Nevada */
    County_32510 = "COUNTY_32510",
    /** Belknap, New Hampshire */
    County_33001 = "COUNTY_33001",
    /** Carroll, New Hampshire */
    County_33003 = "COUNTY_33003",
    /** Cheshire, New Hampshire */
    County_33005 = "COUNTY_33005",
    /** Coos, New Hampshire */
    County_33007 = "COUNTY_33007",
    /** Grafton, New Hampshire */
    County_33009 = "COUNTY_33009",
    /** Hillsborough, New Hampshire */
    County_33011 = "COUNTY_33011",
    /** Merrimack, New Hampshire */
    County_33013 = "COUNTY_33013",
    /** Rockingham, New Hampshire */
    County_33015 = "COUNTY_33015",
    /** Strafford, New Hampshire */
    County_33017 = "COUNTY_33017",
    /** Sullivan, New Hampshire */
    County_33019 = "COUNTY_33019",
    /** Atlantic, New Jersey */
    County_34001 = "COUNTY_34001",
    /** Bergen, New Jersey */
    County_34003 = "COUNTY_34003",
    /** Burlington, New Jersey */
    County_34005 = "COUNTY_34005",
    /** Camden, New Jersey */
    County_34007 = "COUNTY_34007",
    /** Cape May, New Jersey */
    County_34009 = "COUNTY_34009",
    /** Cumberland, New Jersey */
    County_34011 = "COUNTY_34011",
    /** Essex, New Jersey */
    County_34013 = "COUNTY_34013",
    /** Gloucester, New Jersey */
    County_34015 = "COUNTY_34015",
    /** Hudson, New Jersey */
    County_34017 = "COUNTY_34017",
    /** Hunterdon, New Jersey */
    County_34019 = "COUNTY_34019",
    /** Mercer, New Jersey */
    County_34021 = "COUNTY_34021",
    /** Middlesex, New Jersey */
    County_34023 = "COUNTY_34023",
    /** Monmouth, New Jersey */
    County_34025 = "COUNTY_34025",
    /** Morris, New Jersey */
    County_34027 = "COUNTY_34027",
    /** Ocean, New Jersey */
    County_34029 = "COUNTY_34029",
    /** Passaic, New Jersey */
    County_34031 = "COUNTY_34031",
    /** Salem, New Jersey */
    County_34033 = "COUNTY_34033",
    /** Somerset, New Jersey */
    County_34035 = "COUNTY_34035",
    /** Sussex, New Jersey */
    County_34037 = "COUNTY_34037",
    /** Union, New Jersey */
    County_34039 = "COUNTY_34039",
    /** Warren, New Jersey */
    County_34041 = "COUNTY_34041",
    /** Bernalillo, New Mexico */
    County_35001 = "COUNTY_35001",
    /** Catron, New Mexico */
    County_35003 = "COUNTY_35003",
    /** Chaves, New Mexico */
    County_35005 = "COUNTY_35005",
    /** Cibola, New Mexico */
    County_35006 = "COUNTY_35006",
    /** Colfax, New Mexico */
    County_35007 = "COUNTY_35007",
    /** Curry, New Mexico */
    County_35009 = "COUNTY_35009",
    /** De Baca, New Mexico */
    County_35011 = "COUNTY_35011",
    /** Dona Ana, New Mexico */
    County_35013 = "COUNTY_35013",
    /** Eddy, New Mexico */
    County_35015 = "COUNTY_35015",
    /** Grant, New Mexico */
    County_35017 = "COUNTY_35017",
    /** Guadalupe, New Mexico */
    County_35019 = "COUNTY_35019",
    /** Harding, New Mexico */
    County_35021 = "COUNTY_35021",
    /** Hidalgo, New Mexico */
    County_35023 = "COUNTY_35023",
    /** Lea, New Mexico */
    County_35025 = "COUNTY_35025",
    /** Lincoln, New Mexico */
    County_35027 = "COUNTY_35027",
    /** Los Alamos, New Mexico */
    County_35028 = "COUNTY_35028",
    /** Luna, New Mexico */
    County_35029 = "COUNTY_35029",
    /** Mckinley, New Mexico */
    County_35031 = "COUNTY_35031",
    /** Mora, New Mexico */
    County_35033 = "COUNTY_35033",
    /** Otero, New Mexico */
    County_35035 = "COUNTY_35035",
    /** Quay, New Mexico */
    County_35037 = "COUNTY_35037",
    /** Rio Arriba, New Mexico */
    County_35039 = "COUNTY_35039",
    /** Roosevelt, New Mexico */
    County_35041 = "COUNTY_35041",
    /** Sandoval, New Mexico */
    County_35043 = "COUNTY_35043",
    /** San Juan, New Mexico */
    County_35045 = "COUNTY_35045",
    /** San Miguel, New Mexico */
    County_35047 = "COUNTY_35047",
    /** Santa Fe, New Mexico */
    County_35049 = "COUNTY_35049",
    /** Sierra, New Mexico */
    County_35051 = "COUNTY_35051",
    /** Socorro, New Mexico */
    County_35053 = "COUNTY_35053",
    /** Taos, New Mexico */
    County_35055 = "COUNTY_35055",
    /** Torrance, New Mexico */
    County_35057 = "COUNTY_35057",
    /** Union, New Mexico */
    County_35059 = "COUNTY_35059",
    /** Valencia, New Mexico */
    County_35061 = "COUNTY_35061",
    /** Albany, New York */
    County_36001 = "COUNTY_36001",
    /** Allegany, New York */
    County_36003 = "COUNTY_36003",
    /** Bronx, New York */
    County_36005 = "COUNTY_36005",
    /** Broome, New York */
    County_36007 = "COUNTY_36007",
    /** Cattaraugus, New York */
    County_36009 = "COUNTY_36009",
    /** Cayuga, New York */
    County_36011 = "COUNTY_36011",
    /** Chautauqua, New York */
    County_36013 = "COUNTY_36013",
    /** Chemung, New York */
    County_36015 = "COUNTY_36015",
    /** Chenango, New York */
    County_36017 = "COUNTY_36017",
    /** Clinton, New York */
    County_36019 = "COUNTY_36019",
    /** Columbia, New York */
    County_36021 = "COUNTY_36021",
    /** Cortland, New York */
    County_36023 = "COUNTY_36023",
    /** Delaware, New York */
    County_36025 = "COUNTY_36025",
    /** Dutchess, New York */
    County_36027 = "COUNTY_36027",
    /** Erie, New York */
    County_36029 = "COUNTY_36029",
    /** Essex, New York */
    County_36031 = "COUNTY_36031",
    /** Franklin, New York */
    County_36033 = "COUNTY_36033",
    /** Fulton, New York */
    County_36035 = "COUNTY_36035",
    /** Genesee, New York */
    County_36037 = "COUNTY_36037",
    /** Greene, New York */
    County_36039 = "COUNTY_36039",
    /** Hamilton, New York */
    County_36041 = "COUNTY_36041",
    /** Herkimer, New York */
    County_36043 = "COUNTY_36043",
    /** Jefferson, New York */
    County_36045 = "COUNTY_36045",
    /** Kings, New York */
    County_36047 = "COUNTY_36047",
    /** Lewis, New York */
    County_36049 = "COUNTY_36049",
    /** Livingston, New York */
    County_36051 = "COUNTY_36051",
    /** Madison, New York */
    County_36053 = "COUNTY_36053",
    /** Monroe, New York */
    County_36055 = "COUNTY_36055",
    /** Montgomery, New York */
    County_36057 = "COUNTY_36057",
    /** Nassau, New York */
    County_36059 = "COUNTY_36059",
    /** New York, New York */
    County_36061 = "COUNTY_36061",
    /** Niagara, New York */
    County_36063 = "COUNTY_36063",
    /** Oneida, New York */
    County_36065 = "COUNTY_36065",
    /** Onondaga, New York */
    County_36067 = "COUNTY_36067",
    /** Ontario, New York */
    County_36069 = "COUNTY_36069",
    /** Orange, New York */
    County_36071 = "COUNTY_36071",
    /** Orleans, New York */
    County_36073 = "COUNTY_36073",
    /** Oswego, New York */
    County_36075 = "COUNTY_36075",
    /** Otsego, New York */
    County_36077 = "COUNTY_36077",
    /** Putnam, New York */
    County_36079 = "COUNTY_36079",
    /** Queens, New York */
    County_36081 = "COUNTY_36081",
    /** Rensselaer, New York */
    County_36083 = "COUNTY_36083",
    /** Richmond, New York */
    County_36085 = "COUNTY_36085",
    /** Rockland, New York */
    County_36087 = "COUNTY_36087",
    /** St Lawrence, New York */
    County_36089 = "COUNTY_36089",
    /** Saratoga, New York */
    County_36091 = "COUNTY_36091",
    /** Schenectady, New York */
    County_36093 = "COUNTY_36093",
    /** Schoharie, New York */
    County_36095 = "COUNTY_36095",
    /** Schuyler, New York */
    County_36097 = "COUNTY_36097",
    /** Seneca, New York */
    County_36099 = "COUNTY_36099",
    /** Steuben, New York */
    County_36101 = "COUNTY_36101",
    /** Suffolk, New York */
    County_36103 = "COUNTY_36103",
    /** Sullivan, New York */
    County_36105 = "COUNTY_36105",
    /** Tioga, New York */
    County_36107 = "COUNTY_36107",
    /** Tompkins, New York */
    County_36109 = "COUNTY_36109",
    /** Ulster, New York */
    County_36111 = "COUNTY_36111",
    /** Warren, New York */
    County_36113 = "COUNTY_36113",
    /** Washington, New York */
    County_36115 = "COUNTY_36115",
    /** Wayne, New York */
    County_36117 = "COUNTY_36117",
    /** Westchester, New York */
    County_36119 = "COUNTY_36119",
    /** Wyoming, New York */
    County_36121 = "COUNTY_36121",
    /** Yates, New York */
    County_36123 = "COUNTY_36123",
    /** Alamance, North Carolina */
    County_37001 = "COUNTY_37001",
    /** Alexander, North Carolina */
    County_37003 = "COUNTY_37003",
    /** Alleghany, North Carolina */
    County_37005 = "COUNTY_37005",
    /** Anson, North Carolina */
    County_37007 = "COUNTY_37007",
    /** Ashe, North Carolina */
    County_37009 = "COUNTY_37009",
    /** Avery, North Carolina */
    County_37011 = "COUNTY_37011",
    /** Beaufort, North Carolina */
    County_37013 = "COUNTY_37013",
    /** Bertie, North Carolina */
    County_37015 = "COUNTY_37015",
    /** Bladen, North Carolina */
    County_37017 = "COUNTY_37017",
    /** Brunswick, North Carolina */
    County_37019 = "COUNTY_37019",
    /** Buncombe, North Carolina */
    County_37021 = "COUNTY_37021",
    /** Burke, North Carolina */
    County_37023 = "COUNTY_37023",
    /** Cabarrus, North Carolina */
    County_37025 = "COUNTY_37025",
    /** Caldwell, North Carolina */
    County_37027 = "COUNTY_37027",
    /** Camden, North Carolina */
    County_37029 = "COUNTY_37029",
    /** Carteret, North Carolina */
    County_37031 = "COUNTY_37031",
    /** Caswell, North Carolina */
    County_37033 = "COUNTY_37033",
    /** Catawba, North Carolina */
    County_37035 = "COUNTY_37035",
    /** Chatham, North Carolina */
    County_37037 = "COUNTY_37037",
    /** Cherokee, North Carolina */
    County_37039 = "COUNTY_37039",
    /** Chowan, North Carolina */
    County_37041 = "COUNTY_37041",
    /** Clay, North Carolina */
    County_37043 = "COUNTY_37043",
    /** Cleveland, North Carolina */
    County_37045 = "COUNTY_37045",
    /** Columbus, North Carolina */
    County_37047 = "COUNTY_37047",
    /** Craven, North Carolina */
    County_37049 = "COUNTY_37049",
    /** Cumberland, North Carolina */
    County_37051 = "COUNTY_37051",
    /** Currituck, North Carolina */
    County_37053 = "COUNTY_37053",
    /** Dare, North Carolina */
    County_37055 = "COUNTY_37055",
    /** Davidson, North Carolina */
    County_37057 = "COUNTY_37057",
    /** Davie, North Carolina */
    County_37059 = "COUNTY_37059",
    /** Duplin, North Carolina */
    County_37061 = "COUNTY_37061",
    /** Durham, North Carolina */
    County_37063 = "COUNTY_37063",
    /** Edgecombe, North Carolina */
    County_37065 = "COUNTY_37065",
    /** Forsyth, North Carolina */
    County_37067 = "COUNTY_37067",
    /** Franklin, North Carolina */
    County_37069 = "COUNTY_37069",
    /** Gaston, North Carolina */
    County_37071 = "COUNTY_37071",
    /** Gates, North Carolina */
    County_37073 = "COUNTY_37073",
    /** Graham, North Carolina */
    County_37075 = "COUNTY_37075",
    /** Granville, North Carolina */
    County_37077 = "COUNTY_37077",
    /** Greene, North Carolina */
    County_37079 = "COUNTY_37079",
    /** Guilford, North Carolina */
    County_37081 = "COUNTY_37081",
    /** Halifax, North Carolina */
    County_37083 = "COUNTY_37083",
    /** Harnett, North Carolina */
    County_37085 = "COUNTY_37085",
    /** Haywood, North Carolina */
    County_37087 = "COUNTY_37087",
    /** Henderson, North Carolina */
    County_37089 = "COUNTY_37089",
    /** Hertford, North Carolina */
    County_37091 = "COUNTY_37091",
    /** Hoke, North Carolina */
    County_37093 = "COUNTY_37093",
    /** Hyde, North Carolina */
    County_37095 = "COUNTY_37095",
    /** Iredell, North Carolina */
    County_37097 = "COUNTY_37097",
    /** Jackson, North Carolina */
    County_37099 = "COUNTY_37099",
    /** Johnston, North Carolina */
    County_37101 = "COUNTY_37101",
    /** Jones, North Carolina */
    County_37103 = "COUNTY_37103",
    /** Lee, North Carolina */
    County_37105 = "COUNTY_37105",
    /** Lenoir, North Carolina */
    County_37107 = "COUNTY_37107",
    /** Lincoln, North Carolina */
    County_37109 = "COUNTY_37109",
    /** McDowell, North Carolina */
    County_37111 = "COUNTY_37111",
    /** Macon, North Carolina */
    County_37113 = "COUNTY_37113",
    /** Madison, North Carolina */
    County_37115 = "COUNTY_37115",
    /** Martin, North Carolina */
    County_37117 = "COUNTY_37117",
    /** Mecklenburg, North Carolina */
    County_37119 = "COUNTY_37119",
    /** Mitchell, North Carolina */
    County_37121 = "COUNTY_37121",
    /** Montgomery, North Carolina */
    County_37123 = "COUNTY_37123",
    /** Moore, North Carolina */
    County_37125 = "COUNTY_37125",
    /** Nash, North Carolina */
    County_37127 = "COUNTY_37127",
    /** New Hanover, North Carolina */
    County_37129 = "COUNTY_37129",
    /** Northampton, North Carolina */
    County_37131 = "COUNTY_37131",
    /** Onslow, North Carolina */
    County_37133 = "COUNTY_37133",
    /** Orange, North Carolina */
    County_37135 = "COUNTY_37135",
    /** Pamlico, North Carolina */
    County_37137 = "COUNTY_37137",
    /** Pasquotank, North Carolina */
    County_37139 = "COUNTY_37139",
    /** Pender, North Carolina */
    County_37141 = "COUNTY_37141",
    /** Perquimans, North Carolina */
    County_37143 = "COUNTY_37143",
    /** Person, North Carolina */
    County_37145 = "COUNTY_37145",
    /** Pitt, North Carolina */
    County_37147 = "COUNTY_37147",
    /** Polk, North Carolina */
    County_37149 = "COUNTY_37149",
    /** Randolph, North Carolina */
    County_37151 = "COUNTY_37151",
    /** Richmond, North Carolina */
    County_37153 = "COUNTY_37153",
    /** Robeson, North Carolina */
    County_37155 = "COUNTY_37155",
    /** Rockingham, North Carolina */
    County_37157 = "COUNTY_37157",
    /** Rowan, North Carolina */
    County_37159 = "COUNTY_37159",
    /** Rutherford, North Carolina */
    County_37161 = "COUNTY_37161",
    /** Sampson, North Carolina */
    County_37163 = "COUNTY_37163",
    /** Scotland, North Carolina */
    County_37165 = "COUNTY_37165",
    /** Stanly, North Carolina */
    County_37167 = "COUNTY_37167",
    /** Stokes, North Carolina */
    County_37169 = "COUNTY_37169",
    /** Surry, North Carolina */
    County_37171 = "COUNTY_37171",
    /** Swain, North Carolina */
    County_37173 = "COUNTY_37173",
    /** Transylvania, North Carolina */
    County_37175 = "COUNTY_37175",
    /** Tyrrell, North Carolina */
    County_37177 = "COUNTY_37177",
    /** Union, North Carolina */
    County_37179 = "COUNTY_37179",
    /** Vance, North Carolina */
    County_37181 = "COUNTY_37181",
    /** Wake, North Carolina */
    County_37183 = "COUNTY_37183",
    /** Warren, North Carolina */
    County_37185 = "COUNTY_37185",
    /** Washington, North Carolina */
    County_37187 = "COUNTY_37187",
    /** Watauga, North Carolina */
    County_37189 = "COUNTY_37189",
    /** Wayne, North Carolina */
    County_37191 = "COUNTY_37191",
    /** Wilkes, North Carolina */
    County_37193 = "COUNTY_37193",
    /** Wilson, North Carolina */
    County_37195 = "COUNTY_37195",
    /** Yadkin, North Carolina */
    County_37197 = "COUNTY_37197",
    /** Yancey, North Carolina */
    County_37199 = "COUNTY_37199",
    /** Adams, North Dakota */
    County_38001 = "COUNTY_38001",
    /** Barnes, North Dakota */
    County_38003 = "COUNTY_38003",
    /** Benson, North Dakota */
    County_38005 = "COUNTY_38005",
    /** Billings, North Dakota */
    County_38007 = "COUNTY_38007",
    /** Bottineau, North Dakota */
    County_38009 = "COUNTY_38009",
    /** Bowman, North Dakota */
    County_38011 = "COUNTY_38011",
    /** Burke, North Dakota */
    County_38013 = "COUNTY_38013",
    /** Burleigh, North Dakota */
    County_38015 = "COUNTY_38015",
    /** Cass, North Dakota */
    County_38017 = "COUNTY_38017",
    /** Cavalier, North Dakota */
    County_38019 = "COUNTY_38019",
    /** Dickey, North Dakota */
    County_38021 = "COUNTY_38021",
    /** Divide, North Dakota */
    County_38023 = "COUNTY_38023",
    /** Dunn, North Dakota */
    County_38025 = "COUNTY_38025",
    /** Eddy, North Dakota */
    County_38027 = "COUNTY_38027",
    /** Emmons, North Dakota */
    County_38029 = "COUNTY_38029",
    /** Foster, North Dakota */
    County_38031 = "COUNTY_38031",
    /** Golden Valley, North Dakota */
    County_38033 = "COUNTY_38033",
    /** Grand Forks, North Dakota */
    County_38035 = "COUNTY_38035",
    /** Grant, North Dakota */
    County_38037 = "COUNTY_38037",
    /** Griggs, North Dakota */
    County_38039 = "COUNTY_38039",
    /** Hettinger, North Dakota */
    County_38041 = "COUNTY_38041",
    /** Kidder, North Dakota */
    County_38043 = "COUNTY_38043",
    /** Lamoure, North Dakota */
    County_38045 = "COUNTY_38045",
    /** Logan, North Dakota */
    County_38047 = "COUNTY_38047",
    /** McHenry, North Dakota */
    County_38049 = "COUNTY_38049",
    /** McIntosh, North Dakota */
    County_38051 = "COUNTY_38051",
    /** Mckenzie, North Dakota */
    County_38053 = "COUNTY_38053",
    /** Mclean, North Dakota */
    County_38055 = "COUNTY_38055",
    /** Mercer, North Dakota */
    County_38057 = "COUNTY_38057",
    /** Morton, North Dakota */
    County_38059 = "COUNTY_38059",
    /** Mountrail, North Dakota */
    County_38061 = "COUNTY_38061",
    /** Nelson, North Dakota */
    County_38063 = "COUNTY_38063",
    /** Oliver, North Dakota */
    County_38065 = "COUNTY_38065",
    /** Pembina, North Dakota */
    County_38067 = "COUNTY_38067",
    /** Pierce, North Dakota */
    County_38069 = "COUNTY_38069",
    /** Ramsey, North Dakota */
    County_38071 = "COUNTY_38071",
    /** Ransom, North Dakota */
    County_38073 = "COUNTY_38073",
    /** Renville, North Dakota */
    County_38075 = "COUNTY_38075",
    /** Richland, North Dakota */
    County_38077 = "COUNTY_38077",
    /** Rolette, North Dakota */
    County_38079 = "COUNTY_38079",
    /** Sargent, North Dakota */
    County_38081 = "COUNTY_38081",
    /** Sheridan, North Dakota */
    County_38083 = "COUNTY_38083",
    /** Sioux, North Dakota */
    County_38085 = "COUNTY_38085",
    /** Slope, North Dakota */
    County_38087 = "COUNTY_38087",
    /** Stark, North Dakota */
    County_38089 = "COUNTY_38089",
    /** Steele, North Dakota */
    County_38091 = "COUNTY_38091",
    /** Stutsman, North Dakota */
    County_38093 = "COUNTY_38093",
    /** Towner, North Dakota */
    County_38095 = "COUNTY_38095",
    /** Traill, North Dakota */
    County_38097 = "COUNTY_38097",
    /** Walsh, North Dakota */
    County_38099 = "COUNTY_38099",
    /** Ward, North Dakota */
    County_38101 = "COUNTY_38101",
    /** Wells, North Dakota */
    County_38103 = "COUNTY_38103",
    /** Williams, North Dakota */
    County_38105 = "COUNTY_38105",
    /** Adams, Ohio */
    County_39001 = "COUNTY_39001",
    /** Allen, Ohio */
    County_39003 = "COUNTY_39003",
    /** Ashland, Ohio */
    County_39005 = "COUNTY_39005",
    /** Ashtabula, Ohio */
    County_39007 = "COUNTY_39007",
    /** Athens, Ohio */
    County_39009 = "COUNTY_39009",
    /** Auglaize, Ohio */
    County_39011 = "COUNTY_39011",
    /** Belmont, Ohio */
    County_39013 = "COUNTY_39013",
    /** Brown, Ohio */
    County_39015 = "COUNTY_39015",
    /** Butler, Ohio */
    County_39017 = "COUNTY_39017",
    /** Carroll, Ohio */
    County_39019 = "COUNTY_39019",
    /** Champaign, Ohio */
    County_39021 = "COUNTY_39021",
    /** Clark, Ohio */
    County_39023 = "COUNTY_39023",
    /** Clermont, Ohio */
    County_39025 = "COUNTY_39025",
    /** Clinton, Ohio */
    County_39027 = "COUNTY_39027",
    /** Columbiana, Ohio */
    County_39029 = "COUNTY_39029",
    /** Coshocton, Ohio */
    County_39031 = "COUNTY_39031",
    /** Crawford, Ohio */
    County_39033 = "COUNTY_39033",
    /** Cuyahoga, Ohio */
    County_39035 = "COUNTY_39035",
    /** Darke, Ohio */
    County_39037 = "COUNTY_39037",
    /** Defiance, Ohio */
    County_39039 = "COUNTY_39039",
    /** Delaware, Ohio */
    County_39041 = "COUNTY_39041",
    /** Erie, Ohio */
    County_39043 = "COUNTY_39043",
    /** Fairfield, Ohio */
    County_39045 = "COUNTY_39045",
    /** Fayette, Ohio */
    County_39047 = "COUNTY_39047",
    /** Franklin, Ohio */
    County_39049 = "COUNTY_39049",
    /** Fulton, Ohio */
    County_39051 = "COUNTY_39051",
    /** Gallia, Ohio */
    County_39053 = "COUNTY_39053",
    /** Geauga, Ohio */
    County_39055 = "COUNTY_39055",
    /** Greene, Ohio */
    County_39057 = "COUNTY_39057",
    /** Guernsey, Ohio */
    County_39059 = "COUNTY_39059",
    /** Hamilton, Ohio */
    County_39061 = "COUNTY_39061",
    /** Hancock, Ohio */
    County_39063 = "COUNTY_39063",
    /** Hardin, Ohio */
    County_39065 = "COUNTY_39065",
    /** Harrison, Ohio */
    County_39067 = "COUNTY_39067",
    /** Henry, Ohio */
    County_39069 = "COUNTY_39069",
    /** Highland, Ohio */
    County_39071 = "COUNTY_39071",
    /** Hocking, Ohio */
    County_39073 = "COUNTY_39073",
    /** Holmes, Ohio */
    County_39075 = "COUNTY_39075",
    /** Huron, Ohio */
    County_39077 = "COUNTY_39077",
    /** Jackson, Ohio */
    County_39079 = "COUNTY_39079",
    /** Jefferson, Ohio */
    County_39081 = "COUNTY_39081",
    /** Knox, Ohio */
    County_39083 = "COUNTY_39083",
    /** Lake, Ohio */
    County_39085 = "COUNTY_39085",
    /** Lawrence, Ohio */
    County_39087 = "COUNTY_39087",
    /** Licking, Ohio */
    County_39089 = "COUNTY_39089",
    /** Logan, Ohio */
    County_39091 = "COUNTY_39091",
    /** Lorain, Ohio */
    County_39093 = "COUNTY_39093",
    /** Lucas, Ohio */
    County_39095 = "COUNTY_39095",
    /** Madison, Ohio */
    County_39097 = "COUNTY_39097",
    /** Mahoning, Ohio */
    County_39099 = "COUNTY_39099",
    /** Marion, Ohio */
    County_39101 = "COUNTY_39101",
    /** Medina, Ohio */
    County_39103 = "COUNTY_39103",
    /** Meigs, Ohio */
    County_39105 = "COUNTY_39105",
    /** Mercer, Ohio */
    County_39107 = "COUNTY_39107",
    /** Miami, Ohio */
    County_39109 = "COUNTY_39109",
    /** Monroe, Ohio */
    County_39111 = "COUNTY_39111",
    /** Montgomery, Ohio */
    County_39113 = "COUNTY_39113",
    /** Morgan, Ohio */
    County_39115 = "COUNTY_39115",
    /** Morrow, Ohio */
    County_39117 = "COUNTY_39117",
    /** Muskingum, Ohio */
    County_39119 = "COUNTY_39119",
    /** Noble, Ohio */
    County_39121 = "COUNTY_39121",
    /** Ottawa, Ohio */
    County_39123 = "COUNTY_39123",
    /** Paulding, Ohio */
    County_39125 = "COUNTY_39125",
    /** Perry, Ohio */
    County_39127 = "COUNTY_39127",
    /** Pickaway, Ohio */
    County_39129 = "COUNTY_39129",
    /** Pike, Ohio */
    County_39131 = "COUNTY_39131",
    /** Portage, Ohio */
    County_39133 = "COUNTY_39133",
    /** Preble, Ohio */
    County_39135 = "COUNTY_39135",
    /** Putnam, Ohio */
    County_39137 = "COUNTY_39137",
    /** Richland, Ohio */
    County_39139 = "COUNTY_39139",
    /** Ross, Ohio */
    County_39141 = "COUNTY_39141",
    /** Sandusky, Ohio */
    County_39143 = "COUNTY_39143",
    /** Scioto, Ohio */
    County_39145 = "COUNTY_39145",
    /** Seneca, Ohio */
    County_39147 = "COUNTY_39147",
    /** Shelby, Ohio */
    County_39149 = "COUNTY_39149",
    /** Stark, Ohio */
    County_39151 = "COUNTY_39151",
    /** Summit, Ohio */
    County_39153 = "COUNTY_39153",
    /** Trumbull, Ohio */
    County_39155 = "COUNTY_39155",
    /** Tuscarawas, Ohio */
    County_39157 = "COUNTY_39157",
    /** Union, Ohio */
    County_39159 = "COUNTY_39159",
    /** Van Wert, Ohio */
    County_39161 = "COUNTY_39161",
    /** Vinton, Ohio */
    County_39163 = "COUNTY_39163",
    /** Warren, Ohio */
    County_39165 = "COUNTY_39165",
    /** Washington, Ohio */
    County_39167 = "COUNTY_39167",
    /** Wayne, Ohio */
    County_39169 = "COUNTY_39169",
    /** Williams, Ohio */
    County_39171 = "COUNTY_39171",
    /** Wood, Ohio */
    County_39173 = "COUNTY_39173",
    /** Wyandot, Ohio */
    County_39175 = "COUNTY_39175",
    /** Adair, Oklahoma */
    County_40001 = "COUNTY_40001",
    /** Alfalfa, Oklahoma */
    County_40003 = "COUNTY_40003",
    /** Atoka, Oklahoma */
    County_40005 = "COUNTY_40005",
    /** Beaver, Oklahoma */
    County_40007 = "COUNTY_40007",
    /** Beckham, Oklahoma */
    County_40009 = "COUNTY_40009",
    /** Blaine, Oklahoma */
    County_40011 = "COUNTY_40011",
    /** Bryan, Oklahoma */
    County_40013 = "COUNTY_40013",
    /** Caddo, Oklahoma */
    County_40015 = "COUNTY_40015",
    /** Canadian, Oklahoma */
    County_40017 = "COUNTY_40017",
    /** Carter, Oklahoma */
    County_40019 = "COUNTY_40019",
    /** Cherokee, Oklahoma */
    County_40021 = "COUNTY_40021",
    /** Choctaw, Oklahoma */
    County_40023 = "COUNTY_40023",
    /** Cimarron, Oklahoma */
    County_40025 = "COUNTY_40025",
    /** Cleveland, Oklahoma */
    County_40027 = "COUNTY_40027",
    /** Coal, Oklahoma */
    County_40029 = "COUNTY_40029",
    /** Comanche, Oklahoma */
    County_40031 = "COUNTY_40031",
    /** Cotton, Oklahoma */
    County_40033 = "COUNTY_40033",
    /** Craig, Oklahoma */
    County_40035 = "COUNTY_40035",
    /** Creek, Oklahoma */
    County_40037 = "COUNTY_40037",
    /** Custer, Oklahoma */
    County_40039 = "COUNTY_40039",
    /** Delaware, Oklahoma */
    County_40041 = "COUNTY_40041",
    /** Dewey, Oklahoma */
    County_40043 = "COUNTY_40043",
    /** Ellis, Oklahoma */
    County_40045 = "COUNTY_40045",
    /** Garfield, Oklahoma */
    County_40047 = "COUNTY_40047",
    /** Garvin, Oklahoma */
    County_40049 = "COUNTY_40049",
    /** Grady, Oklahoma */
    County_40051 = "COUNTY_40051",
    /** Grant, Oklahoma */
    County_40053 = "COUNTY_40053",
    /** Greer, Oklahoma */
    County_40055 = "COUNTY_40055",
    /** Harmon, Oklahoma */
    County_40057 = "COUNTY_40057",
    /** Harper, Oklahoma */
    County_40059 = "COUNTY_40059",
    /** Haskell, Oklahoma */
    County_40061 = "COUNTY_40061",
    /** Hughes, Oklahoma */
    County_40063 = "COUNTY_40063",
    /** Jackson, Oklahoma */
    County_40065 = "COUNTY_40065",
    /** Jefferson, Oklahoma */
    County_40067 = "COUNTY_40067",
    /** Johnston, Oklahoma */
    County_40069 = "COUNTY_40069",
    /** Kay, Oklahoma */
    County_40071 = "COUNTY_40071",
    /** Kingfisher, Oklahoma */
    County_40073 = "COUNTY_40073",
    /** Kiowa, Oklahoma */
    County_40075 = "COUNTY_40075",
    /** Latimer, Oklahoma */
    County_40077 = "COUNTY_40077",
    /** Le Flore, Oklahoma */
    County_40079 = "COUNTY_40079",
    /** Lincoln, Oklahoma */
    County_40081 = "COUNTY_40081",
    /** Logan, Oklahoma */
    County_40083 = "COUNTY_40083",
    /** Love, Oklahoma */
    County_40085 = "COUNTY_40085",
    /** Mcclain, Oklahoma */
    County_40087 = "COUNTY_40087",
    /** McCurtain, Oklahoma */
    County_40089 = "COUNTY_40089",
    /** McIntosh, Oklahoma */
    County_40091 = "COUNTY_40091",
    /** Major, Oklahoma */
    County_40093 = "COUNTY_40093",
    /** Marshall, Oklahoma */
    County_40095 = "COUNTY_40095",
    /** Mayes, Oklahoma */
    County_40097 = "COUNTY_40097",
    /** Murray, Oklahoma */
    County_40099 = "COUNTY_40099",
    /** Muskogee, Oklahoma */
    County_40101 = "COUNTY_40101",
    /** Noble, Oklahoma */
    County_40103 = "COUNTY_40103",
    /** Nowata, Oklahoma */
    County_40105 = "COUNTY_40105",
    /** Okfuskee, Oklahoma */
    County_40107 = "COUNTY_40107",
    /** Oklahoma, Oklahoma */
    County_40109 = "COUNTY_40109",
    /** Okmulgee, Oklahoma */
    County_40111 = "COUNTY_40111",
    /** Osage, Oklahoma */
    County_40113 = "COUNTY_40113",
    /** Ottawa, Oklahoma */
    County_40115 = "COUNTY_40115",
    /** Pawnee, Oklahoma */
    County_40117 = "COUNTY_40117",
    /** Payne, Oklahoma */
    County_40119 = "COUNTY_40119",
    /** Pittsburg, Oklahoma */
    County_40121 = "COUNTY_40121",
    /** Pontotoc, Oklahoma */
    County_40123 = "COUNTY_40123",
    /** Pottawatomie, Oklahoma */
    County_40125 = "COUNTY_40125",
    /** Pushmataha, Oklahoma */
    County_40127 = "COUNTY_40127",
    /** Roger Mills, Oklahoma */
    County_40129 = "COUNTY_40129",
    /** Rogers, Oklahoma */
    County_40131 = "COUNTY_40131",
    /** Seminole, Oklahoma */
    County_40133 = "COUNTY_40133",
    /** Sequoyah, Oklahoma */
    County_40135 = "COUNTY_40135",
    /** Stephens, Oklahoma */
    County_40137 = "COUNTY_40137",
    /** Texas, Oklahoma */
    County_40139 = "COUNTY_40139",
    /** Tillman, Oklahoma */
    County_40141 = "COUNTY_40141",
    /** Tulsa, Oklahoma */
    County_40143 = "COUNTY_40143",
    /** Wagoner, Oklahoma */
    County_40145 = "COUNTY_40145",
    /** Washington, Oklahoma */
    County_40147 = "COUNTY_40147",
    /** Washita, Oklahoma */
    County_40149 = "COUNTY_40149",
    /** Woods, Oklahoma */
    County_40151 = "COUNTY_40151",
    /** Woodward, Oklahoma */
    County_40153 = "COUNTY_40153",
    /** Baker, Oregon */
    County_41001 = "COUNTY_41001",
    /** Benton, Oregon */
    County_41003 = "COUNTY_41003",
    /** Clackamas, Oregon */
    County_41005 = "COUNTY_41005",
    /** Clatsop, Oregon */
    County_41007 = "COUNTY_41007",
    /** Columbia, Oregon */
    County_41009 = "COUNTY_41009",
    /** Coos, Oregon */
    County_41011 = "COUNTY_41011",
    /** Crook, Oregon */
    County_41013 = "COUNTY_41013",
    /** Curry, Oregon */
    County_41015 = "COUNTY_41015",
    /** Deschutes, Oregon */
    County_41017 = "COUNTY_41017",
    /** Douglas, Oregon */
    County_41019 = "COUNTY_41019",
    /** Gilliam, Oregon */
    County_41021 = "COUNTY_41021",
    /** Grant, Oregon */
    County_41023 = "COUNTY_41023",
    /** Harney, Oregon */
    County_41025 = "COUNTY_41025",
    /** Hood River, Oregon */
    County_41027 = "COUNTY_41027",
    /** Jackson, Oregon */
    County_41029 = "COUNTY_41029",
    /** Jefferson, Oregon */
    County_41031 = "COUNTY_41031",
    /** Josephine, Oregon */
    County_41033 = "COUNTY_41033",
    /** Klamath, Oregon */
    County_41035 = "COUNTY_41035",
    /** Lake, Oregon */
    County_41037 = "COUNTY_41037",
    /** Lane, Oregon */
    County_41039 = "COUNTY_41039",
    /** Lincoln, Oregon */
    County_41041 = "COUNTY_41041",
    /** Linn, Oregon */
    County_41043 = "COUNTY_41043",
    /** Malheur, Oregon */
    County_41045 = "COUNTY_41045",
    /** Marion, Oregon */
    County_41047 = "COUNTY_41047",
    /** Morrow, Oregon */
    County_41049 = "COUNTY_41049",
    /** Multnomah, Oregon */
    County_41051 = "COUNTY_41051",
    /** Polk, Oregon */
    County_41053 = "COUNTY_41053",
    /** Sherman, Oregon */
    County_41055 = "COUNTY_41055",
    /** Tillamook, Oregon */
    County_41057 = "COUNTY_41057",
    /** Umatilla, Oregon */
    County_41059 = "COUNTY_41059",
    /** Union, Oregon */
    County_41061 = "COUNTY_41061",
    /** Wallowa, Oregon */
    County_41063 = "COUNTY_41063",
    /** Wasco, Oregon */
    County_41065 = "COUNTY_41065",
    /** Washington, Oregon */
    County_41067 = "COUNTY_41067",
    /** Wheeler, Oregon */
    County_41069 = "COUNTY_41069",
    /** Yamhill, Oregon */
    County_41071 = "COUNTY_41071",
    /** Adams, Pennsylvania */
    County_42001 = "COUNTY_42001",
    /** Allegheny, Pennsylvania */
    County_42003 = "COUNTY_42003",
    /** Armstrong, Pennsylvania */
    County_42005 = "COUNTY_42005",
    /** Beaver, Pennsylvania */
    County_42007 = "COUNTY_42007",
    /** Bedford, Pennsylvania */
    County_42009 = "COUNTY_42009",
    /** Berks, Pennsylvania */
    County_42011 = "COUNTY_42011",
    /** Blair, Pennsylvania */
    County_42013 = "COUNTY_42013",
    /** Bradford, Pennsylvania */
    County_42015 = "COUNTY_42015",
    /** Bucks, Pennsylvania */
    County_42017 = "COUNTY_42017",
    /** Butler, Pennsylvania */
    County_42019 = "COUNTY_42019",
    /** Cambria, Pennsylvania */
    County_42021 = "COUNTY_42021",
    /** Cameron, Pennsylvania */
    County_42023 = "COUNTY_42023",
    /** Carbon, Pennsylvania */
    County_42025 = "COUNTY_42025",
    /** Centre, Pennsylvania */
    County_42027 = "COUNTY_42027",
    /** Chester, Pennsylvania */
    County_42029 = "COUNTY_42029",
    /** Clarion, Pennsylvania */
    County_42031 = "COUNTY_42031",
    /** Clearfield, Pennsylvania */
    County_42033 = "COUNTY_42033",
    /** Clinton, Pennsylvania */
    County_42035 = "COUNTY_42035",
    /** Columbia, Pennsylvania */
    County_42037 = "COUNTY_42037",
    /** Crawford, Pennsylvania */
    County_42039 = "COUNTY_42039",
    /** Cumberland, Pennsylvania */
    County_42041 = "COUNTY_42041",
    /** Dauphin, Pennsylvania */
    County_42043 = "COUNTY_42043",
    /** Delaware, Pennsylvania */
    County_42045 = "COUNTY_42045",
    /** Elk, Pennsylvania */
    County_42047 = "COUNTY_42047",
    /** Erie, Pennsylvania */
    County_42049 = "COUNTY_42049",
    /** Fayette, Pennsylvania */
    County_42051 = "COUNTY_42051",
    /** Forest, Pennsylvania */
    County_42053 = "COUNTY_42053",
    /** Franklin, Pennsylvania */
    County_42055 = "COUNTY_42055",
    /** Fulton, Pennsylvania */
    County_42057 = "COUNTY_42057",
    /** Greene, Pennsylvania */
    County_42059 = "COUNTY_42059",
    /** Huntingdon, Pennsylvania */
    County_42061 = "COUNTY_42061",
    /** Indiana, Pennsylvania */
    County_42063 = "COUNTY_42063",
    /** Jefferson, Pennsylvania */
    County_42065 = "COUNTY_42065",
    /** Juniata, Pennsylvania */
    County_42067 = "COUNTY_42067",
    /** Lackawanna, Pennsylvania */
    County_42069 = "COUNTY_42069",
    /** Lancaster, Pennsylvania */
    County_42071 = "COUNTY_42071",
    /** Lawrence, Pennsylvania */
    County_42073 = "COUNTY_42073",
    /** Lebanon, Pennsylvania */
    County_42075 = "COUNTY_42075",
    /** Lehigh, Pennsylvania */
    County_42077 = "COUNTY_42077",
    /** Luzerne, Pennsylvania */
    County_42079 = "COUNTY_42079",
    /** Lycoming, Pennsylvania */
    County_42081 = "COUNTY_42081",
    /** McKean, Pennsylvania */
    County_42083 = "COUNTY_42083",
    /** Mercer, Pennsylvania */
    County_42085 = "COUNTY_42085",
    /** Mifflin, Pennsylvania */
    County_42087 = "COUNTY_42087",
    /** Monroe, Pennsylvania */
    County_42089 = "COUNTY_42089",
    /** Montgomery, Pennsylvania */
    County_42091 = "COUNTY_42091",
    /** Montour, Pennsylvania */
    County_42093 = "COUNTY_42093",
    /** Northampton, Pennsylvania */
    County_42095 = "COUNTY_42095",
    /** Northumberland, Pennsylvania */
    County_42097 = "COUNTY_42097",
    /** Perry, Pennsylvania */
    County_42099 = "COUNTY_42099",
    /** Philadelphia, Pennsylvania */
    County_42101 = "COUNTY_42101",
    /** Pike, Pennsylvania */
    County_42103 = "COUNTY_42103",
    /** Potter, Pennsylvania */
    County_42105 = "COUNTY_42105",
    /** Schuylkill, Pennsylvania */
    County_42107 = "COUNTY_42107",
    /** Snyder, Pennsylvania */
    County_42109 = "COUNTY_42109",
    /** Somerset, Pennsylvania */
    County_42111 = "COUNTY_42111",
    /** Sullivan, Pennsylvania */
    County_42113 = "COUNTY_42113",
    /** Susquehanna, Pennsylvania */
    County_42115 = "COUNTY_42115",
    /** Tioga, Pennsylvania */
    County_42117 = "COUNTY_42117",
    /** Union, Pennsylvania */
    County_42119 = "COUNTY_42119",
    /** Venango, Pennsylvania */
    County_42121 = "COUNTY_42121",
    /** Warren, Pennsylvania */
    County_42123 = "COUNTY_42123",
    /** Washington, Pennsylvania */
    County_42125 = "COUNTY_42125",
    /** Wayne, Pennsylvania */
    County_42127 = "COUNTY_42127",
    /** Westmoreland, Pennsylvania */
    County_42129 = "COUNTY_42129",
    /** Wyoming, Pennsylvania */
    County_42131 = "COUNTY_42131",
    /** York, Pennsylvania */
    County_42133 = "COUNTY_42133",
    /** Bristol, Rhode Island */
    County_44001 = "COUNTY_44001",
    /** Kent, Rhode Island */
    County_44003 = "COUNTY_44003",
    /** Newport, Rhode Island */
    County_44005 = "COUNTY_44005",
    /** Providence, Rhode Island */
    County_44007 = "COUNTY_44007",
    /** Washington, Rhode Island */
    County_44009 = "COUNTY_44009",
    /** Abbeville, South Carolina */
    County_45001 = "COUNTY_45001",
    /** Aiken, South Carolina */
    County_45003 = "COUNTY_45003",
    /** Allendale, South Carolina */
    County_45005 = "COUNTY_45005",
    /** Anderson, South Carolina */
    County_45007 = "COUNTY_45007",
    /** Bamberg, South Carolina */
    County_45009 = "COUNTY_45009",
    /** Barnwell, South Carolina */
    County_45011 = "COUNTY_45011",
    /** Beaufort, South Carolina */
    County_45013 = "COUNTY_45013",
    /** Berkeley, South Carolina */
    County_45015 = "COUNTY_45015",
    /** Calhoun, South Carolina */
    County_45017 = "COUNTY_45017",
    /** Charleston, South Carolina */
    County_45019 = "COUNTY_45019",
    /** Cherokee, South Carolina */
    County_45021 = "COUNTY_45021",
    /** Chester, South Carolina */
    County_45023 = "COUNTY_45023",
    /** Chesterfield, South Carolina */
    County_45025 = "COUNTY_45025",
    /** Clarendon, South Carolina */
    County_45027 = "COUNTY_45027",
    /** Colleton, South Carolina */
    County_45029 = "COUNTY_45029",
    /** Darlington, South Carolina */
    County_45031 = "COUNTY_45031",
    /** Dillon, South Carolina */
    County_45033 = "COUNTY_45033",
    /** Dorchester, South Carolina */
    County_45035 = "COUNTY_45035",
    /** Edgefield, South Carolina */
    County_45037 = "COUNTY_45037",
    /** Fairfield, South Carolina */
    County_45039 = "COUNTY_45039",
    /** Florence, South Carolina */
    County_45041 = "COUNTY_45041",
    /** Georgetown, South Carolina */
    County_45043 = "COUNTY_45043",
    /** Greenville, South Carolina */
    County_45045 = "COUNTY_45045",
    /** Greenwood, South Carolina */
    County_45047 = "COUNTY_45047",
    /** Hampton, South Carolina */
    County_45049 = "COUNTY_45049",
    /** Horry, South Carolina */
    County_45051 = "COUNTY_45051",
    /** Jasper, South Carolina */
    County_45053 = "COUNTY_45053",
    /** Kershaw, South Carolina */
    County_45055 = "COUNTY_45055",
    /** Lancaster, South Carolina */
    County_45057 = "COUNTY_45057",
    /** Laurens, South Carolina */
    County_45059 = "COUNTY_45059",
    /** Lee, South Carolina */
    County_45061 = "COUNTY_45061",
    /** Lexington, South Carolina */
    County_45063 = "COUNTY_45063",
    /** McCormick, South Carolina */
    County_45065 = "COUNTY_45065",
    /** Marion, South Carolina */
    County_45067 = "COUNTY_45067",
    /** Marlboro, South Carolina */
    County_45069 = "COUNTY_45069",
    /** Newberry, South Carolina */
    County_45071 = "COUNTY_45071",
    /** Oconee, South Carolina */
    County_45073 = "COUNTY_45073",
    /** Orangeburg, South Carolina */
    County_45075 = "COUNTY_45075",
    /** Pickens, South Carolina */
    County_45077 = "COUNTY_45077",
    /** Richland, South Carolina */
    County_45079 = "COUNTY_45079",
    /** Saluda, South Carolina */
    County_45081 = "COUNTY_45081",
    /** Spartanburg, South Carolina */
    County_45083 = "COUNTY_45083",
    /** Sumter, South Carolina */
    County_45085 = "COUNTY_45085",
    /** Union, South Carolina */
    County_45087 = "COUNTY_45087",
    /** Williamsburg, South Carolina */
    County_45089 = "COUNTY_45089",
    /** York, South Carolina */
    County_45091 = "COUNTY_45091",
    /** Aurora, South Dakota */
    County_46003 = "COUNTY_46003",
    /** Beadle, South Dakota */
    County_46005 = "COUNTY_46005",
    /** Bennett, South Dakota */
    County_46007 = "COUNTY_46007",
    /** Bon Homme, South Dakota */
    County_46009 = "COUNTY_46009",
    /** Brookings, South Dakota */
    County_46011 = "COUNTY_46011",
    /** Brown, South Dakota */
    County_46013 = "COUNTY_46013",
    /** Brule, South Dakota */
    County_46015 = "COUNTY_46015",
    /** Buffalo, South Dakota */
    County_46017 = "COUNTY_46017",
    /** Butte, South Dakota */
    County_46019 = "COUNTY_46019",
    /** Campbell, South Dakota */
    County_46021 = "COUNTY_46021",
    /** Charles Mix, South Dakota */
    County_46023 = "COUNTY_46023",
    /** Clark, South Dakota */
    County_46025 = "COUNTY_46025",
    /** Clay, South Dakota */
    County_46027 = "COUNTY_46027",
    /** Codington, South Dakota */
    County_46029 = "COUNTY_46029",
    /** Corson, South Dakota */
    County_46031 = "COUNTY_46031",
    /** Custer, South Dakota */
    County_46033 = "COUNTY_46033",
    /** Davison, South Dakota */
    County_46035 = "COUNTY_46035",
    /** Day, South Dakota */
    County_46037 = "COUNTY_46037",
    /** Deuel, South Dakota */
    County_46039 = "COUNTY_46039",
    /** Dewey, South Dakota */
    County_46041 = "COUNTY_46041",
    /** Douglas, South Dakota */
    County_46043 = "COUNTY_46043",
    /** Edmunds, South Dakota */
    County_46045 = "COUNTY_46045",
    /** Fall River, South Dakota */
    County_46047 = "COUNTY_46047",
    /** Faulk, South Dakota */
    County_46049 = "COUNTY_46049",
    /** Grant, South Dakota */
    County_46051 = "COUNTY_46051",
    /** Gregory, South Dakota */
    County_46053 = "COUNTY_46053",
    /** Haakon, South Dakota */
    County_46055 = "COUNTY_46055",
    /** Hamlin, South Dakota */
    County_46057 = "COUNTY_46057",
    /** Hand, South Dakota */
    County_46059 = "COUNTY_46059",
    /** Hanson, South Dakota */
    County_46061 = "COUNTY_46061",
    /** Harding, South Dakota */
    County_46063 = "COUNTY_46063",
    /** Hughes, South Dakota */
    County_46065 = "COUNTY_46065",
    /** Hutchinson, South Dakota */
    County_46067 = "COUNTY_46067",
    /** Hyde, South Dakota */
    County_46069 = "COUNTY_46069",
    /** Jackson, South Dakota */
    County_46071 = "COUNTY_46071",
    /** Jerauld, South Dakota */
    County_46073 = "COUNTY_46073",
    /** Jones, South Dakota */
    County_46075 = "COUNTY_46075",
    /** Kingsbury, South Dakota */
    County_46077 = "COUNTY_46077",
    /** Lake, South Dakota */
    County_46079 = "COUNTY_46079",
    /** Lawrence, South Dakota */
    County_46081 = "COUNTY_46081",
    /** Lincoln, South Dakota */
    County_46083 = "COUNTY_46083",
    /** Lyman, South Dakota */
    County_46085 = "COUNTY_46085",
    /** McCook, South Dakota */
    County_46087 = "COUNTY_46087",
    /** McPherson, South Dakota */
    County_46089 = "COUNTY_46089",
    /** Marshall, South Dakota */
    County_46091 = "COUNTY_46091",
    /** Meade, South Dakota */
    County_46093 = "COUNTY_46093",
    /** Mellette, South Dakota */
    County_46095 = "COUNTY_46095",
    /** Miner, South Dakota */
    County_46097 = "COUNTY_46097",
    /** Minnehaha, South Dakota */
    County_46099 = "COUNTY_46099",
    /** Moody, South Dakota */
    County_46101 = "COUNTY_46101",
    /** Pennington, South Dakota */
    County_46103 = "COUNTY_46103",
    /** Perkins, South Dakota */
    County_46105 = "COUNTY_46105",
    /** Potter, South Dakota */
    County_46107 = "COUNTY_46107",
    /** Roberts, South Dakota */
    County_46109 = "COUNTY_46109",
    /** Sanborn, South Dakota */
    County_46111 = "COUNTY_46111",
    /** Shannon, South Dakota */
    County_46113 = "COUNTY_46113",
    /** Spink, South Dakota */
    County_46115 = "COUNTY_46115",
    /** Stanley, South Dakota */
    County_46117 = "COUNTY_46117",
    /** Sully, South Dakota */
    County_46119 = "COUNTY_46119",
    /** Todd, South Dakota */
    County_46121 = "COUNTY_46121",
    /** Tripp, South Dakota */
    County_46123 = "COUNTY_46123",
    /** Turner, South Dakota */
    County_46125 = "COUNTY_46125",
    /** Union, South Dakota */
    County_46127 = "COUNTY_46127",
    /** Walworth, South Dakota */
    County_46129 = "COUNTY_46129",
    /** Yankton, South Dakota */
    County_46135 = "COUNTY_46135",
    /** Ziebach, South Dakota */
    County_46137 = "COUNTY_46137",
    /** Anderson, Tennessee */
    County_47001 = "COUNTY_47001",
    /** Bedford, Tennessee */
    County_47003 = "COUNTY_47003",
    /** Benton, Tennessee */
    County_47005 = "COUNTY_47005",
    /** Bledsoe, Tennessee */
    County_47007 = "COUNTY_47007",
    /** Blount, Tennessee */
    County_47009 = "COUNTY_47009",
    /** Bradley, Tennessee */
    County_47011 = "COUNTY_47011",
    /** Campbell, Tennessee */
    County_47013 = "COUNTY_47013",
    /** Cannon, Tennessee */
    County_47015 = "COUNTY_47015",
    /** Carroll, Tennessee */
    County_47017 = "COUNTY_47017",
    /** Carter, Tennessee */
    County_47019 = "COUNTY_47019",
    /** Cheatham, Tennessee */
    County_47021 = "COUNTY_47021",
    /** Chester, Tennessee */
    County_47023 = "COUNTY_47023",
    /** Claiborne, Tennessee */
    County_47025 = "COUNTY_47025",
    /** Clay, Tennessee */
    County_47027 = "COUNTY_47027",
    /** Cocke, Tennessee */
    County_47029 = "COUNTY_47029",
    /** Coffee, Tennessee */
    County_47031 = "COUNTY_47031",
    /** Crockett, Tennessee */
    County_47033 = "COUNTY_47033",
    /** Cumberland, Tennessee */
    County_47035 = "COUNTY_47035",
    /** Davidson, Tennessee */
    County_47037 = "COUNTY_47037",
    /** Decatur, Tennessee */
    County_47039 = "COUNTY_47039",
    /** Dekalb, Tennessee */
    County_47041 = "COUNTY_47041",
    /** Dickson, Tennessee */
    County_47043 = "COUNTY_47043",
    /** Dyer, Tennessee */
    County_47045 = "COUNTY_47045",
    /** Fayette, Tennessee */
    County_47047 = "COUNTY_47047",
    /** Fentress, Tennessee */
    County_47049 = "COUNTY_47049",
    /** Franklin, Tennessee */
    County_47051 = "COUNTY_47051",
    /** Gibson, Tennessee */
    County_47053 = "COUNTY_47053",
    /** Giles, Tennessee */
    County_47055 = "COUNTY_47055",
    /** Grainger, Tennessee */
    County_47057 = "COUNTY_47057",
    /** Greene, Tennessee */
    County_47059 = "COUNTY_47059",
    /** Grundy, Tennessee */
    County_47061 = "COUNTY_47061",
    /** Hamblen, Tennessee */
    County_47063 = "COUNTY_47063",
    /** Hamilton, Tennessee */
    County_47065 = "COUNTY_47065",
    /** Hancock, Tennessee */
    County_47067 = "COUNTY_47067",
    /** Hardeman, Tennessee */
    County_47069 = "COUNTY_47069",
    /** Hardin, Tennessee */
    County_47071 = "COUNTY_47071",
    /** Hawkins, Tennessee */
    County_47073 = "COUNTY_47073",
    /** Haywood, Tennessee */
    County_47075 = "COUNTY_47075",
    /** Henderson, Tennessee */
    County_47077 = "COUNTY_47077",
    /** Henry, Tennessee */
    County_47079 = "COUNTY_47079",
    /** Hickman, Tennessee */
    County_47081 = "COUNTY_47081",
    /** Houston, Tennessee */
    County_47083 = "COUNTY_47083",
    /** Humphreys, Tennessee */
    County_47085 = "COUNTY_47085",
    /** Jackson, Tennessee */
    County_47087 = "COUNTY_47087",
    /** Jefferson, Tennessee */
    County_47089 = "COUNTY_47089",
    /** Johnson, Tennessee */
    County_47091 = "COUNTY_47091",
    /** Knox, Tennessee */
    County_47093 = "COUNTY_47093",
    /** Lake, Tennessee */
    County_47095 = "COUNTY_47095",
    /** Lauderdale, Tennessee */
    County_47097 = "COUNTY_47097",
    /** Lawrence, Tennessee */
    County_47099 = "COUNTY_47099",
    /** Lewis, Tennessee */
    County_47101 = "COUNTY_47101",
    /** Lincoln, Tennessee */
    County_47103 = "COUNTY_47103",
    /** Loudon, Tennessee */
    County_47105 = "COUNTY_47105",
    /** McMinn, Tennessee */
    County_47107 = "COUNTY_47107",
    /** McNairy, Tennessee */
    County_47109 = "COUNTY_47109",
    /** Macon, Tennessee */
    County_47111 = "COUNTY_47111",
    /** Madison, Tennessee */
    County_47113 = "COUNTY_47113",
    /** Marion, Tennessee */
    County_47115 = "COUNTY_47115",
    /** Marshall, Tennessee */
    County_47117 = "COUNTY_47117",
    /** Maury, Tennessee */
    County_47119 = "COUNTY_47119",
    /** Meigs, Tennessee */
    County_47121 = "COUNTY_47121",
    /** Monroe, Tennessee */
    County_47123 = "COUNTY_47123",
    /** Montgomery, Tennessee */
    County_47125 = "COUNTY_47125",
    /** Moore, Tennessee */
    County_47127 = "COUNTY_47127",
    /** Morgan, Tennessee */
    County_47129 = "COUNTY_47129",
    /** Obion, Tennessee */
    County_47131 = "COUNTY_47131",
    /** Overton, Tennessee */
    County_47133 = "COUNTY_47133",
    /** Perry, Tennessee */
    County_47135 = "COUNTY_47135",
    /** Pickett, Tennessee */
    County_47137 = "COUNTY_47137",
    /** Polk, Tennessee */
    County_47139 = "COUNTY_47139",
    /** Putnam, Tennessee */
    County_47141 = "COUNTY_47141",
    /** Rhea, Tennessee */
    County_47143 = "COUNTY_47143",
    /** Roane, Tennessee */
    County_47145 = "COUNTY_47145",
    /** Robertson, Tennessee */
    County_47147 = "COUNTY_47147",
    /** Rutherford, Tennessee */
    County_47149 = "COUNTY_47149",
    /** Scott, Tennessee */
    County_47151 = "COUNTY_47151",
    /** Sequatchie, Tennessee */
    County_47153 = "COUNTY_47153",
    /** Sevier, Tennessee */
    County_47155 = "COUNTY_47155",
    /** Shelby, Tennessee */
    County_47157 = "COUNTY_47157",
    /** Smith, Tennessee */
    County_47159 = "COUNTY_47159",
    /** Stewart, Tennessee */
    County_47161 = "COUNTY_47161",
    /** Sullivan, Tennessee */
    County_47163 = "COUNTY_47163",
    /** Sumner, Tennessee */
    County_47165 = "COUNTY_47165",
    /** Tipton, Tennessee */
    County_47167 = "COUNTY_47167",
    /** Trousdale, Tennessee */
    County_47169 = "COUNTY_47169",
    /** Unicoi, Tennessee */
    County_47171 = "COUNTY_47171",
    /** Union, Tennessee */
    County_47173 = "COUNTY_47173",
    /** Van Buren, Tennessee */
    County_47175 = "COUNTY_47175",
    /** Warren, Tennessee */
    County_47177 = "COUNTY_47177",
    /** Washington, Tennessee */
    County_47179 = "COUNTY_47179",
    /** Wayne, Tennessee */
    County_47181 = "COUNTY_47181",
    /** Weakley, Tennessee */
    County_47183 = "COUNTY_47183",
    /** White, Tennessee */
    County_47185 = "COUNTY_47185",
    /** Williamson, Tennessee */
    County_47187 = "COUNTY_47187",
    /** Wilson, Tennessee */
    County_47189 = "COUNTY_47189",
    /** Anderson, Texas */
    County_48001 = "COUNTY_48001",
    /** Andrews, Texas */
    County_48003 = "COUNTY_48003",
    /** Angelina, Texas */
    County_48005 = "COUNTY_48005",
    /** Aransas, Texas */
    County_48007 = "COUNTY_48007",
    /** Archer, Texas */
    County_48009 = "COUNTY_48009",
    /** Armstrong, Texas */
    County_48011 = "COUNTY_48011",
    /** Atascosa, Texas */
    County_48013 = "COUNTY_48013",
    /** Austin, Texas */
    County_48015 = "COUNTY_48015",
    /** Bailey, Texas */
    County_48017 = "COUNTY_48017",
    /** Bandera, Texas */
    County_48019 = "COUNTY_48019",
    /** Bastrop, Texas */
    County_48021 = "COUNTY_48021",
    /** Baylor, Texas */
    County_48023 = "COUNTY_48023",
    /** Bee, Texas */
    County_48025 = "COUNTY_48025",
    /** Bell, Texas */
    County_48027 = "COUNTY_48027",
    /** Bexar, Texas */
    County_48029 = "COUNTY_48029",
    /** Blanco, Texas */
    County_48031 = "COUNTY_48031",
    /** Borden, Texas */
    County_48033 = "COUNTY_48033",
    /** Bosque, Texas */
    County_48035 = "COUNTY_48035",
    /** Bowie, Texas */
    County_48037 = "COUNTY_48037",
    /** Brazoria, Texas */
    County_48039 = "COUNTY_48039",
    /** Brazos, Texas */
    County_48041 = "COUNTY_48041",
    /** Brewster, Texas */
    County_48043 = "COUNTY_48043",
    /** Briscoe, Texas */
    County_48045 = "COUNTY_48045",
    /** Brooks, Texas */
    County_48047 = "COUNTY_48047",
    /** Brown, Texas */
    County_48049 = "COUNTY_48049",
    /** Burleson, Texas */
    County_48051 = "COUNTY_48051",
    /** Burnet, Texas */
    County_48053 = "COUNTY_48053",
    /** Caldwell, Texas */
    County_48055 = "COUNTY_48055",
    /** Calhoun, Texas */
    County_48057 = "COUNTY_48057",
    /** Callahan, Texas */
    County_48059 = "COUNTY_48059",
    /** Cameron, Texas */
    County_48061 = "COUNTY_48061",
    /** Camp, Texas */
    County_48063 = "COUNTY_48063",
    /** Carson, Texas */
    County_48065 = "COUNTY_48065",
    /** Cass, Texas */
    County_48067 = "COUNTY_48067",
    /** Castro, Texas */
    County_48069 = "COUNTY_48069",
    /** Chambers, Texas */
    County_48071 = "COUNTY_48071",
    /** Cherokee, Texas */
    County_48073 = "COUNTY_48073",
    /** Childress, Texas */
    County_48075 = "COUNTY_48075",
    /** Clay, Texas */
    County_48077 = "COUNTY_48077",
    /** Cochran, Texas */
    County_48079 = "COUNTY_48079",
    /** Coke, Texas */
    County_48081 = "COUNTY_48081",
    /** Coleman, Texas */
    County_48083 = "COUNTY_48083",
    /** Collin, Texas */
    County_48085 = "COUNTY_48085",
    /** Collingsworth, Texas */
    County_48087 = "COUNTY_48087",
    /** Colorado, Texas */
    County_48089 = "COUNTY_48089",
    /** Comal, Texas */
    County_48091 = "COUNTY_48091",
    /** Comanche, Texas */
    County_48093 = "COUNTY_48093",
    /** Concho, Texas */
    County_48095 = "COUNTY_48095",
    /** Cooke, Texas */
    County_48097 = "COUNTY_48097",
    /** Coryell, Texas */
    County_48099 = "COUNTY_48099",
    /** Cottle, Texas */
    County_48101 = "COUNTY_48101",
    /** Crane, Texas */
    County_48103 = "COUNTY_48103",
    /** Crockett, Texas */
    County_48105 = "COUNTY_48105",
    /** Crosby, Texas */
    County_48107 = "COUNTY_48107",
    /** Culberson, Texas */
    County_48109 = "COUNTY_48109",
    /** Dallam, Texas */
    County_48111 = "COUNTY_48111",
    /** Dallas, Texas */
    County_48113 = "COUNTY_48113",
    /** Dawson, Texas */
    County_48115 = "COUNTY_48115",
    /** Deaf Smith, Texas */
    County_48117 = "COUNTY_48117",
    /** Delta, Texas */
    County_48119 = "COUNTY_48119",
    /** Denton, Texas */
    County_48121 = "COUNTY_48121",
    /** De Witt, Texas */
    County_48123 = "COUNTY_48123",
    /** Dickens, Texas */
    County_48125 = "COUNTY_48125",
    /** Dimmit, Texas */
    County_48127 = "COUNTY_48127",
    /** Donley, Texas */
    County_48129 = "COUNTY_48129",
    /** Duval, Texas */
    County_48131 = "COUNTY_48131",
    /** Eastland, Texas */
    County_48133 = "COUNTY_48133",
    /** Ector, Texas */
    County_48135 = "COUNTY_48135",
    /** Edwards, Texas */
    County_48137 = "COUNTY_48137",
    /** Ellis, Texas */
    County_48139 = "COUNTY_48139",
    /** El Paso, Texas */
    County_48141 = "COUNTY_48141",
    /** Erath, Texas */
    County_48143 = "COUNTY_48143",
    /** Falls, Texas */
    County_48145 = "COUNTY_48145",
    /** Fannin, Texas */
    County_48147 = "COUNTY_48147",
    /** Fayette, Texas */
    County_48149 = "COUNTY_48149",
    /** Fisher, Texas */
    County_48151 = "COUNTY_48151",
    /** Floyd, Texas */
    County_48153 = "COUNTY_48153",
    /** Foard, Texas */
    County_48155 = "COUNTY_48155",
    /** Fort Bend, Texas */
    County_48157 = "COUNTY_48157",
    /** Franklin, Texas */
    County_48159 = "COUNTY_48159",
    /** Freestone, Texas */
    County_48161 = "COUNTY_48161",
    /** Frio, Texas */
    County_48163 = "COUNTY_48163",
    /** Gaines, Texas */
    County_48165 = "COUNTY_48165",
    /** Galveston, Texas */
    County_48167 = "COUNTY_48167",
    /** Garza, Texas */
    County_48169 = "COUNTY_48169",
    /** Gillespie, Texas */
    County_48171 = "COUNTY_48171",
    /** Glasscock, Texas */
    County_48173 = "COUNTY_48173",
    /** Goliad, Texas */
    County_48175 = "COUNTY_48175",
    /** Gonzales, Texas */
    County_48177 = "COUNTY_48177",
    /** Gray, Texas */
    County_48179 = "COUNTY_48179",
    /** Grayson, Texas */
    County_48181 = "COUNTY_48181",
    /** Gregg, Texas */
    County_48183 = "COUNTY_48183",
    /** Grimes, Texas */
    County_48185 = "COUNTY_48185",
    /** Guadalupe, Texas */
    County_48187 = "COUNTY_48187",
    /** Hale, Texas */
    County_48189 = "COUNTY_48189",
    /** Hall, Texas */
    County_48191 = "COUNTY_48191",
    /** Hamilton, Texas */
    County_48193 = "COUNTY_48193",
    /** Hansford, Texas */
    County_48195 = "COUNTY_48195",
    /** Hardeman, Texas */
    County_48197 = "COUNTY_48197",
    /** Hardin, Texas */
    County_48199 = "COUNTY_48199",
    /** Harris, Texas */
    County_48201 = "COUNTY_48201",
    /** Harrison, Texas */
    County_48203 = "COUNTY_48203",
    /** Hartley, Texas */
    County_48205 = "COUNTY_48205",
    /** Haskell, Texas */
    County_48207 = "COUNTY_48207",
    /** Hays, Texas */
    County_48209 = "COUNTY_48209",
    /** Hemphill, Texas */
    County_48211 = "COUNTY_48211",
    /** Henderson, Texas */
    County_48213 = "COUNTY_48213",
    /** Hidalgo, Texas */
    County_48215 = "COUNTY_48215",
    /** Hill, Texas */
    County_48217 = "COUNTY_48217",
    /** Hockley, Texas */
    County_48219 = "COUNTY_48219",
    /** Hood, Texas */
    County_48221 = "COUNTY_48221",
    /** Hopkins, Texas */
    County_48223 = "COUNTY_48223",
    /** Houston, Texas */
    County_48225 = "COUNTY_48225",
    /** Howard, Texas */
    County_48227 = "COUNTY_48227",
    /** Hudspeth, Texas */
    County_48229 = "COUNTY_48229",
    /** Hunt, Texas */
    County_48231 = "COUNTY_48231",
    /** Hutchinson, Texas */
    County_48233 = "COUNTY_48233",
    /** Irion, Texas */
    County_48235 = "COUNTY_48235",
    /** Jack, Texas */
    County_48237 = "COUNTY_48237",
    /** Jackson, Texas */
    County_48239 = "COUNTY_48239",
    /** Jasper, Texas */
    County_48241 = "COUNTY_48241",
    /** Jeff Davis, Texas */
    County_48243 = "COUNTY_48243",
    /** Jefferson, Texas */
    County_48245 = "COUNTY_48245",
    /** Jim Hogg, Texas */
    County_48247 = "COUNTY_48247",
    /** Jim Wells, Texas */
    County_48249 = "COUNTY_48249",
    /** Johnson, Texas */
    County_48251 = "COUNTY_48251",
    /** Jones, Texas */
    County_48253 = "COUNTY_48253",
    /** Karnes, Texas */
    County_48255 = "COUNTY_48255",
    /** Kaufman, Texas */
    County_48257 = "COUNTY_48257",
    /** Kendall, Texas */
    County_48259 = "COUNTY_48259",
    /** Kenedy, Texas */
    County_48261 = "COUNTY_48261",
    /** Kent, Texas */
    County_48263 = "COUNTY_48263",
    /** Kerr, Texas */
    County_48265 = "COUNTY_48265",
    /** Kimble, Texas */
    County_48267 = "COUNTY_48267",
    /** King, Texas */
    County_48269 = "COUNTY_48269",
    /** Kinney, Texas */
    County_48271 = "COUNTY_48271",
    /** Kleberg, Texas */
    County_48273 = "COUNTY_48273",
    /** Knox, Texas */
    County_48275 = "COUNTY_48275",
    /** Lamar, Texas */
    County_48277 = "COUNTY_48277",
    /** Lamb, Texas */
    County_48279 = "COUNTY_48279",
    /** Lampasas, Texas */
    County_48281 = "COUNTY_48281",
    /** La Salle, Texas */
    County_48283 = "COUNTY_48283",
    /** Lavaca, Texas */
    County_48285 = "COUNTY_48285",
    /** Lee, Texas */
    County_48287 = "COUNTY_48287",
    /** Leon, Texas */
    County_48289 = "COUNTY_48289",
    /** Liberty, Texas */
    County_48291 = "COUNTY_48291",
    /** Limestone, Texas */
    County_48293 = "COUNTY_48293",
    /** Lipscomb, Texas */
    County_48295 = "COUNTY_48295",
    /** Live Oak, Texas */
    County_48297 = "COUNTY_48297",
    /** Llano, Texas */
    County_48299 = "COUNTY_48299",
    /** Loving, Texas */
    County_48301 = "COUNTY_48301",
    /** Lubbock, Texas */
    County_48303 = "COUNTY_48303",
    /** Lynn, Texas */
    County_48305 = "COUNTY_48305",
    /** McCulloch, Texas */
    County_48307 = "COUNTY_48307",
    /** McLennan, Texas */
    County_48309 = "COUNTY_48309",
    /** McMullen, Texas */
    County_48311 = "COUNTY_48311",
    /** Madison, Texas */
    County_48313 = "COUNTY_48313",
    /** Marion, Texas */
    County_48315 = "COUNTY_48315",
    /** Martin, Texas */
    County_48317 = "COUNTY_48317",
    /** Mason, Texas */
    County_48319 = "COUNTY_48319",
    /** Matagorda, Texas */
    County_48321 = "COUNTY_48321",
    /** Maverick, Texas */
    County_48323 = "COUNTY_48323",
    /** Medina, Texas */
    County_48325 = "COUNTY_48325",
    /** Menard, Texas */
    County_48327 = "COUNTY_48327",
    /** Midland, Texas */
    County_48329 = "COUNTY_48329",
    /** Milam, Texas */
    County_48331 = "COUNTY_48331",
    /** Mills, Texas */
    County_48333 = "COUNTY_48333",
    /** Mitchell, Texas */
    County_48335 = "COUNTY_48335",
    /** Montague, Texas */
    County_48337 = "COUNTY_48337",
    /** Montgomery, Texas */
    County_48339 = "COUNTY_48339",
    /** Moore, Texas */
    County_48341 = "COUNTY_48341",
    /** Morris, Texas */
    County_48343 = "COUNTY_48343",
    /** Motley, Texas */
    County_48345 = "COUNTY_48345",
    /** Nacogdoches, Texas */
    County_48347 = "COUNTY_48347",
    /** Navarro, Texas */
    County_48349 = "COUNTY_48349",
    /** Newton, Texas */
    County_48351 = "COUNTY_48351",
    /** Nolan, Texas */
    County_48353 = "COUNTY_48353",
    /** Nueces, Texas */
    County_48355 = "COUNTY_48355",
    /** Ochiltree, Texas */
    County_48357 = "COUNTY_48357",
    /** Oldham, Texas */
    County_48359 = "COUNTY_48359",
    /** Orange, Texas */
    County_48361 = "COUNTY_48361",
    /** Palo Pinto, Texas */
    County_48363 = "COUNTY_48363",
    /** Panola, Texas */
    County_48365 = "COUNTY_48365",
    /** Parker, Texas */
    County_48367 = "COUNTY_48367",
    /** Parmer, Texas */
    County_48369 = "COUNTY_48369",
    /** Pecos, Texas */
    County_48371 = "COUNTY_48371",
    /** Polk, Texas */
    County_48373 = "COUNTY_48373",
    /** Potter, Texas */
    County_48375 = "COUNTY_48375",
    /** Presidio, Texas */
    County_48377 = "COUNTY_48377",
    /** Rains, Texas */
    County_48379 = "COUNTY_48379",
    /** Randall, Texas */
    County_48381 = "COUNTY_48381",
    /** Reagan, Texas */
    County_48383 = "COUNTY_48383",
    /** Real, Texas */
    County_48385 = "COUNTY_48385",
    /** Red River, Texas */
    County_48387 = "COUNTY_48387",
    /** Reeves, Texas */
    County_48389 = "COUNTY_48389",
    /** Refugio, Texas */
    County_48391 = "COUNTY_48391",
    /** Roberts, Texas */
    County_48393 = "COUNTY_48393",
    /** Robertson, Texas */
    County_48395 = "COUNTY_48395",
    /** Rockwall, Texas */
    County_48397 = "COUNTY_48397",
    /** Runnels, Texas */
    County_48399 = "COUNTY_48399",
    /** Rusk, Texas */
    County_48401 = "COUNTY_48401",
    /** Sabine, Texas */
    County_48403 = "COUNTY_48403",
    /** San Augustine, Texas */
    County_48405 = "COUNTY_48405",
    /** San Jacinto, Texas */
    County_48407 = "COUNTY_48407",
    /** San Patricio, Texas */
    County_48409 = "COUNTY_48409",
    /** San Saba, Texas */
    County_48411 = "COUNTY_48411",
    /** Schleicher, Texas */
    County_48413 = "COUNTY_48413",
    /** Scurry, Texas */
    County_48415 = "COUNTY_48415",
    /** Shackelford, Texas */
    County_48417 = "COUNTY_48417",
    /** Shelby, Texas */
    County_48419 = "COUNTY_48419",
    /** Sherman, Texas */
    County_48421 = "COUNTY_48421",
    /** Smith, Texas */
    County_48423 = "COUNTY_48423",
    /** Somervell, Texas */
    County_48425 = "COUNTY_48425",
    /** Starr, Texas */
    County_48427 = "COUNTY_48427",
    /** Stephens, Texas */
    County_48429 = "COUNTY_48429",
    /** Sterling, Texas */
    County_48431 = "COUNTY_48431",
    /** Stonewall, Texas */
    County_48433 = "COUNTY_48433",
    /** Sutton, Texas */
    County_48435 = "COUNTY_48435",
    /** Swisher, Texas */
    County_48437 = "COUNTY_48437",
    /** Tarrant, Texas */
    County_48439 = "COUNTY_48439",
    /** Taylor, Texas */
    County_48441 = "COUNTY_48441",
    /** Terrell, Texas */
    County_48443 = "COUNTY_48443",
    /** Terry, Texas */
    County_48445 = "COUNTY_48445",
    /** Throckmorton, Texas */
    County_48447 = "COUNTY_48447",
    /** Titus, Texas */
    County_48449 = "COUNTY_48449",
    /** Tom Green, Texas */
    County_48451 = "COUNTY_48451",
    /** Travis, Texas */
    County_48453 = "COUNTY_48453",
    /** Trinity, Texas */
    County_48455 = "COUNTY_48455",
    /** Tyler, Texas */
    County_48457 = "COUNTY_48457",
    /** Upshur, Texas */
    County_48459 = "COUNTY_48459",
    /** Upton, Texas */
    County_48461 = "COUNTY_48461",
    /** Uvalde, Texas */
    County_48463 = "COUNTY_48463",
    /** Val Verde, Texas */
    County_48465 = "COUNTY_48465",
    /** Van Zandt, Texas */
    County_48467 = "COUNTY_48467",
    /** Victoria, Texas */
    County_48469 = "COUNTY_48469",
    /** Walker, Texas */
    County_48471 = "COUNTY_48471",
    /** Waller, Texas */
    County_48473 = "COUNTY_48473",
    /** Ward, Texas */
    County_48475 = "COUNTY_48475",
    /** Washington, Texas */
    County_48477 = "COUNTY_48477",
    /** Webb, Texas */
    County_48479 = "COUNTY_48479",
    /** Wharton, Texas */
    County_48481 = "COUNTY_48481",
    /** Wheeler, Texas */
    County_48483 = "COUNTY_48483",
    /** Wichita, Texas */
    County_48485 = "COUNTY_48485",
    /** Wilbarger, Texas */
    County_48487 = "COUNTY_48487",
    /** Willacy, Texas */
    County_48489 = "COUNTY_48489",
    /** Williamson, Texas */
    County_48491 = "COUNTY_48491",
    /** Wilson, Texas */
    County_48493 = "COUNTY_48493",
    /** Winkler, Texas */
    County_48495 = "COUNTY_48495",
    /** Wise, Texas */
    County_48497 = "COUNTY_48497",
    /** Wood, Texas */
    County_48499 = "COUNTY_48499",
    /** Yoakum, Texas */
    County_48501 = "COUNTY_48501",
    /** Young, Texas */
    County_48503 = "COUNTY_48503",
    /** Zapata, Texas */
    County_48505 = "COUNTY_48505",
    /** Zavala, Texas */
    County_48507 = "COUNTY_48507",
    /** Beaver, Utah */
    County_49001 = "COUNTY_49001",
    /** Box Elder, Utah */
    County_49003 = "COUNTY_49003",
    /** Cache, Utah */
    County_49005 = "COUNTY_49005",
    /** Carbon, Utah */
    County_49007 = "COUNTY_49007",
    /** Daggett, Utah */
    County_49009 = "COUNTY_49009",
    /** Davis, Utah */
    County_49011 = "COUNTY_49011",
    /** Duchesne, Utah */
    County_49013 = "COUNTY_49013",
    /** Emery, Utah */
    County_49015 = "COUNTY_49015",
    /** Garfield, Utah */
    County_49017 = "COUNTY_49017",
    /** Grand, Utah */
    County_49019 = "COUNTY_49019",
    /** Iron, Utah */
    County_49021 = "COUNTY_49021",
    /** Juab, Utah */
    County_49023 = "COUNTY_49023",
    /** Kane, Utah */
    County_49025 = "COUNTY_49025",
    /** Millard, Utah */
    County_49027 = "COUNTY_49027",
    /** Morgan, Utah */
    County_49029 = "COUNTY_49029",
    /** Piute, Utah */
    County_49031 = "COUNTY_49031",
    /** Rich, Utah */
    County_49033 = "COUNTY_49033",
    /** Salt Lake, Utah */
    County_49035 = "COUNTY_49035",
    /** San Juan, Utah */
    County_49037 = "COUNTY_49037",
    /** Sanpete, Utah */
    County_49039 = "COUNTY_49039",
    /** Sevier, Utah */
    County_49041 = "COUNTY_49041",
    /** Summit, Utah */
    County_49043 = "COUNTY_49043",
    /** Tooele, Utah */
    County_49045 = "COUNTY_49045",
    /** Uintah, Utah */
    County_49047 = "COUNTY_49047",
    /** Utah, Utah */
    County_49049 = "COUNTY_49049",
    /** Wasatch, Utah */
    County_49051 = "COUNTY_49051",
    /** Washington, Utah */
    County_49053 = "COUNTY_49053",
    /** Wayne, Utah */
    County_49055 = "COUNTY_49055",
    /** Weber, Utah */
    County_49057 = "COUNTY_49057",
    /** Addison, Vermont */
    County_50001 = "COUNTY_50001",
    /** Bennington, Vermont */
    County_50003 = "COUNTY_50003",
    /** Caledonia, Vermont */
    County_50005 = "COUNTY_50005",
    /** Chittenden, Vermont */
    County_50007 = "COUNTY_50007",
    /** Essex, Vermont */
    County_50009 = "COUNTY_50009",
    /** Franklin, Vermont */
    County_50011 = "COUNTY_50011",
    /** Grand Isle, Vermont */
    County_50013 = "COUNTY_50013",
    /** Lamoille, Vermont */
    County_50015 = "COUNTY_50015",
    /** Orange, Vermont */
    County_50017 = "COUNTY_50017",
    /** Orleans, Vermont */
    County_50019 = "COUNTY_50019",
    /** Rutland, Vermont */
    County_50021 = "COUNTY_50021",
    /** Washington, Vermont */
    County_50023 = "COUNTY_50023",
    /** Windham, Vermont */
    County_50025 = "COUNTY_50025",
    /** Windsor, Vermont */
    County_50027 = "COUNTY_50027",
    /** Accomack, Virginia */
    County_51001 = "COUNTY_51001",
    /** Albemarle, Virginia */
    County_51003 = "COUNTY_51003",
    /** Alleghany, Virginia */
    County_51005 = "COUNTY_51005",
    /** Amelia, Virginia */
    County_51007 = "COUNTY_51007",
    /** Amherst, Virginia */
    County_51009 = "COUNTY_51009",
    /** Appomattox, Virginia */
    County_51011 = "COUNTY_51011",
    /** Arlington, Virginia */
    County_51013 = "COUNTY_51013",
    /** Augusta, Virginia */
    County_51015 = "COUNTY_51015",
    /** Bath, Virginia */
    County_51017 = "COUNTY_51017",
    /** Bedford, Virginia */
    County_51019 = "COUNTY_51019",
    /** Bland, Virginia */
    County_51021 = "COUNTY_51021",
    /** Botetourt, Virginia */
    County_51023 = "COUNTY_51023",
    /** Brunswick, Virginia */
    County_51025 = "COUNTY_51025",
    /** Buchanan, Virginia */
    County_51027 = "COUNTY_51027",
    /** Buckingham, Virginia */
    County_51029 = "COUNTY_51029",
    /** Campbell, Virginia */
    County_51031 = "COUNTY_51031",
    /** Caroline, Virginia */
    County_51033 = "COUNTY_51033",
    /** Carroll, Virginia */
    County_51035 = "COUNTY_51035",
    /** Charles City, Virginia */
    County_51036 = "COUNTY_51036",
    /** Charlotte, Virginia */
    County_51037 = "COUNTY_51037",
    /** Chesterfield, Virginia */
    County_51041 = "COUNTY_51041",
    /** Clarke, Virginia */
    County_51043 = "COUNTY_51043",
    /** Craig, Virginia */
    County_51045 = "COUNTY_51045",
    /** Culpeper, Virginia */
    County_51047 = "COUNTY_51047",
    /** Cumberland, Virginia */
    County_51049 = "COUNTY_51049",
    /** Dickenson, Virginia */
    County_51051 = "COUNTY_51051",
    /** Dinwiddie, Virginia */
    County_51053 = "COUNTY_51053",
    /** Essex, Virginia */
    County_51057 = "COUNTY_51057",
    /** Fairfax, Virginia */
    County_51059 = "COUNTY_51059",
    /** Fauquier, Virginia */
    County_51061 = "COUNTY_51061",
    /** Floyd, Virginia */
    County_51063 = "COUNTY_51063",
    /** Fluvanna, Virginia */
    County_51065 = "COUNTY_51065",
    /** Franklin, Virginia */
    County_51067 = "COUNTY_51067",
    /** Frederick, Virginia */
    County_51069 = "COUNTY_51069",
    /** Giles, Virginia */
    County_51071 = "COUNTY_51071",
    /** Gloucester, Virginia */
    County_51073 = "COUNTY_51073",
    /** Goochland, Virginia */
    County_51075 = "COUNTY_51075",
    /** Grayson, Virginia */
    County_51077 = "COUNTY_51077",
    /** Greene, Virginia */
    County_51079 = "COUNTY_51079",
    /** Greensville, Virginia */
    County_51081 = "COUNTY_51081",
    /** Halifax, Virginia */
    County_51083 = "COUNTY_51083",
    /** Hanover, Virginia */
    County_51085 = "COUNTY_51085",
    /** Henrico, Virginia */
    County_51087 = "COUNTY_51087",
    /** Henry, Virginia */
    County_51089 = "COUNTY_51089",
    /** Highland, Virginia */
    County_51091 = "COUNTY_51091",
    /** Isle of Wight, Virginia */
    County_51093 = "COUNTY_51093",
    /** James City, Virginia */
    County_51095 = "COUNTY_51095",
    /** King and Queen, Virginia */
    County_51097 = "COUNTY_51097",
    /** King George, Virginia */
    County_51099 = "COUNTY_51099",
    /** King William, Virginia */
    County_51101 = "COUNTY_51101",
    /** Lancaster, Virginia */
    County_51103 = "COUNTY_51103",
    /** Lee, Virginia */
    County_51105 = "COUNTY_51105",
    /** Loudoun, Virginia */
    County_51107 = "COUNTY_51107",
    /** Louisa, Virginia */
    County_51109 = "COUNTY_51109",
    /** Lunenburg, Virginia */
    County_51111 = "COUNTY_51111",
    /** Madison, Virginia */
    County_51113 = "COUNTY_51113",
    /** Mathews, Virginia */
    County_51115 = "COUNTY_51115",
    /** Mecklenburg, Virginia */
    County_51117 = "COUNTY_51117",
    /** Middlesex, Virginia */
    County_51119 = "COUNTY_51119",
    /** Montgomery, Virginia */
    County_51121 = "COUNTY_51121",
    /** Nelson, Virginia */
    County_51125 = "COUNTY_51125",
    /** New Kent, Virginia */
    County_51127 = "COUNTY_51127",
    /** Northampton, Virginia */
    County_51131 = "COUNTY_51131",
    /** Northumberland, Virginia */
    County_51133 = "COUNTY_51133",
    /** Nottoway, Virginia */
    County_51135 = "COUNTY_51135",
    /** Orange, Virginia */
    County_51137 = "COUNTY_51137",
    /** Page, Virginia */
    County_51139 = "COUNTY_51139",
    /** Patrick, Virginia */
    County_51141 = "COUNTY_51141",
    /** Pittsylvania, Virginia */
    County_51143 = "COUNTY_51143",
    /** Powhatan, Virginia */
    County_51145 = "COUNTY_51145",
    /** Prince Edward, Virginia */
    County_51147 = "COUNTY_51147",
    /** Prince George, Virginia */
    County_51149 = "COUNTY_51149",
    /** Prince William, Virginia */
    County_51153 = "COUNTY_51153",
    /** Pulaski, Virginia */
    County_51155 = "COUNTY_51155",
    /** Rappahannock, Virginia */
    County_51157 = "COUNTY_51157",
    /** Richmond, Virginia */
    County_51159 = "COUNTY_51159",
    /** Roanoke, Virginia */
    County_51161 = "COUNTY_51161",
    /** Rockbridge, Virginia */
    County_51163 = "COUNTY_51163",
    /** Rockingham, Virginia */
    County_51165 = "COUNTY_51165",
    /** Russell, Virginia */
    County_51167 = "COUNTY_51167",
    /** Scott, Virginia */
    County_51169 = "COUNTY_51169",
    /** Shenandoah, Virginia */
    County_51171 = "COUNTY_51171",
    /** Smyth, Virginia */
    County_51173 = "COUNTY_51173",
    /** Southampton, Virginia */
    County_51175 = "COUNTY_51175",
    /** Spotsylvania, Virginia */
    County_51177 = "COUNTY_51177",
    /** Stafford, Virginia */
    County_51179 = "COUNTY_51179",
    /** Surry, Virginia */
    County_51181 = "COUNTY_51181",
    /** Sussex, Virginia */
    County_51183 = "COUNTY_51183",
    /** Tazewell, Virginia */
    County_51185 = "COUNTY_51185",
    /** Warren, Virginia */
    County_51187 = "COUNTY_51187",
    /** Washington, Virginia */
    County_51191 = "COUNTY_51191",
    /** Westmoreland, Virginia */
    County_51193 = "COUNTY_51193",
    /** Wise, Virginia */
    County_51195 = "COUNTY_51195",
    /** Wythe, Virginia */
    County_51197 = "COUNTY_51197",
    /** York, Virginia */
    County_51199 = "COUNTY_51199",
    /** Alexandria City, Virginia */
    County_51510 = "COUNTY_51510",
    /** Bedford City, Virginia */
    County_51515 = "COUNTY_51515",
    /** Bristol City, Virginia */
    County_51520 = "COUNTY_51520",
    /** Buena Vista City, Virginia */
    County_51530 = "COUNTY_51530",
    /** Charlottesville City, Virginia */
    County_51540 = "COUNTY_51540",
    /** Chesapeake City, Virginia */
    County_51550 = "COUNTY_51550",
    /** Clifton Forge City, Virginia */
    County_51560 = "COUNTY_51560",
    /** Colonial Heights City, Virginia */
    County_51570 = "COUNTY_51570",
    /** Covington City, Virginia */
    County_51580 = "COUNTY_51580",
    /** Danville City, Virginia */
    County_51590 = "COUNTY_51590",
    /** Emporia City, Virginia */
    County_51595 = "COUNTY_51595",
    /** Fairfax City, Virginia */
    County_51600 = "COUNTY_51600",
    /** Falls Church City, Virginia */
    County_51610 = "COUNTY_51610",
    /** Franklin City, Virginia */
    County_51620 = "COUNTY_51620",
    /** Fredericksburg City, Virginia */
    County_51630 = "COUNTY_51630",
    /** Galax City, Virginia */
    County_51640 = "COUNTY_51640",
    /** Hampton City, Virginia */
    County_51650 = "COUNTY_51650",
    /** Harrisonburg City, Virginia */
    County_51660 = "COUNTY_51660",
    /** Hopewell City, Virginia */
    County_51670 = "COUNTY_51670",
    /** Lexington City, Virginia */
    County_51678 = "COUNTY_51678",
    /** Lynchburg City, Virginia */
    County_51680 = "COUNTY_51680",
    /** Manassas City, Virginia */
    County_51683 = "COUNTY_51683",
    /** Manassas Park City, Virginia */
    County_51685 = "COUNTY_51685",
    /** Martinsville City, Virginia */
    County_51690 = "COUNTY_51690",
    /** Newport News City, Virginia */
    County_51700 = "COUNTY_51700",
    /** Norfolk City, Virginia */
    County_51710 = "COUNTY_51710",
    /** Norton City, Virginia */
    County_51720 = "COUNTY_51720",
    /** Petersburg City, Virginia */
    County_51730 = "COUNTY_51730",
    /** Poquoson City, Virginia */
    County_51735 = "COUNTY_51735",
    /** Portsmouth City, Virginia */
    County_51740 = "COUNTY_51740",
    /** Radford, Virginia */
    County_51750 = "COUNTY_51750",
    /** Richmond City, Virginia */
    County_51760 = "COUNTY_51760",
    /** Roanoke City, Virginia */
    County_51770 = "COUNTY_51770",
    /** Salem City, Virginia */
    County_51775 = "COUNTY_51775",
    /** South Boston City, Virginia */
    County_51780 = "COUNTY_51780",
    /** Staunton City, Virginia */
    County_51790 = "COUNTY_51790",
    /** Suffolk City, Virginia */
    County_51800 = "COUNTY_51800",
    /** Virginia Beach City, Virginia */
    County_51810 = "COUNTY_51810",
    /** Waynesboro City, Virginia */
    County_51820 = "COUNTY_51820",
    /** Williamsburg City, Virginia */
    County_51830 = "COUNTY_51830",
    /** Winchester City, Virginia */
    County_51840 = "COUNTY_51840",
    /** Adams, Washington */
    County_53001 = "COUNTY_53001",
    /** Asotin, Washington */
    County_53003 = "COUNTY_53003",
    /** Benton, Washington */
    County_53005 = "COUNTY_53005",
    /** Chelan, Washington */
    County_53007 = "COUNTY_53007",
    /** Clallam, Washington */
    County_53009 = "COUNTY_53009",
    /** Clark, Washington */
    County_53011 = "COUNTY_53011",
    /** Columbia, Washington */
    County_53013 = "COUNTY_53013",
    /** Cowlitz, Washington */
    County_53015 = "COUNTY_53015",
    /** Douglas, Washington */
    County_53017 = "COUNTY_53017",
    /** Ferry, Washington */
    County_53019 = "COUNTY_53019",
    /** Franklin, Washington */
    County_53021 = "COUNTY_53021",
    /** Garfield, Washington */
    County_53023 = "COUNTY_53023",
    /** Grant, Washington */
    County_53025 = "COUNTY_53025",
    /** Grays Harbor, Washington */
    County_53027 = "COUNTY_53027",
    /** Island, Washington */
    County_53029 = "COUNTY_53029",
    /** Jefferson, Washington */
    County_53031 = "COUNTY_53031",
    /** King, Washington */
    County_53033 = "COUNTY_53033",
    /** Kitsap, Washington */
    County_53035 = "COUNTY_53035",
    /** Kittitas, Washington */
    County_53037 = "COUNTY_53037",
    /** Klickitat, Washington */
    County_53039 = "COUNTY_53039",
    /** Lewis, Washington */
    County_53041 = "COUNTY_53041",
    /** Lincoln, Washington */
    County_53043 = "COUNTY_53043",
    /** Mason, Washington */
    County_53045 = "COUNTY_53045",
    /** Okanogan, Washington */
    County_53047 = "COUNTY_53047",
    /** Pacific, Washington */
    County_53049 = "COUNTY_53049",
    /** Pend Oreille, Washington */
    County_53051 = "COUNTY_53051",
    /** Pierce, Washington */
    County_53053 = "COUNTY_53053",
    /** San Juan, Washington */
    County_53055 = "COUNTY_53055",
    /** Skagit, Washington */
    County_53057 = "COUNTY_53057",
    /** Skamania, Washington */
    County_53059 = "COUNTY_53059",
    /** Snohomish, Washington */
    County_53061 = "COUNTY_53061",
    /** Spokane, Washington */
    County_53063 = "COUNTY_53063",
    /** Stevens, Washington */
    County_53065 = "COUNTY_53065",
    /** Thurston, Washington */
    County_53067 = "COUNTY_53067",
    /** Wahkiakum, Washington */
    County_53069 = "COUNTY_53069",
    /** Walla Walla, Washington */
    County_53071 = "COUNTY_53071",
    /** Whatcom, Washington */
    County_53073 = "COUNTY_53073",
    /** Whitman, Washington */
    County_53075 = "COUNTY_53075",
    /** Yakima, Washington */
    County_53077 = "COUNTY_53077",
    /** Barbour, West Virginia */
    County_54001 = "COUNTY_54001",
    /** Berkeley, West Virginia */
    County_54003 = "COUNTY_54003",
    /** Boone, West Virginia */
    County_54005 = "COUNTY_54005",
    /** Braxton, West Virginia */
    County_54007 = "COUNTY_54007",
    /** Brooke, West Virginia */
    County_54009 = "COUNTY_54009",
    /** Cabell, West Virginia */
    County_54011 = "COUNTY_54011",
    /** Calhoun, West Virginia */
    County_54013 = "COUNTY_54013",
    /** Clay, West Virginia */
    County_54015 = "COUNTY_54015",
    /** Doddridge, West Virginia */
    County_54017 = "COUNTY_54017",
    /** Fayette, West Virginia */
    County_54019 = "COUNTY_54019",
    /** Gilmer, West Virginia */
    County_54021 = "COUNTY_54021",
    /** Grant, West Virginia */
    County_54023 = "COUNTY_54023",
    /** Greenbrier, West Virginia */
    County_54025 = "COUNTY_54025",
    /** Hampshire, West Virginia */
    County_54027 = "COUNTY_54027",
    /** Hancock, West Virginia */
    County_54029 = "COUNTY_54029",
    /** Hardy, West Virginia */
    County_54031 = "COUNTY_54031",
    /** Harrison, West Virginia */
    County_54033 = "COUNTY_54033",
    /** Jackson, West Virginia */
    County_54035 = "COUNTY_54035",
    /** Jefferson, West Virginia */
    County_54037 = "COUNTY_54037",
    /** Kanawha, West Virginia */
    County_54039 = "COUNTY_54039",
    /** Lewis, West Virginia */
    County_54041 = "COUNTY_54041",
    /** Lincoln, West Virginia */
    County_54043 = "COUNTY_54043",
    /** Logan, West Virginia */
    County_54045 = "COUNTY_54045",
    /** McDowell, West Virginia */
    County_54047 = "COUNTY_54047",
    /** Marion, West Virginia */
    County_54049 = "COUNTY_54049",
    /** Marshall, West Virginia */
    County_54051 = "COUNTY_54051",
    /** Mason, West Virginia */
    County_54053 = "COUNTY_54053",
    /** Mercer, West Virginia */
    County_54055 = "COUNTY_54055",
    /** Mineral, West Virginia */
    County_54057 = "COUNTY_54057",
    /** Mingo, West Virginia */
    County_54059 = "COUNTY_54059",
    /** Monongalia, West Virginia */
    County_54061 = "COUNTY_54061",
    /** Monroe, West Virginia */
    County_54063 = "COUNTY_54063",
    /** Morgan, West Virginia */
    County_54065 = "COUNTY_54065",
    /** Nicholas, West Virginia */
    County_54067 = "COUNTY_54067",
    /** Ohio, West Virginia */
    County_54069 = "COUNTY_54069",
    /** Pendleton, West Virginia */
    County_54071 = "COUNTY_54071",
    /** Pleasants, West Virginia */
    County_54073 = "COUNTY_54073",
    /** Pocahontas, West Virginia */
    County_54075 = "COUNTY_54075",
    /** Preston, West Virginia */
    County_54077 = "COUNTY_54077",
    /** Putnam, West Virginia */
    County_54079 = "COUNTY_54079",
    /** Raleigh, West Virginia */
    County_54081 = "COUNTY_54081",
    /** Randolph, West Virginia */
    County_54083 = "COUNTY_54083",
    /** Ritchie, West Virginia */
    County_54085 = "COUNTY_54085",
    /** Roane, West Virginia */
    County_54087 = "COUNTY_54087",
    /** Summers, West Virginia */
    County_54089 = "COUNTY_54089",
    /** Taylor, West Virginia */
    County_54091 = "COUNTY_54091",
    /** Tucker, West Virginia */
    County_54093 = "COUNTY_54093",
    /** Tyler, West Virginia */
    County_54095 = "COUNTY_54095",
    /** Upshur, West Virginia */
    County_54097 = "COUNTY_54097",
    /** Wayne, West Virginia */
    County_54099 = "COUNTY_54099",
    /** Webster, West Virginia */
    County_54101 = "COUNTY_54101",
    /** Wetzel, West Virginia */
    County_54103 = "COUNTY_54103",
    /** Wirt, West Virginia */
    County_54105 = "COUNTY_54105",
    /** Wood, West Virginia */
    County_54107 = "COUNTY_54107",
    /** Wyoming, West Virginia */
    County_54109 = "COUNTY_54109",
    /** Adams, Wisconsin */
    County_55001 = "COUNTY_55001",
    /** Ashland, Wisconsin */
    County_55003 = "COUNTY_55003",
    /** Barron, Wisconsin */
    County_55005 = "COUNTY_55005",
    /** Bayfield, Wisconsin */
    County_55007 = "COUNTY_55007",
    /** Brown, Wisconsin */
    County_55009 = "COUNTY_55009",
    /** Buffalo, Wisconsin */
    County_55011 = "COUNTY_55011",
    /** Burnett, Wisconsin */
    County_55013 = "COUNTY_55013",
    /** Calumet, Wisconsin */
    County_55015 = "COUNTY_55015",
    /** Chippewa, Wisconsin */
    County_55017 = "COUNTY_55017",
    /** Clark, Wisconsin */
    County_55019 = "COUNTY_55019",
    /** Columbia, Wisconsin */
    County_55021 = "COUNTY_55021",
    /** Crawford, Wisconsin */
    County_55023 = "COUNTY_55023",
    /** Dane, Wisconsin */
    County_55025 = "COUNTY_55025",
    /** Dodge, Wisconsin */
    County_55027 = "COUNTY_55027",
    /** Door, Wisconsin */
    County_55029 = "COUNTY_55029",
    /** Douglas, Wisconsin */
    County_55031 = "COUNTY_55031",
    /** Dunn, Wisconsin */
    County_55033 = "COUNTY_55033",
    /** Eau Claire, Wisconsin */
    County_55035 = "COUNTY_55035",
    /** Florence, Wisconsin */
    County_55037 = "COUNTY_55037",
    /** Fond Du Lac, Wisconsin */
    County_55039 = "COUNTY_55039",
    /** Forest, Wisconsin */
    County_55041 = "COUNTY_55041",
    /** Grant, Wisconsin */
    County_55043 = "COUNTY_55043",
    /** Green, Wisconsin */
    County_55045 = "COUNTY_55045",
    /** Green Lake, Wisconsin */
    County_55047 = "COUNTY_55047",
    /** Iowa, Wisconsin */
    County_55049 = "COUNTY_55049",
    /** Iron, Wisconsin */
    County_55051 = "COUNTY_55051",
    /** Jackson, Wisconsin */
    County_55053 = "COUNTY_55053",
    /** Jefferson, Wisconsin */
    County_55055 = "COUNTY_55055",
    /** Juneau, Wisconsin */
    County_55057 = "COUNTY_55057",
    /** Kenosha, Wisconsin */
    County_55059 = "COUNTY_55059",
    /** Kewaunee, Wisconsin */
    County_55061 = "COUNTY_55061",
    /** La Crosse, Wisconsin */
    County_55063 = "COUNTY_55063",
    /** Lafayette, Wisconsin */
    County_55065 = "COUNTY_55065",
    /** Langlade, Wisconsin */
    County_55067 = "COUNTY_55067",
    /** Lincoln, Wisconsin */
    County_55069 = "COUNTY_55069",
    /** Manitowoc, Wisconsin */
    County_55071 = "COUNTY_55071",
    /** Marathon, Wisconsin */
    County_55073 = "COUNTY_55073",
    /** Marinette, Wisconsin */
    County_55075 = "COUNTY_55075",
    /** Marquette, Wisconsin */
    County_55077 = "COUNTY_55077",
    /** Menominee, Wisconsin */
    County_55078 = "COUNTY_55078",
    /** Milwaukee, Wisconsin */
    County_55079 = "COUNTY_55079",
    /** Monroe, Wisconsin */
    County_55081 = "COUNTY_55081",
    /** Oconto, Wisconsin */
    County_55083 = "COUNTY_55083",
    /** Oneida, Wisconsin */
    County_55085 = "COUNTY_55085",
    /** Outagamie, Wisconsin */
    County_55087 = "COUNTY_55087",
    /** Ozaukee, Wisconsin */
    County_55089 = "COUNTY_55089",
    /** Pepin, Wisconsin */
    County_55091 = "COUNTY_55091",
    /** Pierce, Wisconsin */
    County_55093 = "COUNTY_55093",
    /** Polk, Wisconsin */
    County_55095 = "COUNTY_55095",
    /** Portage, Wisconsin */
    County_55097 = "COUNTY_55097",
    /** Price, Wisconsin */
    County_55099 = "COUNTY_55099",
    /** Racine, Wisconsin */
    County_55101 = "COUNTY_55101",
    /** Richland, Wisconsin */
    County_55103 = "COUNTY_55103",
    /** Rock, Wisconsin */
    County_55105 = "COUNTY_55105",
    /** Rusk, Wisconsin */
    County_55107 = "COUNTY_55107",
    /** St Croix, Wisconsin */
    County_55109 = "COUNTY_55109",
    /** Sauk, Wisconsin */
    County_55111 = "COUNTY_55111",
    /** Sawyer, Wisconsin */
    County_55113 = "COUNTY_55113",
    /** Shawano, Wisconsin */
    County_55115 = "COUNTY_55115",
    /** Sheboygan, Wisconsin */
    County_55117 = "COUNTY_55117",
    /** Taylor, Wisconsin */
    County_55119 = "COUNTY_55119",
    /** Trempealeau, Wisconsin */
    County_55121 = "COUNTY_55121",
    /** Vernon, Wisconsin */
    County_55123 = "COUNTY_55123",
    /** Vilas, Wisconsin */
    County_55125 = "COUNTY_55125",
    /** Walworth, Wisconsin */
    County_55127 = "COUNTY_55127",
    /** Washburn, Wisconsin */
    County_55129 = "COUNTY_55129",
    /** Washington, Wisconsin */
    County_55131 = "COUNTY_55131",
    /** Waukesha, Wisconsin */
    County_55133 = "COUNTY_55133",
    /** Waupaca, Wisconsin */
    County_55135 = "COUNTY_55135",
    /** Waushara, Wisconsin */
    County_55137 = "COUNTY_55137",
    /** Winnebago, Wisconsin */
    County_55139 = "COUNTY_55139",
    /** Wood, Wisconsin */
    County_55141 = "COUNTY_55141",
    /** Albany, Wyoming */
    County_56001 = "COUNTY_56001",
    /** Big Horn, Wyoming */
    County_56003 = "COUNTY_56003",
    /** Campbell, Wyoming */
    County_56005 = "COUNTY_56005",
    /** Carbon, Wyoming */
    County_56007 = "COUNTY_56007",
    /** Converse, Wyoming */
    County_56009 = "COUNTY_56009",
    /** Crook, Wyoming */
    County_56011 = "COUNTY_56011",
    /** Fremont, Wyoming */
    County_56013 = "COUNTY_56013",
    /** Goshen, Wyoming */
    County_56015 = "COUNTY_56015",
    /** Hot Springs, Wyoming */
    County_56017 = "COUNTY_56017",
    /** Johnson, Wyoming */
    County_56019 = "COUNTY_56019",
    /** Laramie, Wyoming */
    County_56021 = "COUNTY_56021",
    /** Lincoln, Wyoming */
    County_56023 = "COUNTY_56023",
    /** Natrona, Wyoming */
    County_56025 = "COUNTY_56025",
    /** Niobrara, Wyoming */
    County_56027 = "COUNTY_56027",
    /** Park, Wyoming */
    County_56029 = "COUNTY_56029",
    /** Platte, Wyoming */
    County_56031 = "COUNTY_56031",
    /** Sheridan, Wyoming */
    County_56033 = "COUNTY_56033",
    /** Sublette, Wyoming */
    County_56035 = "COUNTY_56035",
    /** Sweetwater, Wyoming */
    County_56037 = "COUNTY_56037",
    /** Teton, Wyoming */
    County_56039 = "COUNTY_56039",
    /** Uinta, Wyoming */
    County_56041 = "COUNTY_56041",
    /** Washakie, Wyoming */
    County_56043 = "COUNTY_56043",
    /** Weston, Wyoming */
    County_56045 = "COUNTY_56045"
}
/** A usage based billing policy. */
export type UsageBasedBillingPolicy = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'UsageBasedBillingPolicy';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An address list defines some criteria by which to group accounts for network policy enforcement. */
    address_lists: AddressListConnection;
    /** Whether or not a customer can purchase additional data usage capacity during a billing period. */
    allow_purchase_of_additional_capacity_during_billing_period: Scalars['Boolean']['output'];
    /** Whether or not to assess charges for usage over the bandwidth limit at the end of the billing period. */
    assess_charges_at_end_of_billing_period: Scalars['Boolean']['output'];
    /** The available data usage in this policy, measured in gigabytes. */
    cap_in_gigabytes: Scalars['Int']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Details regarding a specific data `Service`. */
    data_service_details: DataServiceDetailConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A RADIUS group. */
    radius_groups: RadiusGroupConnection;
    /** Whether or not rollover is enabled. */
    rollover_enabled: Scalars['Boolean']['output'];
    /** Whether or not rollover expiration is enabled. */
    rollover_expiration_enabled?: Maybe<Scalars['Boolean']['output']>;
    /** Rollover expires after this many months, if rollover expiration is enabled. */
    rollover_expiration_months?: Maybe<Scalars['Int']['output']>;
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A period of free time in a `UsageBasedBillingPolicy`. */
    usage_based_billing_policy_free_periods: UsageBasedBillingPolicyFreePeriodConnection;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyAddress_ListsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyData_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    download_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    technology_code?: InputMaybe<TechnologyCode>;
    telrad_global_service_profile_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    upload_speed_kilobits_per_second?: InputMaybe<Scalars['Int']['input']>;
    usage_based_billing_policy_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyRadius_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_status?: InputMaybe<AddressListAccountStatus>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    delinquency?: InputMaybe<AddressListDelinquency>;
    fall_through?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A usage based billing policy. */
export type UsageBasedBillingPolicyUsage_Based_Billing_Policy_Free_PeriodsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    day?: InputMaybe<Day>;
    end?: InputMaybe<Scalars['Time']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Time']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    usage_based_billing_policy_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `UsageBasedBillingPolicyConnection` type. */
export type UsageBasedBillingPolicyConnection = {
    __typename: 'UsageBasedBillingPolicyConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<UsageBasedBillingPolicy>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A period of free time in a `UsageBasedBillingPolicy`. */
export type UsageBasedBillingPolicyFreePeriod = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'UsageBasedBillingPolicyFreePeriod';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A day. */
    day: Day;
    /** The end. */
    end: Scalars['Time']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start. */
    start: Scalars['Time']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A usage based billing policy. */
    usage_based_billing_policy?: Maybe<UsageBasedBillingPolicy>;
    /** The ID of a `UsageBasedBillingPolicy`. */
    usage_based_billing_policy_id: Scalars['Int64Bit']['output'];
};
/** A period of free time in a `UsageBasedBillingPolicy`. */
export type UsageBasedBillingPolicyFreePeriodAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A period of free time in a `UsageBasedBillingPolicy`. */
export type UsageBasedBillingPolicyFreePeriodLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A period of free time in a `UsageBasedBillingPolicy`. */
export type UsageBasedBillingPolicyFreePeriodNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A period of free time in a `UsageBasedBillingPolicy`. */
export type UsageBasedBillingPolicyFreePeriodUsage_Based_Billing_PolicyArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    allow_purchase_of_additional_capacity_during_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    assess_charges_at_end_of_billing_period?: InputMaybe<Scalars['Boolean']['input']>;
    cap_in_gigabytes?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollover_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    rollover_expiration_months?: InputMaybe<Scalars['Int']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `UsageBasedBillingPolicyFreePeriodConnection` type. */
export type UsageBasedBillingPolicyFreePeriodConnection = {
    __typename: 'UsageBasedBillingPolicyFreePeriodConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<UsageBasedBillingPolicyFreePeriod>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A user that can login to Sonar. */
export type User = AccessloggableInterface & EmailableInterface & GenericinventoryitemableInterface & InventoryitemableInterface & LoggableInterface & SmsableInterface & {
    __typename: 'User';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** An alerting rotation. */
    alerting_rotations: AlertingRotationConnection;
    /** An iCalendar calendar. */
    calendar_icals: CalendarIcalConnection;
    /** Whether or not the user has completed the setup process. */
    completed_setup: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A debit. */
    debits: DebitConnection;
    /** A discount. */
    discounts: DiscountConnection;
    /** An email address. */
    email_address: Scalars['EmailAddress']['output'];
    /** An email. */
    emails: EmailConnection;
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** Whether or not this user is a Sonar employee. */
    is_sonar_staff?: Maybe<Scalars['Boolean']['output']>;
    /** The record of a check in to a `Job`. */
    job_check_ins: JobCheckInConnection;
    /** A job, typically in the field. */
    jobs: JobConnection;
    /** A supported language. */
    language?: Maybe<Language>;
    /** A log entry. */
    logs: LogConnection;
    /** A mobile phone number. This will be used to send SMS messages. */
    mobile_number?: Maybe<Scalars['Numeric']['output']>;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** The relationship between an order group and a user. */
    order_group_users: OrderGroupUserConnection;
    /** A single PDF containing multiple invoices for printing. */
    printed_invoice_batches: PrintedInvoiceBatchConnection;
    /** The publicly viewable name of this user. */
    public_name: Scalars['String']['output'];
    /** A record of a refund applied to a `Payment`. */
    refunded_payments: RefundedPaymentConnection;
    /** A record a `Payment` reversal. */
    reversed_payments: ReversedPaymentConnection;
    /** A role defines the permission set that a user has. */
    role?: Maybe<Role>;
    /** The ID of a Role. */
    role_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The geographical point that a technician starts or ends their day at. */
    schedule_addresses: ScheduleAddressConnection;
    /** Availability for `Job`s to be scheduled. */
    schedule_availabilities: ScheduleAvailabilityConnection;
    /** An override to a particular day and time a `ScheduleBlocker` would otherwise cover. */
    schedule_blocker_overrides: ScheduleBlockerOverrideConnection;
    /** An event that blocks off part of a calendar otherwise availability due to `ScheduleAvailability`. */
    schedule_blockers: ScheduleBlockerConnection;
    /** Time off that removes availability from a `ScheduleAvailability`. */
    schedule_time_offs: ScheduleTimeOffConnection;
    /** A user-defined search filter that applies to a specific type of entity. */
    search_filters: SearchFilterConnection;
    /** An SMS outbound message. */
    sms_outbound_messages: SmsOutboundMessageConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A `StoredView` associated with a `User`. */
    stored_view_users: StoredViewUserConnection;
    /** A subscription to notifications for an entity. */
    subscriptions: SubscriptionConnection;
    /** Super admins receive all system permissions automatically, regardless of their role. */
    super_admin: Scalars['Boolean']['output'];
    /** A task. */
    tasks: TaskConnection;
    /** A comment on a `Ticket`. */
    ticket_comments: TicketCommentConnection;
    /** A ticket group. */
    ticket_groups: TicketGroupConnection;
    /** A reply on a `Ticket`. */
    ticket_replies: TicketReplyConnection;
    /** A ticket. */
    tickets: TicketConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A username, used for authentication. */
    username: Scalars['String']['output'];
    /** A vehicle. */
    vehicles: VehicleConnection;
};
/** A user that can login to Sonar. */
export type UserAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserAlerting_RotationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_accounts?: InputMaybe<Scalars['Boolean']['input']>;
    all_inventory_models?: InputMaybe<Scalars['Boolean']['input']>;
    all_network_sites?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    down_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    down_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    warning_time_in_minutes_before_alerting?: InputMaybe<Scalars['Int']['input']>;
    warning_time_in_minutes_before_repeat?: InputMaybe<Scalars['Int']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** A user that can login to Sonar. */
export type UserCalendar_IcalsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    url?: InputMaybe<Scalars['URL']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserDebitsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    invoice_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    linked_debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    number_of_months?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserDiscountsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    amount_remaining?: InputMaybe<Scalars['Int']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    debit_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code?: InputMaybe<Scalars['String']['input']>;
    general_ledger_code_description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    minutes?: InputMaybe<Scalars['Float']['input']>;
    paginator?: InputMaybe<Paginator>;
    prorated_from?: InputMaybe<Scalars['Date']['input']>;
    prorated_to?: InputMaybe<Scalars['Date']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_from?: InputMaybe<Scalars['Int']['input']>;
    quantity_prorated_to?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reversed?: InputMaybe<Scalars['Boolean']['input']>;
    reversed_at?: InputMaybe<Scalars['Datetime']['input']>;
    reversed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    service_name?: InputMaybe<Scalars['String']['input']>;
    service_transaction_type?: InputMaybe<ServiceTransactionType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_committed?: InputMaybe<Scalars['Boolean']['input']>;
    tax_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserJob_Check_InsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    check_in_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    check_out_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    checked_in_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    checked_out_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserJobsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completed_successfully?: InputMaybe<Scalars['Boolean']['input']>;
    completion_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    completion_notes?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    job_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    jobbable_type?: InputMaybe<JobbableType>;
    length_in_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    skips_validation?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserOrder_Group_UsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_approver?: InputMaybe<Scalars['Boolean']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserPrinted_Invoice_BatchesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserRefunded_PaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    payment_tracker_id?: InputMaybe<Scalars['String']['input']>;
    processor_response_message?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    transaction_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserReversed_PaymentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserRoleArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    applied_permissions?: InputMaybe<Array<InputMaybe<Permission>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserSchedule_AddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<ScheduleAddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A user that can login to Sonar. */
export type UserSchedule_AvailabilitiesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    available?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geofence_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** A user that can login to Sonar. */
export type UserSchedule_Blocker_OverridesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    schedule_blocker_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserSchedule_BlockersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    infinite_repetitions?: InputMaybe<Scalars['Boolean']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    repetitions?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_date?: InputMaybe<Scalars['Date']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    weeks_between_repetitions?: InputMaybe<Scalars['Int']['input']>;
};
/** A user that can login to Sonar. */
export type UserSchedule_Time_OffsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    end_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserSearch_FiltersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    all_users?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_type?: InputMaybe<Scalars['String']['input']>;
    filter?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserSms_Outbound_MessagesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    category?: InputMaybe<SmsOutboundCategory>;
    cost_in_hundredths?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    destination_country?: InputMaybe<Scalars['String']['input']>;
    error_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_status_check?: InputMaybe<Scalars['Datetime']['input']>;
    message_text?: InputMaybe<Scalars['String']['input']>;
    mobile_number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider_message_id?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    segments?: InputMaybe<Scalars['Int']['input']>;
    smsable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    smsable_type?: InputMaybe<SmsableType>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<SmsOutboundStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserStored_View_UsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    location?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    stored_view_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserSubscriptionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_suspended?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subscribable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    subscribable_type?: InputMaybe<SubscribableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserTasksArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completable_type?: InputMaybe<CompletableType>;
    complete?: InputMaybe<Scalars['Boolean']['input']>;
    completed_at?: InputMaybe<Scalars['Datetime']['input']>;
    completed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    completion_type?: InputMaybe<TaskCompletionType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    due?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    task?: InputMaybe<Scalars['Text']['input']>;
    taskable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taskable_type?: InputMaybe<TaskableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserTicket_CommentsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserTicket_GroupsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    private?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A user that can login to Sonar. */
export type UserTicket_RepliesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    author?: InputMaybe<Scalars['String']['input']>;
    author_email?: InputMaybe<Scalars['EmailAddress']['input']>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    headers?: InputMaybe<Scalars['Text']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    incoming?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    raw_body?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    signature?: InputMaybe<Scalars['Text']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserTicketsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    closed_at?: InputMaybe<Scalars['Datetime']['input']>;
    closed_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['Text']['input']>;
    due_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_mailbox_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    parent_ticket_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    priority?: InputMaybe<TicketPriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    spam_score?: InputMaybe<Scalars['Float']['input']>;
    status?: InputMaybe<TicketStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    ticket_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    ticketable_type?: InputMaybe<TicketableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A user that can login to Sonar. */
export type UserVehiclesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    gps_tracking_always?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_friday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_monday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_saturday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_sunday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_thursday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_tuesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_wednesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_end_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    gps_tracking_start_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_timezone?: InputMaybe<Timezone>;
    gps_tracking_uid?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    manufacturer?: InputMaybe<Scalars['String']['input']>;
    model?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vin?: InputMaybe<Scalars['String']['input']>;
    year?: InputMaybe<Scalars['Int']['input']>;
};
/** The connection wrapper around the `UserConnection` type. */
export type UserConnection = {
    __typename: 'UserConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<User>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
export type UserPreference = {
    __typename: 'UserPreference';
    /** Whether or not the navigation bar on the side is loaded in an expanded state. */
    navigation_expanded?: Maybe<Scalars['Boolean']['output']>;
    /** The number of records shown in a paginated table at once. */
    table_paginator_size?: Maybe<Scalars['Int64Bit']['output']>;
    /** Saved settings for the web application. This field is meant to be user configurable. */
    ui_preferences?: Maybe<Scalars['Text']['output']>;
};
/** types.validated_address */
export type ValidatedAddress = {
    __typename: 'ValidatedAddress';
    /** A city. */
    city: Scalars['String']['output'];
    /** A two character country code. */
    country: Country;
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['output'];
    /** Address line 1. */
    line1: Scalars['String']['output'];
    /** Address line 2. */
    line2?: Maybe<Scalars['String']['output']>;
    /** A decimal latitude. */
    longitude: Scalars['Longitude']['output'];
    /** A state, province, or other country subdivision. */
    subdivision: Subdivision;
    /** A ZIP or postal code. */
    zip: Scalars['String']['output'];
};
/** A vehicle. */
export type Vehicle = AccessloggableInterface & GenericinventoryitemableInterface & GenericinventoryitemactionloggableInterface & InventoryitemableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Vehicle';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A log of an action taken against a set of generic inventory items. */
    generic_inventory_item_action_logs: GenericInventoryItemActionLogConnection;
    /** A generic inventory item. */
    generic_inventory_items: GenericInventoryItemConnection;
    /** A geo-point. */
    geopoint?: Maybe<Scalars['Geopoint']['output']>;
    /** Whether or not to always track the vehicle. */
    gps_tracking_always: Scalars['Boolean']['output'];
    /** If not always, then track on Friday. */
    gps_tracking_day_friday: Scalars['Boolean']['output'];
    /** If not always, then track on Monday. */
    gps_tracking_day_monday: Scalars['Boolean']['output'];
    /** If not always, then track on Saturday. */
    gps_tracking_day_saturday: Scalars['Boolean']['output'];
    /** If not always, then track on Sunday. */
    gps_tracking_day_sunday: Scalars['Boolean']['output'];
    /** If not always, then track on Thursday. */
    gps_tracking_day_thursday: Scalars['Boolean']['output'];
    /** If not always, then track on Tuesday. */
    gps_tracking_day_tuesday: Scalars['Boolean']['output'];
    /** If not always, then track on Wednesday. */
    gps_tracking_day_wednesday: Scalars['Boolean']['output'];
    /** Whether or not GPS Tracking enabled for vehicle. */
    gps_tracking_enabled: Scalars['Boolean']['output'];
    /** If not always, end time for tracking. */
    gps_tracking_end_time: Scalars['Time']['output'];
    /** A `GpsTrackingProvider`. */
    gps_tracking_provider?: Maybe<GpsTrackingProvider>;
    /** A `GpsTrackingProvider` ID. */
    gps_tracking_provider_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** If not always, start time for tracking. */
    gps_tracking_start_time: Scalars['Time']['output'];
    /** If not always, timezone for start and end times. */
    gps_tracking_timezone?: Maybe<Timezone>;
    /** A GPS Tracking Provider vehicle unique identifier. */
    gps_tracking_uid?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An inventory item. */
    inventory_items: InventoryItemConnection;
    /** A log entry. */
    logs: LogConnection;
    /** The manufacturer. */
    manufacturer?: Maybe<Scalars['String']['output']>;
    /** The model. */
    model?: Maybe<Scalars['String']['output']>;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    users: UserConnection;
    /** A history of where the vehicle has travelled. */
    vehicle_location_histories: VehicleLocationHistoryConnection;
    /** The vehicle identification number. */
    vin?: Maybe<Scalars['String']['output']>;
    /** A year. */
    year?: Maybe<Scalars['Int']['output']>;
};
/** A vehicle. */
export type VehicleAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A vehicle. */
export type VehicleGeneric_Inventory_Item_Action_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    action?: InputMaybe<GenericInventoryItemActionLogAction>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemactionloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemactionloggable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    purchase_price?: InputMaybe<Scalars['Float']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A vehicle. */
export type VehicleGeneric_Inventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    genericinventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    genericinventoryitemable_type?: InputMaybe<InventoryitemableType>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A vehicle. */
export type VehicleGps_Tracking_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    oauth_required?: InputMaybe<Scalars['Boolean']['input']>;
    paginator?: InputMaybe<Paginator>;
    provider?: InputMaybe<GpsTrackingProviderType>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A vehicle. */
export type VehicleInventory_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    claimed_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    deployment_type_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    flapping?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    icmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    icmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    icmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    icmp_threshold_violation?: InputMaybe<InventoryItemIcmpThresholdViolation>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_model_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventoryitemable_type?: InputMaybe<InventoryitemableType>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    metadata?: InputMaybe<Scalars['String']['input']>;
    overall_status?: InputMaybe<InventoryItemDeviceStatus>;
    paginator?: InputMaybe<Paginator>;
    parent_inventory_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    preseem_status?: InputMaybe<PreseemStatus>;
    purchase_order_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_price?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    snmp_device_status?: InputMaybe<InventoryItemDeviceStatus>;
    snmp_status_flap_count?: InputMaybe<Scalars['Int']['input']>;
    snmp_status_last_change?: InputMaybe<Scalars['Datetime']['input']>;
    snmp_status_message?: InputMaybe<Scalars['String']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<InventoryItemStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A vehicle. */
export type VehicleLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A vehicle. */
export type VehicleNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A vehicle. */
export type VehicleUsersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A vehicle. */
export type VehicleVehicle_Location_HistoriesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    odometer?: InputMaybe<Scalars['Int']['input']>;
    odometer_um?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    speed?: InputMaybe<Scalars['Int']['input']>;
    speed_um?: InputMaybe<Scalars['String']['input']>;
    status?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vehicle_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `VehicleConnection` type. */
export type VehicleConnection = {
    __typename: 'VehicleConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Vehicle>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A history of where the vehicle has travelled. */
export type VehicleLocationHistory = AccessloggableInterface & LoggableInterface & {
    __typename: 'VehicleLocationHistory';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['output'];
    /** Odometer without unit of measure. */
    odometer?: Maybe<Scalars['Int']['output']>;
    /** Unit of measure for odometer. */
    odometer_um?: Maybe<Scalars['String']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Speed without unit of measure. */
    speed?: Maybe<Scalars['Int']['output']>;
    /** Unit of measure for speed. */
    speed_um?: Maybe<Scalars['String']['output']>;
    /** The status. */
    status?: Maybe<Scalars['String']['output']>;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A vehicle. */
    vehicle?: Maybe<Vehicle>;
    /** The ID of a `Vehicle`. */
    vehicle_id: Scalars['Int64Bit']['output'];
};
/** A history of where the vehicle has travelled. */
export type VehicleLocationHistoryAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A history of where the vehicle has travelled. */
export type VehicleLocationHistoryLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A history of where the vehicle has travelled. */
export type VehicleLocationHistoryVehicleArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    geopoint?: InputMaybe<Scalars['Geopoint']['input']>;
    gps_tracking_always?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_friday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_monday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_saturday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_sunday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_thursday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_tuesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_day_wednesday?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_enabled?: InputMaybe<Scalars['Boolean']['input']>;
    gps_tracking_end_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    gps_tracking_start_time?: InputMaybe<Scalars['Time']['input']>;
    gps_tracking_timezone?: InputMaybe<Timezone>;
    gps_tracking_uid?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    manufacturer?: InputMaybe<Scalars['String']['input']>;
    model?: InputMaybe<Scalars['String']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vin?: InputMaybe<Scalars['String']['input']>;
    year?: InputMaybe<Scalars['Int']['input']>;
};
/** The connection wrapper around the `VehicleLocationHistoryConnection` type. */
export type VehicleLocationHistoryConnection = {
    __typename: 'VehicleLocationHistoryConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VehicleLocationHistory>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A third party vendor of inventory models. */
export type Vendor = AccessloggableInterface & AddressableInterface & ContactableInterface & EmailableInterface & FileableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'Vendor';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A geographical address. */
    addresses: AddressConnection;
    /** Archived vendors may not be used for creating new Purchase Orders or Product Requests. */
    archived: Scalars['Boolean']['output'];
    /** Determines if approved purchase orders for this vendor should automatically dispatch an email to the vendor. */
    automate_approved_purchase_orders: Scalars['Boolean']['output'];
    /** A contact person. */
    contacts: ContactConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The currency used for all transactions with this vendor. */
    currency: Currency;
    /** An email. */
    emails: EmailConnection;
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The terms of payment for deliveries from this vendor. */
    payment_terms: PaymentTerm;
    /** A purchase order for items from a third party vendor. */
    purchase_orders: PurchaseOrderConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax. */
    taxes: TaxConnection;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** An item that can be purchased from a particular vendor. */
    vendor_items: VendorItemConnection;
};
/** A third party vendor of inventory models. */
export type VendorAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorAddressesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    address_status_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addressable_type?: InputMaybe<AddressableType>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    anchor_address_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    avalara_pcode?: InputMaybe<Scalars['String']['input']>;
    billing_default_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    census_year?: InputMaybe<Scalars['Int']['input']>;
    city?: InputMaybe<Scalars['String']['input']>;
    country?: InputMaybe<Country>;
    county?: InputMaybe<UsCounty>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    fips?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_anchor?: InputMaybe<Scalars['Boolean']['input']>;
    latitude?: InputMaybe<Scalars['Latitude']['input']>;
    line1?: InputMaybe<Scalars['String']['input']>;
    line2?: InputMaybe<Scalars['String']['input']>;
    longitude?: InputMaybe<Scalars['Longitude']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    serviceable?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    subdivision?: InputMaybe<Subdivision>;
    timezone?: InputMaybe<Timezone>;
    type?: InputMaybe<AddressType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    zip?: InputMaybe<Scalars['String']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorContactsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    contactable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    contactable_type?: InputMaybe<ContactableType>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    language?: InputMaybe<Language>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role?: InputMaybe<Scalars['String']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorEmailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    body?: InputMaybe<Scalars['Text']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    emailable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    emailable_type?: InputMaybe<EmailableType>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reject_reason?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<EmailStatus>;
    subject?: InputMaybe<Scalars['String']['input']>;
    to_name?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorPurchase_OrdersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    approved_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    canceled_at?: InputMaybe<Scalars['Datetime']['input']>;
    canceled_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    created_by_user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    currency?: InputMaybe<Currency>;
    external_message?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inventory_location_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_paid?: InputMaybe<Scalars['Boolean']['input']>;
    last_status_change?: InputMaybe<Scalars['Datetime']['input']>;
    order_group_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    order_number?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendor_name?: InputMaybe<Scalars['String']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorTaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A third party vendor of inventory models. */
export type VendorVendor_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    retail_item?: InputMaybe<Scalars['Boolean']['input']>;
    retail_item_price?: InputMaybe<Scalars['Int']['input']>;
    retail_item_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    vendoritemable_type?: InputMaybe<VendoritemableType>;
};
/** The connection wrapper around the `VendorConnection` type. */
export type VendorConnection = {
    __typename: 'VendorConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Vendor>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItem = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'VendorItem';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The relationship between an `Account` and a `Service`. */
    account_service?: Maybe<AccountService>;
    /** Archived vendor items may not be used for creating new purchase orders or product requests. */
    archived: Scalars['Boolean']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** The relationship between a `Package` and a `Service`. */
    package_service?: Maybe<PackageService>;
    /** Part number used by the vendor to identify this vendor item. */
    part_number?: Maybe<Scalars['String']['output']>;
    /** The purchase price of this item from the vendor. */
    price: Scalars['Int']['output'];
    /** A line item on a purchase order. */
    purchase_order_items: PurchaseOrderItemConnection;
    /** Number of inventory models that are included in a single unit of this vendors product. */
    quantity_per_unit: Scalars['Int']['output'];
    /** Flag for vendor items that should create a one-time service for retail sale to customers. */
    retail_item: Scalars['Boolean']['output'];
    /** The price of the one-time service created for this vendor item */
    retail_item_price?: Maybe<Scalars['Int']['output']>;
    /** A one-time service associated with a vendor item. */
    retail_item_service?: Maybe<Service>;
    /** The ID of the one-time service created when this vendor item was created. */
    retail_item_service_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A third party vendor of inventory models. */
    vendor?: Maybe<Vendor>;
    /** The ID of the vendor that sells this item */
    vendor_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** An entity that is associated to a vendor item. */
    vendoritemable?: Maybe<VendoritemableInterface>;
    /** The ID of the entity that is referred to by this vendor item. */
    vendoritemable_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The type of entity that is referred to by this vendor item. */
    vendoritemable_type?: Maybe<VendoritemableType>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemAccount_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    data_usage_last_calculated_date?: InputMaybe<Scalars['Date']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name_override?: InputMaybe<Scalars['String']['input']>;
    next_bill_date?: InputMaybe<Scalars['Date']['input']>;
    number_of_times_billed?: InputMaybe<Scalars['Int']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    unique_package_relationship_id?: InputMaybe<Scalars['String']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemPackage_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    package_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemPurchase_Order_ItemsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    calculated_tax?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    generic_quantity_received?: InputMaybe<Scalars['Int']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    list_order?: InputMaybe<Scalars['Int']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    part_number?: InputMaybe<Scalars['String']['input']>;
    price?: InputMaybe<Scalars['Int64Bit']['input']>;
    purchase_order_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    quantity_per_unit?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<PurchaseOrderItemStatus>;
    units?: InputMaybe<Scalars['Int']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    vendor_item_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemRetail_Item_ServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemVendorArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    archived?: InputMaybe<Scalars['Boolean']['input']>;
    automate_approved_purchase_orders?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    currency?: InputMaybe<Currency>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    payment_terms?: InputMaybe<PaymentTerm>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An item that can be purchased from a particular vendor. */
export type VendorItemVendoritemableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `VendorItemConnection` type. */
export type VendorItemConnection = {
    __typename: 'VendorItemConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VendorItem>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An entity that has a `Vendor Item` associated with it. */
export type VendoritemableInterface = {
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
};
/** An entity that can have a `Vendor Item` associated with it. */
export declare enum VendoritemableType {
    /** Inventory Model */
    InventoryModel = "InventoryModel",
    /** Non-Inventory Item */
    NonInventoryItem = "NonInventoryItem"
}
/** types.vertex */
export type Vertex = {
    __typename: 'Vertex';
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['output'];
    /** A decimal longitude. */
    longitude: Scalars['Latitude']['output'];
};
/** The connection wrapper around the `Vertex` type. */
export type VertexConnection = {
    __typename: 'VertexConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<Vertex>>;
};
/** The input object that defines the fields for the createGeofence mutation. */
export type VertexMutationInput = {
    /** A decimal latitude. */
    latitude: Scalars['Latitude']['input'];
    /** A decimal longitude. */
    longitude: Scalars['Longitude']['input'];
};
/** A `VoiceProvider`. */
export type VoiceProvider = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'VoiceProvider';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A recipe for importing call detail records (CDRs). */
    call_detail_record_import_recipes: CallDetailRecordImportRecipeConnection;
    /** An import of call detail records (CDRs). */
    call_detail_record_imports: CallDetailRecordImportConnection;
    /** A call detail record (CDR). */
    call_detail_records: CallDetailRecordConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A recipe for importing DIDs. */
    did_import_recipes: DidImportRecipeConnection;
    /** A direct inward dial (DID). */
    dids: DidConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A recipe for importing voice provider rates. */
    voice_provider_rate_import_recipes: VoiceProviderRateImportRecipeConnection;
    /** An import of voice provider rates. */
    voice_provider_rate_imports: VoiceProviderRateImportConnection;
    /** A voice provider rate. */
    voice_provider_rates: VoiceProviderRateConnection;
};
/** A `VoiceProvider`. */
export type VoiceProviderAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderCall_Detail_Record_Import_RecipesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderCall_Detail_Record_ImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    call_data_record_import_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Text']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<AsyncImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderCall_Detail_RecordsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Float']['input']>;
    charge_rate?: InputMaybe<Scalars['Float']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    direction?: InputMaybe<CallDetailRecordDirection>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    length_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    matched_prefix?: InputMaybe<Scalars['String']['input']>;
    monthly_billing_completion_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    originating_number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix_type?: InputMaybe<CallDetailRecordPrefixType>;
    receiving_number?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    started_at?: InputMaybe<Scalars['Datetime']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderDid_Import_RecipesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderDidsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    number?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate_center_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderVoice_Provider_Rate_Import_RecipesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    charge_percent?: InputMaybe<Scalars['Float']['input']>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Clob']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    flatfile_batch_identifier?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    hash?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    progress?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    start_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    status?: InputMaybe<ImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderVoice_Provider_Rate_ImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    charge_percent?: InputMaybe<Scalars['Float']['input']>;
    clean_records?: InputMaybe<Scalars['Int']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    errors?: InputMaybe<Scalars['Text']['input']>;
    failed_records?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<AsyncImportStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A `VoiceProvider`. */
export type VoiceProviderVoice_Provider_RatesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    base_rate?: InputMaybe<Scalars['Float']['input']>;
    charge_percent?: InputMaybe<Scalars['Float']['input']>;
    charge_rate?: InputMaybe<Scalars['Float']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_provider_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `VoiceProviderConnection` type. */
export type VoiceProviderConnection = {
    __typename: 'VoiceProviderConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceProvider>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A voice provider rate. */
export type VoiceProviderRate = AccessloggableInterface & LoggableInterface & {
    __typename: 'VoiceProviderRate';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The rate that is imported from a rate deck. */
    base_rate: Scalars['Float']['output'];
    /** The percentage over the base rate to charge the customer. */
    charge_percent: Scalars['Float']['output'];
    /** The rate that is charged to a customer. */
    charge_rate: Scalars['Float']['output'];
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The description for the rate. */
    description?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The prefix for the rate. */
    prefix: Scalars['String']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** A voice provider rate. */
export type VoiceProviderRateAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A voice provider rate. */
export type VoiceProviderRateLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A voice provider rate. */
export type VoiceProviderRateVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `VoiceProviderRateConnection` type. */
export type VoiceProviderRateConnection = {
    __typename: 'VoiceProviderRateConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceProviderRate>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An import of voice provider rates. */
export type VoiceProviderRateImport = AccessloggableInterface & FileableInterface & LoggableInterface & NoteableInterface & NotifiableInterface & {
    __typename: 'VoiceProviderRateImport';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The percentage over the base rate to charge the customer. */
    charge_percent: Scalars['Float']['output'];
    /** How many records passed validation checks during import. */
    clean_records?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Any errors encountered for this import. */
    errors?: Maybe<Scalars['Text']['output']>;
    /** How many records did not pass validation checks during import. */
    failed_records?: Maybe<Scalars['Int']['output']>;
    /** A file. */
    files: FileConnection;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** A `Notification`. */
    notifications: NotificationConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status: AsyncImportStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** An import of voice provider rates. */
export type VoiceProviderRateImportAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of voice provider rates. */
export type VoiceProviderRateImportFilesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    file_size_in_bytes?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    fileable_type?: InputMaybe<FileableType>;
    filename?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    mime_type?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    primary_image?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of voice provider rates. */
export type VoiceProviderRateImportLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of voice provider rates. */
export type VoiceProviderRateImportNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of voice provider rates. */
export type VoiceProviderRateImportNotificationsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_read?: InputMaybe<Scalars['Boolean']['input']>;
    notifiable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    notifiable_type?: InputMaybe<NotifiableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<NotificationType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An import of voice provider rates. */
export type VoiceProviderRateImportVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `VoiceProviderRateImportConnection` type. */
export type VoiceProviderRateImportConnection = {
    __typename: 'VoiceProviderRateImportConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceProviderRateImport>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A recipe for importing voice provider rates. */
export type VoiceProviderRateImportRecipe = AccessloggableInterface & ImportrecipeableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'VoiceProviderRateImportRecipe';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The percentage over the base rate to charge the customer. */
    charge_percent: Scalars['Float']['output'];
    /** How many records passed validation checks during import. */
    clean_records?: Maybe<Scalars['Int']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Any errors encountered for this import. */
    errors?: Maybe<Scalars['Clob']['output']>;
    /** How many records did not pass validation checks during import. */
    failed_records?: Maybe<Scalars['Int']['output']>;
    /** The identifier of a unique batch at Flatfile. */
    flatfile_batch_identifier?: Maybe<Scalars['String']['output']>;
    /** A hash of the data content of an import. */
    hash?: Maybe<Scalars['String']['output']>;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** An import. */
    imports: ImportConnection;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The progress of an import as a percentage. */
    progress?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The start date and time for the import. */
    start_datetime?: Maybe<Scalars['Datetime']['output']>;
    /** The status. */
    status: ImportStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A user that can login to Sonar. */
    user?: Maybe<User>;
    /** The ID of a User. */
    user_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** A `VoiceProvider`. */
    voice_provider?: Maybe<VoiceProvider>;
    /** The ID of a `VoiceProvider`. */
    voice_provider_id: Scalars['Int64Bit']['output'];
};
/** A recipe for importing voice provider rates. */
export type VoiceProviderRateImportRecipeAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing voice provider rates. */
export type VoiceProviderRateImportRecipeImportsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    global_updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    importrecipeable_type?: InputMaybe<ImportrecipeableType>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A recipe for importing voice provider rates. */
export type VoiceProviderRateImportRecipeLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing voice provider rates. */
export type VoiceProviderRateImportRecipeNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A recipe for importing voice provider rates. */
export type VoiceProviderRateImportRecipeUserArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    completed_setup?: InputMaybe<Scalars['Boolean']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    email_address?: InputMaybe<Scalars['EmailAddress']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    is_sonar_staff?: InputMaybe<Scalars['Boolean']['input']>;
    language?: InputMaybe<Language>;
    mobile_number?: InputMaybe<Scalars['Numeric']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    public_name?: InputMaybe<Scalars['String']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    role_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    super_admin?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    username?: InputMaybe<Scalars['String']['input']>;
};
/** A recipe for importing voice provider rates. */
export type VoiceProviderRateImportRecipeVoice_ProviderArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The connection wrapper around the `VoiceProviderRateImportRecipeConnection` type. */
export type VoiceProviderRateImportRecipeConnection = {
    __typename: 'VoiceProviderRateImportRecipeConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceProviderRateImportRecipe>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Details regarding a specific voice `Service`. */
export type VoiceServiceDetail = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'VoiceServiceDetail';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** How often this service bills, in months. */
    billing_frequency: Scalars['Int']['output'];
    /** The cost per minute for local calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    cost_per_minute_local_in_thousandths?: Maybe<Scalars['Int']['output']>;
    /** The cost per minute for long distance calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    cost_per_minute_long_distance_in_thousandths?: Maybe<Scalars['Int']['output']>;
    /** A two character country code. */
    country?: Maybe<Country>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** This is the minimum amount of time the customer will be charged for a call. */
    first_interval_in_seconds: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** If a customer has a toll free number, this is the rate charged to them for inbound calls, in thousandths of the smallest currency value (e.g. cents, pence, pesos.). */
    inbound_toll_free_rate_per_minute_in_thousandths: Scalars['Int']['output'];
    /** The quantity of free local minutes provided, if `unlimited_local_minutes` is false. */
    local_minutes?: Maybe<Scalars['Int']['output']>;
    /** A local prefix for a voice service. */
    local_prefixes: LocalPrefixConnection;
    /** A log entry. */
    logs: LogConnection;
    /** The quantity of free long distance minutes provided, if `unlimited_long_distance_minutes` is false. */
    long_distance_minutes?: Maybe<Scalars['Int']['output']>;
    /** A note. */
    notes: NoteConnection;
    /** Hide parameters of this service on customer invoices/statements and in the customer portal. */
    rollup_generic_parameters: Scalars['Boolean']['output'];
    /** A service. */
    service?: Maybe<Service>;
    /** The ID of a Service. */
    service_id: Scalars['Int64Bit']['output'];
    /** Indicates if Call Detail Records (CDRs) for this service should be displayed on an invoice. */
    show_call_detail_records_on_invoice: Scalars['Boolean']['output'];
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** After the `first_interval_in_seconds` time is exceeded, this is the minimum amount of subsequent time. For example, if `first_interval_in_seconds` is 30, and `sub_interval_in_seconds` is 6, then a 31 second call would be charged at 36 seconds, and a 37 second call would be charged at 42 seconds. */
    sub_interval_in_seconds: Scalars['Int']['output'];
    /** The sub type of this voice service. */
    sub_type: VoiceServiceDetailSubType;
    /** Whether this service provides unlimited local minutes. */
    unlimited_local_minutes: Scalars['Boolean']['output'];
    /** Whether this service provides unlimited long distance minutes. */
    unlimited_long_distance_minutes: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A configurable attribute for a voice service. */
    voice_service_generic_parameters: VoiceServiceGenericParameterConnection;
};
/** Details regarding a specific voice `Service`. */
export type VoiceServiceDetailAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific voice `Service`. */
export type VoiceServiceDetailLocal_PrefixesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    prefix?: InputMaybe<Scalars['Numeric']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific voice `Service`. */
export type VoiceServiceDetailLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific voice `Service`. */
export type VoiceServiceDetailNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** Details regarding a specific voice `Service`. */
export type VoiceServiceDetailServiceArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    amount?: InputMaybe<Scalars['Int']['input']>;
    application?: InputMaybe<ServiceApplication>;
    company_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    display_if_zero?: InputMaybe<Scalars['Boolean']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    general_ledger_code_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<ServiceType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** Details regarding a specific voice `Service`. */
export type VoiceServiceDetailVoice_Service_Generic_ParametersArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    proratable?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<VoiceServiceGenericParameterType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `VoiceServiceDetailConnection` type. */
export type VoiceServiceDetailConnection = {
    __typename: 'VoiceServiceDetailConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceServiceDetail>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The sub type of a voice service. */
export declare enum VoiceServiceDetailSubType {
    /** Hosted PBX */
    HostedPbx = "HOSTED_PBX",
    /** Voice */
    Voice = "VOICE"
}
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameter = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'VoiceServiceGenericParameter';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** A voice service configuration that links a service parameter to an account. */
    account_voice_service_details: AccountVoiceServiceDetailConnection;
    /** If this service was prorated when added, this is the date it was prorated from. */
    addition_prorate_date?: Maybe<Scalars['Date']['output']>;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** A human readable description. */
    description: Scalars['String']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The price per unit of this item. */
    price: Scalars['Int']['output'];
    /** Indicates if changes to this entity trigger proration. */
    proratable: Scalars['Boolean']['output'];
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The `AccountVoiceServiceDetail` records used to configure a voice service when a `ScheduledEvent` is executed. */
    scheduled_event_account_voice_service_details: ScheduledEventAccountVoiceServiceDetailConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: Maybe<Scalars['Int64Bit']['output']>;
    /** The `TaxDefinition` pair associated to this entity. */
    tax_definitions: VoiceServiceGenericParameterTaxDefinitionConnection;
    /** The type. */
    type: VoiceServiceGenericParameterType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** Details regarding a specific voice `Service`. */
    voice_service_detail?: Maybe<VoiceServiceDetail>;
    /** The ID of the `VoiceServiceDetail`. */
    voice_service_detail_id: Scalars['Int64Bit']['output'];
    /** The relationship between a `VoiceServiceGenericParameter` and a `Tax`. */
    voice_service_generic_parameter_taxes: VoiceServiceGenericParameterTaxConnection;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterAccount_Voice_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    account_service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterScheduled_Event_Account_Voice_Service_DetailsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price_override?: InputMaybe<Scalars['Int']['input']>;
    price_override_reason?: InputMaybe<Scalars['String']['input']>;
    quantity?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    scheduled_event_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterTax_DefinitionsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    discount?: InputMaybe<Scalars['Boolean']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    taxdefinitionable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    taxdefinitionable_type?: InputMaybe<TaxdefinitionableType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterVoice_Service_DetailArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    billing_frequency?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_local_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    cost_per_minute_long_distance_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    country?: InputMaybe<Country>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    first_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    inbound_toll_free_rate_per_minute_in_thousandths?: InputMaybe<Scalars['Int']['input']>;
    local_minutes?: InputMaybe<Scalars['Int']['input']>;
    long_distance_minutes?: InputMaybe<Scalars['Int']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    rollup_generic_parameters?: InputMaybe<Scalars['Boolean']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    service_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    show_call_detail_records_on_invoice?: InputMaybe<Scalars['Boolean']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    sub_interval_in_seconds?: InputMaybe<Scalars['Int']['input']>;
    sub_type?: InputMaybe<VoiceServiceDetailSubType>;
    unlimited_local_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    unlimited_long_distance_minutes?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** A configurable attribute for a voice service. */
export type VoiceServiceGenericParameterVoice_Service_Generic_Parameter_TaxesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    exemption_amount?: InputMaybe<Scalars['Int']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_generic_parameter_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `VoiceServiceGenericParameterConnection` type. */
export type VoiceServiceGenericParameterConnection = {
    __typename: 'VoiceServiceGenericParameterConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceServiceGenericParameter>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The input object that defines the fields for the createVoiceServiceGenericParameter mutation. */
export type VoiceServiceGenericParameterMutationInput = {
    /** A human readable description. */
    description: Scalars['String']['input'];
    /** The price per unit of this item. */
    price: Scalars['Int']['input'];
    /** Indicates if changes to this entity trigger proration. */
    proratable: Scalars['Boolean']['input'];
    /** The ID of a tax definition on a reversed transaction. */
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The ID of a tax definition on a transaction. */
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    /** The type. */
    type: VoiceServiceGenericParameterType;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `Tax`. */
export type VoiceServiceGenericParameterTax = AccessloggableInterface & LoggableInterface & {
    __typename: 'VoiceServiceGenericParameterTax';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The amount of the service that is exempt from taxation in the smallest currency value (e.g. cents, pence, pesos.) */
    exemption_amount: Scalars['Int']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** A tax. */
    tax?: Maybe<Tax>;
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A configurable attribute for a voice service. */
    voice_service_generic_parameter?: Maybe<VoiceServiceGenericParameter>;
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id: Scalars['Int64Bit']['output'];
};
/** The relationship between a `VoiceServiceGenericParameter` and a `Tax`. */
export type VoiceServiceGenericParameterTaxAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `Tax`. */
export type VoiceServiceGenericParameterTaxLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `Tax`. */
export type VoiceServiceGenericParameterTaxTaxArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    application?: InputMaybe<TaxApplication>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    rate?: InputMaybe<Scalars['Float']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<TaxType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `Tax`. */
export type VoiceServiceGenericParameterTaxVoice_Service_Generic_ParameterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    proratable?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<VoiceServiceGenericParameterType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `VoiceServiceGenericParameterTaxConnection` type. */
export type VoiceServiceGenericParameterTaxConnection = {
    __typename: 'VoiceServiceGenericParameterTaxConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceServiceGenericParameterTax>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `TaxDefinition`. */
export type VoiceServiceGenericParameterTaxDefinition = AccessloggableInterface & LoggableInterface & {
    __typename: 'VoiceServiceGenericParameterTaxDefinition';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether this tax definition is for a discount or not. */
    discount: Scalars['Boolean']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The entity that this `TaxDefinition` is assigned to. */
    taxdefinitionable?: Maybe<TaxdefinitionableInterface>;
    /** The ID of entity this tax definition is related to. */
    taxdefinitionable_id: Scalars['Int64Bit']['output'];
    /** The type of entity this tax definition is related to. */
    taxdefinitionable_type: TaxdefinitionableType;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A configurable attribute for a voice service. */
    voice_service_generic_parameter?: Maybe<VoiceServiceGenericParameter>;
    /** The ID of a voice service configuration parameter. */
    voice_service_generic_parameter_id: Scalars['Int64Bit']['output'];
};
/** The relationship between a `VoiceServiceGenericParameter` and a `TaxDefinition`. */
export type VoiceServiceGenericParameterTaxDefinitionAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `TaxDefinition`. */
export type VoiceServiceGenericParameterTaxDefinitionLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `TaxDefinition`. */
export type VoiceServiceGenericParameterTaxDefinitionTaxdefinitionableArgs = {
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** The relationship between a `VoiceServiceGenericParameter` and a `TaxDefinition`. */
export type VoiceServiceGenericParameterTaxDefinitionVoice_Service_Generic_ParameterArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    addition_prorate_date?: InputMaybe<Scalars['Date']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    description?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    price?: InputMaybe<Scalars['Int']['input']>;
    proratable?: InputMaybe<Scalars['Boolean']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    reverse_tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    tax_definition_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    type?: InputMaybe<VoiceServiceGenericParameterType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    voice_service_detail_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `VoiceServiceGenericParameterTaxDefinitionConnection` type. */
export type VoiceServiceGenericParameterTaxDefinitionConnection = {
    __typename: 'VoiceServiceGenericParameterTaxDefinitionConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<VoiceServiceGenericParameterTaxDefinition>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** Taxes applied to this voice service generic parameter. */
export type VoiceServiceGenericParameterTaxMutationInput = {
    /** The amount of the service that is exempt from taxation in the smallest currency value (e.g. cents, pence, pesos.) */
    exemption_amount: Scalars['Int']['input'];
    /** The ID of a Tax. */
    tax_id: Scalars['Int64Bit']['input'];
};
/** The type of configurable attribute for a voice service. */
export declare enum VoiceServiceGenericParameterType {
    /** Lines */
    Lines = "LINES",
    /** Other */
    Other = "OTHER",
    /** PBX Seats */
    PbxSeats = "PBX_SEATS"
}
/** A URL to an endpoint that a webhook can be sent to. */
export type WebhookEndpoint = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'WebhookEndpoint';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** Whether or not this is enabled. */
    enabled: Scalars['Boolean']['output'];
    /** The URL to the remote resource that webhooks will be sent to. */
    endpoint: Scalars['HttpsUrl']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A descriptive name. */
    name: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** An event on a model that can fire a webhook */
    webhook_endpoint_events: WebhookEndpointEventConnection;
};
/** A URL to an endpoint that a webhook can be sent to. */
export type WebhookEndpointAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A URL to an endpoint that a webhook can be sent to. */
export type WebhookEndpointLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A URL to an endpoint that a webhook can be sent to. */
export type WebhookEndpointNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A URL to an endpoint that a webhook can be sent to. */
export type WebhookEndpointWebhook_Endpoint_EventsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    event?: InputMaybe<WebhookEndpointModelEvent>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `WebhookEndpointConnection` type. */
export type WebhookEndpointConnection = {
    __typename: 'WebhookEndpointConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<WebhookEndpoint>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** An event on a model that can fire a webhook */
export type WebhookEndpointEvent = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'WebhookEndpointEvent';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** An event. */
    event: WebhookEndpointModelEvent;
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** The model. */
    model: Scalars['String']['output'];
    /** A note. */
    notes: NoteConnection;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A URL to an endpoint that a webhook can be sent to. */
    webhook_endpoint?: Maybe<WebhookEndpoint>;
    /** A webhook for a model and event that has been queued to be sent. */
    webhook_endpoint_event_dispatches: WebhookEndpointEventDispatchConnection;
    /** The ID of a webhook endpoint. */
    webhook_endpoint_id: Scalars['Int64Bit']['output'];
};
/** An event on a model that can fire a webhook */
export type WebhookEndpointEventAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An event on a model that can fire a webhook */
export type WebhookEndpointEventLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An event on a model that can fire a webhook */
export type WebhookEndpointEventNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** An event on a model that can fire a webhook */
export type WebhookEndpointEventWebhook_EndpointArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    enabled?: InputMaybe<Scalars['Boolean']['input']>;
    endpoint?: InputMaybe<Scalars['HttpsUrl']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    name?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
};
/** An event on a model that can fire a webhook */
export type WebhookEndpointEventWebhook_Endpoint_Event_DispatchesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_attempted_at?: InputMaybe<Scalars['Datetime']['input']>;
    last_status?: InputMaybe<WebhookEndpointEventDispatchAttemptStatus>;
    paginator?: InputMaybe<Paginator>;
    payload?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sent_at?: InputMaybe<Scalars['Datetime']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    test?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_event_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `WebhookEndpointEventConnection` type. */
export type WebhookEndpointEventConnection = {
    __typename: 'WebhookEndpointEventConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<WebhookEndpointEvent>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A webhook for a model and event that has been queued to be sent. */
export type WebhookEndpointEventDispatch = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'WebhookEndpointEventDispatch';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** The date and time of when this was last attempted to be sent. */
    last_attempted_at?: Maybe<Scalars['Datetime']['output']>;
    /** The last status of the last send attempt. */
    last_status: WebhookEndpointEventDispatchAttemptStatus;
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The request payload of a fired webhook being sent to an endpoint. */
    payload: Scalars['Text']['output'];
    /** The date and time of when this was successfully sent. */
    sent_at?: Maybe<Scalars['Datetime']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** Indicates of this is a test or not. */
    test: Scalars['Boolean']['output'];
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** An event on a model that can fire a webhook */
    webhook_endpoint_event?: Maybe<WebhookEndpointEvent>;
    /** A send attempt of a dispatched webhook for a model and event. */
    webhook_endpoint_event_dispatch_attempts: WebhookEndpointEventDispatchAttemptConnection;
    /** The model and event attached to the webhook endpoint */
    webhook_endpoint_event_id: Scalars['Int64Bit']['output'];
};
/** A webhook for a model and event that has been queued to be sent. */
export type WebhookEndpointEventDispatchAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A webhook for a model and event that has been queued to be sent. */
export type WebhookEndpointEventDispatchLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A webhook for a model and event that has been queued to be sent. */
export type WebhookEndpointEventDispatchNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A webhook for a model and event that has been queued to be sent. */
export type WebhookEndpointEventDispatchWebhook_Endpoint_EventArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    event?: InputMaybe<WebhookEndpointModelEvent>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    model?: InputMaybe<Scalars['String']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A webhook for a model and event that has been queued to be sent. */
export type WebhookEndpointEventDispatchWebhook_Endpoint_Event_Dispatch_AttemptsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    response?: InputMaybe<Scalars['Text']['input']>;
    response_at?: InputMaybe<Scalars['Datetime']['input']>;
    response_code?: InputMaybe<Scalars['Int']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    status?: InputMaybe<WebhookEndpointEventDispatchAttemptStatus>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_event_dispatch_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A send attempt of a dispatched webhook for a model and event. */
export type WebhookEndpointEventDispatchAttempt = AccessloggableInterface & LoggableInterface & NoteableInterface & {
    __typename: 'WebhookEndpointEventDispatchAttempt';
    /** A string that shows the version of this entity. It will be incremented whenever the entity is modified. */
    _version: Scalars['String']['output'];
    /** An access log history on an entity. */
    access_logs: AccessLogConnection;
    /** The date and time this entity was created. */
    created_at: Scalars['Datetime']['output'];
    /** The ID of the entity. */
    id: Scalars['Int64Bit']['output'];
    /** A log entry. */
    logs: LogConnection;
    /** A note. */
    notes: NoteConnection;
    /** The message of the SMTP response. */
    response?: Maybe<Scalars['Text']['output']>;
    /** The date and time of when a response was received. */
    response_at?: Maybe<Scalars['Datetime']['output']>;
    /** The HTTP status code of the last response. */
    response_code?: Maybe<Scalars['Int']['output']>;
    /** An ID that uniquely identifies this entity across the whole Sonar system. */
    sonar_unique_id: Scalars['ID']['output'];
    /** The status. */
    status: WebhookEndpointEventDispatchAttemptStatus;
    /** The last date and time this entity was modified. */
    updated_at: Scalars['Datetime']['output'];
    /** A webhook for a model and event that has been queued to be sent. */
    webhook_endpoint_event_dispatch?: Maybe<WebhookEndpointEventDispatch>;
    /** The ID of a dispatch for a webhook model event. */
    webhook_endpoint_event_dispatch_id: Scalars['Int64Bit']['output'];
};
/** A send attempt of a dispatched webhook for a model and event. */
export type WebhookEndpointEventDispatchAttemptAccess_LogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    access_datetime?: InputMaybe<Scalars['Datetime']['input']>;
    accessloggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    accessloggable_type?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    entity_name?: InputMaybe<Scalars['String']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    paginator?: InputMaybe<Paginator>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A send attempt of a dispatched webhook for a model and event. */
export type WebhookEndpointEventDispatchAttemptLogsArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    current?: InputMaybe<Scalars['Text']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    legacy?: InputMaybe<Scalars['Boolean']['input']>;
    legacy_title?: InputMaybe<Scalars['String']['input']>;
    level?: InputMaybe<LogLevel>;
    loggable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    loggable_type?: InputMaybe<Scalars['String']['input']>;
    logged_entity_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    logged_entity_type?: InputMaybe<Scalars['String']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    paginator?: InputMaybe<Paginator>;
    previous?: InputMaybe<Scalars['Text']['input']>;
    relation_data?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    type?: InputMaybe<LogType>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A send attempt of a dispatched webhook for a model and event. */
export type WebhookEndpointEventDispatchAttemptNotesArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    message?: InputMaybe<Scalars['Text']['input']>;
    noteable_id?: InputMaybe<Scalars['Int64Bit']['input']>;
    noteable_type?: InputMaybe<NoteableType>;
    paginator?: InputMaybe<Paginator>;
    priority?: InputMaybe<NotePriority>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    user_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** A send attempt of a dispatched webhook for a model and event. */
export type WebhookEndpointEventDispatchAttemptWebhook_Endpoint_Event_DispatchArgs = {
    _version?: InputMaybe<Scalars['String']['input']>;
    aggregation?: InputMaybe<Array<InputMaybe<Aggregator>>>;
    created_at?: InputMaybe<Scalars['Datetime']['input']>;
    general_search?: InputMaybe<Scalars['String']['input']>;
    id?: InputMaybe<Scalars['Int64Bit']['input']>;
    last_attempted_at?: InputMaybe<Scalars['Datetime']['input']>;
    last_status?: InputMaybe<WebhookEndpointEventDispatchAttemptStatus>;
    paginator?: InputMaybe<Paginator>;
    payload?: InputMaybe<Scalars['Text']['input']>;
    reverse_relation_filters?: InputMaybe<Array<InputMaybe<ReverseRelationFilter>>>;
    search?: InputMaybe<Array<InputMaybe<Search>>>;
    sent_at?: InputMaybe<Scalars['Datetime']['input']>;
    sonar_unique_id?: InputMaybe<Scalars['ID']['input']>;
    sorter?: InputMaybe<Array<InputMaybe<Sorter>>>;
    test?: InputMaybe<Scalars['Boolean']['input']>;
    updated_at?: InputMaybe<Scalars['Datetime']['input']>;
    webhook_endpoint_event_id?: InputMaybe<Scalars['Int64Bit']['input']>;
};
/** The connection wrapper around the `WebhookEndpointEventDispatchAttemptConnection` type. */
export type WebhookEndpointEventDispatchAttemptConnection = {
    __typename: 'WebhookEndpointEventDispatchAttemptConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<WebhookEndpointEventDispatchAttempt>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** The status of a send attempt for a dispatched webhook of a model and event. */
export declare enum WebhookEndpointEventDispatchAttemptStatus {
    /** The dispatched webhook had been sent and failed. */
    Fail = "FAIL",
    /** The dispatched webhook is pending to be sent. */
    Pending = "PENDING",
    /** The dispatched webhook had been sent and was successful. */
    Success = "SUCCESS"
}
/** The connection wrapper around the `WebhookEndpointEventDispatchConnection` type. */
export type WebhookEndpointEventDispatchConnection = {
    __typename: 'WebhookEndpointEventDispatchConnection';
    /** Provides the ability to return aggregated mathematical data about your results. */
    aggregations: Array<Maybe<Aggregation>>;
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<WebhookEndpointEventDispatch>>;
    /** An object providing information about the page of results being displayed, as well as the total amount of pages/records available. */
    page_info: PageInfo;
};
/** A model and event that a webhook is attached to. */
export declare enum WebhookEndpointModelEvent {
    /** The pivot attach event for the model. */
    Attached = "ATTACHED",
    /** The created event for the model. */
    Created = "CREATED",
    /** The deleted event for the model. */
    Deleted = "DELETED",
    /** The pivot detach event for the model. */
    Detached = "DETACHED",
    /** The updated event for the model. */
    Updated = "UPDATED"
}
/** A model and event that will fire webhooks to its associated endpoint. */
export type WebhookEndpointModelEventInput = {
    /** The event(s) for the model attached to a webhook endpoint. */
    event: WebhookEndpointModelEvent;
    /** The model. */
    model: Scalars['String']['input'];
};
/** A model that can fire webhooks and its supported events. */
export type WebhookModelEventResult = {
    __typename: 'WebhookModelEventResult';
    /** A list of events. */
    events: Array<Maybe<WebhookEndpointModelEvent>>;
    /** The model. */
    model: Scalars['String']['output'];
};
/** The connection wrapper around the `WebhookModelEventResultConnection` type. */
export type WebhookModelEventResultConnection = {
    __typename: 'WebhookModelEventResultConnection';
    /** A list of the entities provided by this connection. */
    entities: Array<Maybe<WebhookModelEventResult>>;
};
/** The result of a test webhook send attempt. Contains the success state, status code, and response body. */
export type WebhookTestResponse = {
    __typename: 'WebhookTestResponse';
    /** The response body of the webhook test. */
    response: Scalars['String']['output'];
    /** The HTTP status code of the response. */
    status_code: Scalars['Int']['output'];
    /** Will be true if the operation succeeded. */
    success: Scalars['Boolean']['output'];
};
export type AccountsQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type AccountsQuery = {
    __typename: 'Query';
    result: {
        __typename: 'AccountConnection';
        entities: Array<{
            __typename: 'Account';
            name: string;
            account_status_id: any;
            account_type_id: any;
            is_delinquent: boolean;
            company_id: any;
            activation_date?: any | null;
            next_bill_date?: any | null;
            parent_account_id?: any | null;
            geopoint?: any | null;
            data_usage_percentage?: number | null;
            next_recurring_charge_amount?: number | null;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            account_status?: {
                __typename: 'AccountStatus';
                name: string;
                activates_account: boolean;
                color: any;
                icon: Icon;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | null;
            account_type?: {
                __typename: 'AccountType';
                name: string;
                color: any;
                icon: Icon;
                type: AccountTypeEnum;
                invoice_message_id?: any | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | null;
            account_groups: {
                __typename: 'AccountGroupConnection';
                entities: Array<{
                    __typename: 'AccountGroup';
                    name: string;
                    id: any;
                    sonar_unique_id: string;
                    created_at: any;
                    updated_at: any;
                } | null>;
            };
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type AddressesQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type AddressesQuery = {
    __typename: 'Query';
    result: {
        __typename: 'AddressConnection';
        entities: Array<{
            __typename: 'Address';
            address_status_id?: any | null;
            line1?: string | null;
            line2?: string | null;
            city?: string | null;
            county?: UsCounty | null;
            subdivision?: Subdivision | null;
            zip?: string | null;
            country?: Country | null;
            latitude?: any | null;
            longitude?: any | null;
            fips?: string | null;
            type: AddressType;
            addressable_type?: AddressableType | null;
            addressable_id?: any | null;
            serviceable: boolean;
            is_anchor: boolean;
            anchor_address_id?: any | null;
            billing_default_id?: any | null;
            timezone?: Timezone | null;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            addressable?: {
                __typename: 'Account';
                name: string;
                account_status_id: any;
                account_type_id: any;
                is_delinquent: boolean;
                company_id: any;
                activation_date?: any | null;
                next_bill_date?: any | null;
                parent_account_id?: any | null;
                geopoint?: any | null;
                data_usage_percentage?: number | null;
                next_recurring_charge_amount?: number | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'BankAccount';
            } | {
                __typename: 'Company';
            } | {
                __typename: 'CreditCard';
            } | {
                __typename: 'InventoryLocation';
            } | {
                __typename: 'NetworkSite';
            } | {
                __typename: 'TowercoverageSubmission';
            } | {
                __typename: 'Vendor';
            } | null;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type ContactsQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type ContactsQuery = {
    __typename: 'Query';
    result: {
        __typename: 'ContactConnection';
        entities: Array<{
            __typename: 'Contact';
            name: string;
            role?: string | null;
            primary: boolean;
            email_address?: any | null;
            language?: Language | null;
            username?: string | null;
            contactable_type: ContactableType;
            contactable_id: any;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            phone_numbers: {
                __typename: 'PhoneNumberConnection';
                entities: Array<{
                    __typename: 'PhoneNumber';
                    country: Country;
                    number: any;
                    extension?: any | null;
                    contact_id: any;
                    number_formatted?: string | null;
                    phone_number_type_id: any;
                    sms_opt_in: boolean;
                    id: any;
                    sonar_unique_id: string;
                    created_at: any;
                    updated_at: any;
                    phone_number_type?: {
                        __typename: 'PhoneNumberType';
                        name: string;
                        sms_capable: boolean;
                        id: any;
                        sonar_unique_id: string;
                        created_at: any;
                        updated_at: any;
                    } | null;
                } | null>;
            };
            contactable?: {
                __typename: 'Account';
                name: string;
                account_status_id: any;
                account_type_id: any;
                is_delinquent: boolean;
                company_id: any;
                activation_date?: any | null;
                next_bill_date?: any | null;
                parent_account_id?: any | null;
                geopoint?: any | null;
                data_usage_percentage?: number | null;
                next_recurring_charge_amount?: number | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'NetworkSite';
            } | {
                __typename: 'Vendor';
            } | null;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type CustomfielddataQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type CustomfielddataQuery = {
    __typename: 'Query';
    result: {
        __typename: 'CustomFieldDataConnection';
        entities: Array<{
            __typename: 'CustomFieldData';
            custom_field_id: any;
            value: string;
            customfielddataable_type: CustomfielddataableType;
            customfielddataable_id: any;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            customfielddataable?: {
                __typename: 'Account';
                name: string;
                account_status_id: any;
                account_type_id: any;
                is_delinquent: boolean;
                company_id: any;
                activation_date?: any | null;
                next_bill_date?: any | null;
                parent_account_id?: any | null;
                geopoint?: any | null;
                data_usage_percentage?: number | null;
                next_recurring_charge_amount?: number | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'Address';
                address_status_id?: any | null;
                line1?: string | null;
                line2?: string | null;
                city?: string | null;
                county?: UsCounty | null;
                subdivision?: Subdivision | null;
                zip?: string | null;
                country?: Country | null;
                latitude?: any | null;
                longitude?: any | null;
                fips?: string | null;
                type: AddressType;
                addressable_type?: AddressableType | null;
                addressable_id?: any | null;
                serviceable: boolean;
                is_anchor: boolean;
                anchor_address_id?: any | null;
                billing_default_id?: any | null;
                timezone?: Timezone | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'Contact';
                name: string;
                role?: string | null;
                primary: boolean;
                email_address?: any | null;
                language?: Language | null;
                username?: string | null;
                contactable_type: ContactableType;
                contactable_id: any;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'GenericInventoryAssignee';
                name: string;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'Job';
                ticket_id?: any | null;
                scheduled_datetime?: any | null;
                length_in_minutes: number;
                complete: boolean;
                completed_successfully?: boolean | null;
                completed_by_user_id?: any | null;
                completion_datetime?: any | null;
                completion_notes?: any | null;
                job_type_id: any;
                skips_validation: boolean;
                jobbable_type: JobbableType;
                jobbable_id: any;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
                job_type?: {
                    __typename: 'JobType';
                    name: string;
                    enabled: boolean;
                    default_length_in_minutes: number;
                    color: any;
                    icon: Icon;
                    allow_completion_with_incomplete_tasks: boolean;
                    disconnects_account?: boolean | null;
                    all_companies: boolean;
                    account_status_id_completion?: any | null;
                    account_status_id_failure?: any | null;
                    action_on_completion: JobTypeAction;
                    action_on_failure: JobTypeAction;
                    ticket_status_on_completion: TicketStatus;
                    ticket_status_on_failure: TicketStatus;
                    ticket_group_id_completion?: any | null;
                    ticket_group_id_failure?: any | null;
                    task_template_id?: any | null;
                    id: any;
                    sonar_unique_id: string;
                    created_at: any;
                    updated_at: any;
                } | null;
            } | {
                __typename: 'NetworkSite';
                name: string;
                height_in_meters: number;
                geopoint?: any | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'PurchaseOrderItem';
                id: any;
                price: any;
                list_order?: number | null;
                units: number;
                generic_quantity_received: number;
                purchase_order_id: any;
                vendor_item_id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
                PurchaseOrderItem_status: PurchaseOrderItemStatus;
            } | {
                __typename: 'Ticket';
                global_updated_at?: any | null;
                subject: string;
                description: any;
                status: TicketStatus;
                priority: TicketPriority;
                closed_at?: any | null;
                due_date?: any | null;
                ticketable_type?: TicketableType | null;
                ticketable_id?: any | null;
                parent_ticket_id?: any | null;
                ticket_group_id?: any | null;
                user_id?: any | null;
                inbound_mailbox_id?: any | null;
                spam_score?: number | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | null;
            custom_field?: {
                __typename: 'CustomField';
                name: string;
                type: CustomFieldType;
                unique: boolean;
                entity_type: CustomfielddataableType;
                required: boolean;
                enum_options?: Array<string | null> | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | null;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type DidsQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type DidsQuery = {
    __typename: 'Query';
    result: {
        __typename: 'DidConnection';
        entities: Array<{
            __typename: 'Did';
            number: string;
            voice_provider_id: any;
            rate_center_id?: any | null;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            did_assignments: {
                __typename: 'DidAssignmentConnection';
                entities: Array<{
                    __typename: 'DidAssignment';
                    did_id: any;
                    account_id: any;
                    service_id?: any | null;
                    id: any;
                    sonar_unique_id: string;
                    created_at: any;
                    updated_at: any;
                } | null>;
            };
            did_assignment_histories: {
                __typename: 'DidAssignmentHistoryConnection';
                entities: Array<{
                    __typename: 'DidAssignmentHistory';
                    account_id: any;
                    assigned_datetime: any;
                    did_assignment_id?: any | null;
                    did_id: any;
                    removed_datetime?: any | null;
                    service_id?: any | null;
                    id: any;
                    sonar_unique_id: string;
                    created_at: any;
                    updated_at: any;
                } | null>;
            };
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type InventorymodelfielddataQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type InventorymodelfielddataQuery = {
    __typename: 'Query';
    result: {
        __typename: 'InventoryModelFieldDataConnection';
        entities: Array<{
            __typename: 'InventoryModelFieldData';
            inventory_model_field_id: any;
            inventory_item_id: any;
            value: string;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            inventory_model_field?: {
                __typename: 'InventoryModelField';
                inventory_model_id: any;
                name: string;
                type: InventoryModelFieldType;
                secondary_type?: InventoryModelFieldSecondaryType | null;
                required: boolean;
                primary: boolean;
                unique: Uniqueness;
                regexp?: string | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
                inventory_model?: {
                    __typename: 'InventoryModel';
                    enabled: boolean;
                    manufacturer_id: any;
                    inventory_model_category_id: any;
                    icon: Icon;
                    model_name?: string | null;
                    name: string;
                    port?: number | null;
                    protocol?: Protocol | null;
                    generic: boolean;
                    network_monitoring_template_id?: any | null;
                    device_type: InventoryModelDeviceType;
                    lte_sim_type?: LteProviderType | null;
                    default_vendor_id?: any | null;
                    id: any;
                    sonar_unique_id: string;
                    created_at: any;
                    updated_at: any;
                    manufacturer?: {
                        __typename: 'Manufacturer';
                        name: string;
                        id: any;
                        sonar_unique_id: string;
                        created_at: any;
                        updated_at: any;
                    } | null;
                } | null;
            } | null;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type IpassignmentsQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type IpassignmentsQuery = {
    __typename: 'Query';
    result: {
        __typename: 'IpAssignmentConnection';
        entities: Array<{
            __typename: 'IpAssignment';
            subnet: any;
            soft: boolean;
            reference?: any | null;
            description?: string | null;
            subnet_id: any;
            ip_pool_id?: any | null;
            ipassignmentable_type: IpassignmentableType;
            ipassignmentable_id: any;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            ip_pool?: {
                __typename: 'IpPool';
                name?: string | null;
                ip_range: any;
                dhcp_server_identifier_id?: any | null;
                subnet_id: any;
                ips_available: number;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | null;
            parent_subnet?: {
                __typename: 'Subnet';
                name?: string | null;
                subnet: any;
                type: SubnetType;
                largest_cidr_available?: number | null;
                supernet_id: any;
                polling_priority: number;
                poller_id?: any | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | null;
            ipassignmentable?: {
                __typename: 'Account';
                name: string;
                account_status_id: any;
                account_type_id: any;
                is_delinquent: boolean;
                company_id: any;
                activation_date?: any | null;
                next_bill_date?: any | null;
                parent_account_id?: any | null;
                geopoint?: any | null;
                data_usage_percentage?: number | null;
                next_recurring_charge_amount?: number | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'InventoryItem';
                inventoryitemable_type: InventoryitemableType;
                inventoryitemable_id: any;
                deployment_type_id?: any | null;
                inventory_model_id: any;
                icmp_device_status?: InventoryItemDeviceStatus | null;
                icmp_status_last_change?: any | null;
                icmp_threshold_violation?: InventoryItemIcmpThresholdViolation | null;
                snmp_device_status?: InventoryItemDeviceStatus | null;
                snmp_status_message?: string | null;
                snmp_status_last_change?: any | null;
                overall_status?: InventoryItemDeviceStatus | null;
                purchase_price?: number | null;
                purchase_order_item_id?: any | null;
                status: InventoryItemStatus;
                latitude?: any | null;
                longitude?: any | null;
                parent_inventory_item_id?: any | null;
                preseem_status?: PreseemStatus | null;
                claimed_user_id?: any | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'InventoryModelFieldData';
            } | {
                __typename: 'NetworkSite';
                name: string;
                height_in_meters: number;
                geopoint?: any | null;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | {
                __typename: 'RadiusAccount';
            } | {
                __typename: 'UninventoriedMacAddress';
            } | null;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type NetworksitesQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type NetworksitesQuery = {
    __typename: 'Query';
    result: {
        __typename: 'NetworkSiteConnection';
        entities: Array<{
            __typename: 'NetworkSite';
            name: string;
            height_in_meters: number;
            geopoint?: any | null;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type PhonenumbersQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type PhonenumbersQuery = {
    __typename: 'Query';
    result: {
        __typename: 'PhoneNumberConnection';
        entities: Array<{
            __typename: 'PhoneNumber';
            country: Country;
            number: any;
            extension?: any | null;
            contact_id: any;
            number_formatted?: string | null;
            phone_number_type_id: any;
            sms_opt_in: boolean;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
            contact?: {
                __typename: 'Contact';
                name: string;
                role?: string | null;
                primary: boolean;
                email_address?: any | null;
                language?: Language | null;
                username?: string | null;
                contactable_type: ContactableType;
                contactable_id: any;
                id: any;
                sonar_unique_id: string;
                created_at: any;
                updated_at: any;
            } | null;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type RadiusaccountsQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type RadiusaccountsQuery = {
    __typename: 'Query';
    result: {
        __typename: 'RadiusAccountConnection';
        entities: Array<{
            __typename: 'RadiusAccount';
            username: string;
            password?: any | null;
            account_id: any;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type TicketsQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type TicketsQuery = {
    __typename: 'Query';
    result: {
        __typename: 'TicketConnection';
        entities: Array<{
            __typename: 'Ticket';
            global_updated_at?: any | null;
            subject: string;
            description: any;
            status: TicketStatus;
            priority: TicketPriority;
            closed_at?: any | null;
            due_date?: any | null;
            ticketable_type?: TicketableType | null;
            ticketable_id?: any | null;
            parent_ticket_id?: any | null;
            ticket_group_id?: any | null;
            user_id?: any | null;
            inbound_mailbox_id?: any | null;
            spam_score?: number | null;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export type UninventoriedmacaddressesQueryVariables = Exact<{
    paginator?: InputMaybe<Paginator>;
}>;
export type UninventoriedmacaddressesQuery = {
    __typename: 'Query';
    result: {
        __typename: 'UninventoriedMacAddressConnection';
        entities: Array<{
            __typename: 'UninventoriedMacAddress';
            account_id: any;
            mac_address: any;
            id: any;
            sonar_unique_id: string;
            created_at: any;
            updated_at: any;
        } | null>;
        pageInfo: {
            __typename: 'PageInfo';
            page: number;
            totalPages: number;
            totalCount: number;
        };
    };
};
export declare const AccountsDocument: import("graphql").DocumentNode;
export declare const AddressesDocument: import("graphql").DocumentNode;
export declare const ContactsDocument: import("graphql").DocumentNode;
export declare const CustomfielddataDocument: import("graphql").DocumentNode;
export declare const DidsDocument: import("graphql").DocumentNode;
export declare const InventorymodelfielddataDocument: import("graphql").DocumentNode;
export declare const IpassignmentsDocument: import("graphql").DocumentNode;
export declare const NetworksitesDocument: import("graphql").DocumentNode;
export declare const PhonenumbersDocument: import("graphql").DocumentNode;
export declare const RadiusaccountsDocument: import("graphql").DocumentNode;
export declare const TicketsDocument: import("graphql").DocumentNode;
export declare const UninventoriedmacaddressesDocument: import("graphql").DocumentNode;
export type SdkFunctionWrapper = <T>(action: (requestHeaders?: Record<string, string>) => Promise<T>, operationName: string, operationType?: string, variables?: any) => Promise<T>;
export declare function getSdk(client: GraphQLClient, withWrapper?: SdkFunctionWrapper): {
    accounts(variables?: AccountsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<AccountsQuery>;
    addresses(variables?: AddressesQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<AddressesQuery>;
    contacts(variables?: ContactsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<ContactsQuery>;
    customfielddata(variables?: CustomfielddataQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<CustomfielddataQuery>;
    dids(variables?: DidsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<DidsQuery>;
    inventorymodelfielddata(variables?: InventorymodelfielddataQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<InventorymodelfielddataQuery>;
    ipassignments(variables?: IpassignmentsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<IpassignmentsQuery>;
    networksites(variables?: NetworksitesQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<NetworksitesQuery>;
    phonenumbers(variables?: PhonenumbersQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<PhonenumbersQuery>;
    radiusaccounts(variables?: RadiusaccountsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<RadiusaccountsQuery>;
    tickets(variables?: TicketsQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<TicketsQuery>;
    uninventoriedmacaddresses(variables?: UninventoriedmacaddressesQueryVariables, requestHeaders?: GraphQLClientRequestHeaders): Promise<UninventoriedmacaddressesQuery>;
};
export type Sdk = ReturnType<typeof getSdk>;
export {};
